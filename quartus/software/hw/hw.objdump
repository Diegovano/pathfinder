
hw.elf:     file format elf32-littlenios2
hw.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800238

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x0001054c memsz 0x0001054c flags r-x
    LOAD off    0x0001156c vaddr 0x0081056c paddr 0x00812144 align 2**12
         filesz 0x00001bd8 memsz 0x00001bd8 flags rw-
    LOAD off    0x00013d1c vaddr 0x00813d1c paddr 0x00813d1c align 2**12
         filesz 0x00000000 memsz 0x00000158 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000fcb4  00800238  00800238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000680  0080feec  0080feec  00010eec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bd8  0081056c  00812144  0001156c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000158  00813d1c  00813d1c  00013d1c  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00813e74  00813e74  00013144  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  00013144  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001080  00000000  00000000  00013178  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   0002dd6a  00000000  00000000  000141f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000b58c  00000000  00000000  00041f62  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00016d93  00000000  00000000  0004d4ee  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00002450  00000000  00000000  00064284  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    00003ed8  00000000  00000000  000666d4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0001e257  00000000  00000000  0006a5ac  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000030  00000000  00000000  00088804  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00002438  00000000  00000000  00088838  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  0008dfc7  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  0008dfca  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  0008dfcd  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  0008dfce  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  0008dfcf  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0008dfd3  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0008dfd7  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  0008dfdb  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0008dfe4  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  0008dfed  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000c  00000000  00000000  0008dff6  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000003d  00000000  00000000  0008e002  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800238 l    d  .text	00000000 .text
0080feec l    d  .rodata	00000000 .rodata
0081056c l    d  .rwdata	00000000 .rwdata
00813d1c l    d  .bss	00000000 .bss
00813e74 l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/Users/runsh/Desktop/Main/IC/EIE3/summer/pathfinder/quartus/software/hw_bsp//obj/HAL/src/crt0.o
00800280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
008026b0 l     F .text	000000c0 __sbprintf
0080ff74 l     O .rodata	00000010 blanks.1
0080ff64 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
008028d4 l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00804548 l     F .text	00000008 __fp_lock
0080455c l     F .text	00000008 __fp_unlock
00804564 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
0081056c l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00810028 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
00807a34 l     F .text	000000f4 __sprint_r.part.0
00808ea0 l     F .text	000000c0 __sbprintf
0081015c l     O .rodata	00000010 blanks.1
0081014c l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00809158 l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0080d5c8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0080d6e0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080d744 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0080d85c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0080d948 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080dab0 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080db9c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080dd7c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00812134 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0080dfe8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080e128 l     F .text	00000034 alt_dev_reg
008110ac l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080e424 l     F .text	0000020c altera_avalon_jtag_uart_irq
0080e630 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080ec74 l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0080eef4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0080f36c l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0080f4bc l     F .text	0000003c alt_get_errno
0080f4f8 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00813d48 g     O .bss	00000004 alt_instruction_exception_handler
008071ec g     F .text	00000070 _mprec_log10
008072d8 g     F .text	00000060 __any_on
008095b0 g     F .text	00000058 _isatty_r
00810034 g     O .rodata	00000028 __mprec_tinytens
0080dcb8 g     F .text	0000007c alt_main
0080041c g     F .text	000000cc _puts_r
00813d74 g     O .bss	00000100 alt_irq
008096fc g     F .text	00000064 _lseek_r
00812144 g       *ABS*	00000000 __flash_rwdata_start
0080c0a8 g     F .text	00000080 .hidden __eqdf2
00813e74 g       *ABS*	00000000 __alt_heap_start
0080a064 g     F .text	00000060 _kill_r
008003e4 g     F .text	00000038 printf
00809a30 g     F .text	0000006c _wcrtomb_r
00809bd4 g     F .text	00000098 _signal_r
008079d0 g     F .text	0000005c __sseek
008048ac g     F .text	00000010 __sinit
008098d0 g     F .text	00000148 __swbuf_r
00809608 g     F .text	00000074 _setlocale_r
008046cc g     F .text	00000078 __sfmoreglue
0080dd58 g     F .text	00000024 __malloc_unlock
00805f2c g     F .text	0000012c memmove
00804898 g     F .text	00000014 _cleanup
00806148 g     F .text	000000a4 _Balloc
0080c128 g     F .text	000000e8 .hidden __gtdf2
0080f8e0 g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000001c __reset
00805314 g     F .text	00000008 __localeconv_l
00800020 g       *ABS*	00000000 __flash_exceptions_start
00809550 g     F .text	00000060 _fstat_r
00813d28 g     O .bss	00000004 errno
00807948 g     F .text	00000008 __seofread
00813d34 g     O .bss	00000004 alt_argv
0081a10c g       *ABS*	00000000 _gp
0080d83c g     F .text	00000020 getpid
00810f2c g     O .rwdata	00000180 alt_fd_list
0080f904 g     F .text	00000090 alt_find_dev
00805e2c g     F .text	00000100 memcpy
00804550 g     F .text	0000000c _cleanup_r
0080d42c g     F .text	000000b8 .hidden __floatsidf
0080f440 g     F .text	0000007c alt_io_redirect
0080c210 g     F .text	000000e8 .hidden __ltdf2
0080feec g       *ABS*	00000000 __DTOR_END__
008004e8 g     F .text	00000010 puts
0080fbe4 g     F .text	00000098 alt_exception_cause_generated_bad_addr
00807148 g     F .text	000000a4 __ratio
00808e84 g     F .text	0000001c __vfiprintf_internal
0080e82c g     F .text	00000220 altera_avalon_jtag_uart_read
008003b4 g     F .text	00000030 _printf_r
0080ada0 g     F .text	00000064 .hidden __udivsi3
0080d898 g     F .text	000000b0 isatty
00809c6c g     F .text	000000c4 _raise_r
0080901c g     F .text	00000064 __assert_func
00810084 g     O .rodata	000000c8 __mprec_tens
0080fb54 g     F .text	00000090 alt_icache_flush
00813d24 g     O .bss	00000004 __malloc_top_pad
0080a0c4 g     F .text	00000004 _getpid_r
0080531c g     F .text	0000000c _localeconv_r
008065b8 g     F .text	000000b0 __i2b
00804d0c g     F .text	000004c8 __sfvwrite_r
00809d30 g     F .text	000000bc __sigtramp_r
0080789c g     F .text	00000058 _sbrk_r
008097b0 g     F .text	00000064 _read_r
0081212c g     O .rwdata	00000004 alt_max_fd
00809218 g     F .text	00000070 _fclose_r
008044c4 g     F .text	00000084 fflush
00813d20 g     O .bss	00000004 __malloc_max_sbrked_mem
0080ae88 g     F .text	000008f0 .hidden __adddf3
00806edc g     F .text	00000108 __b2d
0080a6e8 g     F .text	000005c4 .hidden __umoddi3
0080dbd8 g     F .text	000000e0 lseek
0081210c g     O .rwdata	00000004 _global_impure_ptr
00807338 g     F .text	00000564 _realloc_r
00813e74 g       *ABS*	00000000 __bss_end
0080f284 g     F .text	000000e8 alt_iic_isr_register
0080f7d8 g     F .text	00000108 alt_tick
0080a0c8 g     F .text	00000620 .hidden __udivdi3
008094b4 g     F .text	00000024 _fputwc_r
0081005c g     O .rodata	00000028 __mprec_bigtens
0080636c g     F .text	00000138 __s2b
00809b60 g     F .text	00000018 abort
0080d4e4 g     F .text	00000090 .hidden __floatunsidf
00806bfc g     F .text	00000058 __mcmp
008048cc g     F .text	00000014 __fp_lock_all
0080f238 g     F .text	0000004c alt_ic_irq_enabled
0080f734 g     F .text	000000a4 alt_alarm_stop
00813d3c g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000c8 alt_irq_handler
00810f04 g     O .rwdata	00000028 alt_dev_null
0080eea8 g     F .text	0000004c alt_dcache_flush_all
008064a4 g     F .text	00000064 __hi0bits
0080d3ac g     F .text	00000080 .hidden __fixdfsi
00812144 g       *ABS*	00000000 __ram_rwdata_end
00812124 g     O .rwdata	00000008 alt_dev_list
0080e024 g     F .text	00000104 write
0081056c g       *ABS*	00000000 __ram_rodata_end
0080d780 g     F .text	000000bc fstat
0080d984 g     F .text	0000012c kill
0080c210 g     F .text	000000e8 .hidden __ledf2
0080692c g     F .text	00000148 __pow5mult
00807b40 g     F .text	00001344 ___vfiprintf_internal_r
0080ae04 g     F .text	0000005c .hidden __umodsi3
00813e74 g       *ABS*	00000000 end
0080e364 g     F .text	000000c0 altera_avalon_jtag_uart_init
008001c4 g     F .exceptions	00000074 alt_instruction_exception_entry
0080feec g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080ecf0 g     F .text	00000084 alt_avalon_timer_sc_init
0080d574 g     F .text	00000054 .hidden __clzsi2
0080ea4c g     F .text	00000228 altera_avalon_jtag_uart_write
008048bc g     F .text	00000004 __sfp_lock_acquire
00805d5c g     F .text	000000d0 memchr
00800590 g     F .text	00002104 ___vfprintf_internal_r
00804a10 g     F .text	000002fc _free_r
008102c0 g     O .rodata	00000180 _ctype_b
0080967c g     F .text	0000000c __locale_mb_cur_max
0080fdcc g     F .text	00000120 __call_exitprocs
00812114 g     O .rwdata	00000004 __malloc_sbrk_base
00800238 g     F .text	0000004c _start
00813d40 g     O .bss	00000004 _alt_tick_rate
00806a74 g     F .text	00000188 __lshift
00813d44 g     O .bss	00000004 _alt_nticks
00809ea8 g     F .text	000000a0 signal
0080ddb8 g     F .text	00000108 read
0080e198 g     F .text	00000068 alt_sys_init
0080fd3c g     F .text	00000090 __register_exitproc
00806668 g     F .text	000002c4 __multiply
0080e6d0 g     F .text	00000068 altera_avalon_jtag_uart_close
0080ae60 g     F .text	00000028 .hidden __mulsi3
0081056c g       *ABS*	00000000 __ram_rwdata_start
0080feec g       *ABS*	00000000 __ram_rodata_start
00813d4c g     O .bss	00000028 __malloc_current_mallinfo
00806fe4 g     F .text	00000164 __d2b
0080e200 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0080fa9c g     F .text	000000b8 alt_get_fd
00808fc4 g     F .text	00000058 _close_r
0080fcc4 g     F .text	00000078 memcmp
0080e2c0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00813e74 g       *ABS*	00000000 __alt_stack_base
0080e310 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
00802770 g     F .text	00000164 __swsetup_r
0080b778 g     F .text	00000930 .hidden __divdf3
00804744 g     F .text	00000154 __sfp
0080725c g     F .text	0000007c __copybits
00810990 g     O .rwdata	00000408 __malloc_av_
008048c8 g     F .text	00000004 __sinit_lock_release
0080c2f8 g     F .text	000007ac .hidden __muldf3
008078f4 g     F .text	00000054 __sread
0080f994 g     F .text	00000108 alt_find_file
0080ef30 g     F .text	000000a8 alt_dev_llist_insert
0080dd34 g     F .text	00000024 __malloc_lock
0080df30 g     F .text	000000b8 sbrk
00804464 g     F .text	00000060 _fflush_r
00809094 g     F .text	000000c4 _calloc_r
00813d1c g       *ABS*	00000000 __bss_start
00806058 g     F .text	000000f0 memset
00800284 g     F .text	00000130 main
00813d38 g     O .bss	00000004 alt_envp
00813d1c g     O .bss	00000004 __malloc_max_total_mem
0080e260 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00809a18 g     F .text	00000018 __swbuf
00807a2c g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
00809288 g     F .text	00000070 fclose
00802af4 g     F .text	00001748 _dtoa_r
0080557c g     F .text	000007e0 _malloc_r
00809b30 g     F .text	00000030 __ascii_wctomb
00812130 g     O .rwdata	00000004 alt_errno
008092f8 g     F .text	00000020 _fiprintf_r
00809f48 g     F .text	00000060 _init_signal
008051d4 g     F .text	00000098 _fwalk
00809760 g     F .text	0000000c _mbtowc_r
0080acac g     F .text	00000080 .hidden __divsi3
008048f4 g     F .text	0000011c _malloc_trim_r
0080feec g       *ABS*	00000000 __CTOR_END__
00809814 g     F .text	000000b8 strcmp
0080feec g       *ABS*	00000000 __flash_rodata_start
0080feec g       *ABS*	00000000 __DTOR_LIST__
0080c0a8 g     F .text	00000080 .hidden __nedf2
0080e15c g     F .text	0000003c alt_irq_init
0080dec0 g     F .text	00000070 alt_release_fd
00810440 g     O .rodata	00000100 .hidden __clz_tab
00813d2c g     O .bss	00000004 _PathLocale
0080fc7c g     F .text	00000014 atexit
00808f60 g     F .text	00000064 _write_r
00809688 g     F .text	00000074 setlocale
00812110 g     O .rwdata	00000004 _impure_ptr
00813d30 g     O .bss	00000004 alt_argc
0080423c g     F .text	00000228 __sflush_r
0080f03c g     F .text	00000064 _do_dtors
00800020 g       .exceptions	00000000 alt_irq_entry
0080976c g     F .text	00000044 __ascii_mbtowc
00806e80 g     F .text	0000005c __ulp
008048e0 g     F .text	00000014 __fp_unlock_all
0081211c g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
00805328 g     F .text	0000000c localeconv
008054e4 g     F .text	00000098 __swhatbuf_r
0080f0d4 g     F .text	00000050 alt_ic_isr_register
00812144 g       *ABS*	00000000 _edata
00813e74 g       *ABS*	00000000 _end
00809350 g     F .text	00000164 __fputwc
00800238 g       *ABS*	00000000 __ram_exceptions_end
0080e738 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0080f1ac g     F .text	0000008c alt_ic_irq_disable
00807950 g     F .text	00000080 __swrite
00812118 g     O .rwdata	00000004 __malloc_trim_threshold
0080fc90 g     F .text	00000034 exit
00809318 g     F .text	00000038 fiprintf
008098cc g     F .text	00000004 _vfiprintf_r
0080526c g     F .text	000000a8 _fwalk_reent
00806c54 g     F .text	0000022c __mdiff
0080ad2c g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
008048c0 g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
008101bc g     O .rodata	00000101 _ctype_
0080d358 g     F .text	00000054 .hidden __unorddf2
0080d70c g     F .text	00000038 _exit
0080ed74 g     F .text	00000134 alt_alarm_start
00805334 g     F .text	000001b0 __smakebuf_r
008004f8 g     F .text	00000098 strlen
00809b78 g     F .text	0000005c _init_signal_r
0080f5d4 g     F .text	00000160 open
0080c128 g     F .text	000000e8 .hidden __gedf2
00809080 g     F .text	00000014 __assert
00807b28 g     F .text	00000018 __sprint_r
0080f0a0 g     F .text	00000034 alt_icache_flush_all
00812138 g     O .rwdata	00000004 alt_priority_mask
0080f124 g     F .text	00000088 alt_ic_irq_enable
00802694 g     F .text	0000001c __vfprintf_internal
00809b24 g     F .text	0000000c _wctomb_r
0080caa4 g     F .text	000008b4 .hidden __subdf3
00806508 g     F .text	000000b0 __lo0bits
0081213c g     O .rwdata	00000008 alt_alarm_list
0080efd8 g     F .text	00000064 _do_ctors
00809fa8 g     F .text	000000bc __sigtramp
00809a9c g     F .text	00000088 wcrtomb
0080d604 g     F .text	000000dc close
00810d98 g     O .rwdata	0000016c __global_locale
0080db18 g     F .text	00000084 alt_load
008094d8 g     F .text	00000078 fputwc
00809dec g     F .text	000000bc raise
008048c4 g     F .text	00000004 __sinit_lock_acquire
00806210 g     F .text	0000015c __multadd
008061ec g     F .text	00000024 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00820014 	movui	r2,2048
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08408e14 	ori	at,at,568
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__reset-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001c40 	call	8001c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffc15 	stw	r2,-16(fp)

  return active;
  800118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0ffff17 	ldw	r3,-4(fp)
  800130:	e0bffe17 	ldw	r2,-8(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001126 	beq	r2,zero,800180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	e0bffd17 	ldw	r2,-12(fp)
  800140:	100690fa 	slli	r3,r2,3
  800144:	00802074 	movhi	r2,129
  800148:	1885883a 	add	r2,r3,r2
  80014c:	10cf5d17 	ldw	r3,15732(r2)
  800150:	e0bffd17 	ldw	r2,-12(fp)
  800154:	100890fa 	slli	r4,r2,3
  800158:	00802074 	movhi	r2,129
  80015c:	2085883a 	add	r2,r4,r2
  800160:	108f5e17 	ldw	r2,15736(r2)
  800164:	1009883a 	mov	r4,r2
  800168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  80016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
  800170:	0005313a 	rdctl	r2,ipending
  800174:	e0bffb15 	stw	r2,-20(fp)
  return active;
  800178:	e0bffb17 	ldw	r2,-20(fp)
  80017c:	00000706 	br	80019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
  800180:	e0bffe17 	ldw	r2,-8(fp)
  800184:	1085883a 	add	r2,r2,r2
  800188:	e0bffe15 	stw	r2,-8(fp)
      i++;
  80018c:	e0bffd17 	ldw	r2,-12(fp)
  800190:	10800044 	addi	r2,r2,1
  800194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
  800198:	003fe406 	br	80012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
  80019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
  8001a0:	e0bfff17 	ldw	r2,-4(fp)
  8001a4:	103fde1e 	bne	r2,zero,800120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001a8:	0001883a 	nop
}
  8001ac:	0001883a 	nop
  8001b0:	e037883a 	mov	sp,fp
  8001b4:	dfc00117 	ldw	ra,4(sp)
  8001b8:	df000017 	ldw	fp,0(sp)
  8001bc:	dec00204 	addi	sp,sp,8
  8001c0:	f800283a 	ret

008001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001c4:	defffb04 	addi	sp,sp,-20
  8001c8:	dfc00415 	stw	ra,16(sp)
  8001cc:	df000315 	stw	fp,12(sp)
  8001d0:	df000304 	addi	fp,sp,12
  8001d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001d8:	000531fa 	rdctl	r2,exception
  8001dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001e0:	e0bfff17 	ldw	r2,-4(fp)
  8001e4:	1004d0ba 	srli	r2,r2,2
  8001e8:	108007cc 	andi	r2,r2,31
  8001ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001f0:	0005333a 	rdctl	r2,badaddr
  8001f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  8001f8:	d0a70f17 	ldw	r2,-25540(gp)
  8001fc:	10000726 	beq	r2,zero,80021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  800200:	d0a70f17 	ldw	r2,-25540(gp)
  800204:	e0ffff17 	ldw	r3,-4(fp)
  800208:	e1bffe17 	ldw	r6,-8(fp)
  80020c:	e17ffd17 	ldw	r5,-12(fp)
  800210:	1809883a 	mov	r4,r3
  800214:	103ee83a 	callr	r2
  800218:	00000206 	br	800224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  80021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  800220:	0005883a 	mov	r2,zero
}
  800224:	e037883a 	mov	sp,fp
  800228:	dfc00117 	ldw	ra,4(sp)
  80022c:	df000017 	ldw	fp,0(sp)
  800230:	dec00204 	addi	sp,sp,8
  800234:	f800283a 	ret

Disassembly of section .text:

00800238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800238:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
  80023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  800240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800244:	00bffd16 	blt	zero,r2,80023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800248:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  80024c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  800250:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800254:	d6a84314 	ori	gp,gp,41228
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800258:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  80025c:	108f4714 	ori	r2,r2,15644

    movhi r3, %hi(__bss_end)
  800260:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800264:	18cf9d14 	ori	r3,r3,15988

    beq r2, r3, 1f
  800268:	10c00326 	beq	r2,r3,800278 <_start+0x40>

0:
    stw zero, (r2)
  80026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  800270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800274:	10fffd36 	bltu	r2,r3,80026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800278:	080db180 	call	80db18 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  80027c:	080dcb80 	call	80dcb8 <alt_main>

00800280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800280:	003fff06 	br	800280 <alt_after_alt_main>

00800284 <main>:
#include <system.h>



int main()
{
  800284:	defff604 	addi	sp,sp,-40
  800288:	dfc00915 	stw	ra,36(sp)
  80028c:	df000815 	stw	fp,32(sp)
  800290:	df000804 	addi	fp,sp,32
  int adj_matrix[4] = {0,3,
  800294:	e03ff815 	stw	zero,-32(fp)
  800298:	008000c4 	movi	r2,3
  80029c:	e0bff915 	stw	r2,-28(fp)
  8002a0:	00800144 	movi	r2,5
  8002a4:	e0bffa15 	stw	r2,-24(fp)
  8002a8:	e03ffb15 	stw	zero,-20(fp)
		  	  	  	   5,0};
  int *base_address = &adj_matrix;
  8002ac:	e0bff804 	addi	r2,fp,-32
  8002b0:	e0bffe15 	stw	r2,-8(fp)

  printf("address %u, value %d \n", base_address ,base_address[0]);
  8002b4:	e0bffe17 	ldw	r2,-8(fp)
  8002b8:	10800017 	ldw	r2,0(r2)
  8002bc:	100d883a 	mov	r6,r2
  8002c0:	e17ffe17 	ldw	r5,-8(fp)
  8002c4:	01002074 	movhi	r4,129
  8002c8:	213fbb04 	addi	r4,r4,-276
  8002cc:	08003e40 	call	8003e4 <printf>
  printf("address %u, value %d \n", base_address+1 ,base_address[1]);
  8002d0:	e0bffe17 	ldw	r2,-8(fp)
  8002d4:	10c00104 	addi	r3,r2,4
  8002d8:	e0bffe17 	ldw	r2,-8(fp)
  8002dc:	10800104 	addi	r2,r2,4
  8002e0:	10800017 	ldw	r2,0(r2)
  8002e4:	100d883a 	mov	r6,r2
  8002e8:	180b883a 	mov	r5,r3
  8002ec:	01002074 	movhi	r4,129
  8002f0:	213fbb04 	addi	r4,r4,-276
  8002f4:	08003e40 	call	8003e4 <printf>
  printf("address %u, value %d \n", base_address+2 ,base_address[2]);
  8002f8:	e0bffe17 	ldw	r2,-8(fp)
  8002fc:	10c00204 	addi	r3,r2,8
  800300:	e0bffe17 	ldw	r2,-8(fp)
  800304:	10800204 	addi	r2,r2,8
  800308:	10800017 	ldw	r2,0(r2)
  80030c:	100d883a 	mov	r6,r2
  800310:	180b883a 	mov	r5,r3
  800314:	01002074 	movhi	r4,129
  800318:	213fbb04 	addi	r4,r4,-276
  80031c:	08003e40 	call	8003e4 <printf>
  printf("address %u, value %d \n", base_address+3 ,base_address[3]);
  800320:	e0bffe17 	ldw	r2,-8(fp)
  800324:	10c00304 	addi	r3,r2,12
  800328:	e0bffe17 	ldw	r2,-8(fp)
  80032c:	10800304 	addi	r2,r2,12
  800330:	10800017 	ldw	r2,0(r2)
  800334:	100d883a 	mov	r6,r2
  800338:	180b883a 	mov	r5,r3
  80033c:	01002074 	movhi	r4,129
  800340:	213fbb04 	addi	r4,r4,-276
  800344:	08003e40 	call	8003e4 <printf>


  printf("hello world \n \n");
  800348:	01002074 	movhi	r4,129
  80034c:	213fc104 	addi	r4,r4,-252
  800350:	08004e80 	call	8004e8 <puts>

//  int number_of_nodes = 2;
//  int source_node = 0;
//  int destination_node = number_of_nodes -1;
//  long datab = number_of_nodes <<20 + destination_node <<10 + source_node;
  unsigned long datab = 1;
  800354:	00800044 	movi	r2,1
  800358:	e0bffd15 	stw	r2,-12(fp)


  for(int i = 0; i < 5; i++){
  80035c:	e03fff15 	stw	zero,-4(fp)
  800360:	00000b06 	br	800390 <main+0x10c>
	  long unsigned b = ALT_CI_DUMMY_0(base_address,datab);
  800364:	e0bffe17 	ldw	r2,-8(fp)
  800368:	e0fffd17 	ldw	r3,-12(fp)
  80036c:	10c5c072 	custom	1,r2,r2,r3
  800370:	e0bffc15 	stw	r2,-16(fp)
	  printf ("b %lu \n", b);
  800374:	e17ffc17 	ldw	r5,-16(fp)
  800378:	01002074 	movhi	r4,129
  80037c:	213fc504 	addi	r4,r4,-236
  800380:	08003e40 	call	8003e4 <printf>
  for(int i = 0; i < 5; i++){
  800384:	e0bfff17 	ldw	r2,-4(fp)
  800388:	10800044 	addi	r2,r2,1
  80038c:	e0bfff15 	stw	r2,-4(fp)
  800390:	e0bfff17 	ldw	r2,-4(fp)
  800394:	10800150 	cmplti	r2,r2,5
  800398:	103ff21e 	bne	r2,zero,800364 <main+0xe0>
//	c = ALT_CI_DUMMY_0(base_address+1,0);
//	printf ("c lu %lu \n", c);
//	c = ALT_CI_DUMMY_0(base_address+1,0);
//	printf ("c lu %lu \n", c);

  return 0;
  80039c:	0005883a 	mov	r2,zero
}
  8003a0:	e037883a 	mov	sp,fp
  8003a4:	dfc00117 	ldw	ra,4(sp)
  8003a8:	df000017 	ldw	fp,0(sp)
  8003ac:	dec00204 	addi	sp,sp,8
  8003b0:	f800283a 	ret

008003b4 <_printf_r>:
  8003b4:	defffd04 	addi	sp,sp,-12
  8003b8:	2805883a 	mov	r2,r5
  8003bc:	dfc00015 	stw	ra,0(sp)
  8003c0:	d9800115 	stw	r6,4(sp)
  8003c4:	d9c00215 	stw	r7,8(sp)
  8003c8:	21400217 	ldw	r5,8(r4)
  8003cc:	d9c00104 	addi	r7,sp,4
  8003d0:	100d883a 	mov	r6,r2
  8003d4:	08005900 	call	800590 <___vfprintf_internal_r>
  8003d8:	dfc00017 	ldw	ra,0(sp)
  8003dc:	dec00304 	addi	sp,sp,12
  8003e0:	f800283a 	ret

008003e4 <printf>:
  8003e4:	defffc04 	addi	sp,sp,-16
  8003e8:	dfc00015 	stw	ra,0(sp)
  8003ec:	d9400115 	stw	r5,4(sp)
  8003f0:	d9800215 	stw	r6,8(sp)
  8003f4:	d9c00315 	stw	r7,12(sp)
  8003f8:	00802074 	movhi	r2,129
  8003fc:	10884417 	ldw	r2,8464(r2)
  800400:	200b883a 	mov	r5,r4
  800404:	d9800104 	addi	r6,sp,4
  800408:	11000217 	ldw	r4,8(r2)
  80040c:	08026940 	call	802694 <__vfprintf_internal>
  800410:	dfc00017 	ldw	ra,0(sp)
  800414:	dec00404 	addi	sp,sp,16
  800418:	f800283a 	ret

0080041c <_puts_r>:
  80041c:	defff504 	addi	sp,sp,-44
  800420:	dc000815 	stw	r16,32(sp)
  800424:	2021883a 	mov	r16,r4
  800428:	2809883a 	mov	r4,r5
  80042c:	dc400915 	stw	r17,36(sp)
  800430:	dfc00a15 	stw	ra,40(sp)
  800434:	2823883a 	mov	r17,r5
  800438:	08004f80 	call	8004f8 <strlen>
  80043c:	11000044 	addi	r4,r2,1
  800440:	d8800515 	stw	r2,20(sp)
  800444:	00800044 	movi	r2,1
  800448:	00c02074 	movhi	r3,129
  80044c:	d8800715 	stw	r2,28(sp)
  800450:	d8800404 	addi	r2,sp,16
  800454:	18ffc704 	addi	r3,r3,-228
  800458:	d8800115 	stw	r2,4(sp)
  80045c:	00800084 	movi	r2,2
  800460:	dc400415 	stw	r17,16(sp)
  800464:	d8c00615 	stw	r3,24(sp)
  800468:	d9000315 	stw	r4,12(sp)
  80046c:	d8800215 	stw	r2,8(sp)
  800470:	81400217 	ldw	r5,8(r16)
  800474:	80000226 	beq	r16,zero,800480 <_puts_r+0x64>
  800478:	80800e17 	ldw	r2,56(r16)
  80047c:	10001326 	beq	r2,zero,8004cc <_puts_r+0xb0>
  800480:	2880030b 	ldhu	r2,12(r5)
  800484:	10c8000c 	andi	r3,r2,8192
  800488:	1800061e 	bne	r3,zero,8004a4 <_puts_r+0x88>
  80048c:	28c01917 	ldw	r3,100(r5)
  800490:	0137ffc4 	movi	r4,-8193
  800494:	10880014 	ori	r2,r2,8192
  800498:	1906703a 	and	r3,r3,r4
  80049c:	2880030d 	sth	r2,12(r5)
  8004a0:	28c01915 	stw	r3,100(r5)
  8004a4:	d9800104 	addi	r6,sp,4
  8004a8:	8009883a 	mov	r4,r16
  8004ac:	0804d0c0 	call	804d0c <__sfvwrite_r>
  8004b0:	10000b1e 	bne	r2,zero,8004e0 <_puts_r+0xc4>
  8004b4:	00800284 	movi	r2,10
  8004b8:	dfc00a17 	ldw	ra,40(sp)
  8004bc:	dc400917 	ldw	r17,36(sp)
  8004c0:	dc000817 	ldw	r16,32(sp)
  8004c4:	dec00b04 	addi	sp,sp,44
  8004c8:	f800283a 	ret
  8004cc:	8009883a 	mov	r4,r16
  8004d0:	d9400015 	stw	r5,0(sp)
  8004d4:	08048ac0 	call	8048ac <__sinit>
  8004d8:	d9400017 	ldw	r5,0(sp)
  8004dc:	003fe806 	br	800480 <_puts_r+0x64>
  8004e0:	00bfffc4 	movi	r2,-1
  8004e4:	003ff406 	br	8004b8 <_puts_r+0x9c>

008004e8 <puts>:
  8004e8:	00802074 	movhi	r2,129
  8004ec:	200b883a 	mov	r5,r4
  8004f0:	11084417 	ldw	r4,8464(r2)
  8004f4:	080041c1 	jmpi	80041c <_puts_r>

008004f8 <strlen>:
  8004f8:	208000cc 	andi	r2,r4,3
  8004fc:	10000926 	beq	r2,zero,800524 <strlen+0x2c>
  800500:	2005883a 	mov	r2,r4
  800504:	00000306 	br	800514 <strlen+0x1c>
  800508:	10800044 	addi	r2,r2,1
  80050c:	10c000cc 	andi	r3,r2,3
  800510:	18000526 	beq	r3,zero,800528 <strlen+0x30>
  800514:	10c00007 	ldb	r3,0(r2)
  800518:	183ffb1e 	bne	r3,zero,800508 <strlen+0x10>
  80051c:	1105c83a 	sub	r2,r2,r4
  800520:	f800283a 	ret
  800524:	2005883a 	mov	r2,r4
  800528:	11400017 	ldw	r5,0(r2)
  80052c:	01ffbff4 	movhi	r7,65279
  800530:	39ffbfc4 	addi	r7,r7,-257
  800534:	29c7883a 	add	r3,r5,r7
  800538:	01a02074 	movhi	r6,32897
  80053c:	014a303a 	nor	r5,zero,r5
  800540:	1946703a 	and	r3,r3,r5
  800544:	31a02004 	addi	r6,r6,-32640
  800548:	1986703a 	and	r3,r3,r6
  80054c:	1800071e 	bne	r3,zero,80056c <strlen+0x74>
  800550:	11400117 	ldw	r5,4(r2)
  800554:	10800104 	addi	r2,r2,4
  800558:	29c7883a 	add	r3,r5,r7
  80055c:	014a303a 	nor	r5,zero,r5
  800560:	1946703a 	and	r3,r3,r5
  800564:	1986703a 	and	r3,r3,r6
  800568:	183ff926 	beq	r3,zero,800550 <strlen+0x58>
  80056c:	10c00007 	ldb	r3,0(r2)
  800570:	183fea26 	beq	r3,zero,80051c <strlen+0x24>
  800574:	10c00047 	ldb	r3,1(r2)
  800578:	10800044 	addi	r2,r2,1
  80057c:	183fe726 	beq	r3,zero,80051c <strlen+0x24>
  800580:	10c00047 	ldb	r3,1(r2)
  800584:	10800044 	addi	r2,r2,1
  800588:	183ffa1e 	bne	r3,zero,800574 <strlen+0x7c>
  80058c:	003fe306 	br	80051c <strlen+0x24>

00800590 <___vfprintf_internal_r>:
  800590:	deffbf04 	addi	sp,sp,-260
  800594:	dfc04015 	stw	ra,256(sp)
  800598:	dd803d15 	stw	r22,244(sp)
  80059c:	dcc03a15 	stw	r19,232(sp)
  8005a0:	dc803915 	stw	r18,228(sp)
  8005a4:	2027883a 	mov	r19,r4
  8005a8:	2825883a 	mov	r18,r5
  8005ac:	302d883a 	mov	r22,r6
  8005b0:	d9c00615 	stw	r7,24(sp)
  8005b4:	df003f15 	stw	fp,252(sp)
  8005b8:	ddc03e15 	stw	r23,248(sp)
  8005bc:	dd403c15 	stw	r21,240(sp)
  8005c0:	dd003b15 	stw	r20,236(sp)
  8005c4:	dc403815 	stw	r17,224(sp)
  8005c8:	dc003715 	stw	r16,220(sp)
  8005cc:	080531c0 	call	80531c <_localeconv_r>
  8005d0:	10800017 	ldw	r2,0(r2)
  8005d4:	1009883a 	mov	r4,r2
  8005d8:	d8800d15 	stw	r2,52(sp)
  8005dc:	08004f80 	call	8004f8 <strlen>
  8005e0:	d8800b15 	stw	r2,44(sp)
  8005e4:	98000226 	beq	r19,zero,8005f0 <___vfprintf_internal_r+0x60>
  8005e8:	98800e17 	ldw	r2,56(r19)
  8005ec:	1001e026 	beq	r2,zero,800d70 <___vfprintf_internal_r+0x7e0>
  8005f0:	9080030b 	ldhu	r2,12(r18)
  8005f4:	10c8000c 	andi	r3,r2,8192
  8005f8:	1800061e 	bne	r3,zero,800614 <___vfprintf_internal_r+0x84>
  8005fc:	90c01917 	ldw	r3,100(r18)
  800600:	0137ffc4 	movi	r4,-8193
  800604:	10880014 	ori	r2,r2,8192
  800608:	1906703a 	and	r3,r3,r4
  80060c:	9080030d 	sth	r2,12(r18)
  800610:	90c01915 	stw	r3,100(r18)
  800614:	10c0020c 	andi	r3,r2,8
  800618:	1800fc26 	beq	r3,zero,800a0c <___vfprintf_internal_r+0x47c>
  80061c:	90c00417 	ldw	r3,16(r18)
  800620:	1800fa26 	beq	r3,zero,800a0c <___vfprintf_internal_r+0x47c>
  800624:	1080068c 	andi	r2,r2,26
  800628:	10800298 	cmpnei	r2,r2,10
  80062c:	1000ff26 	beq	r2,zero,800a2c <___vfprintf_internal_r+0x49c>
  800630:	d8802704 	addi	r2,sp,156
  800634:	b02f883a 	mov	r23,r22
  800638:	d8801a15 	stw	r2,104(sp)
  80063c:	d8001c15 	stw	zero,112(sp)
  800640:	d8001b15 	stw	zero,108(sp)
  800644:	d8000815 	stw	zero,32(sp)
  800648:	d8000915 	stw	zero,36(sp)
  80064c:	d8000a15 	stw	zero,40(sp)
  800650:	d8000c15 	stw	zero,48(sp)
  800654:	d8001015 	stw	zero,64(sp)
  800658:	d8000515 	stw	zero,20(sp)
  80065c:	102d883a 	mov	r22,r2
  800660:	b8800007 	ldb	r2,0(r23)
  800664:	1000d726 	beq	r2,zero,8009c4 <___vfprintf_internal_r+0x434>
  800668:	b821883a 	mov	r16,r23
  80066c:	00000306 	br	80067c <___vfprintf_internal_r+0xec>
  800670:	80800047 	ldb	r2,1(r16)
  800674:	84000044 	addi	r16,r16,1
  800678:	10012226 	beq	r2,zero,800b04 <___vfprintf_internal_r+0x574>
  80067c:	10800958 	cmpnei	r2,r2,37
  800680:	103ffb1e 	bne	r2,zero,800670 <___vfprintf_internal_r+0xe0>
  800684:	85e3c83a 	sub	r17,r16,r23
  800688:	85c1201e 	bne	r16,r23,800b0c <___vfprintf_internal_r+0x57c>
  80068c:	80800003 	ldbu	r2,0(r16)
  800690:	10803fcc 	andi	r2,r2,255
  800694:	1080201c 	xori	r2,r2,128
  800698:	10bfe004 	addi	r2,r2,-128
  80069c:	1000c926 	beq	r2,zero,8009c4 <___vfprintf_internal_r+0x434>
  8006a0:	82c00047 	ldb	r11,1(r16)
  8006a4:	85c00044 	addi	r23,r16,1
  8006a8:	d8001345 	stb	zero,77(sp)
  8006ac:	0009883a 	mov	r4,zero
  8006b0:	000b883a 	mov	r5,zero
  8006b4:	023fffc4 	movi	r8,-1
  8006b8:	0021883a 	mov	r16,zero
  8006bc:	0019883a 	mov	r12,zero
  8006c0:	bdc00044 	addi	r23,r23,1
  8006c4:	5839883a 	mov	fp,r11
  8006c8:	e0bff804 	addi	r2,fp,-32
  8006cc:	10c01668 	cmpgeui	r3,r2,89
  8006d0:	18006c1e 	bne	r3,zero,800884 <___vfprintf_internal_r+0x2f4>
  8006d4:	100490ba 	slli	r2,r2,2
  8006d8:	00c02034 	movhi	r3,128
  8006dc:	10c7883a 	add	r3,r2,r3
  8006e0:	1881ba17 	ldw	r2,1768(r3)
  8006e4:	1000683a 	jmp	r2
  8006e8:	00801038 	rdprs	r2,zero,64
  8006ec:	00800884 	movi	r2,34
  8006f0:	00800884 	movi	r2,34
  8006f4:	0080102c 	andhi	r2,zero,64
  8006f8:	00800884 	movi	r2,34
  8006fc:	00800884 	movi	r2,34
  800700:	00800884 	movi	r2,34
  800704:	00800884 	movi	r2,34
  800708:	00800884 	movi	r2,34
  80070c:	00800884 	movi	r2,34
  800710:	00801004 	movi	r2,64
  800714:	00800ff4 	movhi	r2,63
  800718:	00800884 	movi	r2,34
  80071c:	00800fdc 	xori	r2,zero,63
  800720:	00800f90 	cmplti	r2,zero,62
  800724:	00800884 	movi	r2,34
  800728:	00800f84 	movi	r2,62
  80072c:	0080084c 	andi	r2,zero,33
  800730:	0080084c 	andi	r2,zero,33
  800734:	0080084c 	andi	r2,zero,33
  800738:	0080084c 	andi	r2,zero,33
  80073c:	0080084c 	andi	r2,zero,33
  800740:	0080084c 	andi	r2,zero,33
  800744:	0080084c 	andi	r2,zero,33
  800748:	0080084c 	andi	r2,zero,33
  80074c:	0080084c 	andi	r2,zero,33
  800750:	00800884 	movi	r2,34
  800754:	00800884 	movi	r2,34
  800758:	00800884 	movi	r2,34
  80075c:	00800884 	movi	r2,34
  800760:	00800884 	movi	r2,34
  800764:	00800884 	movi	r2,34
  800768:	00800884 	movi	r2,34
  80076c:	00800884 	movi	r2,34
  800770:	00800884 	movi	r2,34
  800774:	00800884 	movi	r2,34
  800778:	00800e9c 	xori	r2,zero,58
  80077c:	00800b68 	cmpgeui	r2,zero,45
  800780:	00800884 	movi	r2,34
  800784:	00800b68 	cmpgeui	r2,zero,45
  800788:	00800884 	movi	r2,34
  80078c:	00800884 	movi	r2,34
  800790:	00800884 	movi	r2,34
  800794:	00800884 	movi	r2,34
  800798:	00800e90 	cmplti	r2,zero,58
  80079c:	00800884 	movi	r2,34
  8007a0:	00800884 	movi	r2,34
  8007a4:	00800a9c 	xori	r2,zero,42
  8007a8:	00800884 	movi	r2,34
  8007ac:	00800884 	movi	r2,34
  8007b0:	00800884 	movi	r2,34
  8007b4:	00800884 	movi	r2,34
  8007b8:	00800884 	movi	r2,34
  8007bc:	00800a74 	movhi	r2,41
  8007c0:	00800884 	movi	r2,34
  8007c4:	00800884 	movi	r2,34
  8007c8:	00800e48 	cmpgei	r2,zero,57
  8007cc:	00800884 	movi	r2,34
  8007d0:	00800884 	movi	r2,34
  8007d4:	00800884 	movi	r2,34
  8007d8:	00800884 	movi	r2,34
  8007dc:	00800884 	movi	r2,34
  8007e0:	00800884 	movi	r2,34
  8007e4:	00800884 	movi	r2,34
  8007e8:	00800884 	movi	r2,34
  8007ec:	00800884 	movi	r2,34
  8007f0:	00800884 	movi	r2,34
  8007f4:	00800e20 	cmpeqi	r2,zero,56
  8007f8:	00800d7c 	xorhi	r2,zero,53
  8007fc:	00800b68 	cmpgeui	r2,zero,45
  800800:	00800b68 	cmpgeui	r2,zero,45
  800804:	00800b68 	cmpgeui	r2,zero,45
  800808:	00800e14 	movui	r2,56
  80080c:	00800d7c 	xorhi	r2,zero,53
  800810:	00800884 	movi	r2,34
  800814:	00800884 	movi	r2,34
  800818:	0080118c 	andi	r2,zero,70
  80081c:	00800884 	movi	r2,34
  800820:	00801150 	cmplti	r2,zero,69
  800824:	00800aa0 	cmpeqi	r2,zero,42
  800828:	00801110 	cmplti	r2,zero,68
  80082c:	00801104 	movi	r2,68
  800830:	00800884 	movi	r2,34
  800834:	008010ac 	andhi	r2,zero,66
  800838:	00800884 	movi	r2,34
  80083c:	00800a78 	rdprs	r2,zero,41
  800840:	00800884 	movi	r2,34
  800844:	00800884 	movi	r2,34
  800848:	00801064 	muli	r2,zero,65
  80084c:	0021883a 	mov	r16,zero
  800850:	e0fff404 	addi	r3,fp,-48
  800854:	800490ba 	slli	r2,r16,2
  800858:	bf000007 	ldb	fp,0(r23)
  80085c:	bdc00044 	addi	r23,r23,1
  800860:	1421883a 	add	r16,r2,r16
  800864:	8421883a 	add	r16,r16,r16
  800868:	1c21883a 	add	r16,r3,r16
  80086c:	e0fff404 	addi	r3,fp,-48
  800870:	188002b0 	cmpltui	r2,r3,10
  800874:	103ff71e 	bne	r2,zero,800854 <___vfprintf_internal_r+0x2c4>
  800878:	e0bff804 	addi	r2,fp,-32
  80087c:	10c01668 	cmpgeui	r3,r2,89
  800880:	183f9426 	beq	r3,zero,8006d4 <___vfprintf_internal_r+0x144>
  800884:	21003fcc 	andi	r4,r4,255
  800888:	2006871e 	bne	r4,zero,8022a8 <___vfprintf_internal_r+0x1d18>
  80088c:	e0004d26 	beq	fp,zero,8009c4 <___vfprintf_internal_r+0x434>
  800890:	df001d05 	stb	fp,116(sp)
  800894:	d8001345 	stb	zero,77(sp)
  800898:	05000044 	movi	r20,1
  80089c:	05400044 	movi	r21,1
  8008a0:	dc401d04 	addi	r17,sp,116
  8008a4:	db000415 	stw	r12,16(sp)
  8008a8:	0011883a 	mov	r8,zero
  8008ac:	d8000715 	stw	zero,28(sp)
  8008b0:	d8800417 	ldw	r2,16(sp)
  8008b4:	1380008c 	andi	r14,r2,2
  8008b8:	70000126 	beq	r14,zero,8008c0 <___vfprintf_internal_r+0x330>
  8008bc:	a5000084 	addi	r20,r20,2
  8008c0:	d8800417 	ldw	r2,16(sp)
  8008c4:	d8c01c17 	ldw	r3,112(sp)
  8008c8:	1340210c 	andi	r13,r2,132
  8008cc:	6800021e 	bne	r13,zero,8008d8 <___vfprintf_internal_r+0x348>
  8008d0:	850fc83a 	sub	r7,r16,r20
  8008d4:	01c34516 	blt	zero,r7,8015ec <___vfprintf_internal_r+0x105c>
  8008d8:	d8801347 	ldb	r2,77(sp)
  8008dc:	10000c26 	beq	r2,zero,800910 <___vfprintf_internal_r+0x380>
  8008e0:	d8801b17 	ldw	r2,108(sp)
  8008e4:	d9001344 	addi	r4,sp,77
  8008e8:	18c00044 	addi	r3,r3,1
  8008ec:	10800044 	addi	r2,r2,1
  8008f0:	b1000015 	stw	r4,0(r22)
  8008f4:	01000044 	movi	r4,1
  8008f8:	d8801b15 	stw	r2,108(sp)
  8008fc:	b1000115 	stw	r4,4(r22)
  800900:	d8c01c15 	stw	r3,112(sp)
  800904:	10800208 	cmpgei	r2,r2,8
  800908:	1003791e 	bne	r2,zero,8016f0 <___vfprintf_internal_r+0x1160>
  80090c:	b5800204 	addi	r22,r22,8
  800910:	70000c26 	beq	r14,zero,800944 <___vfprintf_internal_r+0x3b4>
  800914:	d8801b17 	ldw	r2,108(sp)
  800918:	d9001384 	addi	r4,sp,78
  80091c:	18c00084 	addi	r3,r3,2
  800920:	10800044 	addi	r2,r2,1
  800924:	b1000015 	stw	r4,0(r22)
  800928:	01000084 	movi	r4,2
  80092c:	d8801b15 	stw	r2,108(sp)
  800930:	b1000115 	stw	r4,4(r22)
  800934:	d8c01c15 	stw	r3,112(sp)
  800938:	10800208 	cmpgei	r2,r2,8
  80093c:	10037a1e 	bne	r2,zero,801728 <___vfprintf_internal_r+0x1198>
  800940:	b5800204 	addi	r22,r22,8
  800944:	6b402018 	cmpnei	r13,r13,128
  800948:	68025b26 	beq	r13,zero,8012b8 <___vfprintf_internal_r+0xd28>
  80094c:	4551c83a 	sub	r8,r8,r21
  800950:	02029316 	blt	zero,r8,8013a0 <___vfprintf_internal_r+0xe10>
  800954:	d8800417 	ldw	r2,16(sp)
  800958:	1080400c 	andi	r2,r2,256
  80095c:	1002101e 	bne	r2,zero,8011a0 <___vfprintf_internal_r+0xc10>
  800960:	d8801b17 	ldw	r2,108(sp)
  800964:	1d47883a 	add	r3,r3,r21
  800968:	b4400015 	stw	r17,0(r22)
  80096c:	10800044 	addi	r2,r2,1
  800970:	b5400115 	stw	r21,4(r22)
  800974:	d8801b15 	stw	r2,108(sp)
  800978:	d8c01c15 	stw	r3,112(sp)
  80097c:	10800208 	cmpgei	r2,r2,8
  800980:	1003101e 	bne	r2,zero,8015c4 <___vfprintf_internal_r+0x1034>
  800984:	b5800204 	addi	r22,r22,8
  800988:	d8800417 	ldw	r2,16(sp)
  80098c:	1440010c 	andi	r17,r2,4
  800990:	88000226 	beq	r17,zero,80099c <___vfprintf_internal_r+0x40c>
  800994:	8523c83a 	sub	r17,r16,r20
  800998:	0440c616 	blt	zero,r17,800cb4 <___vfprintf_internal_r+0x724>
  80099c:	8500010e 	bge	r16,r20,8009a4 <___vfprintf_internal_r+0x414>
  8009a0:	a021883a 	mov	r16,r20
  8009a4:	d8800517 	ldw	r2,20(sp)
  8009a8:	1405883a 	add	r2,r2,r16
  8009ac:	d8800515 	stw	r2,20(sp)
  8009b0:	1802c21e 	bne	r3,zero,8014bc <___vfprintf_internal_r+0xf2c>
  8009b4:	b8800007 	ldb	r2,0(r23)
  8009b8:	d8001b15 	stw	zero,108(sp)
  8009bc:	dd802704 	addi	r22,sp,156
  8009c0:	103f291e 	bne	r2,zero,800668 <___vfprintf_internal_r+0xd8>
  8009c4:	d8801c17 	ldw	r2,112(sp)
  8009c8:	1006391e 	bne	r2,zero,8022b0 <___vfprintf_internal_r+0x1d20>
  8009cc:	9080030b 	ldhu	r2,12(r18)
  8009d0:	1080100c 	andi	r2,r2,64
  8009d4:	1006cf1e 	bne	r2,zero,802514 <___vfprintf_internal_r+0x1f84>
  8009d8:	d8800517 	ldw	r2,20(sp)
  8009dc:	dfc04017 	ldw	ra,256(sp)
  8009e0:	df003f17 	ldw	fp,252(sp)
  8009e4:	ddc03e17 	ldw	r23,248(sp)
  8009e8:	dd803d17 	ldw	r22,244(sp)
  8009ec:	dd403c17 	ldw	r21,240(sp)
  8009f0:	dd003b17 	ldw	r20,236(sp)
  8009f4:	dcc03a17 	ldw	r19,232(sp)
  8009f8:	dc803917 	ldw	r18,228(sp)
  8009fc:	dc403817 	ldw	r17,224(sp)
  800a00:	dc003717 	ldw	r16,220(sp)
  800a04:	dec04104 	addi	sp,sp,260
  800a08:	f800283a 	ret
  800a0c:	900b883a 	mov	r5,r18
  800a10:	9809883a 	mov	r4,r19
  800a14:	08027700 	call	802770 <__swsetup_r>
  800a18:	1006be1e 	bne	r2,zero,802514 <___vfprintf_internal_r+0x1f84>
  800a1c:	9080030b 	ldhu	r2,12(r18)
  800a20:	1080068c 	andi	r2,r2,26
  800a24:	10800298 	cmpnei	r2,r2,10
  800a28:	103f011e 	bne	r2,zero,800630 <___vfprintf_internal_r+0xa0>
  800a2c:	9080038f 	ldh	r2,14(r18)
  800a30:	103eff16 	blt	r2,zero,800630 <___vfprintf_internal_r+0xa0>
  800a34:	d9c00617 	ldw	r7,24(sp)
  800a38:	b00d883a 	mov	r6,r22
  800a3c:	900b883a 	mov	r5,r18
  800a40:	9809883a 	mov	r4,r19
  800a44:	dfc04017 	ldw	ra,256(sp)
  800a48:	df003f17 	ldw	fp,252(sp)
  800a4c:	ddc03e17 	ldw	r23,248(sp)
  800a50:	dd803d17 	ldw	r22,244(sp)
  800a54:	dd403c17 	ldw	r21,240(sp)
  800a58:	dd003b17 	ldw	r20,236(sp)
  800a5c:	dcc03a17 	ldw	r19,232(sp)
  800a60:	dc803917 	ldw	r18,228(sp)
  800a64:	dc403817 	ldw	r17,224(sp)
  800a68:	dc003717 	ldw	r16,220(sp)
  800a6c:	dec04104 	addi	sp,sp,260
  800a70:	08026b01 	jmpi	8026b0 <__sbprintf>
  800a74:	63000414 	ori	r12,r12,16
  800a78:	6080080c 	andi	r2,r12,32
  800a7c:	10008126 	beq	r2,zero,800c84 <___vfprintf_internal_r+0x6f4>
  800a80:	d8c00617 	ldw	r3,24(sp)
  800a84:	00800044 	movi	r2,1
  800a88:	1d000017 	ldw	r20,0(r3)
  800a8c:	1d400117 	ldw	r21,4(r3)
  800a90:	18c00204 	addi	r3,r3,8
  800a94:	d8c00615 	stw	r3,24(sp)
  800a98:	00000906 	br	800ac0 <___vfprintf_internal_r+0x530>
  800a9c:	63000414 	ori	r12,r12,16
  800aa0:	6080080c 	andi	r2,r12,32
  800aa4:	10006b26 	beq	r2,zero,800c54 <___vfprintf_internal_r+0x6c4>
  800aa8:	d8c00617 	ldw	r3,24(sp)
  800aac:	0005883a 	mov	r2,zero
  800ab0:	1d000017 	ldw	r20,0(r3)
  800ab4:	1d400117 	ldw	r21,4(r3)
  800ab8:	18c00204 	addi	r3,r3,8
  800abc:	d8c00615 	stw	r3,24(sp)
  800ac0:	d8001345 	stb	zero,77(sp)
  800ac4:	40ffffe0 	cmpeqi	r3,r8,-1
  800ac8:	001b883a 	mov	r13,zero
  800acc:	18010e1e 	bne	r3,zero,800f08 <___vfprintf_internal_r+0x978>
  800ad0:	047fdfc4 	movi	r17,-129
  800ad4:	6448703a 	and	r4,r12,r17
  800ad8:	a546b03a 	or	r3,r20,r21
  800adc:	d9000415 	stw	r4,16(sp)
  800ae0:	1802c01e 	bne	r3,zero,8015e4 <___vfprintf_internal_r+0x1054>
  800ae4:	40025f1e 	bne	r8,zero,801464 <___vfprintf_internal_r+0xed4>
  800ae8:	1003751e 	bne	r2,zero,8018c0 <___vfprintf_internal_r+0x1330>
  800aec:	6540004c 	andi	r21,r12,1
  800af0:	a803b026 	beq	r21,zero,8019b4 <___vfprintf_internal_r+0x1424>
  800af4:	00800c04 	movi	r2,48
  800af8:	d88026c5 	stb	r2,155(sp)
  800afc:	dc4026c4 	addi	r17,sp,155
  800b00:	0000ba06 	br	800dec <___vfprintf_internal_r+0x85c>
  800b04:	85e3c83a 	sub	r17,r16,r23
  800b08:	85ffae26 	beq	r16,r23,8009c4 <___vfprintf_internal_r+0x434>
  800b0c:	d8c01c17 	ldw	r3,112(sp)
  800b10:	d8801b17 	ldw	r2,108(sp)
  800b14:	b5c00015 	stw	r23,0(r22)
  800b18:	1c47883a 	add	r3,r3,r17
  800b1c:	10800044 	addi	r2,r2,1
  800b20:	d8801b15 	stw	r2,108(sp)
  800b24:	b4400115 	stw	r17,4(r22)
  800b28:	d8c01c15 	stw	r3,112(sp)
  800b2c:	10800208 	cmpgei	r2,r2,8
  800b30:	1000061e 	bne	r2,zero,800b4c <___vfprintf_internal_r+0x5bc>
  800b34:	b5800204 	addi	r22,r22,8
  800b38:	d8c00517 	ldw	r3,20(sp)
  800b3c:	80800003 	ldbu	r2,0(r16)
  800b40:	1c47883a 	add	r3,r3,r17
  800b44:	d8c00515 	stw	r3,20(sp)
  800b48:	003ed106 	br	800690 <___vfprintf_internal_r+0x100>
  800b4c:	d9801a04 	addi	r6,sp,104
  800b50:	900b883a 	mov	r5,r18
  800b54:	9809883a 	mov	r4,r19
  800b58:	0807b280 	call	807b28 <__sprint_r>
  800b5c:	103f9b1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  800b60:	dd802704 	addi	r22,sp,156
  800b64:	003ff406 	br	800b38 <___vfprintf_internal_r+0x5a8>
  800b68:	21003fcc 	andi	r4,r4,255
  800b6c:	2006671e 	bne	r4,zero,80250c <___vfprintf_internal_r+0x1f7c>
  800b70:	d8c00617 	ldw	r3,24(sp)
  800b74:	6080020c 	andi	r2,r12,8
  800b78:	19000204 	addi	r4,r3,8
  800b7c:	d9000e15 	stw	r4,56(sp)
  800b80:	1003a71e 	bne	r2,zero,801a20 <___vfprintf_internal_r+0x1490>
  800b84:	d8800617 	ldw	r2,24(sp)
  800b88:	10c00017 	ldw	r3,0(r2)
  800b8c:	10800117 	ldw	r2,4(r2)
  800b90:	d8c00915 	stw	r3,36(sp)
  800b94:	d8800a15 	stw	r2,40(sp)
  800b98:	dd400a17 	ldw	r21,40(sp)
  800b9c:	dd000917 	ldw	r20,36(sp)
  800ba0:	00a00034 	movhi	r2,32768
  800ba4:	10bfffc4 	addi	r2,r2,-1
  800ba8:	a8a2703a 	and	r17,r21,r2
  800bac:	01dffc34 	movhi	r7,32752
  800bb0:	01bfffc4 	movi	r6,-1
  800bb4:	39ffffc4 	addi	r7,r7,-1
  800bb8:	a009883a 	mov	r4,r20
  800bbc:	880b883a 	mov	r5,r17
  800bc0:	da000615 	stw	r8,24(sp)
  800bc4:	db000415 	stw	r12,16(sp)
  800bc8:	080d3580 	call	80d358 <__unorddf2>
  800bcc:	db000417 	ldw	r12,16(sp)
  800bd0:	da000617 	ldw	r8,24(sp)
  800bd4:	1004641e 	bne	r2,zero,801d68 <___vfprintf_internal_r+0x17d8>
  800bd8:	01dffc34 	movhi	r7,32752
  800bdc:	01bfffc4 	movi	r6,-1
  800be0:	39ffffc4 	addi	r7,r7,-1
  800be4:	a009883a 	mov	r4,r20
  800be8:	880b883a 	mov	r5,r17
  800bec:	080c2100 	call	80c210 <__ledf2>
  800bf0:	db000417 	ldw	r12,16(sp)
  800bf4:	da000617 	ldw	r8,24(sp)
  800bf8:	00845b0e 	bge	zero,r2,801d68 <___vfprintf_internal_r+0x17d8>
  800bfc:	000d883a 	mov	r6,zero
  800c00:	000f883a 	mov	r7,zero
  800c04:	a009883a 	mov	r4,r20
  800c08:	a80b883a 	mov	r5,r21
  800c0c:	080c2100 	call	80c210 <__ledf2>
  800c10:	db000417 	ldw	r12,16(sp)
  800c14:	10059116 	blt	r2,zero,80225c <___vfprintf_internal_r+0x1ccc>
  800c18:	db401343 	ldbu	r13,77(sp)
  800c1c:	e0801210 	cmplti	r2,fp,72
  800c20:	1005391e 	bne	r2,zero,802108 <___vfprintf_internal_r+0x1b78>
  800c24:	04402074 	movhi	r17,129
  800c28:	8c7fc904 	addi	r17,r17,-220
  800c2c:	00bfdfc4 	movi	r2,-129
  800c30:	6084703a 	and	r2,r12,r2
  800c34:	d8800415 	stw	r2,16(sp)
  800c38:	d8800e17 	ldw	r2,56(sp)
  800c3c:	050000c4 	movi	r20,3
  800c40:	054000c4 	movi	r21,3
  800c44:	d8800615 	stw	r2,24(sp)
  800c48:	0011883a 	mov	r8,zero
  800c4c:	d8000715 	stw	zero,28(sp)
  800c50:	00006a06 	br	800dfc <___vfprintf_internal_r+0x86c>
  800c54:	d9000617 	ldw	r4,24(sp)
  800c58:	6080040c 	andi	r2,r12,16
  800c5c:	20c00104 	addi	r3,r4,4
  800c60:	10036a1e 	bne	r2,zero,801a0c <___vfprintf_internal_r+0x147c>
  800c64:	6080100c 	andi	r2,r12,64
  800c68:	10052126 	beq	r2,zero,8020f0 <___vfprintf_internal_r+0x1b60>
  800c6c:	d8800617 	ldw	r2,24(sp)
  800c70:	002b883a 	mov	r21,zero
  800c74:	d8c00615 	stw	r3,24(sp)
  800c78:	1500000b 	ldhu	r20,0(r2)
  800c7c:	0005883a 	mov	r2,zero
  800c80:	003f8f06 	br	800ac0 <___vfprintf_internal_r+0x530>
  800c84:	d9000617 	ldw	r4,24(sp)
  800c88:	6080040c 	andi	r2,r12,16
  800c8c:	20c00104 	addi	r3,r4,4
  800c90:	1003501e 	bne	r2,zero,8019d4 <___vfprintf_internal_r+0x1444>
  800c94:	6080100c 	andi	r2,r12,64
  800c98:	10055926 	beq	r2,zero,802200 <___vfprintf_internal_r+0x1c70>
  800c9c:	d8800617 	ldw	r2,24(sp)
  800ca0:	002b883a 	mov	r21,zero
  800ca4:	d8c00615 	stw	r3,24(sp)
  800ca8:	1500000b 	ldhu	r20,0(r2)
  800cac:	00800044 	movi	r2,1
  800cb0:	003f8306 	br	800ac0 <___vfprintf_internal_r+0x530>
  800cb4:	03002074 	movhi	r12,129
  800cb8:	89000450 	cmplti	r4,r17,17
  800cbc:	d8801b17 	ldw	r2,108(sp)
  800cc0:	633fdd04 	addi	r12,r12,-140
  800cc4:	20001b1e 	bne	r4,zero,800d34 <___vfprintf_internal_r+0x7a4>
  800cc8:	05400404 	movi	r21,16
  800ccc:	6039883a 	mov	fp,r12
  800cd0:	00000406 	br	800ce4 <___vfprintf_internal_r+0x754>
  800cd4:	8c7ffc04 	addi	r17,r17,-16
  800cd8:	89000448 	cmpgei	r4,r17,17
  800cdc:	b5800204 	addi	r22,r22,8
  800ce0:	20001326 	beq	r4,zero,800d30 <___vfprintf_internal_r+0x7a0>
  800ce4:	10800044 	addi	r2,r2,1
  800ce8:	18c00404 	addi	r3,r3,16
  800cec:	b7000015 	stw	fp,0(r22)
  800cf0:	b5400115 	stw	r21,4(r22)
  800cf4:	d8c01c15 	stw	r3,112(sp)
  800cf8:	d8801b15 	stw	r2,108(sp)
  800cfc:	11000208 	cmpgei	r4,r2,8
  800d00:	203ff426 	beq	r4,zero,800cd4 <___vfprintf_internal_r+0x744>
  800d04:	d9801a04 	addi	r6,sp,104
  800d08:	900b883a 	mov	r5,r18
  800d0c:	9809883a 	mov	r4,r19
  800d10:	0807b280 	call	807b28 <__sprint_r>
  800d14:	103f2d1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  800d18:	8c7ffc04 	addi	r17,r17,-16
  800d1c:	89000448 	cmpgei	r4,r17,17
  800d20:	d8c01c17 	ldw	r3,112(sp)
  800d24:	d8801b17 	ldw	r2,108(sp)
  800d28:	dd802704 	addi	r22,sp,156
  800d2c:	203fed1e 	bne	r4,zero,800ce4 <___vfprintf_internal_r+0x754>
  800d30:	e019883a 	mov	r12,fp
  800d34:	10800044 	addi	r2,r2,1
  800d38:	1c47883a 	add	r3,r3,r17
  800d3c:	d8801b15 	stw	r2,108(sp)
  800d40:	b3000015 	stw	r12,0(r22)
  800d44:	b4400115 	stw	r17,4(r22)
  800d48:	d8c01c15 	stw	r3,112(sp)
  800d4c:	10800210 	cmplti	r2,r2,8
  800d50:	103f121e 	bne	r2,zero,80099c <___vfprintf_internal_r+0x40c>
  800d54:	d9801a04 	addi	r6,sp,104
  800d58:	900b883a 	mov	r5,r18
  800d5c:	9809883a 	mov	r4,r19
  800d60:	0807b280 	call	807b28 <__sprint_r>
  800d64:	103f191e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  800d68:	d8c01c17 	ldw	r3,112(sp)
  800d6c:	003f0b06 	br	80099c <___vfprintf_internal_r+0x40c>
  800d70:	9809883a 	mov	r4,r19
  800d74:	08048ac0 	call	8048ac <__sinit>
  800d78:	003e1d06 	br	8005f0 <___vfprintf_internal_r+0x60>
  800d7c:	21003fcc 	andi	r4,r4,255
  800d80:	2005de1e 	bne	r4,zero,8024fc <___vfprintf_internal_r+0x1f6c>
  800d84:	6080080c 	andi	r2,r12,32
  800d88:	10004926 	beq	r2,zero,800eb0 <___vfprintf_internal_r+0x920>
  800d8c:	d8c00617 	ldw	r3,24(sp)
  800d90:	18800117 	ldw	r2,4(r3)
  800d94:	1d000017 	ldw	r20,0(r3)
  800d98:	18c00204 	addi	r3,r3,8
  800d9c:	d8c00615 	stw	r3,24(sp)
  800da0:	102b883a 	mov	r21,r2
  800da4:	10004e16 	blt	r2,zero,800ee0 <___vfprintf_internal_r+0x950>
  800da8:	40bfffd8 	cmpnei	r2,r8,-1
  800dac:	db401343 	ldbu	r13,77(sp)
  800db0:	10000626 	beq	r2,zero,800dcc <___vfprintf_internal_r+0x83c>
  800db4:	047fdfc4 	movi	r17,-129
  800db8:	6446703a 	and	r3,r12,r17
  800dbc:	a544b03a 	or	r2,r20,r21
  800dc0:	d8c00415 	stw	r3,16(sp)
  800dc4:	1002bd26 	beq	r2,zero,8018bc <___vfprintf_internal_r+0x132c>
  800dc8:	db000417 	ldw	r12,16(sp)
  800dcc:	a803701e 	bne	r21,zero,801b90 <___vfprintf_internal_r+0x1600>
  800dd0:	a08002a8 	cmpgeui	r2,r20,10
  800dd4:	10036e1e 	bne	r2,zero,801b90 <___vfprintf_internal_r+0x1600>
  800dd8:	a5000c04 	addi	r20,r20,48
  800ddc:	dd0026c5 	stb	r20,155(sp)
  800de0:	db000415 	stw	r12,16(sp)
  800de4:	05400044 	movi	r21,1
  800de8:	dc4026c4 	addi	r17,sp,155
  800dec:	4029883a 	mov	r20,r8
  800df0:	4540010e 	bge	r8,r21,800df8 <___vfprintf_internal_r+0x868>
  800df4:	a829883a 	mov	r20,r21
  800df8:	d8000715 	stw	zero,28(sp)
  800dfc:	6b403fcc 	andi	r13,r13,255
  800e00:	6b40201c 	xori	r13,r13,128
  800e04:	6b7fe004 	addi	r13,r13,-128
  800e08:	683ea926 	beq	r13,zero,8008b0 <___vfprintf_internal_r+0x320>
  800e0c:	a5000044 	addi	r20,r20,1
  800e10:	003ea706 	br	8008b0 <___vfprintf_internal_r+0x320>
  800e14:	bac00007 	ldb	r11,0(r23)
  800e18:	63001014 	ori	r12,r12,64
  800e1c:	003e2806 	br	8006c0 <___vfprintf_internal_r+0x130>
  800e20:	d8c00617 	ldw	r3,24(sp)
  800e24:	d8001345 	stb	zero,77(sp)
  800e28:	05000044 	movi	r20,1
  800e2c:	18800017 	ldw	r2,0(r3)
  800e30:	18c00104 	addi	r3,r3,4
  800e34:	d8c00615 	stw	r3,24(sp)
  800e38:	d8801d05 	stb	r2,116(sp)
  800e3c:	05400044 	movi	r21,1
  800e40:	dc401d04 	addi	r17,sp,116
  800e44:	003e9706 	br	8008a4 <___vfprintf_internal_r+0x314>
  800e48:	21003fcc 	andi	r4,r4,255
  800e4c:	2005a71e 	bne	r4,zero,8024ec <___vfprintf_internal_r+0x1f5c>
  800e50:	00802074 	movhi	r2,129
  800e54:	10bfd104 	addi	r2,r2,-188
  800e58:	d8800c15 	stw	r2,48(sp)
  800e5c:	6080080c 	andi	r2,r12,32
  800e60:	10008726 	beq	r2,zero,801080 <___vfprintf_internal_r+0xaf0>
  800e64:	d8800617 	ldw	r2,24(sp)
  800e68:	15000017 	ldw	r20,0(r2)
  800e6c:	15400117 	ldw	r21,4(r2)
  800e70:	10800204 	addi	r2,r2,8
  800e74:	d8800615 	stw	r2,24(sp)
  800e78:	6080004c 	andi	r2,r12,1
  800e7c:	10000226 	beq	r2,zero,800e88 <___vfprintf_internal_r+0x8f8>
  800e80:	a544b03a 	or	r2,r20,r21
  800e84:	1002cd1e 	bne	r2,zero,8019bc <___vfprintf_internal_r+0x142c>
  800e88:	00800084 	movi	r2,2
  800e8c:	003f0c06 	br	800ac0 <___vfprintf_internal_r+0x530>
  800e90:	bac00007 	ldb	r11,0(r23)
  800e94:	63000214 	ori	r12,r12,8
  800e98:	003e0906 	br	8006c0 <___vfprintf_internal_r+0x130>
  800e9c:	21003fcc 	andi	r4,r4,255
  800ea0:	2005981e 	bne	r4,zero,802504 <___vfprintf_internal_r+0x1f74>
  800ea4:	63000414 	ori	r12,r12,16
  800ea8:	6080080c 	andi	r2,r12,32
  800eac:	103fb71e 	bne	r2,zero,800d8c <___vfprintf_internal_r+0x7fc>
  800eb0:	d9000617 	ldw	r4,24(sp)
  800eb4:	6080040c 	andi	r2,r12,16
  800eb8:	20c00104 	addi	r3,r4,4
  800ebc:	1002dd1e 	bne	r2,zero,801a34 <___vfprintf_internal_r+0x14a4>
  800ec0:	6080100c 	andi	r2,r12,64
  800ec4:	10048426 	beq	r2,zero,8020d8 <___vfprintf_internal_r+0x1b48>
  800ec8:	d8800617 	ldw	r2,24(sp)
  800ecc:	d8c00615 	stw	r3,24(sp)
  800ed0:	1500000f 	ldh	r20,0(r2)
  800ed4:	a02bd7fa 	srai	r21,r20,31
  800ed8:	a805883a 	mov	r2,r21
  800edc:	103fb20e 	bge	r2,zero,800da8 <___vfprintf_internal_r+0x818>
  800ee0:	a004c03a 	cmpne	r2,r20,zero
  800ee4:	056bc83a 	sub	r21,zero,r21
  800ee8:	a8abc83a 	sub	r21,r21,r2
  800eec:	00800b44 	movi	r2,45
  800ef0:	d8801345 	stb	r2,77(sp)
  800ef4:	40ffffe0 	cmpeqi	r3,r8,-1
  800ef8:	0529c83a 	sub	r20,zero,r20
  800efc:	03400b44 	movi	r13,45
  800f00:	00800044 	movi	r2,1
  800f04:	183ef226 	beq	r3,zero,800ad0 <___vfprintf_internal_r+0x540>
  800f08:	10c00060 	cmpeqi	r3,r2,1
  800f0c:	183faf1e 	bne	r3,zero,800dcc <___vfprintf_internal_r+0x83c>
  800f10:	108000a0 	cmpeqi	r2,r2,2
  800f14:	1001581e 	bne	r2,zero,801478 <___vfprintf_internal_r+0xee8>
  800f18:	dc402704 	addi	r17,sp,156
  800f1c:	a006d0fa 	srli	r3,r20,3
  800f20:	a808977a 	slli	r4,r21,29
  800f24:	a82ad0fa 	srli	r21,r21,3
  800f28:	a50001cc 	andi	r20,r20,7
  800f2c:	a0800c04 	addi	r2,r20,48
  800f30:	20e8b03a 	or	r20,r4,r3
  800f34:	88bfffc5 	stb	r2,-1(r17)
  800f38:	a546b03a 	or	r3,r20,r21
  800f3c:	880b883a 	mov	r5,r17
  800f40:	8c7fffc4 	addi	r17,r17,-1
  800f44:	183ff51e 	bne	r3,zero,800f1c <___vfprintf_internal_r+0x98c>
  800f48:	60c0004c 	andi	r3,r12,1
  800f4c:	18015726 	beq	r3,zero,8014ac <___vfprintf_internal_r+0xf1c>
  800f50:	10803fcc 	andi	r2,r2,255
  800f54:	1080201c 	xori	r2,r2,128
  800f58:	10bfe004 	addi	r2,r2,-128
  800f5c:	10800c18 	cmpnei	r2,r2,48
  800f60:	10015226 	beq	r2,zero,8014ac <___vfprintf_internal_r+0xf1c>
  800f64:	00800c04 	movi	r2,48
  800f68:	297fff84 	addi	r5,r5,-2
  800f6c:	88bfffc5 	stb	r2,-1(r17)
  800f70:	d8802704 	addi	r2,sp,156
  800f74:	116bc83a 	sub	r21,r2,r5
  800f78:	db000415 	stw	r12,16(sp)
  800f7c:	2823883a 	mov	r17,r5
  800f80:	003f9a06 	br	800dec <___vfprintf_internal_r+0x85c>
  800f84:	bac00007 	ldb	r11,0(r23)
  800f88:	63002014 	ori	r12,r12,128
  800f8c:	003dcc06 	br	8006c0 <___vfprintf_internal_r+0x130>
  800f90:	bf000007 	ldb	fp,0(r23)
  800f94:	b8800044 	addi	r2,r23,1
  800f98:	e0c00aa0 	cmpeqi	r3,fp,42
  800f9c:	1805b11e 	bne	r3,zero,802664 <___vfprintf_internal_r+0x20d4>
  800fa0:	e0fff404 	addi	r3,fp,-48
  800fa4:	198002b0 	cmpltui	r6,r3,10
  800fa8:	102f883a 	mov	r23,r2
  800fac:	0011883a 	mov	r8,zero
  800fb0:	303dc526 	beq	r6,zero,8006c8 <___vfprintf_internal_r+0x138>
  800fb4:	400490ba 	slli	r2,r8,2
  800fb8:	bf000007 	ldb	fp,0(r23)
  800fbc:	bdc00044 	addi	r23,r23,1
  800fc0:	1211883a 	add	r8,r2,r8
  800fc4:	4211883a 	add	r8,r8,r8
  800fc8:	40d1883a 	add	r8,r8,r3
  800fcc:	e0fff404 	addi	r3,fp,-48
  800fd0:	188002b0 	cmpltui	r2,r3,10
  800fd4:	103ff71e 	bne	r2,zero,800fb4 <___vfprintf_internal_r+0xa24>
  800fd8:	003dbb06 	br	8006c8 <___vfprintf_internal_r+0x138>
  800fdc:	bf000003 	ldbu	fp,0(r23)
  800fe0:	e2c03fcc 	andi	r11,fp,255
  800fe4:	5ac0201c 	xori	r11,r11,128
  800fe8:	63000114 	ori	r12,r12,4
  800fec:	5affe004 	addi	r11,r11,-128
  800ff0:	003db306 	br	8006c0 <___vfprintf_internal_r+0x130>
  800ff4:	bac00007 	ldb	r11,0(r23)
  800ff8:	01000044 	movi	r4,1
  800ffc:	01400ac4 	movi	r5,43
  801000:	003daf06 	br	8006c0 <___vfprintf_internal_r+0x130>
  801004:	d8800617 	ldw	r2,24(sp)
  801008:	bf000003 	ldbu	fp,0(r23)
  80100c:	14000017 	ldw	r16,0(r2)
  801010:	10800104 	addi	r2,r2,4
  801014:	80028c16 	blt	r16,zero,801a48 <___vfprintf_internal_r+0x14b8>
  801018:	d8800615 	stw	r2,24(sp)
  80101c:	e2c03fcc 	andi	r11,fp,255
  801020:	5ac0201c 	xori	r11,r11,128
  801024:	5affe004 	addi	r11,r11,-128
  801028:	003da506 	br	8006c0 <___vfprintf_internal_r+0x130>
  80102c:	bac00007 	ldb	r11,0(r23)
  801030:	63000054 	ori	r12,r12,1
  801034:	003da206 	br	8006c0 <___vfprintf_internal_r+0x130>
  801038:	28803fcc 	andi	r2,r5,255
  80103c:	1080201c 	xori	r2,r2,128
  801040:	10bfe004 	addi	r2,r2,-128
  801044:	bf000003 	ldbu	fp,0(r23)
  801048:	103ff41e 	bne	r2,zero,80101c <___vfprintf_internal_r+0xa8c>
  80104c:	e2c03fcc 	andi	r11,fp,255
  801050:	5ac0201c 	xori	r11,r11,128
  801054:	01000044 	movi	r4,1
  801058:	01400804 	movi	r5,32
  80105c:	5affe004 	addi	r11,r11,-128
  801060:	003d9706 	br	8006c0 <___vfprintf_internal_r+0x130>
  801064:	21003fcc 	andi	r4,r4,255
  801068:	20051e1e 	bne	r4,zero,8024e4 <___vfprintf_internal_r+0x1f54>
  80106c:	00802074 	movhi	r2,129
  801070:	10bfcc04 	addi	r2,r2,-208
  801074:	d8800c15 	stw	r2,48(sp)
  801078:	6080080c 	andi	r2,r12,32
  80107c:	103f791e 	bne	r2,zero,800e64 <___vfprintf_internal_r+0x8d4>
  801080:	d9000617 	ldw	r4,24(sp)
  801084:	6080040c 	andi	r2,r12,16
  801088:	20c00104 	addi	r3,r4,4
  80108c:	10025b1e 	bne	r2,zero,8019fc <___vfprintf_internal_r+0x146c>
  801090:	6080100c 	andi	r2,r12,64
  801094:	10046026 	beq	r2,zero,802218 <___vfprintf_internal_r+0x1c88>
  801098:	d8800617 	ldw	r2,24(sp)
  80109c:	002b883a 	mov	r21,zero
  8010a0:	d8c00615 	stw	r3,24(sp)
  8010a4:	1500000b 	ldhu	r20,0(r2)
  8010a8:	003f7306 	br	800e78 <___vfprintf_internal_r+0x8e8>
  8010ac:	d8800617 	ldw	r2,24(sp)
  8010b0:	d8001345 	stb	zero,77(sp)
  8010b4:	14400017 	ldw	r17,0(r2)
  8010b8:	10c00104 	addi	r3,r2,4
  8010bc:	88028e26 	beq	r17,zero,801af8 <___vfprintf_internal_r+0x1568>
  8010c0:	40bfffe0 	cmpeqi	r2,r8,-1
  8010c4:	1003c01e 	bne	r2,zero,801fc8 <___vfprintf_internal_r+0x1a38>
  8010c8:	400d883a 	mov	r6,r8
  8010cc:	000b883a 	mov	r5,zero
  8010d0:	8809883a 	mov	r4,r17
  8010d4:	d8c00715 	stw	r3,28(sp)
  8010d8:	db000615 	stw	r12,24(sp)
  8010dc:	da000415 	stw	r8,16(sp)
  8010e0:	0805d5c0 	call	805d5c <memchr>
  8010e4:	da000417 	ldw	r8,16(sp)
  8010e8:	db000617 	ldw	r12,24(sp)
  8010ec:	d8c00717 	ldw	r3,28(sp)
  8010f0:	1004ec26 	beq	r2,zero,8024a4 <___vfprintf_internal_r+0x1f14>
  8010f4:	146bc83a 	sub	r21,r2,r17
  8010f8:	a829883a 	mov	r20,r21
  8010fc:	d8c00615 	stw	r3,24(sp)
  801100:	003de806 	br	8008a4 <___vfprintf_internal_r+0x314>
  801104:	bac00007 	ldb	r11,0(r23)
  801108:	63000814 	ori	r12,r12,32
  80110c:	003d6c06 	br	8006c0 <___vfprintf_internal_r+0x130>
  801110:	d8c00617 	ldw	r3,24(sp)
  801114:	00800c04 	movi	r2,48
  801118:	d8801385 	stb	r2,78(sp)
  80111c:	00801e04 	movi	r2,120
  801120:	01002074 	movhi	r4,129
  801124:	d88013c5 	stb	r2,79(sp)
  801128:	18800104 	addi	r2,r3,4
  80112c:	d8800615 	stw	r2,24(sp)
  801130:	20bfcc04 	addi	r2,r4,-208
  801134:	d8800c15 	stw	r2,48(sp)
  801138:	1d000017 	ldw	r20,0(r3)
  80113c:	002b883a 	mov	r21,zero
  801140:	63000094 	ori	r12,r12,2
  801144:	00800084 	movi	r2,2
  801148:	07001e04 	movi	fp,120
  80114c:	003e5c06 	br	800ac0 <___vfprintf_internal_r+0x530>
  801150:	21003fcc 	andi	r4,r4,255
  801154:	2004e71e 	bne	r4,zero,8024f4 <___vfprintf_internal_r+0x1f64>
  801158:	d9000617 	ldw	r4,24(sp)
  80115c:	6080080c 	andi	r2,r12,32
  801160:	20c00017 	ldw	r3,0(r4)
  801164:	21000104 	addi	r4,r4,4
  801168:	d9000615 	stw	r4,24(sp)
  80116c:	10021e1e 	bne	r2,zero,8019e8 <___vfprintf_internal_r+0x1458>
  801170:	6080040c 	andi	r2,r12,16
  801174:	1002ae1e 	bne	r2,zero,801c30 <___vfprintf_internal_r+0x16a0>
  801178:	6300100c 	andi	r12,r12,64
  80117c:	6002ac26 	beq	r12,zero,801c30 <___vfprintf_internal_r+0x16a0>
  801180:	d8800517 	ldw	r2,20(sp)
  801184:	1880000d 	sth	r2,0(r3)
  801188:	003d3506 	br	800660 <___vfprintf_internal_r+0xd0>
  80118c:	bac00007 	ldb	r11,0(r23)
  801190:	58801b18 	cmpnei	r2,r11,108
  801194:	10024926 	beq	r2,zero,801abc <___vfprintf_internal_r+0x152c>
  801198:	63000414 	ori	r12,r12,16
  80119c:	003d4806 	br	8006c0 <___vfprintf_internal_r+0x130>
  8011a0:	e2c01990 	cmplti	r11,fp,102
  8011a4:	5800cb1e 	bne	r11,zero,8014d4 <___vfprintf_internal_r+0xf44>
  8011a8:	d9000917 	ldw	r4,36(sp)
  8011ac:	d9400a17 	ldw	r5,40(sp)
  8011b0:	000d883a 	mov	r6,zero
  8011b4:	000f883a 	mov	r7,zero
  8011b8:	d8c00e15 	stw	r3,56(sp)
  8011bc:	080c0a80 	call	80c0a8 <__eqdf2>
  8011c0:	d8c00e17 	ldw	r3,56(sp)
  8011c4:	1001641e 	bne	r2,zero,801758 <___vfprintf_internal_r+0x11c8>
  8011c8:	d8801b17 	ldw	r2,108(sp)
  8011cc:	01002074 	movhi	r4,129
  8011d0:	213fd804 	addi	r4,r4,-160
  8011d4:	10800044 	addi	r2,r2,1
  8011d8:	18c00044 	addi	r3,r3,1
  8011dc:	b1000015 	stw	r4,0(r22)
  8011e0:	01000044 	movi	r4,1
  8011e4:	d8801b15 	stw	r2,108(sp)
  8011e8:	b1000115 	stw	r4,4(r22)
  8011ec:	d8c01c15 	stw	r3,112(sp)
  8011f0:	10800208 	cmpgei	r2,r2,8
  8011f4:	1003621e 	bne	r2,zero,801f80 <___vfprintf_internal_r+0x19f0>
  8011f8:	b5800204 	addi	r22,r22,8
  8011fc:	d8801417 	ldw	r2,80(sp)
  801200:	d9000817 	ldw	r4,32(sp)
  801204:	1101e70e 	bge	r2,r4,8019a4 <___vfprintf_internal_r+0x1414>
  801208:	d8800d17 	ldw	r2,52(sp)
  80120c:	d9000b17 	ldw	r4,44(sp)
  801210:	b0800015 	stw	r2,0(r22)
  801214:	d8801b17 	ldw	r2,108(sp)
  801218:	1907883a 	add	r3,r3,r4
  80121c:	b1000115 	stw	r4,4(r22)
  801220:	10800044 	addi	r2,r2,1
  801224:	d8801b15 	stw	r2,108(sp)
  801228:	d8c01c15 	stw	r3,112(sp)
  80122c:	10800208 	cmpgei	r2,r2,8
  801230:	1002291e 	bne	r2,zero,801ad8 <___vfprintf_internal_r+0x1548>
  801234:	b5800204 	addi	r22,r22,8
  801238:	d8800817 	ldw	r2,32(sp)
  80123c:	157fffc4 	addi	r21,r2,-1
  801240:	057dd10e 	bge	zero,r21,800988 <___vfprintf_internal_r+0x3f8>
  801244:	01c02074 	movhi	r7,129
  801248:	a9000450 	cmplti	r4,r21,17
  80124c:	d8801b17 	ldw	r2,108(sp)
  801250:	39ffd904 	addi	r7,r7,-156
  801254:	2003461e 	bne	r4,zero,801f70 <___vfprintf_internal_r+0x19e0>
  801258:	07000404 	movi	fp,16
  80125c:	3823883a 	mov	r17,r7
  801260:	00000406 	br	801274 <___vfprintf_internal_r+0xce4>
  801264:	b5800204 	addi	r22,r22,8
  801268:	ad7ffc04 	addi	r21,r21,-16
  80126c:	a9000448 	cmpgei	r4,r21,17
  801270:	20033e26 	beq	r4,zero,801f6c <___vfprintf_internal_r+0x19dc>
  801274:	10800044 	addi	r2,r2,1
  801278:	18c00404 	addi	r3,r3,16
  80127c:	b4400015 	stw	r17,0(r22)
  801280:	b7000115 	stw	fp,4(r22)
  801284:	d8c01c15 	stw	r3,112(sp)
  801288:	d8801b15 	stw	r2,108(sp)
  80128c:	11000208 	cmpgei	r4,r2,8
  801290:	203ff426 	beq	r4,zero,801264 <___vfprintf_internal_r+0xcd4>
  801294:	d9801a04 	addi	r6,sp,104
  801298:	900b883a 	mov	r5,r18
  80129c:	9809883a 	mov	r4,r19
  8012a0:	0807b280 	call	807b28 <__sprint_r>
  8012a4:	103dc91e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  8012a8:	d8c01c17 	ldw	r3,112(sp)
  8012ac:	d8801b17 	ldw	r2,108(sp)
  8012b0:	dd802704 	addi	r22,sp,156
  8012b4:	003fec06 	br	801268 <___vfprintf_internal_r+0xcd8>
  8012b8:	8519c83a 	sub	r12,r16,r20
  8012bc:	033da30e 	bge	zero,r12,80094c <___vfprintf_internal_r+0x3bc>
  8012c0:	01c02074 	movhi	r7,129
  8012c4:	61000450 	cmplti	r4,r12,17
  8012c8:	d8801b17 	ldw	r2,108(sp)
  8012cc:	39ffd904 	addi	r7,r7,-156
  8012d0:	2000281e 	bne	r4,zero,801374 <___vfprintf_internal_r+0xde4>
  8012d4:	dc400e15 	stw	r17,56(sp)
  8012d8:	dc000f15 	stw	r16,60(sp)
  8012dc:	b009883a 	mov	r4,r22
  8012e0:	03400404 	movi	r13,16
  8012e4:	a02d883a 	mov	r22,r20
  8012e8:	6021883a 	mov	r16,r12
  8012ec:	4029883a 	mov	r20,r8
  8012f0:	3823883a 	mov	r17,r7
  8012f4:	00000406 	br	801308 <___vfprintf_internal_r+0xd78>
  8012f8:	843ffc04 	addi	r16,r16,-16
  8012fc:	81400448 	cmpgei	r5,r16,17
  801300:	21000204 	addi	r4,r4,8
  801304:	28001426 	beq	r5,zero,801358 <___vfprintf_internal_r+0xdc8>
  801308:	10800044 	addi	r2,r2,1
  80130c:	18c00404 	addi	r3,r3,16
  801310:	24400015 	stw	r17,0(r4)
  801314:	23400115 	stw	r13,4(r4)
  801318:	d8c01c15 	stw	r3,112(sp)
  80131c:	d8801b15 	stw	r2,108(sp)
  801320:	11400208 	cmpgei	r5,r2,8
  801324:	283ff426 	beq	r5,zero,8012f8 <___vfprintf_internal_r+0xd68>
  801328:	d9801a04 	addi	r6,sp,104
  80132c:	900b883a 	mov	r5,r18
  801330:	9809883a 	mov	r4,r19
  801334:	0807b280 	call	807b28 <__sprint_r>
  801338:	103da41e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  80133c:	843ffc04 	addi	r16,r16,-16
  801340:	81400448 	cmpgei	r5,r16,17
  801344:	d8c01c17 	ldw	r3,112(sp)
  801348:	d8801b17 	ldw	r2,108(sp)
  80134c:	d9002704 	addi	r4,sp,156
  801350:	03400404 	movi	r13,16
  801354:	283fec1e 	bne	r5,zero,801308 <___vfprintf_internal_r+0xd78>
  801358:	8019883a 	mov	r12,r16
  80135c:	880f883a 	mov	r7,r17
  801360:	dc000f17 	ldw	r16,60(sp)
  801364:	dc400e17 	ldw	r17,56(sp)
  801368:	a011883a 	mov	r8,r20
  80136c:	b029883a 	mov	r20,r22
  801370:	202d883a 	mov	r22,r4
  801374:	10800044 	addi	r2,r2,1
  801378:	1b07883a 	add	r3,r3,r12
  80137c:	d8801b15 	stw	r2,108(sp)
  801380:	b1c00015 	stw	r7,0(r22)
  801384:	b3000115 	stw	r12,4(r22)
  801388:	d8c01c15 	stw	r3,112(sp)
  80138c:	10800208 	cmpgei	r2,r2,8
  801390:	1003031e 	bne	r2,zero,801fa0 <___vfprintf_internal_r+0x1a10>
  801394:	4551c83a 	sub	r8,r8,r21
  801398:	b5800204 	addi	r22,r22,8
  80139c:	023d6d0e 	bge	zero,r8,800954 <___vfprintf_internal_r+0x3c4>
  8013a0:	01c02074 	movhi	r7,129
  8013a4:	41000450 	cmplti	r4,r8,17
  8013a8:	d8801b17 	ldw	r2,108(sp)
  8013ac:	39ffd904 	addi	r7,r7,-156
  8013b0:	2000221e 	bne	r4,zero,80143c <___vfprintf_internal_r+0xeac>
  8013b4:	dc400e15 	stw	r17,56(sp)
  8013b8:	dc000f15 	stw	r16,60(sp)
  8013bc:	03000404 	movi	r12,16
  8013c0:	4021883a 	mov	r16,r8
  8013c4:	3823883a 	mov	r17,r7
  8013c8:	00000406 	br	8013dc <___vfprintf_internal_r+0xe4c>
  8013cc:	843ffc04 	addi	r16,r16,-16
  8013d0:	81000448 	cmpgei	r4,r16,17
  8013d4:	b5800204 	addi	r22,r22,8
  8013d8:	20001426 	beq	r4,zero,80142c <___vfprintf_internal_r+0xe9c>
  8013dc:	10800044 	addi	r2,r2,1
  8013e0:	18c00404 	addi	r3,r3,16
  8013e4:	b4400015 	stw	r17,0(r22)
  8013e8:	b3000115 	stw	r12,4(r22)
  8013ec:	d8c01c15 	stw	r3,112(sp)
  8013f0:	d8801b15 	stw	r2,108(sp)
  8013f4:	11000208 	cmpgei	r4,r2,8
  8013f8:	203ff426 	beq	r4,zero,8013cc <___vfprintf_internal_r+0xe3c>
  8013fc:	d9801a04 	addi	r6,sp,104
  801400:	900b883a 	mov	r5,r18
  801404:	9809883a 	mov	r4,r19
  801408:	0807b280 	call	807b28 <__sprint_r>
  80140c:	103d6f1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  801410:	843ffc04 	addi	r16,r16,-16
  801414:	81000448 	cmpgei	r4,r16,17
  801418:	d8c01c17 	ldw	r3,112(sp)
  80141c:	d8801b17 	ldw	r2,108(sp)
  801420:	dd802704 	addi	r22,sp,156
  801424:	03000404 	movi	r12,16
  801428:	203fec1e 	bne	r4,zero,8013dc <___vfprintf_internal_r+0xe4c>
  80142c:	8011883a 	mov	r8,r16
  801430:	880f883a 	mov	r7,r17
  801434:	dc000f17 	ldw	r16,60(sp)
  801438:	dc400e17 	ldw	r17,56(sp)
  80143c:	10800044 	addi	r2,r2,1
  801440:	1a07883a 	add	r3,r3,r8
  801444:	d8801b15 	stw	r2,108(sp)
  801448:	b1c00015 	stw	r7,0(r22)
  80144c:	b2000115 	stw	r8,4(r22)
  801450:	d8c01c15 	stw	r3,112(sp)
  801454:	10800208 	cmpgei	r2,r2,8
  801458:	10014a1e 	bne	r2,zero,801984 <___vfprintf_internal_r+0x13f4>
  80145c:	b5800204 	addi	r22,r22,8
  801460:	003d3c06 	br	800954 <___vfprintf_internal_r+0x3c4>
  801464:	10c00060 	cmpeqi	r3,r2,1
  801468:	1803bc1e 	bne	r3,zero,80235c <___vfprintf_internal_r+0x1dcc>
  80146c:	108000a0 	cmpeqi	r2,r2,2
  801470:	db000417 	ldw	r12,16(sp)
  801474:	103ea826 	beq	r2,zero,800f18 <___vfprintf_internal_r+0x988>
  801478:	d9000c17 	ldw	r4,48(sp)
  80147c:	dc402704 	addi	r17,sp,156
  801480:	a08003cc 	andi	r2,r20,15
  801484:	a806973a 	slli	r3,r21,28
  801488:	a028d13a 	srli	r20,r20,4
  80148c:	2085883a 	add	r2,r4,r2
  801490:	10800003 	ldbu	r2,0(r2)
  801494:	a82ad13a 	srli	r21,r21,4
  801498:	1d28b03a 	or	r20,r3,r20
  80149c:	88bfffc5 	stb	r2,-1(r17)
  8014a0:	a544b03a 	or	r2,r20,r21
  8014a4:	8c7fffc4 	addi	r17,r17,-1
  8014a8:	103ff51e 	bne	r2,zero,801480 <___vfprintf_internal_r+0xef0>
  8014ac:	d8802704 	addi	r2,sp,156
  8014b0:	146bc83a 	sub	r21,r2,r17
  8014b4:	db000415 	stw	r12,16(sp)
  8014b8:	003e4c06 	br	800dec <___vfprintf_internal_r+0x85c>
  8014bc:	d9801a04 	addi	r6,sp,104
  8014c0:	900b883a 	mov	r5,r18
  8014c4:	9809883a 	mov	r4,r19
  8014c8:	0807b280 	call	807b28 <__sprint_r>
  8014cc:	103d3926 	beq	r2,zero,8009b4 <___vfprintf_internal_r+0x424>
  8014d0:	003d3e06 	br	8009cc <___vfprintf_internal_r+0x43c>
  8014d4:	d8800817 	ldw	r2,32(sp)
  8014d8:	da001b17 	ldw	r8,108(sp)
  8014dc:	18c00044 	addi	r3,r3,1
  8014e0:	10800088 	cmpgei	r2,r2,2
  8014e4:	45400044 	addi	r21,r8,1
  8014e8:	b7000204 	addi	fp,r22,8
  8014ec:	1000f826 	beq	r2,zero,8018d0 <___vfprintf_internal_r+0x1340>
  8014f0:	00800044 	movi	r2,1
  8014f4:	b0800115 	stw	r2,4(r22)
  8014f8:	b4400015 	stw	r17,0(r22)
  8014fc:	d8c01c15 	stw	r3,112(sp)
  801500:	dd401b15 	stw	r21,108(sp)
  801504:	a8800210 	cmplti	r2,r21,8
  801508:	1001cc26 	beq	r2,zero,801c3c <___vfprintf_internal_r+0x16ac>
  80150c:	d8800b17 	ldw	r2,44(sp)
  801510:	d9000d17 	ldw	r4,52(sp)
  801514:	ad400044 	addi	r21,r21,1
  801518:	1887883a 	add	r3,r3,r2
  80151c:	e0800115 	stw	r2,4(fp)
  801520:	e1000015 	stw	r4,0(fp)
  801524:	d8c01c15 	stw	r3,112(sp)
  801528:	dd401b15 	stw	r21,108(sp)
  80152c:	a8800208 	cmpgei	r2,r21,8
  801530:	1001cb1e 	bne	r2,zero,801c60 <___vfprintf_internal_r+0x16d0>
  801534:	e7000204 	addi	fp,fp,8
  801538:	d9000917 	ldw	r4,36(sp)
  80153c:	d9400a17 	ldw	r5,40(sp)
  801540:	aa000044 	addi	r8,r21,1
  801544:	000d883a 	mov	r6,zero
  801548:	000f883a 	mov	r7,zero
  80154c:	d8c00e15 	stw	r3,56(sp)
  801550:	da000715 	stw	r8,28(sp)
  801554:	080c0a80 	call	80c0a8 <__eqdf2>
  801558:	d8c00817 	ldw	r3,32(sp)
  80155c:	da000717 	ldw	r8,28(sp)
  801560:	e5800204 	addi	r22,fp,8
  801564:	1affffc4 	addi	r11,r3,-1
  801568:	d8c00e17 	ldw	r3,56(sp)
  80156c:	1000e526 	beq	r2,zero,801904 <___vfprintf_internal_r+0x1374>
  801570:	8a400044 	addi	r9,r17,1
  801574:	1ac7883a 	add	r3,r3,r11
  801578:	da001b15 	stw	r8,108(sp)
  80157c:	e2400015 	stw	r9,0(fp)
  801580:	e2c00115 	stw	r11,4(fp)
  801584:	d8c01c15 	stw	r3,112(sp)
  801588:	42000208 	cmpgei	r8,r8,8
  80158c:	40013e1e 	bne	r8,zero,801a88 <___vfprintf_internal_r+0x14f8>
  801590:	e0800404 	addi	r2,fp,16
  801594:	aa000084 	addi	r8,r21,2
  801598:	b039883a 	mov	fp,r22
  80159c:	102d883a 	mov	r22,r2
  8015a0:	d9001017 	ldw	r4,64(sp)
  8015a4:	d8801644 	addi	r2,sp,89
  8015a8:	da001b15 	stw	r8,108(sp)
  8015ac:	20c7883a 	add	r3,r4,r3
  8015b0:	e0800015 	stw	r2,0(fp)
  8015b4:	e1000115 	stw	r4,4(fp)
  8015b8:	d8c01c15 	stw	r3,112(sp)
  8015bc:	42000210 	cmplti	r8,r8,8
  8015c0:	403cf11e 	bne	r8,zero,800988 <___vfprintf_internal_r+0x3f8>
  8015c4:	d9801a04 	addi	r6,sp,104
  8015c8:	900b883a 	mov	r5,r18
  8015cc:	9809883a 	mov	r4,r19
  8015d0:	0807b280 	call	807b28 <__sprint_r>
  8015d4:	103cfd1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  8015d8:	d8c01c17 	ldw	r3,112(sp)
  8015dc:	dd802704 	addi	r22,sp,156
  8015e0:	003ce906 	br	800988 <___vfprintf_internal_r+0x3f8>
  8015e4:	db000417 	ldw	r12,16(sp)
  8015e8:	003e4706 	br	800f08 <___vfprintf_internal_r+0x978>
  8015ec:	03002074 	movhi	r12,129
  8015f0:	39000450 	cmplti	r4,r7,17
  8015f4:	d8801b17 	ldw	r2,108(sp)
  8015f8:	633fdd04 	addi	r12,r12,-140
  8015fc:	2000321e 	bne	r4,zero,8016c8 <___vfprintf_internal_r+0x1138>
  801600:	dc401115 	stw	r17,68(sp)
  801604:	b009883a 	mov	r4,r22
  801608:	9023883a 	mov	r17,r18
  80160c:	a82d883a 	mov	r22,r21
  801610:	ddc01215 	stw	r23,72(sp)
  801614:	03c00404 	movi	r15,16
  801618:	a02f883a 	mov	r23,r20
  80161c:	db800e15 	stw	r14,56(sp)
  801620:	8029883a 	mov	r20,r16
  801624:	db400f15 	stw	r13,60(sp)
  801628:	402b883a 	mov	r21,r8
  80162c:	3821883a 	mov	r16,r7
  801630:	6025883a 	mov	r18,r12
  801634:	00000406 	br	801648 <___vfprintf_internal_r+0x10b8>
  801638:	843ffc04 	addi	r16,r16,-16
  80163c:	81800448 	cmpgei	r6,r16,17
  801640:	21000204 	addi	r4,r4,8
  801644:	30001426 	beq	r6,zero,801698 <___vfprintf_internal_r+0x1108>
  801648:	10800044 	addi	r2,r2,1
  80164c:	18c00404 	addi	r3,r3,16
  801650:	24800015 	stw	r18,0(r4)
  801654:	23c00115 	stw	r15,4(r4)
  801658:	d8c01c15 	stw	r3,112(sp)
  80165c:	d8801b15 	stw	r2,108(sp)
  801660:	11800208 	cmpgei	r6,r2,8
  801664:	303ff426 	beq	r6,zero,801638 <___vfprintf_internal_r+0x10a8>
  801668:	d9801a04 	addi	r6,sp,104
  80166c:	880b883a 	mov	r5,r17
  801670:	9809883a 	mov	r4,r19
  801674:	0807b280 	call	807b28 <__sprint_r>
  801678:	1001b91e 	bne	r2,zero,801d60 <___vfprintf_internal_r+0x17d0>
  80167c:	843ffc04 	addi	r16,r16,-16
  801680:	81800448 	cmpgei	r6,r16,17
  801684:	d8c01c17 	ldw	r3,112(sp)
  801688:	d8801b17 	ldw	r2,108(sp)
  80168c:	d9002704 	addi	r4,sp,156
  801690:	03c00404 	movi	r15,16
  801694:	303fec1e 	bne	r6,zero,801648 <___vfprintf_internal_r+0x10b8>
  801698:	800f883a 	mov	r7,r16
  80169c:	9019883a 	mov	r12,r18
  8016a0:	a021883a 	mov	r16,r20
  8016a4:	8825883a 	mov	r18,r17
  8016a8:	b829883a 	mov	r20,r23
  8016ac:	db800e17 	ldw	r14,56(sp)
  8016b0:	db400f17 	ldw	r13,60(sp)
  8016b4:	ddc01217 	ldw	r23,72(sp)
  8016b8:	dc401117 	ldw	r17,68(sp)
  8016bc:	a811883a 	mov	r8,r21
  8016c0:	b02b883a 	mov	r21,r22
  8016c4:	202d883a 	mov	r22,r4
  8016c8:	10800044 	addi	r2,r2,1
  8016cc:	19c7883a 	add	r3,r3,r7
  8016d0:	d8801b15 	stw	r2,108(sp)
  8016d4:	b3000015 	stw	r12,0(r22)
  8016d8:	b1c00115 	stw	r7,4(r22)
  8016dc:	d8c01c15 	stw	r3,112(sp)
  8016e0:	10800208 	cmpgei	r2,r2,8
  8016e4:	1001671e 	bne	r2,zero,801c84 <___vfprintf_internal_r+0x16f4>
  8016e8:	b5800204 	addi	r22,r22,8
  8016ec:	003c7a06 	br	8008d8 <___vfprintf_internal_r+0x348>
  8016f0:	d9801a04 	addi	r6,sp,104
  8016f4:	900b883a 	mov	r5,r18
  8016f8:	9809883a 	mov	r4,r19
  8016fc:	da001115 	stw	r8,68(sp)
  801700:	db400f15 	stw	r13,60(sp)
  801704:	db800e15 	stw	r14,56(sp)
  801708:	0807b280 	call	807b28 <__sprint_r>
  80170c:	103caf1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  801710:	d8c01c17 	ldw	r3,112(sp)
  801714:	da001117 	ldw	r8,68(sp)
  801718:	db400f17 	ldw	r13,60(sp)
  80171c:	db800e17 	ldw	r14,56(sp)
  801720:	dd802704 	addi	r22,sp,156
  801724:	003c7a06 	br	800910 <___vfprintf_internal_r+0x380>
  801728:	d9801a04 	addi	r6,sp,104
  80172c:	900b883a 	mov	r5,r18
  801730:	9809883a 	mov	r4,r19
  801734:	da000f15 	stw	r8,60(sp)
  801738:	db400e15 	stw	r13,56(sp)
  80173c:	0807b280 	call	807b28 <__sprint_r>
  801740:	103ca21e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  801744:	d8c01c17 	ldw	r3,112(sp)
  801748:	da000f17 	ldw	r8,60(sp)
  80174c:	db400e17 	ldw	r13,56(sp)
  801750:	dd802704 	addi	r22,sp,156
  801754:	003c7b06 	br	800944 <___vfprintf_internal_r+0x3b4>
  801758:	d9401417 	ldw	r5,80(sp)
  80175c:	0141570e 	bge	zero,r5,801cbc <___vfprintf_internal_r+0x172c>
  801760:	d8800717 	ldw	r2,28(sp)
  801764:	d9000817 	ldw	r4,32(sp)
  801768:	102b883a 	mov	r21,r2
  80176c:	2080b916 	blt	r4,r2,801a54 <___vfprintf_internal_r+0x14c4>
  801770:	05400a0e 	bge	zero,r21,80179c <___vfprintf_internal_r+0x120c>
  801774:	d8801b17 	ldw	r2,108(sp)
  801778:	1d47883a 	add	r3,r3,r21
  80177c:	b4400015 	stw	r17,0(r22)
  801780:	10800044 	addi	r2,r2,1
  801784:	d8801b15 	stw	r2,108(sp)
  801788:	b5400115 	stw	r21,4(r22)
  80178c:	d8c01c15 	stw	r3,112(sp)
  801790:	10800208 	cmpgei	r2,r2,8
  801794:	10032d1e 	bne	r2,zero,80244c <___vfprintf_internal_r+0x1ebc>
  801798:	b5800204 	addi	r22,r22,8
  80179c:	a800c516 	blt	r21,zero,801ab4 <___vfprintf_internal_r+0x1524>
  8017a0:	d8800717 	ldw	r2,28(sp)
  8017a4:	156bc83a 	sub	r21,r2,r21
  8017a8:	0540db16 	blt	zero,r21,801b18 <___vfprintf_internal_r+0x1588>
  8017ac:	dd401417 	ldw	r21,80(sp)
  8017b0:	d8800817 	ldw	r2,32(sp)
  8017b4:	a880aa0e 	bge	r21,r2,801a60 <___vfprintf_internal_r+0x14d0>
  8017b8:	d8800d17 	ldw	r2,52(sp)
  8017bc:	d9000b17 	ldw	r4,44(sp)
  8017c0:	b0800015 	stw	r2,0(r22)
  8017c4:	d8801b17 	ldw	r2,108(sp)
  8017c8:	1907883a 	add	r3,r3,r4
  8017cc:	b1000115 	stw	r4,4(r22)
  8017d0:	10800044 	addi	r2,r2,1
  8017d4:	d8801b15 	stw	r2,108(sp)
  8017d8:	d8c01c15 	stw	r3,112(sp)
  8017dc:	10800208 	cmpgei	r2,r2,8
  8017e0:	1003111e 	bne	r2,zero,802428 <___vfprintf_internal_r+0x1e98>
  8017e4:	b5800204 	addi	r22,r22,8
  8017e8:	d9000817 	ldw	r4,32(sp)
  8017ec:	d9400717 	ldw	r5,28(sp)
  8017f0:	2545c83a 	sub	r2,r4,r21
  8017f4:	2149c83a 	sub	r4,r4,r5
  8017f8:	102b883a 	mov	r21,r2
  8017fc:	2080010e 	bge	r4,r2,801804 <___vfprintf_internal_r+0x1274>
  801800:	202b883a 	mov	r21,r4
  801804:	05400c0e 	bge	zero,r21,801838 <___vfprintf_internal_r+0x12a8>
  801808:	d9000717 	ldw	r4,28(sp)
  80180c:	1d47883a 	add	r3,r3,r21
  801810:	b5400115 	stw	r21,4(r22)
  801814:	8913883a 	add	r9,r17,r4
  801818:	d9001b17 	ldw	r4,108(sp)
  80181c:	b2400015 	stw	r9,0(r22)
  801820:	d8c01c15 	stw	r3,112(sp)
  801824:	21000044 	addi	r4,r4,1
  801828:	d9001b15 	stw	r4,108(sp)
  80182c:	21000208 	cmpgei	r4,r4,8
  801830:	2003111e 	bne	r4,zero,802478 <___vfprintf_internal_r+0x1ee8>
  801834:	b5800204 	addi	r22,r22,8
  801838:	a800010e 	bge	r21,zero,801840 <___vfprintf_internal_r+0x12b0>
  80183c:	002b883a 	mov	r21,zero
  801840:	156bc83a 	sub	r21,r2,r21
  801844:	057c500e 	bge	zero,r21,800988 <___vfprintf_internal_r+0x3f8>
  801848:	01c02074 	movhi	r7,129
  80184c:	a9000450 	cmplti	r4,r21,17
  801850:	d8801b17 	ldw	r2,108(sp)
  801854:	39ffd904 	addi	r7,r7,-156
  801858:	2001c51e 	bne	r4,zero,801f70 <___vfprintf_internal_r+0x19e0>
  80185c:	07000404 	movi	fp,16
  801860:	3823883a 	mov	r17,r7
  801864:	00000406 	br	801878 <___vfprintf_internal_r+0x12e8>
  801868:	b5800204 	addi	r22,r22,8
  80186c:	ad7ffc04 	addi	r21,r21,-16
  801870:	a9000448 	cmpgei	r4,r21,17
  801874:	2001bd26 	beq	r4,zero,801f6c <___vfprintf_internal_r+0x19dc>
  801878:	10800044 	addi	r2,r2,1
  80187c:	18c00404 	addi	r3,r3,16
  801880:	b4400015 	stw	r17,0(r22)
  801884:	b7000115 	stw	fp,4(r22)
  801888:	d8c01c15 	stw	r3,112(sp)
  80188c:	d8801b15 	stw	r2,108(sp)
  801890:	11000208 	cmpgei	r4,r2,8
  801894:	203ff426 	beq	r4,zero,801868 <___vfprintf_internal_r+0x12d8>
  801898:	d9801a04 	addi	r6,sp,104
  80189c:	900b883a 	mov	r5,r18
  8018a0:	9809883a 	mov	r4,r19
  8018a4:	0807b280 	call	807b28 <__sprint_r>
  8018a8:	103c481e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  8018ac:	d8c01c17 	ldw	r3,112(sp)
  8018b0:	d8801b17 	ldw	r2,108(sp)
  8018b4:	dd802704 	addi	r22,sp,156
  8018b8:	003fec06 	br	80186c <___vfprintf_internal_r+0x12dc>
  8018bc:	4002a71e 	bne	r8,zero,80235c <___vfprintf_internal_r+0x1dcc>
  8018c0:	0011883a 	mov	r8,zero
  8018c4:	002b883a 	mov	r21,zero
  8018c8:	dc402704 	addi	r17,sp,156
  8018cc:	003d4706 	br	800dec <___vfprintf_internal_r+0x85c>
  8018d0:	d8800417 	ldw	r2,16(sp)
  8018d4:	1080004c 	andi	r2,r2,1
  8018d8:	103f051e 	bne	r2,zero,8014f0 <___vfprintf_internal_r+0xf60>
  8018dc:	00800044 	movi	r2,1
  8018e0:	dd401b15 	stw	r21,108(sp)
  8018e4:	b4400015 	stw	r17,0(r22)
  8018e8:	b0800115 	stw	r2,4(r22)
  8018ec:	d8c01c15 	stw	r3,112(sp)
  8018f0:	ad400208 	cmpgei	r21,r21,8
  8018f4:	a800641e 	bne	r21,zero,801a88 <___vfprintf_internal_r+0x14f8>
  8018f8:	42000084 	addi	r8,r8,2
  8018fc:	b5800404 	addi	r22,r22,16
  801900:	003f2706 	br	8015a0 <___vfprintf_internal_r+0x1010>
  801904:	02ff260e 	bge	zero,r11,8015a0 <___vfprintf_internal_r+0x1010>
  801908:	58800450 	cmplti	r2,r11,17
  80190c:	01c02074 	movhi	r7,129
  801910:	10034c1e 	bne	r2,zero,802644 <___vfprintf_internal_r+0x20b4>
  801914:	39ffd904 	addi	r7,r7,-156
  801918:	dc000715 	stw	r16,28(sp)
  80191c:	05800404 	movi	r22,16
  801920:	5823883a 	mov	r17,r11
  801924:	402b883a 	mov	r21,r8
  801928:	3821883a 	mov	r16,r7
  80192c:	00000506 	br	801944 <___vfprintf_internal_r+0x13b4>
  801930:	e7000204 	addi	fp,fp,8
  801934:	8c7ffc04 	addi	r17,r17,-16
  801938:	88800448 	cmpgei	r2,r17,17
  80193c:	1001d626 	beq	r2,zero,802098 <___vfprintf_internal_r+0x1b08>
  801940:	ad400044 	addi	r21,r21,1
  801944:	18c00404 	addi	r3,r3,16
  801948:	e4000015 	stw	r16,0(fp)
  80194c:	e5800115 	stw	r22,4(fp)
  801950:	d8c01c15 	stw	r3,112(sp)
  801954:	dd401b15 	stw	r21,108(sp)
  801958:	a8800208 	cmpgei	r2,r21,8
  80195c:	103ff426 	beq	r2,zero,801930 <___vfprintf_internal_r+0x13a0>
  801960:	d9801a04 	addi	r6,sp,104
  801964:	900b883a 	mov	r5,r18
  801968:	9809883a 	mov	r4,r19
  80196c:	0807b280 	call	807b28 <__sprint_r>
  801970:	103c161e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  801974:	dd401b17 	ldw	r21,108(sp)
  801978:	d8c01c17 	ldw	r3,112(sp)
  80197c:	df002704 	addi	fp,sp,156
  801980:	003fec06 	br	801934 <___vfprintf_internal_r+0x13a4>
  801984:	d9801a04 	addi	r6,sp,104
  801988:	900b883a 	mov	r5,r18
  80198c:	9809883a 	mov	r4,r19
  801990:	0807b280 	call	807b28 <__sprint_r>
  801994:	103c0d1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  801998:	d8c01c17 	ldw	r3,112(sp)
  80199c:	dd802704 	addi	r22,sp,156
  8019a0:	003bec06 	br	800954 <___vfprintf_internal_r+0x3c4>
  8019a4:	d8800417 	ldw	r2,16(sp)
  8019a8:	1080004c 	andi	r2,r2,1
  8019ac:	103bf626 	beq	r2,zero,800988 <___vfprintf_internal_r+0x3f8>
  8019b0:	003e1506 	br	801208 <___vfprintf_internal_r+0xc78>
  8019b4:	dc402704 	addi	r17,sp,156
  8019b8:	003d0c06 	br	800dec <___vfprintf_internal_r+0x85c>
  8019bc:	00800c04 	movi	r2,48
  8019c0:	d8801385 	stb	r2,78(sp)
  8019c4:	df0013c5 	stb	fp,79(sp)
  8019c8:	63000094 	ori	r12,r12,2
  8019cc:	00800084 	movi	r2,2
  8019d0:	003c3b06 	br	800ac0 <___vfprintf_internal_r+0x530>
  8019d4:	25000017 	ldw	r20,0(r4)
  8019d8:	002b883a 	mov	r21,zero
  8019dc:	d8c00615 	stw	r3,24(sp)
  8019e0:	00800044 	movi	r2,1
  8019e4:	003c3606 	br	800ac0 <___vfprintf_internal_r+0x530>
  8019e8:	d9000517 	ldw	r4,20(sp)
  8019ec:	2005d7fa 	srai	r2,r4,31
  8019f0:	19000015 	stw	r4,0(r3)
  8019f4:	18800115 	stw	r2,4(r3)
  8019f8:	003b1906 	br	800660 <___vfprintf_internal_r+0xd0>
  8019fc:	25000017 	ldw	r20,0(r4)
  801a00:	002b883a 	mov	r21,zero
  801a04:	d8c00615 	stw	r3,24(sp)
  801a08:	003d1b06 	br	800e78 <___vfprintf_internal_r+0x8e8>
  801a0c:	25000017 	ldw	r20,0(r4)
  801a10:	002b883a 	mov	r21,zero
  801a14:	d8c00615 	stw	r3,24(sp)
  801a18:	0005883a 	mov	r2,zero
  801a1c:	003c2806 	br	800ac0 <___vfprintf_internal_r+0x530>
  801a20:	18800017 	ldw	r2,0(r3)
  801a24:	d8800915 	stw	r2,36(sp)
  801a28:	18800117 	ldw	r2,4(r3)
  801a2c:	d8800a15 	stw	r2,40(sp)
  801a30:	003c5906 	br	800b98 <___vfprintf_internal_r+0x608>
  801a34:	25000017 	ldw	r20,0(r4)
  801a38:	d8c00615 	stw	r3,24(sp)
  801a3c:	a02bd7fa 	srai	r21,r20,31
  801a40:	a805883a 	mov	r2,r21
  801a44:	003cd706 	br	800da4 <___vfprintf_internal_r+0x814>
  801a48:	0421c83a 	sub	r16,zero,r16
  801a4c:	d8800615 	stw	r2,24(sp)
  801a50:	003d6306 	br	800fe0 <___vfprintf_internal_r+0xa50>
  801a54:	202b883a 	mov	r21,r4
  801a58:	057f4616 	blt	zero,r21,801774 <___vfprintf_internal_r+0x11e4>
  801a5c:	003f4f06 	br	80179c <___vfprintf_internal_r+0x120c>
  801a60:	d8800417 	ldw	r2,16(sp)
  801a64:	1080004c 	andi	r2,r2,1
  801a68:	103f531e 	bne	r2,zero,8017b8 <___vfprintf_internal_r+0x1228>
  801a6c:	d9000817 	ldw	r4,32(sp)
  801a70:	d9400717 	ldw	r5,28(sp)
  801a74:	2545c83a 	sub	r2,r4,r21
  801a78:	216bc83a 	sub	r21,r4,r5
  801a7c:	157f6e0e 	bge	r2,r21,801838 <___vfprintf_internal_r+0x12a8>
  801a80:	102b883a 	mov	r21,r2
  801a84:	003f6c06 	br	801838 <___vfprintf_internal_r+0x12a8>
  801a88:	d9801a04 	addi	r6,sp,104
  801a8c:	900b883a 	mov	r5,r18
  801a90:	9809883a 	mov	r4,r19
  801a94:	0807b280 	call	807b28 <__sprint_r>
  801a98:	103bcc1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  801a9c:	da001b17 	ldw	r8,108(sp)
  801aa0:	d8c01c17 	ldw	r3,112(sp)
  801aa4:	dd802904 	addi	r22,sp,164
  801aa8:	42000044 	addi	r8,r8,1
  801aac:	df002704 	addi	fp,sp,156
  801ab0:	003ebb06 	br	8015a0 <___vfprintf_internal_r+0x1010>
  801ab4:	002b883a 	mov	r21,zero
  801ab8:	003f3906 	br	8017a0 <___vfprintf_internal_r+0x1210>
  801abc:	bf000043 	ldbu	fp,1(r23)
  801ac0:	63000814 	ori	r12,r12,32
  801ac4:	bdc00044 	addi	r23,r23,1
  801ac8:	e2c03fcc 	andi	r11,fp,255
  801acc:	5ac0201c 	xori	r11,r11,128
  801ad0:	5affe004 	addi	r11,r11,-128
  801ad4:	003afa06 	br	8006c0 <___vfprintf_internal_r+0x130>
  801ad8:	d9801a04 	addi	r6,sp,104
  801adc:	900b883a 	mov	r5,r18
  801ae0:	9809883a 	mov	r4,r19
  801ae4:	0807b280 	call	807b28 <__sprint_r>
  801ae8:	103bb81e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  801aec:	d8c01c17 	ldw	r3,112(sp)
  801af0:	dd802704 	addi	r22,sp,156
  801af4:	003dd006 	br	801238 <___vfprintf_internal_r+0xca8>
  801af8:	408001f0 	cmpltui	r2,r8,7
  801afc:	402b883a 	mov	r21,r8
  801b00:	1001e726 	beq	r2,zero,8022a0 <___vfprintf_internal_r+0x1d10>
  801b04:	04402074 	movhi	r17,129
  801b08:	a829883a 	mov	r20,r21
  801b0c:	d8c00615 	stw	r3,24(sp)
  801b10:	8c7fd604 	addi	r17,r17,-168
  801b14:	003b6306 	br	8008a4 <___vfprintf_internal_r+0x314>
  801b18:	01c02074 	movhi	r7,129
  801b1c:	a9000450 	cmplti	r4,r21,17
  801b20:	d8801b17 	ldw	r2,108(sp)
  801b24:	39ffd904 	addi	r7,r7,-156
  801b28:	2001c21e 	bne	r4,zero,802234 <___vfprintf_internal_r+0x1ca4>
  801b2c:	dc000e15 	stw	r16,56(sp)
  801b30:	07000404 	movi	fp,16
  801b34:	3821883a 	mov	r16,r7
  801b38:	00000406 	br	801b4c <___vfprintf_internal_r+0x15bc>
  801b3c:	b5800204 	addi	r22,r22,8
  801b40:	ad7ffc04 	addi	r21,r21,-16
  801b44:	a9000448 	cmpgei	r4,r21,17
  801b48:	2001b826 	beq	r4,zero,80222c <___vfprintf_internal_r+0x1c9c>
  801b4c:	10800044 	addi	r2,r2,1
  801b50:	18c00404 	addi	r3,r3,16
  801b54:	b4000015 	stw	r16,0(r22)
  801b58:	b7000115 	stw	fp,4(r22)
  801b5c:	d8c01c15 	stw	r3,112(sp)
  801b60:	d8801b15 	stw	r2,108(sp)
  801b64:	11000208 	cmpgei	r4,r2,8
  801b68:	203ff426 	beq	r4,zero,801b3c <___vfprintf_internal_r+0x15ac>
  801b6c:	d9801a04 	addi	r6,sp,104
  801b70:	900b883a 	mov	r5,r18
  801b74:	9809883a 	mov	r4,r19
  801b78:	0807b280 	call	807b28 <__sprint_r>
  801b7c:	103b931e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  801b80:	d8c01c17 	ldw	r3,112(sp)
  801b84:	d8801b17 	ldw	r2,108(sp)
  801b88:	dd802704 	addi	r22,sp,156
  801b8c:	003fec06 	br	801b40 <___vfprintf_internal_r+0x15b0>
  801b90:	dc402704 	addi	r17,sp,156
  801b94:	a805883a 	mov	r2,r21
  801b98:	dc000715 	stw	r16,28(sp)
  801b9c:	902b883a 	mov	r21,r18
  801ba0:	8821883a 	mov	r16,r17
  801ba4:	db000415 	stw	r12,16(sp)
  801ba8:	a023883a 	mov	r17,r20
  801bac:	da000e15 	stw	r8,56(sp)
  801bb0:	9829883a 	mov	r20,r19
  801bb4:	1025883a 	mov	r18,r2
  801bb8:	6827883a 	mov	r19,r13
  801bbc:	8809883a 	mov	r4,r17
  801bc0:	900b883a 	mov	r5,r18
  801bc4:	01800284 	movi	r6,10
  801bc8:	000f883a 	mov	r7,zero
  801bcc:	080a6e80 	call	80a6e8 <__umoddi3>
  801bd0:	10800c04 	addi	r2,r2,48
  801bd4:	8809883a 	mov	r4,r17
  801bd8:	900b883a 	mov	r5,r18
  801bdc:	01800284 	movi	r6,10
  801be0:	000f883a 	mov	r7,zero
  801be4:	80bfffc5 	stb	r2,-1(r16)
  801be8:	080a0c80 	call	80a0c8 <__udivdi3>
  801bec:	900d883a 	mov	r6,r18
  801bf0:	880f883a 	mov	r7,r17
  801bf4:	843fffc4 	addi	r16,r16,-1
  801bf8:	1023883a 	mov	r17,r2
  801bfc:	1825883a 	mov	r18,r3
  801c00:	303fee1e 	bne	r6,zero,801bbc <___vfprintf_internal_r+0x162c>
  801c04:	39c002a8 	cmpgeui	r7,r7,10
  801c08:	383fec1e 	bne	r7,zero,801bbc <___vfprintf_internal_r+0x162c>
  801c0c:	8023883a 	mov	r17,r16
  801c10:	d8802704 	addi	r2,sp,156
  801c14:	981b883a 	mov	r13,r19
  801c18:	a825883a 	mov	r18,r21
  801c1c:	dc000717 	ldw	r16,28(sp)
  801c20:	da000e17 	ldw	r8,56(sp)
  801c24:	a027883a 	mov	r19,r20
  801c28:	146bc83a 	sub	r21,r2,r17
  801c2c:	003c6f06 	br	800dec <___vfprintf_internal_r+0x85c>
  801c30:	d8800517 	ldw	r2,20(sp)
  801c34:	18800015 	stw	r2,0(r3)
  801c38:	003a8906 	br	800660 <___vfprintf_internal_r+0xd0>
  801c3c:	d9801a04 	addi	r6,sp,104
  801c40:	900b883a 	mov	r5,r18
  801c44:	9809883a 	mov	r4,r19
  801c48:	0807b280 	call	807b28 <__sprint_r>
  801c4c:	103b5f1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  801c50:	d8c01c17 	ldw	r3,112(sp)
  801c54:	dd401b17 	ldw	r21,108(sp)
  801c58:	df002704 	addi	fp,sp,156
  801c5c:	003e2b06 	br	80150c <___vfprintf_internal_r+0xf7c>
  801c60:	d9801a04 	addi	r6,sp,104
  801c64:	900b883a 	mov	r5,r18
  801c68:	9809883a 	mov	r4,r19
  801c6c:	0807b280 	call	807b28 <__sprint_r>
  801c70:	103b561e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  801c74:	d8c01c17 	ldw	r3,112(sp)
  801c78:	dd401b17 	ldw	r21,108(sp)
  801c7c:	df002704 	addi	fp,sp,156
  801c80:	003e2d06 	br	801538 <___vfprintf_internal_r+0xfa8>
  801c84:	d9801a04 	addi	r6,sp,104
  801c88:	900b883a 	mov	r5,r18
  801c8c:	9809883a 	mov	r4,r19
  801c90:	da001115 	stw	r8,68(sp)
  801c94:	db400f15 	stw	r13,60(sp)
  801c98:	db800e15 	stw	r14,56(sp)
  801c9c:	0807b280 	call	807b28 <__sprint_r>
  801ca0:	103b4a1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  801ca4:	d8c01c17 	ldw	r3,112(sp)
  801ca8:	da001117 	ldw	r8,68(sp)
  801cac:	db400f17 	ldw	r13,60(sp)
  801cb0:	db800e17 	ldw	r14,56(sp)
  801cb4:	dd802704 	addi	r22,sp,156
  801cb8:	003b0706 	br	8008d8 <___vfprintf_internal_r+0x348>
  801cbc:	d8801b17 	ldw	r2,108(sp)
  801cc0:	01002074 	movhi	r4,129
  801cc4:	213fd804 	addi	r4,r4,-160
  801cc8:	10800044 	addi	r2,r2,1
  801ccc:	18c00044 	addi	r3,r3,1
  801cd0:	b1000015 	stw	r4,0(r22)
  801cd4:	01000044 	movi	r4,1
  801cd8:	d8801b15 	stw	r2,108(sp)
  801cdc:	b1000115 	stw	r4,4(r22)
  801ce0:	d8c01c15 	stw	r3,112(sp)
  801ce4:	10800208 	cmpgei	r2,r2,8
  801ce8:	1001641e 	bne	r2,zero,80227c <___vfprintf_internal_r+0x1cec>
  801cec:	b5800204 	addi	r22,r22,8
  801cf0:	2800bd1e 	bne	r5,zero,801fe8 <___vfprintf_internal_r+0x1a58>
  801cf4:	d8800417 	ldw	r2,16(sp)
  801cf8:	d9000817 	ldw	r4,32(sp)
  801cfc:	1080004c 	andi	r2,r2,1
  801d00:	1104b03a 	or	r2,r2,r4
  801d04:	103b2026 	beq	r2,zero,800988 <___vfprintf_internal_r+0x3f8>
  801d08:	d8800d17 	ldw	r2,52(sp)
  801d0c:	d9000b17 	ldw	r4,44(sp)
  801d10:	b0800015 	stw	r2,0(r22)
  801d14:	d8801b17 	ldw	r2,108(sp)
  801d18:	20c7883a 	add	r3,r4,r3
  801d1c:	b1000115 	stw	r4,4(r22)
  801d20:	10800044 	addi	r2,r2,1
  801d24:	d8c01c15 	stw	r3,112(sp)
  801d28:	d8801b15 	stw	r2,108(sp)
  801d2c:	11000208 	cmpgei	r4,r2,8
  801d30:	2001771e 	bne	r4,zero,802310 <___vfprintf_internal_r+0x1d80>
  801d34:	b5800204 	addi	r22,r22,8
  801d38:	d9000817 	ldw	r4,32(sp)
  801d3c:	10800044 	addi	r2,r2,1
  801d40:	d8801b15 	stw	r2,108(sp)
  801d44:	20c7883a 	add	r3,r4,r3
  801d48:	b4400015 	stw	r17,0(r22)
  801d4c:	b1000115 	stw	r4,4(r22)
  801d50:	d8c01c15 	stw	r3,112(sp)
  801d54:	10800208 	cmpgei	r2,r2,8
  801d58:	103b0a26 	beq	r2,zero,800984 <___vfprintf_internal_r+0x3f4>
  801d5c:	003e1906 	br	8015c4 <___vfprintf_internal_r+0x1034>
  801d60:	8825883a 	mov	r18,r17
  801d64:	003b1906 	br	8009cc <___vfprintf_internal_r+0x43c>
  801d68:	d9000917 	ldw	r4,36(sp)
  801d6c:	d9400a17 	ldw	r5,40(sp)
  801d70:	da000615 	stw	r8,24(sp)
  801d74:	200d883a 	mov	r6,r4
  801d78:	280f883a 	mov	r7,r5
  801d7c:	db000415 	stw	r12,16(sp)
  801d80:	080d3580 	call	80d358 <__unorddf2>
  801d84:	db000417 	ldw	r12,16(sp)
  801d88:	da000617 	ldw	r8,24(sp)
  801d8c:	1002061e 	bne	r2,zero,8025a8 <___vfprintf_internal_r+0x2018>
  801d90:	057ff7c4 	movi	r21,-33
  801d94:	40bfffe0 	cmpeqi	r2,r8,-1
  801d98:	e56a703a 	and	r21,fp,r21
  801d9c:	1001b41e 	bne	r2,zero,802470 <___vfprintf_internal_r+0x1ee0>
  801da0:	a88011d8 	cmpnei	r2,r21,71
  801da4:	10015726 	beq	r2,zero,802304 <___vfprintf_internal_r+0x1d74>
  801da8:	60804014 	ori	r2,r12,256
  801dac:	d8800415 	stw	r2,16(sp)
  801db0:	d8800a17 	ldw	r2,40(sp)
  801db4:	10012d16 	blt	r2,zero,80226c <___vfprintf_internal_r+0x1cdc>
  801db8:	dd000a17 	ldw	r20,40(sp)
  801dbc:	d8000605 	stb	zero,24(sp)
  801dc0:	e08019a0 	cmpeqi	r2,fp,102
  801dc4:	d8800f15 	stw	r2,60(sp)
  801dc8:	1000d21e 	bne	r2,zero,802114 <___vfprintf_internal_r+0x1b84>
  801dcc:	e08011a0 	cmpeqi	r2,fp,70
  801dd0:	1000d01e 	bne	r2,zero,802114 <___vfprintf_internal_r+0x1b84>
  801dd4:	a8801158 	cmpnei	r2,r21,69
  801dd8:	10016226 	beq	r2,zero,802364 <___vfprintf_internal_r+0x1dd4>
  801ddc:	d8801804 	addi	r2,sp,96
  801de0:	d8800315 	stw	r2,12(sp)
  801de4:	d9400917 	ldw	r5,36(sp)
  801de8:	d8801504 	addi	r2,sp,84
  801dec:	d8800215 	stw	r2,8(sp)
  801df0:	d8801404 	addi	r2,sp,80
  801df4:	da000015 	stw	r8,0(sp)
  801df8:	9809883a 	mov	r4,r19
  801dfc:	d8800115 	stw	r2,4(sp)
  801e00:	01c00084 	movi	r7,2
  801e04:	a00d883a 	mov	r6,r20
  801e08:	db000815 	stw	r12,32(sp)
  801e0c:	da000715 	stw	r8,28(sp)
  801e10:	0802af40 	call	802af4 <_dtoa_r>
  801e14:	da000717 	ldw	r8,28(sp)
  801e18:	e10019d8 	cmpnei	r4,fp,103
  801e1c:	db000817 	ldw	r12,32(sp)
  801e20:	1023883a 	mov	r17,r2
  801e24:	4007883a 	mov	r3,r8
  801e28:	2001621e 	bne	r4,zero,8023b4 <___vfprintf_internal_r+0x1e24>
  801e2c:	6080004c 	andi	r2,r12,1
  801e30:	1001621e 	bne	r2,zero,8023bc <___vfprintf_internal_r+0x1e2c>
  801e34:	d8801417 	ldw	r2,80(sp)
  801e38:	ad4011e0 	cmpeqi	r21,r21,71
  801e3c:	d8800715 	stw	r2,28(sp)
  801e40:	d8801817 	ldw	r2,96(sp)
  801e44:	1445c83a 	sub	r2,r2,r17
  801e48:	d8800815 	stw	r2,32(sp)
  801e4c:	a8000526 	beq	r21,zero,801e64 <___vfprintf_internal_r+0x18d4>
  801e50:	d8c00717 	ldw	r3,28(sp)
  801e54:	18bfff50 	cmplti	r2,r3,-3
  801e58:	1000011e 	bne	r2,zero,801e60 <___vfprintf_internal_r+0x18d0>
  801e5c:	40c1670e 	bge	r8,r3,8023fc <___vfprintf_internal_r+0x1e6c>
  801e60:	e73fff84 	addi	fp,fp,-2
  801e64:	d8800717 	ldw	r2,28(sp)
  801e68:	df001645 	stb	fp,89(sp)
  801e6c:	157fffc4 	addi	r21,r2,-1
  801e70:	dd401415 	stw	r21,80(sp)
  801e74:	a801d416 	blt	r21,zero,8025c8 <___vfprintf_internal_r+0x2038>
  801e78:	00800ac4 	movi	r2,43
  801e7c:	d8801685 	stb	r2,90(sp)
  801e80:	a8800290 	cmplti	r2,r21,10
  801e84:	1001c11e 	bne	r2,zero,80258c <___vfprintf_internal_r+0x1ffc>
  801e88:	d98019c4 	addi	r6,sp,103
  801e8c:	9029883a 	mov	r20,r18
  801e90:	dc400715 	stw	r17,28(sp)
  801e94:	8025883a 	mov	r18,r16
  801e98:	db000f15 	stw	r12,60(sp)
  801e9c:	3021883a 	mov	r16,r6
  801ea0:	a809883a 	mov	r4,r21
  801ea4:	01400284 	movi	r5,10
  801ea8:	080ad2c0 	call	80ad2c <__modsi3>
  801eac:	10800c04 	addi	r2,r2,48
  801eb0:	a809883a 	mov	r4,r21
  801eb4:	80bfffc5 	stb	r2,-1(r16)
  801eb8:	01400284 	movi	r5,10
  801ebc:	080acac0 	call	80acac <__divsi3>
  801ec0:	a9001908 	cmpgei	r4,r21,100
  801ec4:	8023883a 	mov	r17,r16
  801ec8:	102b883a 	mov	r21,r2
  801ecc:	843fffc4 	addi	r16,r16,-1
  801ed0:	203ff31e 	bne	r4,zero,801ea0 <___vfprintf_internal_r+0x1910>
  801ed4:	800d883a 	mov	r6,r16
  801ed8:	11000c04 	addi	r4,r2,48
  801edc:	9021883a 	mov	r16,r18
  801ee0:	a025883a 	mov	r18,r20
  801ee4:	8829883a 	mov	r20,r17
  801ee8:	a0bfff84 	addi	r2,r20,-2
  801eec:	313fffc5 	stb	r4,-1(r6)
  801ef0:	d8c019c4 	addi	r3,sp,103
  801ef4:	db000f17 	ldw	r12,60(sp)
  801ef8:	dc400717 	ldw	r17,28(sp)
  801efc:	10c1d62e 	bgeu	r2,r3,802658 <___vfprintf_internal_r+0x20c8>
  801f00:	d8c016c4 	addi	r3,sp,91
  801f04:	00000106 	br	801f0c <___vfprintf_internal_r+0x197c>
  801f08:	11000003 	ldbu	r4,0(r2)
  801f0c:	19000005 	stb	r4,0(r3)
  801f10:	10800044 	addi	r2,r2,1
  801f14:	d90019c4 	addi	r4,sp,103
  801f18:	18c00044 	addi	r3,r3,1
  801f1c:	113ffa1e 	bne	r2,r4,801f08 <___vfprintf_internal_r+0x1978>
  801f20:	d8801a44 	addi	r2,sp,105
  801f24:	d8c016c4 	addi	r3,sp,91
  801f28:	1505c83a 	sub	r2,r2,r20
  801f2c:	1885883a 	add	r2,r3,r2
  801f30:	d8c01644 	addi	r3,sp,89
  801f34:	10c5c83a 	sub	r2,r2,r3
  801f38:	d8801015 	stw	r2,64(sp)
  801f3c:	d8c00817 	ldw	r3,32(sp)
  801f40:	d9001017 	ldw	r4,64(sp)
  801f44:	18800088 	cmpgei	r2,r3,2
  801f48:	192b883a 	add	r21,r3,r4
  801f4c:	1001aa26 	beq	r2,zero,8025f8 <___vfprintf_internal_r+0x2068>
  801f50:	d8800b17 	ldw	r2,44(sp)
  801f54:	a8ab883a 	add	r21,r21,r2
  801f58:	a829883a 	mov	r20,r21
  801f5c:	a800010e 	bge	r21,zero,801f64 <___vfprintf_internal_r+0x19d4>
  801f60:	0029883a 	mov	r20,zero
  801f64:	d8000715 	stw	zero,28(sp)
  801f68:	00009d06 	br	8021e0 <___vfprintf_internal_r+0x1c50>
  801f6c:	880f883a 	mov	r7,r17
  801f70:	10800044 	addi	r2,r2,1
  801f74:	1d47883a 	add	r3,r3,r21
  801f78:	b1c00015 	stw	r7,0(r22)
  801f7c:	003a7c06 	br	800970 <___vfprintf_internal_r+0x3e0>
  801f80:	d9801a04 	addi	r6,sp,104
  801f84:	900b883a 	mov	r5,r18
  801f88:	9809883a 	mov	r4,r19
  801f8c:	0807b280 	call	807b28 <__sprint_r>
  801f90:	103a8e1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  801f94:	d8c01c17 	ldw	r3,112(sp)
  801f98:	dd802704 	addi	r22,sp,156
  801f9c:	003c9706 	br	8011fc <___vfprintf_internal_r+0xc6c>
  801fa0:	d9801a04 	addi	r6,sp,104
  801fa4:	900b883a 	mov	r5,r18
  801fa8:	9809883a 	mov	r4,r19
  801fac:	da000e15 	stw	r8,56(sp)
  801fb0:	0807b280 	call	807b28 <__sprint_r>
  801fb4:	103a851e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  801fb8:	d8c01c17 	ldw	r3,112(sp)
  801fbc:	da000e17 	ldw	r8,56(sp)
  801fc0:	dd802704 	addi	r22,sp,156
  801fc4:	003a6106 	br	80094c <___vfprintf_internal_r+0x3bc>
  801fc8:	8809883a 	mov	r4,r17
  801fcc:	db000415 	stw	r12,16(sp)
  801fd0:	d8c00615 	stw	r3,24(sp)
  801fd4:	08004f80 	call	8004f8 <strlen>
  801fd8:	db000417 	ldw	r12,16(sp)
  801fdc:	102b883a 	mov	r21,r2
  801fe0:	1029883a 	mov	r20,r2
  801fe4:	003a2f06 	br	8008a4 <___vfprintf_internal_r+0x314>
  801fe8:	d8800d17 	ldw	r2,52(sp)
  801fec:	d9000b17 	ldw	r4,44(sp)
  801ff0:	b0800015 	stw	r2,0(r22)
  801ff4:	d8801b17 	ldw	r2,108(sp)
  801ff8:	20c7883a 	add	r3,r4,r3
  801ffc:	b1000115 	stw	r4,4(r22)
  802000:	10800044 	addi	r2,r2,1
  802004:	d8c01c15 	stw	r3,112(sp)
  802008:	d8801b15 	stw	r2,108(sp)
  80200c:	11000208 	cmpgei	r4,r2,8
  802010:	2000bf1e 	bne	r4,zero,802310 <___vfprintf_internal_r+0x1d80>
  802014:	b5800204 	addi	r22,r22,8
  802018:	283f470e 	bge	r5,zero,801d38 <___vfprintf_internal_r+0x17a8>
  80201c:	01c02074 	movhi	r7,129
  802020:	293ffc08 	cmpgei	r4,r5,-16
  802024:	39ffd904 	addi	r7,r7,-156
  802028:	0179c83a 	sub	fp,zero,r5
  80202c:	20013f1e 	bne	r4,zero,80252c <___vfprintf_internal_r+0x1f9c>
  802030:	dc000715 	stw	r16,28(sp)
  802034:	05400404 	movi	r21,16
  802038:	9021883a 	mov	r16,r18
  80203c:	3825883a 	mov	r18,r7
  802040:	00000406 	br	802054 <___vfprintf_internal_r+0x1ac4>
  802044:	b5800204 	addi	r22,r22,8
  802048:	e73ffc04 	addi	fp,fp,-16
  80204c:	e1800448 	cmpgei	r6,fp,17
  802050:	30013326 	beq	r6,zero,802520 <___vfprintf_internal_r+0x1f90>
  802054:	10800044 	addi	r2,r2,1
  802058:	18c00404 	addi	r3,r3,16
  80205c:	b4800015 	stw	r18,0(r22)
  802060:	b5400115 	stw	r21,4(r22)
  802064:	d8c01c15 	stw	r3,112(sp)
  802068:	d8801b15 	stw	r2,108(sp)
  80206c:	11800208 	cmpgei	r6,r2,8
  802070:	303ff426 	beq	r6,zero,802044 <___vfprintf_internal_r+0x1ab4>
  802074:	d9801a04 	addi	r6,sp,104
  802078:	800b883a 	mov	r5,r16
  80207c:	9809883a 	mov	r4,r19
  802080:	0807b280 	call	807b28 <__sprint_r>
  802084:	1001721e 	bne	r2,zero,802650 <___vfprintf_internal_r+0x20c0>
  802088:	d8c01c17 	ldw	r3,112(sp)
  80208c:	d8801b17 	ldw	r2,108(sp)
  802090:	dd802704 	addi	r22,sp,156
  802094:	003fec06 	br	802048 <___vfprintf_internal_r+0x1ab8>
  802098:	800f883a 	mov	r7,r16
  80209c:	dc000717 	ldw	r16,28(sp)
  8020a0:	8817883a 	mov	r11,r17
  8020a4:	aa000044 	addi	r8,r21,1
  8020a8:	e0800204 	addi	r2,fp,8
  8020ac:	1ac7883a 	add	r3,r3,r11
  8020b0:	e1c00015 	stw	r7,0(fp)
  8020b4:	e2c00115 	stw	r11,4(fp)
  8020b8:	d8c01c15 	stw	r3,112(sp)
  8020bc:	da001b15 	stw	r8,108(sp)
  8020c0:	41000208 	cmpgei	r4,r8,8
  8020c4:	203e701e 	bne	r4,zero,801a88 <___vfprintf_internal_r+0x14f8>
  8020c8:	42000044 	addi	r8,r8,1
  8020cc:	15800204 	addi	r22,r2,8
  8020d0:	1039883a 	mov	fp,r2
  8020d4:	003d3206 	br	8015a0 <___vfprintf_internal_r+0x1010>
  8020d8:	d8800617 	ldw	r2,24(sp)
  8020dc:	d8c00615 	stw	r3,24(sp)
  8020e0:	15000017 	ldw	r20,0(r2)
  8020e4:	a02bd7fa 	srai	r21,r20,31
  8020e8:	a805883a 	mov	r2,r21
  8020ec:	003b2d06 	br	800da4 <___vfprintf_internal_r+0x814>
  8020f0:	d8800617 	ldw	r2,24(sp)
  8020f4:	002b883a 	mov	r21,zero
  8020f8:	d8c00615 	stw	r3,24(sp)
  8020fc:	15000017 	ldw	r20,0(r2)
  802100:	0005883a 	mov	r2,zero
  802104:	003a6e06 	br	800ac0 <___vfprintf_internal_r+0x530>
  802108:	04402074 	movhi	r17,129
  80210c:	8c7fc804 	addi	r17,r17,-224
  802110:	003ac606 	br	800c2c <___vfprintf_internal_r+0x69c>
  802114:	d8801804 	addi	r2,sp,96
  802118:	d8800315 	stw	r2,12(sp)
  80211c:	d9400917 	ldw	r5,36(sp)
  802120:	d8801504 	addi	r2,sp,84
  802124:	d8800215 	stw	r2,8(sp)
  802128:	d8801404 	addi	r2,sp,80
  80212c:	da000015 	stw	r8,0(sp)
  802130:	d8800115 	stw	r2,4(sp)
  802134:	01c000c4 	movi	r7,3
  802138:	a00d883a 	mov	r6,r20
  80213c:	9809883a 	mov	r4,r19
  802140:	db000815 	stw	r12,32(sp)
  802144:	da000715 	stw	r8,28(sp)
  802148:	0802af40 	call	802af4 <_dtoa_r>
  80214c:	da000717 	ldw	r8,28(sp)
  802150:	1023883a 	mov	r17,r2
  802154:	db000817 	ldw	r12,32(sp)
  802158:	1207883a 	add	r3,r2,r8
  80215c:	88800007 	ldb	r2,0(r17)
  802160:	10800c20 	cmpeqi	r2,r2,48
  802164:	1000571e 	bne	r2,zero,8022c4 <___vfprintf_internal_r+0x1d34>
  802168:	d8801417 	ldw	r2,80(sp)
  80216c:	1893883a 	add	r9,r3,r2
  802170:	d9000917 	ldw	r4,36(sp)
  802174:	000d883a 	mov	r6,zero
  802178:	000f883a 	mov	r7,zero
  80217c:	a00b883a 	mov	r5,r20
  802180:	da401115 	stw	r9,68(sp)
  802184:	da000815 	stw	r8,32(sp)
  802188:	db000715 	stw	r12,28(sp)
  80218c:	080c0a80 	call	80c0a8 <__eqdf2>
  802190:	db000717 	ldw	r12,28(sp)
  802194:	da000817 	ldw	r8,32(sp)
  802198:	da401117 	ldw	r9,68(sp)
  80219c:	1000891e 	bne	r2,zero,8023c4 <___vfprintf_internal_r+0x1e34>
  8021a0:	4805883a 	mov	r2,r9
  8021a4:	d8c01417 	ldw	r3,80(sp)
  8021a8:	1445c83a 	sub	r2,r2,r17
  8021ac:	ad4011d8 	cmpnei	r21,r21,71
  8021b0:	d8c00715 	stw	r3,28(sp)
  8021b4:	d8800815 	stw	r2,32(sp)
  8021b8:	a83f2526 	beq	r21,zero,801e50 <___vfprintf_internal_r+0x18c0>
  8021bc:	d8800f17 	ldw	r2,60(sp)
  8021c0:	103f2826 	beq	r2,zero,801e64 <___vfprintf_internal_r+0x18d4>
  8021c4:	d8c00717 	ldw	r3,28(sp)
  8021c8:	6080004c 	andi	r2,r12,1
  8021cc:	1204b03a 	or	r2,r2,r8
  8021d0:	00c1140e 	bge	zero,r3,802624 <___vfprintf_internal_r+0x2094>
  8021d4:	1001011e 	bne	r2,zero,8025dc <___vfprintf_internal_r+0x204c>
  8021d8:	dd400717 	ldw	r21,28(sp)
  8021dc:	a829883a 	mov	r20,r21
  8021e0:	d8800607 	ldb	r2,24(sp)
  8021e4:	10008026 	beq	r2,zero,8023e8 <___vfprintf_internal_r+0x1e58>
  8021e8:	00800b44 	movi	r2,45
  8021ec:	d8801345 	stb	r2,77(sp)
  8021f0:	d8800e17 	ldw	r2,56(sp)
  8021f4:	0011883a 	mov	r8,zero
  8021f8:	d8800615 	stw	r2,24(sp)
  8021fc:	003b0306 	br	800e0c <___vfprintf_internal_r+0x87c>
  802200:	d8800617 	ldw	r2,24(sp)
  802204:	002b883a 	mov	r21,zero
  802208:	d8c00615 	stw	r3,24(sp)
  80220c:	15000017 	ldw	r20,0(r2)
  802210:	00800044 	movi	r2,1
  802214:	003a2a06 	br	800ac0 <___vfprintf_internal_r+0x530>
  802218:	d8800617 	ldw	r2,24(sp)
  80221c:	002b883a 	mov	r21,zero
  802220:	d8c00615 	stw	r3,24(sp)
  802224:	15000017 	ldw	r20,0(r2)
  802228:	003b1306 	br	800e78 <___vfprintf_internal_r+0x8e8>
  80222c:	800f883a 	mov	r7,r16
  802230:	dc000e17 	ldw	r16,56(sp)
  802234:	10800044 	addi	r2,r2,1
  802238:	1d47883a 	add	r3,r3,r21
  80223c:	d8801b15 	stw	r2,108(sp)
  802240:	b1c00015 	stw	r7,0(r22)
  802244:	b5400115 	stw	r21,4(r22)
  802248:	d8c01c15 	stw	r3,112(sp)
  80224c:	10800208 	cmpgei	r2,r2,8
  802250:	10003a1e 	bne	r2,zero,80233c <___vfprintf_internal_r+0x1dac>
  802254:	b5800204 	addi	r22,r22,8
  802258:	003d5406 	br	8017ac <___vfprintf_internal_r+0x121c>
  80225c:	00800b44 	movi	r2,45
  802260:	d8801345 	stb	r2,77(sp)
  802264:	03400b44 	movi	r13,45
  802268:	003a6c06 	br	800c1c <___vfprintf_internal_r+0x68c>
  80226c:	1520003c 	xorhi	r20,r2,32768
  802270:	00800b44 	movi	r2,45
  802274:	d8800605 	stb	r2,24(sp)
  802278:	003ed106 	br	801dc0 <___vfprintf_internal_r+0x1830>
  80227c:	d9801a04 	addi	r6,sp,104
  802280:	900b883a 	mov	r5,r18
  802284:	9809883a 	mov	r4,r19
  802288:	0807b280 	call	807b28 <__sprint_r>
  80228c:	1039cf1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  802290:	d9401417 	ldw	r5,80(sp)
  802294:	d8c01c17 	ldw	r3,112(sp)
  802298:	dd802704 	addi	r22,sp,156
  80229c:	003e9406 	br	801cf0 <___vfprintf_internal_r+0x1760>
  8022a0:	05400184 	movi	r21,6
  8022a4:	003e1706 	br	801b04 <___vfprintf_internal_r+0x1574>
  8022a8:	d9401345 	stb	r5,77(sp)
  8022ac:	00397706 	br	80088c <___vfprintf_internal_r+0x2fc>
  8022b0:	d9801a04 	addi	r6,sp,104
  8022b4:	900b883a 	mov	r5,r18
  8022b8:	9809883a 	mov	r4,r19
  8022bc:	0807b280 	call	807b28 <__sprint_r>
  8022c0:	0039c206 	br	8009cc <___vfprintf_internal_r+0x43c>
  8022c4:	d9000917 	ldw	r4,36(sp)
  8022c8:	000d883a 	mov	r6,zero
  8022cc:	000f883a 	mov	r7,zero
  8022d0:	a00b883a 	mov	r5,r20
  8022d4:	d8c01115 	stw	r3,68(sp)
  8022d8:	da000815 	stw	r8,32(sp)
  8022dc:	db000715 	stw	r12,28(sp)
  8022e0:	080c0a80 	call	80c0a8 <__eqdf2>
  8022e4:	db000717 	ldw	r12,28(sp)
  8022e8:	da000817 	ldw	r8,32(sp)
  8022ec:	d8c01117 	ldw	r3,68(sp)
  8022f0:	103f9d26 	beq	r2,zero,802168 <___vfprintf_internal_r+0x1bd8>
  8022f4:	00800044 	movi	r2,1
  8022f8:	1205c83a 	sub	r2,r2,r8
  8022fc:	d8801415 	stw	r2,80(sp)
  802300:	003f9a06 	br	80216c <___vfprintf_internal_r+0x1bdc>
  802304:	403ea81e 	bne	r8,zero,801da8 <___vfprintf_internal_r+0x1818>
  802308:	02000044 	movi	r8,1
  80230c:	003ea606 	br	801da8 <___vfprintf_internal_r+0x1818>
  802310:	d9801a04 	addi	r6,sp,104
  802314:	900b883a 	mov	r5,r18
  802318:	9809883a 	mov	r4,r19
  80231c:	0807b280 	call	807b28 <__sprint_r>
  802320:	1039aa1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  802324:	d9401417 	ldw	r5,80(sp)
  802328:	d8c01c17 	ldw	r3,112(sp)
  80232c:	d8801b17 	ldw	r2,108(sp)
  802330:	dd802704 	addi	r22,sp,156
  802334:	283e800e 	bge	r5,zero,801d38 <___vfprintf_internal_r+0x17a8>
  802338:	003f3806 	br	80201c <___vfprintf_internal_r+0x1a8c>
  80233c:	d9801a04 	addi	r6,sp,104
  802340:	900b883a 	mov	r5,r18
  802344:	9809883a 	mov	r4,r19
  802348:	0807b280 	call	807b28 <__sprint_r>
  80234c:	10399f1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  802350:	d8c01c17 	ldw	r3,112(sp)
  802354:	dd802704 	addi	r22,sp,156
  802358:	003d1406 	br	8017ac <___vfprintf_internal_r+0x121c>
  80235c:	db000417 	ldw	r12,16(sp)
  802360:	003a9d06 	br	800dd8 <___vfprintf_internal_r+0x848>
  802364:	d8801804 	addi	r2,sp,96
  802368:	d8800315 	stw	r2,12(sp)
  80236c:	d9400917 	ldw	r5,36(sp)
  802370:	d8801504 	addi	r2,sp,84
  802374:	40c00044 	addi	r3,r8,1
  802378:	d8800215 	stw	r2,8(sp)
  80237c:	d8801404 	addi	r2,sp,80
  802380:	d8c00015 	stw	r3,0(sp)
  802384:	d8800115 	stw	r2,4(sp)
  802388:	01c00084 	movi	r7,2
  80238c:	a00d883a 	mov	r6,r20
  802390:	9809883a 	mov	r4,r19
  802394:	db001115 	stw	r12,68(sp)
  802398:	da000815 	stw	r8,32(sp)
  80239c:	d8c00715 	stw	r3,28(sp)
  8023a0:	0802af40 	call	802af4 <_dtoa_r>
  8023a4:	d8c00717 	ldw	r3,28(sp)
  8023a8:	da000817 	ldw	r8,32(sp)
  8023ac:	db001117 	ldw	r12,68(sp)
  8023b0:	1023883a 	mov	r17,r2
  8023b4:	e08011d8 	cmpnei	r2,fp,71
  8023b8:	103e9c26 	beq	r2,zero,801e2c <___vfprintf_internal_r+0x189c>
  8023bc:	88d3883a 	add	r9,r17,r3
  8023c0:	003f6b06 	br	802170 <___vfprintf_internal_r+0x1be0>
  8023c4:	d8801817 	ldw	r2,96(sp)
  8023c8:	127f762e 	bgeu	r2,r9,8021a4 <___vfprintf_internal_r+0x1c14>
  8023cc:	01000c04 	movi	r4,48
  8023d0:	10c00044 	addi	r3,r2,1
  8023d4:	d8c01815 	stw	r3,96(sp)
  8023d8:	11000005 	stb	r4,0(r2)
  8023dc:	d8801817 	ldw	r2,96(sp)
  8023e0:	127ffb36 	bltu	r2,r9,8023d0 <___vfprintf_internal_r+0x1e40>
  8023e4:	003f6f06 	br	8021a4 <___vfprintf_internal_r+0x1c14>
  8023e8:	d8800e17 	ldw	r2,56(sp)
  8023ec:	db401343 	ldbu	r13,77(sp)
  8023f0:	0011883a 	mov	r8,zero
  8023f4:	d8800615 	stw	r2,24(sp)
  8023f8:	003a8006 	br	800dfc <___vfprintf_internal_r+0x86c>
  8023fc:	d8800717 	ldw	r2,28(sp)
  802400:	d8c00817 	ldw	r3,32(sp)
  802404:	10c02b16 	blt	r2,r3,8024b4 <___vfprintf_internal_r+0x1f24>
  802408:	6300004c 	andi	r12,r12,1
  80240c:	6000581e 	bne	r12,zero,802570 <___vfprintf_internal_r+0x1fe0>
  802410:	1029883a 	mov	r20,r2
  802414:	1000010e 	bge	r2,zero,80241c <___vfprintf_internal_r+0x1e8c>
  802418:	0029883a 	mov	r20,zero
  80241c:	dd400717 	ldw	r21,28(sp)
  802420:	070019c4 	movi	fp,103
  802424:	003f6e06 	br	8021e0 <___vfprintf_internal_r+0x1c50>
  802428:	d9801a04 	addi	r6,sp,104
  80242c:	900b883a 	mov	r5,r18
  802430:	9809883a 	mov	r4,r19
  802434:	0807b280 	call	807b28 <__sprint_r>
  802438:	1039641e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  80243c:	dd401417 	ldw	r21,80(sp)
  802440:	d8c01c17 	ldw	r3,112(sp)
  802444:	dd802704 	addi	r22,sp,156
  802448:	003ce706 	br	8017e8 <___vfprintf_internal_r+0x1258>
  80244c:	d9801a04 	addi	r6,sp,104
  802450:	900b883a 	mov	r5,r18
  802454:	9809883a 	mov	r4,r19
  802458:	0807b280 	call	807b28 <__sprint_r>
  80245c:	10395b1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  802460:	d8c01c17 	ldw	r3,112(sp)
  802464:	dd802704 	addi	r22,sp,156
  802468:	a83ccd0e 	bge	r21,zero,8017a0 <___vfprintf_internal_r+0x1210>
  80246c:	003d9106 	br	801ab4 <___vfprintf_internal_r+0x1524>
  802470:	02000184 	movi	r8,6
  802474:	003e4c06 	br	801da8 <___vfprintf_internal_r+0x1818>
  802478:	d9801a04 	addi	r6,sp,104
  80247c:	900b883a 	mov	r5,r18
  802480:	9809883a 	mov	r4,r19
  802484:	0807b280 	call	807b28 <__sprint_r>
  802488:	1039501e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  80248c:	d8801417 	ldw	r2,80(sp)
  802490:	d9000817 	ldw	r4,32(sp)
  802494:	d8c01c17 	ldw	r3,112(sp)
  802498:	dd802704 	addi	r22,sp,156
  80249c:	2085c83a 	sub	r2,r4,r2
  8024a0:	003ce506 	br	801838 <___vfprintf_internal_r+0x12a8>
  8024a4:	4029883a 	mov	r20,r8
  8024a8:	d8c00615 	stw	r3,24(sp)
  8024ac:	402b883a 	mov	r21,r8
  8024b0:	0038fc06 	br	8008a4 <___vfprintf_internal_r+0x314>
  8024b4:	d8800817 	ldw	r2,32(sp)
  8024b8:	d8c00b17 	ldw	r3,44(sp)
  8024bc:	10eb883a 	add	r21,r2,r3
  8024c0:	d8800717 	ldw	r2,28(sp)
  8024c4:	00800316 	blt	zero,r2,8024d4 <___vfprintf_internal_r+0x1f44>
  8024c8:	d8800717 	ldw	r2,28(sp)
  8024cc:	a8abc83a 	sub	r21,r21,r2
  8024d0:	ad400044 	addi	r21,r21,1
  8024d4:	a829883a 	mov	r20,r21
  8024d8:	a8002a16 	blt	r21,zero,802584 <___vfprintf_internal_r+0x1ff4>
  8024dc:	070019c4 	movi	fp,103
  8024e0:	003f3f06 	br	8021e0 <___vfprintf_internal_r+0x1c50>
  8024e4:	d9401345 	stb	r5,77(sp)
  8024e8:	003ae006 	br	80106c <___vfprintf_internal_r+0xadc>
  8024ec:	d9401345 	stb	r5,77(sp)
  8024f0:	003a5706 	br	800e50 <___vfprintf_internal_r+0x8c0>
  8024f4:	d9401345 	stb	r5,77(sp)
  8024f8:	003b1706 	br	801158 <___vfprintf_internal_r+0xbc8>
  8024fc:	d9401345 	stb	r5,77(sp)
  802500:	003a2006 	br	800d84 <___vfprintf_internal_r+0x7f4>
  802504:	d9401345 	stb	r5,77(sp)
  802508:	003a6606 	br	800ea4 <___vfprintf_internal_r+0x914>
  80250c:	d9401345 	stb	r5,77(sp)
  802510:	00399706 	br	800b70 <___vfprintf_internal_r+0x5e0>
  802514:	00bfffc4 	movi	r2,-1
  802518:	d8800515 	stw	r2,20(sp)
  80251c:	00392e06 	br	8009d8 <___vfprintf_internal_r+0x448>
  802520:	900f883a 	mov	r7,r18
  802524:	8025883a 	mov	r18,r16
  802528:	dc000717 	ldw	r16,28(sp)
  80252c:	10800044 	addi	r2,r2,1
  802530:	1f07883a 	add	r3,r3,fp
  802534:	b1c00015 	stw	r7,0(r22)
  802538:	b7000115 	stw	fp,4(r22)
  80253c:	d8c01c15 	stw	r3,112(sp)
  802540:	d8801b15 	stw	r2,108(sp)
  802544:	11000208 	cmpgei	r4,r2,8
  802548:	203dfa26 	beq	r4,zero,801d34 <___vfprintf_internal_r+0x17a4>
  80254c:	d9801a04 	addi	r6,sp,104
  802550:	900b883a 	mov	r5,r18
  802554:	9809883a 	mov	r4,r19
  802558:	0807b280 	call	807b28 <__sprint_r>
  80255c:	10391b1e 	bne	r2,zero,8009cc <___vfprintf_internal_r+0x43c>
  802560:	d8c01c17 	ldw	r3,112(sp)
  802564:	d8801b17 	ldw	r2,108(sp)
  802568:	dd802704 	addi	r22,sp,156
  80256c:	003df206 	br	801d38 <___vfprintf_internal_r+0x17a8>
  802570:	d8800717 	ldw	r2,28(sp)
  802574:	d8c00b17 	ldw	r3,44(sp)
  802578:	10eb883a 	add	r21,r2,r3
  80257c:	a829883a 	mov	r20,r21
  802580:	a83fd60e 	bge	r21,zero,8024dc <___vfprintf_internal_r+0x1f4c>
  802584:	0029883a 	mov	r20,zero
  802588:	003fd406 	br	8024dc <___vfprintf_internal_r+0x1f4c>
  80258c:	00800c04 	movi	r2,48
  802590:	ad400c04 	addi	r21,r21,48
  802594:	d88016c5 	stb	r2,91(sp)
  802598:	00800104 	movi	r2,4
  80259c:	dd401705 	stb	r21,92(sp)
  8025a0:	d8801015 	stw	r2,64(sp)
  8025a4:	003e6506 	br	801f3c <___vfprintf_internal_r+0x19ac>
  8025a8:	d8800a17 	ldw	r2,40(sp)
  8025ac:	10001916 	blt	r2,zero,802614 <___vfprintf_internal_r+0x2084>
  8025b0:	db401343 	ldbu	r13,77(sp)
  8025b4:	e0801210 	cmplti	r2,fp,72
  8025b8:	1000131e 	bne	r2,zero,802608 <___vfprintf_internal_r+0x2078>
  8025bc:	04402074 	movhi	r17,129
  8025c0:	8c7fcb04 	addi	r17,r17,-212
  8025c4:	00399906 	br	800c2c <___vfprintf_internal_r+0x69c>
  8025c8:	05400044 	movi	r21,1
  8025cc:	a8abc83a 	sub	r21,r21,r2
  8025d0:	00800b44 	movi	r2,45
  8025d4:	d8801685 	stb	r2,90(sp)
  8025d8:	003e2906 	br	801e80 <___vfprintf_internal_r+0x18f0>
  8025dc:	d8800b17 	ldw	r2,44(sp)
  8025e0:	18ab883a 	add	r21,r3,r2
  8025e4:	aa2b883a 	add	r21,r21,r8
  8025e8:	a829883a 	mov	r20,r21
  8025ec:	a83efc0e 	bge	r21,zero,8021e0 <___vfprintf_internal_r+0x1c50>
  8025f0:	0029883a 	mov	r20,zero
  8025f4:	003efa06 	br	8021e0 <___vfprintf_internal_r+0x1c50>
  8025f8:	6080004c 	andi	r2,r12,1
  8025fc:	d8800715 	stw	r2,28(sp)
  802600:	103e531e 	bne	r2,zero,801f50 <___vfprintf_internal_r+0x19c0>
  802604:	003ff806 	br	8025e8 <___vfprintf_internal_r+0x2058>
  802608:	04402074 	movhi	r17,129
  80260c:	8c7fca04 	addi	r17,r17,-216
  802610:	00398606 	br	800c2c <___vfprintf_internal_r+0x69c>
  802614:	00800b44 	movi	r2,45
  802618:	d8801345 	stb	r2,77(sp)
  80261c:	03400b44 	movi	r13,45
  802620:	003fe406 	br	8025b4 <___vfprintf_internal_r+0x2024>
  802624:	1000031e 	bne	r2,zero,802634 <___vfprintf_internal_r+0x20a4>
  802628:	05000044 	movi	r20,1
  80262c:	05400044 	movi	r21,1
  802630:	003eeb06 	br	8021e0 <___vfprintf_internal_r+0x1c50>
  802634:	d8800b17 	ldw	r2,44(sp)
  802638:	15400044 	addi	r21,r2,1
  80263c:	aa2b883a 	add	r21,r21,r8
  802640:	003fe906 	br	8025e8 <___vfprintf_internal_r+0x2058>
  802644:	b005883a 	mov	r2,r22
  802648:	39ffd904 	addi	r7,r7,-156
  80264c:	003e9706 	br	8020ac <___vfprintf_internal_r+0x1b1c>
  802650:	8025883a 	mov	r18,r16
  802654:	0038dd06 	br	8009cc <___vfprintf_internal_r+0x43c>
  802658:	00800084 	movi	r2,2
  80265c:	d8801015 	stw	r2,64(sp)
  802660:	003e3606 	br	801f3c <___vfprintf_internal_r+0x19ac>
  802664:	d8c00617 	ldw	r3,24(sp)
  802668:	1a000017 	ldw	r8,0(r3)
  80266c:	18c00104 	addi	r3,r3,4
  802670:	4000010e 	bge	r8,zero,802678 <___vfprintf_internal_r+0x20e8>
  802674:	023fffc4 	movi	r8,-1
  802678:	bf000043 	ldbu	fp,1(r23)
  80267c:	d8c00615 	stw	r3,24(sp)
  802680:	102f883a 	mov	r23,r2
  802684:	e2c03fcc 	andi	r11,fp,255
  802688:	5ac0201c 	xori	r11,r11,128
  80268c:	5affe004 	addi	r11,r11,-128
  802690:	00380b06 	br	8006c0 <___vfprintf_internal_r+0x130>

00802694 <__vfprintf_internal>:
  802694:	00c02074 	movhi	r3,129
  802698:	2005883a 	mov	r2,r4
  80269c:	19084417 	ldw	r4,8464(r3)
  8026a0:	300f883a 	mov	r7,r6
  8026a4:	280d883a 	mov	r6,r5
  8026a8:	100b883a 	mov	r5,r2
  8026ac:	08005901 	jmpi	800590 <___vfprintf_internal_r>

008026b0 <__sbprintf>:
  8026b0:	2880030b 	ldhu	r2,12(r5)
  8026b4:	2b001917 	ldw	r12,100(r5)
  8026b8:	2ac0038b 	ldhu	r11,14(r5)
  8026bc:	2a800717 	ldw	r10,28(r5)
  8026c0:	2a400917 	ldw	r9,36(r5)
  8026c4:	defee204 	addi	sp,sp,-1144
  8026c8:	da001a04 	addi	r8,sp,104
  8026cc:	00c10004 	movi	r3,1024
  8026d0:	dc011a15 	stw	r16,1128(sp)
  8026d4:	10bfff4c 	andi	r2,r2,65533
  8026d8:	2821883a 	mov	r16,r5
  8026dc:	d80b883a 	mov	r5,sp
  8026e0:	dc811c15 	stw	r18,1136(sp)
  8026e4:	dc411b15 	stw	r17,1132(sp)
  8026e8:	dfc11d15 	stw	ra,1140(sp)
  8026ec:	2025883a 	mov	r18,r4
  8026f0:	d880030d 	sth	r2,12(sp)
  8026f4:	db001915 	stw	r12,100(sp)
  8026f8:	dac0038d 	sth	r11,14(sp)
  8026fc:	da800715 	stw	r10,28(sp)
  802700:	da400915 	stw	r9,36(sp)
  802704:	da000015 	stw	r8,0(sp)
  802708:	da000415 	stw	r8,16(sp)
  80270c:	d8c00215 	stw	r3,8(sp)
  802710:	d8c00515 	stw	r3,20(sp)
  802714:	d8000615 	stw	zero,24(sp)
  802718:	08005900 	call	800590 <___vfprintf_internal_r>
  80271c:	1023883a 	mov	r17,r2
  802720:	10000d0e 	bge	r2,zero,802758 <__sbprintf+0xa8>
  802724:	d880030b 	ldhu	r2,12(sp)
  802728:	1080100c 	andi	r2,r2,64
  80272c:	10000326 	beq	r2,zero,80273c <__sbprintf+0x8c>
  802730:	8080030b 	ldhu	r2,12(r16)
  802734:	10801014 	ori	r2,r2,64
  802738:	8080030d 	sth	r2,12(r16)
  80273c:	8805883a 	mov	r2,r17
  802740:	dfc11d17 	ldw	ra,1140(sp)
  802744:	dc811c17 	ldw	r18,1136(sp)
  802748:	dc411b17 	ldw	r17,1132(sp)
  80274c:	dc011a17 	ldw	r16,1128(sp)
  802750:	dec11e04 	addi	sp,sp,1144
  802754:	f800283a 	ret
  802758:	d80b883a 	mov	r5,sp
  80275c:	9009883a 	mov	r4,r18
  802760:	08044640 	call	804464 <_fflush_r>
  802764:	103fef26 	beq	r2,zero,802724 <__sbprintf+0x74>
  802768:	047fffc4 	movi	r17,-1
  80276c:	003fed06 	br	802724 <__sbprintf+0x74>

00802770 <__swsetup_r>:
  802770:	00802074 	movhi	r2,129
  802774:	10884417 	ldw	r2,8464(r2)
  802778:	defffd04 	addi	sp,sp,-12
  80277c:	dc400115 	stw	r17,4(sp)
  802780:	dc000015 	stw	r16,0(sp)
  802784:	dfc00215 	stw	ra,8(sp)
  802788:	2023883a 	mov	r17,r4
  80278c:	2821883a 	mov	r16,r5
  802790:	10000226 	beq	r2,zero,80279c <__swsetup_r+0x2c>
  802794:	10c00e17 	ldw	r3,56(r2)
  802798:	18001f26 	beq	r3,zero,802818 <__swsetup_r+0xa8>
  80279c:	8180030b 	ldhu	r6,12(r16)
  8027a0:	30c0020c 	andi	r3,r6,8
  8027a4:	3005883a 	mov	r2,r6
  8027a8:	18002126 	beq	r3,zero,802830 <__swsetup_r+0xc0>
  8027ac:	80c00417 	ldw	r3,16(r16)
  8027b0:	18002826 	beq	r3,zero,802854 <__swsetup_r+0xe4>
  8027b4:	1100004c 	andi	r4,r2,1
  8027b8:	20000b1e 	bne	r4,zero,8027e8 <__swsetup_r+0x78>
  8027bc:	1100008c 	andi	r4,r2,2
  8027c0:	20002e1e 	bne	r4,zero,80287c <__swsetup_r+0x10c>
  8027c4:	81000517 	ldw	r4,20(r16)
  8027c8:	81000215 	stw	r4,8(r16)
  8027cc:	18000b26 	beq	r3,zero,8027fc <__swsetup_r+0x8c>
  8027d0:	0005883a 	mov	r2,zero
  8027d4:	dfc00217 	ldw	ra,8(sp)
  8027d8:	dc400117 	ldw	r17,4(sp)
  8027dc:	dc000017 	ldw	r16,0(sp)
  8027e0:	dec00304 	addi	sp,sp,12
  8027e4:	f800283a 	ret
  8027e8:	81000517 	ldw	r4,20(r16)
  8027ec:	80000215 	stw	zero,8(r16)
  8027f0:	0109c83a 	sub	r4,zero,r4
  8027f4:	81000615 	stw	r4,24(r16)
  8027f8:	183ff51e 	bne	r3,zero,8027d0 <__swsetup_r+0x60>
  8027fc:	10c0200c 	andi	r3,r2,128
  802800:	0005883a 	mov	r2,zero
  802804:	183ff326 	beq	r3,zero,8027d4 <__swsetup_r+0x64>
  802808:	31801014 	ori	r6,r6,64
  80280c:	8180030d 	sth	r6,12(r16)
  802810:	00bfffc4 	movi	r2,-1
  802814:	003fef06 	br	8027d4 <__swsetup_r+0x64>
  802818:	1009883a 	mov	r4,r2
  80281c:	08048ac0 	call	8048ac <__sinit>
  802820:	8180030b 	ldhu	r6,12(r16)
  802824:	30c0020c 	andi	r3,r6,8
  802828:	3005883a 	mov	r2,r6
  80282c:	183fdf1e 	bne	r3,zero,8027ac <__swsetup_r+0x3c>
  802830:	3080040c 	andi	r2,r6,16
  802834:	10002126 	beq	r2,zero,8028bc <__swsetup_r+0x14c>
  802838:	3080010c 	andi	r2,r6,4
  80283c:	1000111e 	bne	r2,zero,802884 <__swsetup_r+0x114>
  802840:	80c00417 	ldw	r3,16(r16)
  802844:	30800214 	ori	r2,r6,8
  802848:	8080030d 	sth	r2,12(r16)
  80284c:	100d883a 	mov	r6,r2
  802850:	183fd81e 	bne	r3,zero,8027b4 <__swsetup_r+0x44>
  802854:	1100a00c 	andi	r4,r2,640
  802858:	21008020 	cmpeqi	r4,r4,512
  80285c:	203fd51e 	bne	r4,zero,8027b4 <__swsetup_r+0x44>
  802860:	800b883a 	mov	r5,r16
  802864:	8809883a 	mov	r4,r17
  802868:	08053340 	call	805334 <__smakebuf_r>
  80286c:	8180030b 	ldhu	r6,12(r16)
  802870:	80c00417 	ldw	r3,16(r16)
  802874:	3005883a 	mov	r2,r6
  802878:	003fce06 	br	8027b4 <__swsetup_r+0x44>
  80287c:	0009883a 	mov	r4,zero
  802880:	003fd106 	br	8027c8 <__swsetup_r+0x58>
  802884:	81400c17 	ldw	r5,48(r16)
  802888:	28000626 	beq	r5,zero,8028a4 <__swsetup_r+0x134>
  80288c:	80801004 	addi	r2,r16,64
  802890:	28800326 	beq	r5,r2,8028a0 <__swsetup_r+0x130>
  802894:	8809883a 	mov	r4,r17
  802898:	0804a100 	call	804a10 <_free_r>
  80289c:	8180030b 	ldhu	r6,12(r16)
  8028a0:	80000c15 	stw	zero,48(r16)
  8028a4:	80c00417 	ldw	r3,16(r16)
  8028a8:	00bff6c4 	movi	r2,-37
  8028ac:	118c703a 	and	r6,r2,r6
  8028b0:	80000115 	stw	zero,4(r16)
  8028b4:	80c00015 	stw	r3,0(r16)
  8028b8:	003fe206 	br	802844 <__swsetup_r+0xd4>
  8028bc:	00800244 	movi	r2,9
  8028c0:	88800015 	stw	r2,0(r17)
  8028c4:	31801014 	ori	r6,r6,64
  8028c8:	8180030d 	sth	r6,12(r16)
  8028cc:	00bfffc4 	movi	r2,-1
  8028d0:	003fc006 	br	8027d4 <__swsetup_r+0x64>

008028d4 <quorem>:
  8028d4:	defff204 	addi	sp,sp,-56
  8028d8:	dc400515 	stw	r17,20(sp)
  8028dc:	20800417 	ldw	r2,16(r4)
  8028e0:	2c400417 	ldw	r17,16(r5)
  8028e4:	dfc00d15 	stw	ra,52(sp)
  8028e8:	df000c15 	stw	fp,48(sp)
  8028ec:	ddc00b15 	stw	r23,44(sp)
  8028f0:	dd800a15 	stw	r22,40(sp)
  8028f4:	dd400915 	stw	r21,36(sp)
  8028f8:	dd000815 	stw	r20,32(sp)
  8028fc:	dcc00715 	stw	r19,28(sp)
  802900:	dc800615 	stw	r18,24(sp)
  802904:	dc000415 	stw	r16,16(sp)
  802908:	d9000115 	stw	r4,4(sp)
  80290c:	d9400215 	stw	r5,8(sp)
  802910:	14407616 	blt	r2,r17,802aec <quorem+0x218>
  802914:	8c7fffc4 	addi	r17,r17,-1
  802918:	882a90ba 	slli	r21,r17,2
  80291c:	2f000504 	addi	fp,r5,20
  802920:	25800504 	addi	r22,r4,20
  802924:	e565883a 	add	r18,fp,r21
  802928:	b545883a 	add	r2,r22,r21
  80292c:	95c00017 	ldw	r23,0(r18)
  802930:	15000017 	ldw	r20,0(r2)
  802934:	dd800015 	stw	r22,0(sp)
  802938:	bdc00044 	addi	r23,r23,1
  80293c:	b80b883a 	mov	r5,r23
  802940:	a009883a 	mov	r4,r20
  802944:	d8800315 	stw	r2,12(sp)
  802948:	080ada00 	call	80ada0 <__udivsi3>
  80294c:	1021883a 	mov	r16,r2
  802950:	a5c02f36 	bltu	r20,r23,802a10 <quorem+0x13c>
  802954:	e029883a 	mov	r20,fp
  802958:	002b883a 	mov	r21,zero
  80295c:	002f883a 	mov	r23,zero
  802960:	a4c00017 	ldw	r19,0(r20)
  802964:	800b883a 	mov	r5,r16
  802968:	b5800104 	addi	r22,r22,4
  80296c:	993fffcc 	andi	r4,r19,65535
  802970:	080ae600 	call	80ae60 <__mulsi3>
  802974:	9808d43a 	srli	r4,r19,16
  802978:	800b883a 	mov	r5,r16
  80297c:	156b883a 	add	r21,r2,r21
  802980:	080ae600 	call	80ae60 <__mulsi3>
  802984:	b0ffff17 	ldw	r3,-4(r22)
  802988:	a80ad43a 	srli	r5,r21,16
  80298c:	a93fffcc 	andi	r4,r21,65535
  802990:	19bfffcc 	andi	r6,r3,65535
  802994:	b909c83a 	sub	r4,r23,r4
  802998:	2189883a 	add	r4,r4,r6
  80299c:	1806d43a 	srli	r3,r3,16
  8029a0:	1145883a 	add	r2,r2,r5
  8029a4:	200bd43a 	srai	r5,r4,16
  8029a8:	11bfffcc 	andi	r6,r2,65535
  8029ac:	1987c83a 	sub	r3,r3,r6
  8029b0:	1947883a 	add	r3,r3,r5
  8029b4:	180a943a 	slli	r5,r3,16
  8029b8:	213fffcc 	andi	r4,r4,65535
  8029bc:	a5000104 	addi	r20,r20,4
  8029c0:	2908b03a 	or	r4,r5,r4
  8029c4:	b13fff15 	stw	r4,-4(r22)
  8029c8:	102ad43a 	srli	r21,r2,16
  8029cc:	182fd43a 	srai	r23,r3,16
  8029d0:	953fe32e 	bgeu	r18,r20,802960 <quorem+0x8c>
  8029d4:	d8c00317 	ldw	r3,12(sp)
  8029d8:	18800017 	ldw	r2,0(r3)
  8029dc:	10000c1e 	bne	r2,zero,802a10 <quorem+0x13c>
  8029e0:	d8800017 	ldw	r2,0(sp)
  8029e4:	1d7fff04 	addi	r21,r3,-4
  8029e8:	15400436 	bltu	r2,r21,8029fc <quorem+0x128>
  8029ec:	00000606 	br	802a08 <quorem+0x134>
  8029f0:	d8800017 	ldw	r2,0(sp)
  8029f4:	8c7fffc4 	addi	r17,r17,-1
  8029f8:	1540032e 	bgeu	r2,r21,802a08 <quorem+0x134>
  8029fc:	a8800017 	ldw	r2,0(r21)
  802a00:	ad7fff04 	addi	r21,r21,-4
  802a04:	103ffa26 	beq	r2,zero,8029f0 <quorem+0x11c>
  802a08:	d8800117 	ldw	r2,4(sp)
  802a0c:	14400415 	stw	r17,16(r2)
  802a10:	d9400217 	ldw	r5,8(sp)
  802a14:	d9000117 	ldw	r4,4(sp)
  802a18:	0806bfc0 	call	806bfc <__mcmp>
  802a1c:	10002616 	blt	r2,zero,802ab8 <quorem+0x1e4>
  802a20:	d9400017 	ldw	r5,0(sp)
  802a24:	84000044 	addi	r16,r16,1
  802a28:	0007883a 	mov	r3,zero
  802a2c:	e1000017 	ldw	r4,0(fp)
  802a30:	29800017 	ldw	r6,0(r5)
  802a34:	29400104 	addi	r5,r5,4
  802a38:	20bfffcc 	andi	r2,r4,65535
  802a3c:	1887c83a 	sub	r3,r3,r2
  802a40:	30bfffcc 	andi	r2,r6,65535
  802a44:	1885883a 	add	r2,r3,r2
  802a48:	2008d43a 	srli	r4,r4,16
  802a4c:	3006d43a 	srli	r3,r6,16
  802a50:	100fd43a 	srai	r7,r2,16
  802a54:	11bfffcc 	andi	r6,r2,65535
  802a58:	1907c83a 	sub	r3,r3,r4
  802a5c:	19c7883a 	add	r3,r3,r7
  802a60:	1804943a 	slli	r2,r3,16
  802a64:	e7000104 	addi	fp,fp,4
  802a68:	1807d43a 	srai	r3,r3,16
  802a6c:	1184b03a 	or	r2,r2,r6
  802a70:	28bfff15 	stw	r2,-4(r5)
  802a74:	973fed2e 	bgeu	r18,fp,802a2c <quorem+0x158>
  802a78:	880490ba 	slli	r2,r17,2
  802a7c:	d9000017 	ldw	r4,0(sp)
  802a80:	2085883a 	add	r2,r4,r2
  802a84:	10c00017 	ldw	r3,0(r2)
  802a88:	18000b1e 	bne	r3,zero,802ab8 <quorem+0x1e4>
  802a8c:	10bfff04 	addi	r2,r2,-4
  802a90:	20800436 	bltu	r4,r2,802aa4 <quorem+0x1d0>
  802a94:	00000606 	br	802ab0 <quorem+0x1dc>
  802a98:	d8c00017 	ldw	r3,0(sp)
  802a9c:	8c7fffc4 	addi	r17,r17,-1
  802aa0:	1880032e 	bgeu	r3,r2,802ab0 <quorem+0x1dc>
  802aa4:	10c00017 	ldw	r3,0(r2)
  802aa8:	10bfff04 	addi	r2,r2,-4
  802aac:	183ffa26 	beq	r3,zero,802a98 <quorem+0x1c4>
  802ab0:	d8800117 	ldw	r2,4(sp)
  802ab4:	14400415 	stw	r17,16(r2)
  802ab8:	8005883a 	mov	r2,r16
  802abc:	dfc00d17 	ldw	ra,52(sp)
  802ac0:	df000c17 	ldw	fp,48(sp)
  802ac4:	ddc00b17 	ldw	r23,44(sp)
  802ac8:	dd800a17 	ldw	r22,40(sp)
  802acc:	dd400917 	ldw	r21,36(sp)
  802ad0:	dd000817 	ldw	r20,32(sp)
  802ad4:	dcc00717 	ldw	r19,28(sp)
  802ad8:	dc800617 	ldw	r18,24(sp)
  802adc:	dc400517 	ldw	r17,20(sp)
  802ae0:	dc000417 	ldw	r16,16(sp)
  802ae4:	dec00e04 	addi	sp,sp,56
  802ae8:	f800283a 	ret
  802aec:	0005883a 	mov	r2,zero
  802af0:	003ff206 	br	802abc <quorem+0x1e8>

00802af4 <_dtoa_r>:
  802af4:	20801017 	ldw	r2,64(r4)
  802af8:	deffe204 	addi	sp,sp,-120
  802afc:	ddc01b15 	stw	r23,108(sp)
  802b00:	dcc01715 	stw	r19,92(sp)
  802b04:	dc801615 	stw	r18,88(sp)
  802b08:	dc401515 	stw	r17,84(sp)
  802b0c:	dc001415 	stw	r16,80(sp)
  802b10:	dfc01d15 	stw	ra,116(sp)
  802b14:	df001c15 	stw	fp,112(sp)
  802b18:	dd801a15 	stw	r22,104(sp)
  802b1c:	dd401915 	stw	r21,100(sp)
  802b20:	dd001815 	stw	r20,96(sp)
  802b24:	d9c00215 	stw	r7,8(sp)
  802b28:	dc002017 	ldw	r16,128(sp)
  802b2c:	202f883a 	mov	r23,r4
  802b30:	3025883a 	mov	r18,r6
  802b34:	2827883a 	mov	r19,r5
  802b38:	3023883a 	mov	r17,r6
  802b3c:	10000826 	beq	r2,zero,802b60 <_dtoa_r+0x6c>
  802b40:	21801117 	ldw	r6,68(r4)
  802b44:	00c00044 	movi	r3,1
  802b48:	100b883a 	mov	r5,r2
  802b4c:	1986983a 	sll	r3,r3,r6
  802b50:	11800115 	stw	r6,4(r2)
  802b54:	10c00215 	stw	r3,8(r2)
  802b58:	08061ec0 	call	8061ec <_Bfree>
  802b5c:	b8001015 	stw	zero,64(r23)
  802b60:	90018816 	blt	r18,zero,803184 <_dtoa_r+0x690>
  802b64:	80000015 	stw	zero,0(r16)
  802b68:	909ffc2c 	andhi	r2,r18,32752
  802b6c:	00dffc34 	movhi	r3,32752
  802b70:	10c18d26 	beq	r2,r3,8031a8 <_dtoa_r+0x6b4>
  802b74:	000d883a 	mov	r6,zero
  802b78:	000f883a 	mov	r7,zero
  802b7c:	9809883a 	mov	r4,r19
  802b80:	880b883a 	mov	r5,r17
  802b84:	080c0a80 	call	80c0a8 <__eqdf2>
  802b88:	1000191e 	bne	r2,zero,802bf0 <_dtoa_r+0xfc>
  802b8c:	d8c01f17 	ldw	r3,124(sp)
  802b90:	00800044 	movi	r2,1
  802b94:	18800015 	stw	r2,0(r3)
  802b98:	d8802117 	ldw	r2,132(sp)
  802b9c:	1002f926 	beq	r2,zero,803784 <_dtoa_r+0xc90>
  802ba0:	d9002117 	ldw	r4,132(sp)
  802ba4:	00802074 	movhi	r2,129
  802ba8:	10bfd844 	addi	r2,r2,-159
  802bac:	00c02074 	movhi	r3,129
  802bb0:	20800015 	stw	r2,0(r4)
  802bb4:	18bfd804 	addi	r2,r3,-160
  802bb8:	d8800115 	stw	r2,4(sp)
  802bbc:	d8800117 	ldw	r2,4(sp)
  802bc0:	dfc01d17 	ldw	ra,116(sp)
  802bc4:	df001c17 	ldw	fp,112(sp)
  802bc8:	ddc01b17 	ldw	r23,108(sp)
  802bcc:	dd801a17 	ldw	r22,104(sp)
  802bd0:	dd401917 	ldw	r21,100(sp)
  802bd4:	dd001817 	ldw	r20,96(sp)
  802bd8:	dcc01717 	ldw	r19,92(sp)
  802bdc:	dc801617 	ldw	r18,88(sp)
  802be0:	dc401517 	ldw	r17,84(sp)
  802be4:	dc001417 	ldw	r16,80(sp)
  802be8:	dec01e04 	addi	sp,sp,120
  802bec:	f800283a 	ret
  802bf0:	d8801204 	addi	r2,sp,72
  802bf4:	9020d53a 	srli	r16,r18,20
  802bf8:	d8800015 	stw	r2,0(sp)
  802bfc:	d9c01304 	addi	r7,sp,76
  802c00:	980b883a 	mov	r5,r19
  802c04:	880d883a 	mov	r6,r17
  802c08:	b809883a 	mov	r4,r23
  802c0c:	0806fe40 	call	806fe4 <__d2b>
  802c10:	1039883a 	mov	fp,r2
  802c14:	8001771e 	bne	r16,zero,8031f4 <_dtoa_r+0x700>
  802c18:	dd001217 	ldw	r20,72(sp)
  802c1c:	dc001317 	ldw	r16,76(sp)
  802c20:	a421883a 	add	r16,r20,r16
  802c24:	80810c84 	addi	r2,r16,1074
  802c28:	10c00850 	cmplti	r3,r2,33
  802c2c:	1802e51e 	bne	r3,zero,8037c4 <_dtoa_r+0xcd0>
  802c30:	01001004 	movi	r4,64
  802c34:	2085c83a 	sub	r2,r4,r2
  802c38:	81010484 	addi	r4,r16,1042
  802c3c:	90a4983a 	sll	r18,r18,r2
  802c40:	9908d83a 	srl	r4,r19,r4
  802c44:	9108b03a 	or	r4,r18,r4
  802c48:	080d4e40 	call	80d4e4 <__floatunsidf>
  802c4c:	1009883a 	mov	r4,r2
  802c50:	017f8434 	movhi	r5,65040
  802c54:	00800044 	movi	r2,1
  802c58:	194b883a 	add	r5,r3,r5
  802c5c:	843fffc4 	addi	r16,r16,-1
  802c60:	d8800a15 	stw	r2,40(sp)
  802c64:	000d883a 	mov	r6,zero
  802c68:	01cffe34 	movhi	r7,16376
  802c6c:	080caa40 	call	80caa4 <__subdf3>
  802c70:	0198dbf4 	movhi	r6,25455
  802c74:	01cff4f4 	movhi	r7,16339
  802c78:	3190d844 	addi	r6,r6,17249
  802c7c:	39e1e9c4 	addi	r7,r7,-30809
  802c80:	1009883a 	mov	r4,r2
  802c84:	180b883a 	mov	r5,r3
  802c88:	080c2f80 	call	80c2f8 <__muldf3>
  802c8c:	01a2d874 	movhi	r6,35681
  802c90:	01cff1f4 	movhi	r7,16327
  802c94:	31b22cc4 	addi	r6,r6,-14157
  802c98:	39e28a04 	addi	r7,r7,-30168
  802c9c:	180b883a 	mov	r5,r3
  802ca0:	1009883a 	mov	r4,r2
  802ca4:	080ae880 	call	80ae88 <__adddf3>
  802ca8:	8009883a 	mov	r4,r16
  802cac:	102b883a 	mov	r21,r2
  802cb0:	1825883a 	mov	r18,r3
  802cb4:	080d42c0 	call	80d42c <__floatsidf>
  802cb8:	019427f4 	movhi	r6,20639
  802cbc:	01cff4f4 	movhi	r7,16339
  802cc0:	319e7ec4 	addi	r6,r6,31227
  802cc4:	39d104c4 	addi	r7,r7,17427
  802cc8:	1009883a 	mov	r4,r2
  802ccc:	180b883a 	mov	r5,r3
  802cd0:	080c2f80 	call	80c2f8 <__muldf3>
  802cd4:	100d883a 	mov	r6,r2
  802cd8:	180f883a 	mov	r7,r3
  802cdc:	a809883a 	mov	r4,r21
  802ce0:	900b883a 	mov	r5,r18
  802ce4:	080ae880 	call	80ae88 <__adddf3>
  802ce8:	1009883a 	mov	r4,r2
  802cec:	180b883a 	mov	r5,r3
  802cf0:	1025883a 	mov	r18,r2
  802cf4:	182d883a 	mov	r22,r3
  802cf8:	080d3ac0 	call	80d3ac <__fixdfsi>
  802cfc:	000d883a 	mov	r6,zero
  802d00:	000f883a 	mov	r7,zero
  802d04:	9009883a 	mov	r4,r18
  802d08:	b00b883a 	mov	r5,r22
  802d0c:	102b883a 	mov	r21,r2
  802d10:	d8800315 	stw	r2,12(sp)
  802d14:	080c2100 	call	80c210 <__ledf2>
  802d18:	10028f16 	blt	r2,zero,803758 <_dtoa_r+0xc64>
  802d1c:	dc800317 	ldw	r18,12(sp)
  802d20:	a421c83a 	sub	r16,r20,r16
  802d24:	85bfffc4 	addi	r22,r16,-1
  802d28:	908005e8 	cmpgeui	r2,r18,23
  802d2c:	1002821e 	bne	r2,zero,803738 <_dtoa_r+0xc44>
  802d30:	900690fa 	slli	r3,r18,3
  802d34:	00802074 	movhi	r2,129
  802d38:	10802104 	addi	r2,r2,132
  802d3c:	10c5883a 	add	r2,r2,r3
  802d40:	11800017 	ldw	r6,0(r2)
  802d44:	11c00117 	ldw	r7,4(r2)
  802d48:	9809883a 	mov	r4,r19
  802d4c:	880b883a 	mov	r5,r17
  802d50:	080c2100 	call	80c210 <__ledf2>
  802d54:	1002550e 	bge	r2,zero,8036ac <_dtoa_r+0xbb8>
  802d58:	90bfffc4 	addi	r2,r18,-1
  802d5c:	d8800315 	stw	r2,12(sp)
  802d60:	d8000915 	stw	zero,36(sp)
  802d64:	b0027716 	blt	r22,zero,803744 <_dtoa_r+0xc50>
  802d68:	d8000615 	stw	zero,24(sp)
  802d6c:	d8800317 	ldw	r2,12(sp)
  802d70:	1002510e 	bge	r2,zero,8036b8 <_dtoa_r+0xbc4>
  802d74:	d8800317 	ldw	r2,12(sp)
  802d78:	d8c00617 	ldw	r3,24(sp)
  802d7c:	d8000315 	stw	zero,12(sp)
  802d80:	d8800415 	stw	r2,16(sp)
  802d84:	1887c83a 	sub	r3,r3,r2
  802d88:	d8c00615 	stw	r3,24(sp)
  802d8c:	0087c83a 	sub	r3,zero,r2
  802d90:	d8c00815 	stw	r3,32(sp)
  802d94:	d8c00217 	ldw	r3,8(sp)
  802d98:	188002a8 	cmpgeui	r2,r3,10
  802d9c:	10024d1e 	bne	r2,zero,8036d4 <_dtoa_r+0xbe0>
  802da0:	18800190 	cmplti	r2,r3,6
  802da4:	10028b1e 	bne	r2,zero,8037d4 <_dtoa_r+0xce0>
  802da8:	18bfff04 	addi	r2,r3,-4
  802dac:	d8800215 	stw	r2,8(sp)
  802db0:	0021883a 	mov	r16,zero
  802db4:	d8c00217 	ldw	r3,8(sp)
  802db8:	18800120 	cmpeqi	r2,r3,4
  802dbc:	10035d1e 	bne	r2,zero,803b34 <_dtoa_r+0x1040>
  802dc0:	18800160 	cmpeqi	r2,r3,5
  802dc4:	10031b1e 	bne	r2,zero,803a34 <_dtoa_r+0xf40>
  802dc8:	188000a0 	cmpeqi	r2,r3,2
  802dcc:	10024d26 	beq	r2,zero,803704 <_dtoa_r+0xc10>
  802dd0:	d8000715 	stw	zero,28(sp)
  802dd4:	d8801e17 	ldw	r2,120(sp)
  802dd8:	0083260e 	bge	zero,r2,803a74 <_dtoa_r+0xf80>
  802ddc:	d8800b15 	stw	r2,44(sp)
  802de0:	d8800515 	stw	r2,20(sp)
  802de4:	100d883a 	mov	r6,r2
  802de8:	b8001115 	stw	zero,68(r23)
  802dec:	30800610 	cmplti	r2,r6,24
  802df0:	1004f11e 	bne	r2,zero,8041b8 <_dtoa_r+0x16c4>
  802df4:	00c00044 	movi	r3,1
  802df8:	00800104 	movi	r2,4
  802dfc:	1085883a 	add	r2,r2,r2
  802e00:	11000504 	addi	r4,r2,20
  802e04:	180b883a 	mov	r5,r3
  802e08:	18c00044 	addi	r3,r3,1
  802e0c:	313ffb2e 	bgeu	r6,r4,802dfc <_dtoa_r+0x308>
  802e10:	b9401115 	stw	r5,68(r23)
  802e14:	b809883a 	mov	r4,r23
  802e18:	08061480 	call	806148 <_Balloc>
  802e1c:	d8800115 	stw	r2,4(sp)
  802e20:	1004de26 	beq	r2,zero,80419c <_dtoa_r+0x16a8>
  802e24:	d8800117 	ldw	r2,4(sp)
  802e28:	b8801015 	stw	r2,64(r23)
  802e2c:	d8800517 	ldw	r2,20(sp)
  802e30:	108003e8 	cmpgeui	r2,r2,15
  802e34:	1001021e 	bne	r2,zero,803240 <_dtoa_r+0x74c>
  802e38:	80010126 	beq	r16,zero,803240 <_dtoa_r+0x74c>
  802e3c:	d9000417 	ldw	r4,16(sp)
  802e40:	01038b0e 	bge	zero,r4,803c70 <_dtoa_r+0x117c>
  802e44:	208003cc 	andi	r2,r4,15
  802e48:	100690fa 	slli	r3,r2,3
  802e4c:	2029d13a 	srai	r20,r4,4
  802e50:	00802074 	movhi	r2,129
  802e54:	10802104 	addi	r2,r2,132
  802e58:	10c5883a 	add	r2,r2,r3
  802e5c:	a0c0040c 	andi	r3,r20,16
  802e60:	12800017 	ldw	r10,0(r2)
  802e64:	12400117 	ldw	r9,4(r2)
  802e68:	18032c26 	beq	r3,zero,803b1c <_dtoa_r+0x1028>
  802e6c:	00802074 	movhi	r2,129
  802e70:	10801704 	addi	r2,r2,92
  802e74:	11800817 	ldw	r6,32(r2)
  802e78:	11c00917 	ldw	r7,36(r2)
  802e7c:	9809883a 	mov	r4,r19
  802e80:	880b883a 	mov	r5,r17
  802e84:	da400e15 	stw	r9,56(sp)
  802e88:	da800d15 	stw	r10,52(sp)
  802e8c:	080b7780 	call	80b778 <__divdf3>
  802e90:	da800d17 	ldw	r10,52(sp)
  802e94:	da400e17 	ldw	r9,56(sp)
  802e98:	a50003cc 	andi	r20,r20,15
  802e9c:	d8800c15 	stw	r2,48(sp)
  802ea0:	1825883a 	mov	r18,r3
  802ea4:	054000c4 	movi	r21,3
  802ea8:	a0001126 	beq	r20,zero,802ef0 <_dtoa_r+0x3fc>
  802eac:	04002074 	movhi	r16,129
  802eb0:	84001704 	addi	r16,r16,92
  802eb4:	5009883a 	mov	r4,r10
  802eb8:	480b883a 	mov	r5,r9
  802ebc:	a180004c 	andi	r6,r20,1
  802ec0:	30000626 	beq	r6,zero,802edc <_dtoa_r+0x3e8>
  802ec4:	81800017 	ldw	r6,0(r16)
  802ec8:	81c00117 	ldw	r7,4(r16)
  802ecc:	ad400044 	addi	r21,r21,1
  802ed0:	080c2f80 	call	80c2f8 <__muldf3>
  802ed4:	1009883a 	mov	r4,r2
  802ed8:	180b883a 	mov	r5,r3
  802edc:	a029d07a 	srai	r20,r20,1
  802ee0:	84000204 	addi	r16,r16,8
  802ee4:	a03ff51e 	bne	r20,zero,802ebc <_dtoa_r+0x3c8>
  802ee8:	2015883a 	mov	r10,r4
  802eec:	2813883a 	mov	r9,r5
  802ef0:	d9000c17 	ldw	r4,48(sp)
  802ef4:	900b883a 	mov	r5,r18
  802ef8:	500d883a 	mov	r6,r10
  802efc:	480f883a 	mov	r7,r9
  802f00:	080b7780 	call	80b778 <__divdf3>
  802f04:	1021883a 	mov	r16,r2
  802f08:	1825883a 	mov	r18,r3
  802f0c:	d8800917 	ldw	r2,36(sp)
  802f10:	10000626 	beq	r2,zero,802f2c <_dtoa_r+0x438>
  802f14:	000d883a 	mov	r6,zero
  802f18:	01cffc34 	movhi	r7,16368
  802f1c:	8009883a 	mov	r4,r16
  802f20:	900b883a 	mov	r5,r18
  802f24:	080c2100 	call	80c210 <__ledf2>
  802f28:	10044416 	blt	r2,zero,80403c <_dtoa_r+0x1548>
  802f2c:	a809883a 	mov	r4,r21
  802f30:	080d42c0 	call	80d42c <__floatsidf>
  802f34:	800d883a 	mov	r6,r16
  802f38:	900f883a 	mov	r7,r18
  802f3c:	1009883a 	mov	r4,r2
  802f40:	180b883a 	mov	r5,r3
  802f44:	080c2f80 	call	80c2f8 <__muldf3>
  802f48:	000d883a 	mov	r6,zero
  802f4c:	01d00734 	movhi	r7,16412
  802f50:	1009883a 	mov	r4,r2
  802f54:	180b883a 	mov	r5,r3
  802f58:	080ae880 	call	80ae88 <__adddf3>
  802f5c:	1029883a 	mov	r20,r2
  802f60:	00bf3034 	movhi	r2,64704
  802f64:	1885883a 	add	r2,r3,r2
  802f68:	d8800c15 	stw	r2,48(sp)
  802f6c:	d8800517 	ldw	r2,20(sp)
  802f70:	10032226 	beq	r2,zero,803bfc <_dtoa_r+0x1108>
  802f74:	d8800417 	ldw	r2,16(sp)
  802f78:	d8801115 	stw	r2,68(sp)
  802f7c:	d8800517 	ldw	r2,20(sp)
  802f80:	d8800d15 	stw	r2,52(sp)
  802f84:	d8800d17 	ldw	r2,52(sp)
  802f88:	900b883a 	mov	r5,r18
  802f8c:	8009883a 	mov	r4,r16
  802f90:	10bfffc4 	addi	r2,r2,-1
  802f94:	100690fa 	slli	r3,r2,3
  802f98:	00802074 	movhi	r2,129
  802f9c:	10802104 	addi	r2,r2,132
  802fa0:	10c5883a 	add	r2,r2,r3
  802fa4:	12800017 	ldw	r10,0(r2)
  802fa8:	12c00117 	ldw	r11,4(r2)
  802fac:	da800f15 	stw	r10,60(sp)
  802fb0:	dac00e15 	stw	r11,56(sp)
  802fb4:	080d3ac0 	call	80d3ac <__fixdfsi>
  802fb8:	1009883a 	mov	r4,r2
  802fbc:	10800c04 	addi	r2,r2,48
  802fc0:	d8801015 	stw	r2,64(sp)
  802fc4:	080d42c0 	call	80d42c <__floatsidf>
  802fc8:	8009883a 	mov	r4,r16
  802fcc:	100d883a 	mov	r6,r2
  802fd0:	180f883a 	mov	r7,r3
  802fd4:	900b883a 	mov	r5,r18
  802fd8:	080caa40 	call	80caa4 <__subdf3>
  802fdc:	d9000117 	ldw	r4,4(sp)
  802fe0:	dac00e17 	ldw	r11,56(sp)
  802fe4:	da800f17 	ldw	r10,60(sp)
  802fe8:	1825883a 	mov	r18,r3
  802fec:	d8c00717 	ldw	r3,28(sp)
  802ff0:	25400044 	addi	r21,r4,1
  802ff4:	1021883a 	mov	r16,r2
  802ff8:	500d883a 	mov	r6,r10
  802ffc:	580f883a 	mov	r7,r11
  803000:	1803b626 	beq	r3,zero,803edc <_dtoa_r+0x13e8>
  803004:	0009883a 	mov	r4,zero
  803008:	014ff834 	movhi	r5,16352
  80300c:	080b7780 	call	80b778 <__divdf3>
  803010:	d9c00c17 	ldw	r7,48(sp)
  803014:	a00d883a 	mov	r6,r20
  803018:	1009883a 	mov	r4,r2
  80301c:	180b883a 	mov	r5,r3
  803020:	080caa40 	call	80caa4 <__subdf3>
  803024:	d9000117 	ldw	r4,4(sp)
  803028:	1029883a 	mov	r20,r2
  80302c:	d8801017 	ldw	r2,64(sp)
  803030:	800d883a 	mov	r6,r16
  803034:	900f883a 	mov	r7,r18
  803038:	20800005 	stb	r2,0(r4)
  80303c:	180b883a 	mov	r5,r3
  803040:	a009883a 	mov	r4,r20
  803044:	d8c00c15 	stw	r3,48(sp)
  803048:	080c1280 	call	80c128 <__gedf2>
  80304c:	0083e716 	blt	zero,r2,803fec <_dtoa_r+0x14f8>
  803050:	0005883a 	mov	r2,zero
  803054:	dd800e15 	stw	r22,56(sp)
  803058:	dc400f15 	stw	r17,60(sp)
  80305c:	dd800d17 	ldw	r22,52(sp)
  803060:	dc400c17 	ldw	r17,48(sp)
  803064:	ddc00d15 	stw	r23,52(sp)
  803068:	dcc00c15 	stw	r19,48(sp)
  80306c:	1027883a 	mov	r19,r2
  803070:	00002606 	br	80310c <_dtoa_r+0x618>
  803074:	9cc00044 	addi	r19,r19,1
  803078:	9d806d0e 	bge	r19,r22,803230 <_dtoa_r+0x73c>
  80307c:	a009883a 	mov	r4,r20
  803080:	880b883a 	mov	r5,r17
  803084:	000d883a 	mov	r6,zero
  803088:	01d00934 	movhi	r7,16420
  80308c:	080c2f80 	call	80c2f8 <__muldf3>
  803090:	000d883a 	mov	r6,zero
  803094:	01d00934 	movhi	r7,16420
  803098:	8009883a 	mov	r4,r16
  80309c:	900b883a 	mov	r5,r18
  8030a0:	1029883a 	mov	r20,r2
  8030a4:	1823883a 	mov	r17,r3
  8030a8:	080c2f80 	call	80c2f8 <__muldf3>
  8030ac:	180b883a 	mov	r5,r3
  8030b0:	1009883a 	mov	r4,r2
  8030b4:	1821883a 	mov	r16,r3
  8030b8:	1025883a 	mov	r18,r2
  8030bc:	080d3ac0 	call	80d3ac <__fixdfsi>
  8030c0:	1009883a 	mov	r4,r2
  8030c4:	102f883a 	mov	r23,r2
  8030c8:	080d42c0 	call	80d42c <__floatsidf>
  8030cc:	9009883a 	mov	r4,r18
  8030d0:	800b883a 	mov	r5,r16
  8030d4:	100d883a 	mov	r6,r2
  8030d8:	180f883a 	mov	r7,r3
  8030dc:	080caa40 	call	80caa4 <__subdf3>
  8030e0:	ad400044 	addi	r21,r21,1
  8030e4:	ba000c04 	addi	r8,r23,48
  8030e8:	aa3fffc5 	stb	r8,-1(r21)
  8030ec:	a00d883a 	mov	r6,r20
  8030f0:	880f883a 	mov	r7,r17
  8030f4:	1009883a 	mov	r4,r2
  8030f8:	180b883a 	mov	r5,r3
  8030fc:	1021883a 	mov	r16,r2
  803100:	1825883a 	mov	r18,r3
  803104:	080c2100 	call	80c210 <__ledf2>
  803108:	10040516 	blt	r2,zero,804120 <_dtoa_r+0x162c>
  80310c:	800d883a 	mov	r6,r16
  803110:	900f883a 	mov	r7,r18
  803114:	0009883a 	mov	r4,zero
  803118:	014ffc34 	movhi	r5,16368
  80311c:	080caa40 	call	80caa4 <__subdf3>
  803120:	a00d883a 	mov	r6,r20
  803124:	880f883a 	mov	r7,r17
  803128:	1009883a 	mov	r4,r2
  80312c:	180b883a 	mov	r5,r3
  803130:	080c2100 	call	80c210 <__ledf2>
  803134:	103fcf0e 	bge	r2,zero,803074 <_dtoa_r+0x580>
  803138:	d8801117 	ldw	r2,68(sp)
  80313c:	ddc00d17 	ldw	r23,52(sp)
  803140:	d9000117 	ldw	r4,4(sp)
  803144:	10800044 	addi	r2,r2,1
  803148:	d8800415 	stw	r2,16(sp)
  80314c:	a829883a 	mov	r20,r21
  803150:	00000106 	br	803158 <_dtoa_r+0x664>
  803154:	a103da26 	beq	r20,r4,8040c0 <_dtoa_r+0x15cc>
  803158:	a0ffffc3 	ldbu	r3,-1(r20)
  80315c:	a02b883a 	mov	r21,r20
  803160:	a53fffc4 	addi	r20,r20,-1
  803164:	18803fcc 	andi	r2,r3,255
  803168:	1080201c 	xori	r2,r2,128
  80316c:	10bfe004 	addi	r2,r2,-128
  803170:	10800e60 	cmpeqi	r2,r2,57
  803174:	103ff71e 	bne	r2,zero,803154 <_dtoa_r+0x660>
  803178:	18c00044 	addi	r3,r3,1
  80317c:	a0c00005 	stb	r3,0(r20)
  803180:	00013f06 	br	803680 <_dtoa_r+0xb8c>
  803184:	04600034 	movhi	r17,32768
  803188:	8c7fffc4 	addi	r17,r17,-1
  80318c:	9462703a 	and	r17,r18,r17
  803190:	00800044 	movi	r2,1
  803194:	8825883a 	mov	r18,r17
  803198:	80800015 	stw	r2,0(r16)
  80319c:	00dffc34 	movhi	r3,32752
  8031a0:	909ffc2c 	andhi	r2,r18,32752
  8031a4:	10fe731e 	bne	r2,r3,802b74 <_dtoa_r+0x80>
  8031a8:	d9001f17 	ldw	r4,124(sp)
  8031ac:	00800434 	movhi	r2,16
  8031b0:	10bfffc4 	addi	r2,r2,-1
  8031b4:	9084703a 	and	r2,r18,r2
  8031b8:	00c9c3c4 	movi	r3,9999
  8031bc:	20c00015 	stw	r3,0(r4)
  8031c0:	14e6b03a 	or	r19,r2,r19
  8031c4:	9800141e 	bne	r19,zero,803218 <_dtoa_r+0x724>
  8031c8:	d8802117 	ldw	r2,132(sp)
  8031cc:	10041226 	beq	r2,zero,804218 <_dtoa_r+0x1724>
  8031d0:	00802074 	movhi	r2,129
  8031d4:	1007883a 	mov	r3,r2
  8031d8:	18ffe204 	addi	r3,r3,-120
  8031dc:	00802074 	movhi	r2,129
  8031e0:	d8c00115 	stw	r3,4(sp)
  8031e4:	10bfe404 	addi	r2,r2,-112
  8031e8:	d8c02117 	ldw	r3,132(sp)
  8031ec:	18800015 	stw	r2,0(r3)
  8031f0:	003e7206 	br	802bbc <_dtoa_r+0xc8>
  8031f4:	01400434 	movhi	r5,16
  8031f8:	297fffc4 	addi	r5,r5,-1
  8031fc:	894a703a 	and	r5,r17,r5
  803200:	dd001217 	ldw	r20,72(sp)
  803204:	9809883a 	mov	r4,r19
  803208:	294ffc34 	orhi	r5,r5,16368
  80320c:	843f0044 	addi	r16,r16,-1023
  803210:	d8000a15 	stw	zero,40(sp)
  803214:	003e9306 	br	802c64 <_dtoa_r+0x170>
  803218:	d8802117 	ldw	r2,132(sp)
  80321c:	1001fe1e 	bne	r2,zero,803a18 <_dtoa_r+0xf24>
  803220:	00802074 	movhi	r2,129
  803224:	10bfe104 	addi	r2,r2,-124
  803228:	d8800115 	stw	r2,4(sp)
  80322c:	003e6306 	br	802bbc <_dtoa_r+0xc8>
  803230:	dd800e17 	ldw	r22,56(sp)
  803234:	ddc00d17 	ldw	r23,52(sp)
  803238:	dc400f17 	ldw	r17,60(sp)
  80323c:	dcc00c17 	ldw	r19,48(sp)
  803240:	d8801317 	ldw	r2,76(sp)
  803244:	10006e16 	blt	r2,zero,803400 <_dtoa_r+0x90c>
  803248:	d9000417 	ldw	r4,16(sp)
  80324c:	20c003c8 	cmpgei	r3,r4,15
  803250:	18006b1e 	bne	r3,zero,803400 <_dtoa_r+0x90c>
  803254:	200690fa 	slli	r3,r4,3
  803258:	00802074 	movhi	r2,129
  80325c:	10802104 	addi	r2,r2,132
  803260:	10c5883a 	add	r2,r2,r3
  803264:	14000017 	ldw	r16,0(r2)
  803268:	14800117 	ldw	r18,4(r2)
  80326c:	d8801e17 	ldw	r2,120(sp)
  803270:	1000150e 	bge	r2,zero,8032c8 <_dtoa_r+0x7d4>
  803274:	d8800517 	ldw	r2,20(sp)
  803278:	00801316 	blt	zero,r2,8032c8 <_dtoa_r+0x7d4>
  80327c:	d8800517 	ldw	r2,20(sp)
  803280:	1002721e 	bne	r2,zero,803c4c <_dtoa_r+0x1158>
  803284:	8009883a 	mov	r4,r16
  803288:	000d883a 	mov	r6,zero
  80328c:	01d00534 	movhi	r7,16404
  803290:	900b883a 	mov	r5,r18
  803294:	080c2f80 	call	80c2f8 <__muldf3>
  803298:	100d883a 	mov	r6,r2
  80329c:	180f883a 	mov	r7,r3
  8032a0:	9809883a 	mov	r4,r19
  8032a4:	880b883a 	mov	r5,r17
  8032a8:	080c2100 	call	80c210 <__ledf2>
  8032ac:	0029883a 	mov	r20,zero
  8032b0:	0021883a 	mov	r16,zero
  8032b4:	00820216 	blt	zero,r2,803ac0 <_dtoa_r+0xfcc>
  8032b8:	d8801e17 	ldw	r2,120(sp)
  8032bc:	dd400117 	ldw	r21,4(sp)
  8032c0:	00a2303a 	nor	r17,zero,r2
  8032c4:	00020406 	br	803ad8 <_dtoa_r+0xfe4>
  8032c8:	800d883a 	mov	r6,r16
  8032cc:	900f883a 	mov	r7,r18
  8032d0:	9809883a 	mov	r4,r19
  8032d4:	880b883a 	mov	r5,r17
  8032d8:	080b7780 	call	80b778 <__divdf3>
  8032dc:	180b883a 	mov	r5,r3
  8032e0:	1009883a 	mov	r4,r2
  8032e4:	080d3ac0 	call	80d3ac <__fixdfsi>
  8032e8:	1009883a 	mov	r4,r2
  8032ec:	102b883a 	mov	r21,r2
  8032f0:	080d42c0 	call	80d42c <__floatsidf>
  8032f4:	800d883a 	mov	r6,r16
  8032f8:	900f883a 	mov	r7,r18
  8032fc:	1009883a 	mov	r4,r2
  803300:	180b883a 	mov	r5,r3
  803304:	080c2f80 	call	80c2f8 <__muldf3>
  803308:	100d883a 	mov	r6,r2
  80330c:	9809883a 	mov	r4,r19
  803310:	880b883a 	mov	r5,r17
  803314:	180f883a 	mov	r7,r3
  803318:	080caa40 	call	80caa4 <__subdf3>
  80331c:	d9800117 	ldw	r6,4(sp)
  803320:	dd800517 	ldw	r22,20(sp)
  803324:	1009883a 	mov	r4,r2
  803328:	a8800c04 	addi	r2,r21,48
  80332c:	30800005 	stb	r2,0(r6)
  803330:	b0800060 	cmpeqi	r2,r22,1
  803334:	180b883a 	mov	r5,r3
  803338:	35000044 	addi	r20,r6,1
  80333c:	10029f1e 	bne	r2,zero,803dbc <_dtoa_r+0x12c8>
  803340:	04400044 	movi	r17,1
  803344:	ddc00215 	stw	r23,8(sp)
  803348:	00001c06 	br	8033bc <_dtoa_r+0x8c8>
  80334c:	800d883a 	mov	r6,r16
  803350:	900f883a 	mov	r7,r18
  803354:	a809883a 	mov	r4,r21
  803358:	980b883a 	mov	r5,r19
  80335c:	080b7780 	call	80b778 <__divdf3>
  803360:	180b883a 	mov	r5,r3
  803364:	1009883a 	mov	r4,r2
  803368:	080d3ac0 	call	80d3ac <__fixdfsi>
  80336c:	1009883a 	mov	r4,r2
  803370:	102f883a 	mov	r23,r2
  803374:	080d42c0 	call	80d42c <__floatsidf>
  803378:	800d883a 	mov	r6,r16
  80337c:	900f883a 	mov	r7,r18
  803380:	1009883a 	mov	r4,r2
  803384:	180b883a 	mov	r5,r3
  803388:	080c2f80 	call	80c2f8 <__muldf3>
  80338c:	a809883a 	mov	r4,r21
  803390:	980b883a 	mov	r5,r19
  803394:	100d883a 	mov	r6,r2
  803398:	180f883a 	mov	r7,r3
  80339c:	080caa40 	call	80caa4 <__subdf3>
  8033a0:	b9000c04 	addi	r4,r23,48
  8033a4:	a1000005 	stb	r4,0(r20)
  8033a8:	8c400044 	addi	r17,r17,1
  8033ac:	a5000044 	addi	r20,r20,1
  8033b0:	1009883a 	mov	r4,r2
  8033b4:	180b883a 	mov	r5,r3
  8033b8:	8d827e26 	beq	r17,r22,803db4 <_dtoa_r+0x12c0>
  8033bc:	000d883a 	mov	r6,zero
  8033c0:	01d00934 	movhi	r7,16420
  8033c4:	080c2f80 	call	80c2f8 <__muldf3>
  8033c8:	000d883a 	mov	r6,zero
  8033cc:	000f883a 	mov	r7,zero
  8033d0:	1009883a 	mov	r4,r2
  8033d4:	180b883a 	mov	r5,r3
  8033d8:	102b883a 	mov	r21,r2
  8033dc:	1827883a 	mov	r19,r3
  8033e0:	080c0a80 	call	80c0a8 <__eqdf2>
  8033e4:	103fd91e 	bne	r2,zero,80334c <_dtoa_r+0x858>
  8033e8:	d8800417 	ldw	r2,16(sp)
  8033ec:	ddc00217 	ldw	r23,8(sp)
  8033f0:	a02b883a 	mov	r21,r20
  8033f4:	10800044 	addi	r2,r2,1
  8033f8:	d8800415 	stw	r2,16(sp)
  8033fc:	0000a006 	br	803680 <_dtoa_r+0xb8c>
  803400:	d8c00717 	ldw	r3,28(sp)
  803404:	1800e326 	beq	r3,zero,803794 <_dtoa_r+0xca0>
  803408:	d8c00217 	ldw	r3,8(sp)
  80340c:	18c00088 	cmpgei	r3,r3,2
  803410:	1801e026 	beq	r3,zero,803b94 <_dtoa_r+0x10a0>
  803414:	d8800517 	ldw	r2,20(sp)
  803418:	153fffc4 	addi	r20,r2,-1
  80341c:	d8800817 	ldw	r2,32(sp)
  803420:	1501bc0e 	bge	r2,r20,803b14 <_dtoa_r+0x1020>
  803424:	d8800817 	ldw	r2,32(sp)
  803428:	d8c00317 	ldw	r3,12(sp)
  80342c:	dd000815 	stw	r20,32(sp)
  803430:	a085c83a 	sub	r2,r20,r2
  803434:	1885883a 	add	r2,r3,r2
  803438:	d8800315 	stw	r2,12(sp)
  80343c:	0029883a 	mov	r20,zero
  803440:	d8800517 	ldw	r2,20(sp)
  803444:	10028b16 	blt	r2,zero,803e74 <_dtoa_r+0x1380>
  803448:	d8c00617 	ldw	r3,24(sp)
  80344c:	b0ad883a 	add	r22,r22,r2
  803450:	1885883a 	add	r2,r3,r2
  803454:	1825883a 	mov	r18,r3
  803458:	d8800615 	stw	r2,24(sp)
  80345c:	01400044 	movi	r5,1
  803460:	b809883a 	mov	r4,r23
  803464:	08065b80 	call	8065b8 <__i2b>
  803468:	1021883a 	mov	r16,r2
  80346c:	0480080e 	bge	zero,r18,803490 <_dtoa_r+0x99c>
  803470:	0580070e 	bge	zero,r22,803490 <_dtoa_r+0x99c>
  803474:	9005883a 	mov	r2,r18
  803478:	b4819e16 	blt	r22,r18,803af4 <_dtoa_r+0x1000>
  80347c:	d8c00617 	ldw	r3,24(sp)
  803480:	90a5c83a 	sub	r18,r18,r2
  803484:	b0adc83a 	sub	r22,r22,r2
  803488:	1887c83a 	sub	r3,r3,r2
  80348c:	d8c00615 	stw	r3,24(sp)
  803490:	d8800817 	ldw	r2,32(sp)
  803494:	10001426 	beq	r2,zero,8034e8 <_dtoa_r+0x9f4>
  803498:	d8800717 	ldw	r2,28(sp)
  80349c:	1001ee26 	beq	r2,zero,803c58 <_dtoa_r+0x1164>
  8034a0:	05000e0e 	bge	zero,r20,8034dc <_dtoa_r+0x9e8>
  8034a4:	800b883a 	mov	r5,r16
  8034a8:	a00d883a 	mov	r6,r20
  8034ac:	b809883a 	mov	r4,r23
  8034b0:	080692c0 	call	80692c <__pow5mult>
  8034b4:	e00d883a 	mov	r6,fp
  8034b8:	100b883a 	mov	r5,r2
  8034bc:	b809883a 	mov	r4,r23
  8034c0:	1021883a 	mov	r16,r2
  8034c4:	08066680 	call	806668 <__multiply>
  8034c8:	102b883a 	mov	r21,r2
  8034cc:	e00b883a 	mov	r5,fp
  8034d0:	b809883a 	mov	r4,r23
  8034d4:	08061ec0 	call	8061ec <_Bfree>
  8034d8:	a839883a 	mov	fp,r21
  8034dc:	d8800817 	ldw	r2,32(sp)
  8034e0:	150dc83a 	sub	r6,r2,r20
  8034e4:	15025e1e 	bne	r2,r20,803e60 <_dtoa_r+0x136c>
  8034e8:	01400044 	movi	r5,1
  8034ec:	b809883a 	mov	r4,r23
  8034f0:	08065b80 	call	8065b8 <__i2b>
  8034f4:	d9800317 	ldw	r6,12(sp)
  8034f8:	1029883a 	mov	r20,r2
  8034fc:	0180b716 	blt	zero,r6,8037dc <_dtoa_r+0xce8>
  803500:	d8800217 	ldw	r2,8(sp)
  803504:	10800088 	cmpgei	r2,r2,2
  803508:	10014d26 	beq	r2,zero,803a40 <_dtoa_r+0xf4c>
  80350c:	0023883a 	mov	r17,zero
  803510:	d8c00317 	ldw	r3,12(sp)
  803514:	00800044 	movi	r2,1
  803518:	1800b81e 	bne	r3,zero,8037fc <_dtoa_r+0xd08>
  80351c:	1585883a 	add	r2,r2,r22
  803520:	108007cc 	andi	r2,r2,31
  803524:	1000a526 	beq	r2,zero,8037bc <_dtoa_r+0xcc8>
  803528:	00c00804 	movi	r3,32
  80352c:	1887c83a 	sub	r3,r3,r2
  803530:	19000150 	cmplti	r4,r3,5
  803534:	20033c1e 	bne	r4,zero,804228 <_dtoa_r+0x1734>
  803538:	00c00704 	movi	r3,28
  80353c:	1885c83a 	sub	r2,r3,r2
  803540:	d8c00617 	ldw	r3,24(sp)
  803544:	90a5883a 	add	r18,r18,r2
  803548:	b0ad883a 	add	r22,r22,r2
  80354c:	1887883a 	add	r3,r3,r2
  803550:	d8c00615 	stw	r3,24(sp)
  803554:	d8800617 	ldw	r2,24(sp)
  803558:	00809216 	blt	zero,r2,8037a4 <_dtoa_r+0xcb0>
  80355c:	0580050e 	bge	zero,r22,803574 <_dtoa_r+0xa80>
  803560:	a00b883a 	mov	r5,r20
  803564:	b00d883a 	mov	r6,r22
  803568:	b809883a 	mov	r4,r23
  80356c:	0806a740 	call	806a74 <__lshift>
  803570:	1029883a 	mov	r20,r2
  803574:	d8800917 	ldw	r2,36(sp)
  803578:	1001151e 	bne	r2,zero,8039d0 <_dtoa_r+0xedc>
  80357c:	d8800517 	ldw	r2,20(sp)
  803580:	0081020e 	bge	zero,r2,80398c <_dtoa_r+0xe98>
  803584:	d8800717 	ldw	r2,28(sp)
  803588:	1000af1e 	bne	r2,zero,803848 <_dtoa_r+0xd54>
  80358c:	d8800417 	ldw	r2,16(sp)
  803590:	10800044 	addi	r2,r2,1
  803594:	d8800415 	stw	r2,16(sp)
  803598:	dc800517 	ldw	r18,20(sp)
  80359c:	dd400117 	ldw	r21,4(sp)
  8035a0:	04400044 	movi	r17,1
  8035a4:	00000706 	br	8035c4 <_dtoa_r+0xad0>
  8035a8:	e00b883a 	mov	r5,fp
  8035ac:	000f883a 	mov	r7,zero
  8035b0:	01800284 	movi	r6,10
  8035b4:	b809883a 	mov	r4,r23
  8035b8:	08062100 	call	806210 <__multadd>
  8035bc:	1039883a 	mov	fp,r2
  8035c0:	8c400044 	addi	r17,r17,1
  8035c4:	a00b883a 	mov	r5,r20
  8035c8:	e009883a 	mov	r4,fp
  8035cc:	08028d40 	call	8028d4 <quorem>
  8035d0:	14c00c04 	addi	r19,r2,48
  8035d4:	ac45883a 	add	r2,r21,r17
  8035d8:	14ffffc5 	stb	r19,-1(r2)
  8035dc:	8cbff216 	blt	r17,r18,8035a8 <_dtoa_r+0xab4>
  8035e0:	d8800517 	ldw	r2,20(sp)
  8035e4:	0081510e 	bge	zero,r2,803b2c <_dtoa_r+0x1038>
  8035e8:	d8c00117 	ldw	r3,4(sp)
  8035ec:	0023883a 	mov	r17,zero
  8035f0:	18ab883a 	add	r21,r3,r2
  8035f4:	e00b883a 	mov	r5,fp
  8035f8:	01800044 	movi	r6,1
  8035fc:	b809883a 	mov	r4,r23
  803600:	0806a740 	call	806a74 <__lshift>
  803604:	1009883a 	mov	r4,r2
  803608:	a00b883a 	mov	r5,r20
  80360c:	1039883a 	mov	fp,r2
  803610:	0806bfc0 	call	806bfc <__mcmp>
  803614:	a93fffc3 	ldbu	r4,-1(r21)
  803618:	0081490e 	bge	zero,r2,803b40 <_dtoa_r+0x104c>
  80361c:	d9400117 	ldw	r5,4(sp)
  803620:	00000306 	br	803630 <_dtoa_r+0xb3c>
  803624:	19415426 	beq	r3,r5,803b78 <_dtoa_r+0x1084>
  803628:	193fffc3 	ldbu	r4,-1(r3)
  80362c:	182b883a 	mov	r21,r3
  803630:	20803fcc 	andi	r2,r4,255
  803634:	1080201c 	xori	r2,r2,128
  803638:	10bfe004 	addi	r2,r2,-128
  80363c:	10800e60 	cmpeqi	r2,r2,57
  803640:	a8ffffc4 	addi	r3,r21,-1
  803644:	103ff71e 	bne	r2,zero,803624 <_dtoa_r+0xb30>
  803648:	21000044 	addi	r4,r4,1
  80364c:	19000005 	stb	r4,0(r3)
  803650:	a00b883a 	mov	r5,r20
  803654:	b809883a 	mov	r4,r23
  803658:	08061ec0 	call	8061ec <_Bfree>
  80365c:	80000826 	beq	r16,zero,803680 <_dtoa_r+0xb8c>
  803660:	88000426 	beq	r17,zero,803674 <_dtoa_r+0xb80>
  803664:	8c000326 	beq	r17,r16,803674 <_dtoa_r+0xb80>
  803668:	880b883a 	mov	r5,r17
  80366c:	b809883a 	mov	r4,r23
  803670:	08061ec0 	call	8061ec <_Bfree>
  803674:	800b883a 	mov	r5,r16
  803678:	b809883a 	mov	r4,r23
  80367c:	08061ec0 	call	8061ec <_Bfree>
  803680:	e00b883a 	mov	r5,fp
  803684:	b809883a 	mov	r4,r23
  803688:	08061ec0 	call	8061ec <_Bfree>
  80368c:	d8801f17 	ldw	r2,124(sp)
  803690:	d8c00417 	ldw	r3,16(sp)
  803694:	a8000005 	stb	zero,0(r21)
  803698:	10c00015 	stw	r3,0(r2)
  80369c:	d8802117 	ldw	r2,132(sp)
  8036a0:	103d4626 	beq	r2,zero,802bbc <_dtoa_r+0xc8>
  8036a4:	15400015 	stw	r21,0(r2)
  8036a8:	003d4406 	br	802bbc <_dtoa_r+0xc8>
  8036ac:	d8000915 	stw	zero,36(sp)
  8036b0:	b0002416 	blt	r22,zero,803744 <_dtoa_r+0xc50>
  8036b4:	d8000615 	stw	zero,24(sp)
  8036b8:	d8800317 	ldw	r2,12(sp)
  8036bc:	d8c00217 	ldw	r3,8(sp)
  8036c0:	d8000815 	stw	zero,32(sp)
  8036c4:	b0ad883a 	add	r22,r22,r2
  8036c8:	d8800415 	stw	r2,16(sp)
  8036cc:	188002a8 	cmpgeui	r2,r3,10
  8036d0:	103db326 	beq	r2,zero,802da0 <_dtoa_r+0x2ac>
  8036d4:	00800044 	movi	r2,1
  8036d8:	d8800715 	stw	r2,28(sp)
  8036dc:	00bfffc4 	movi	r2,-1
  8036e0:	04000044 	movi	r16,1
  8036e4:	d8000215 	stw	zero,8(sp)
  8036e8:	d8800515 	stw	r2,20(sp)
  8036ec:	d8001e15 	stw	zero,120(sp)
  8036f0:	d8800517 	ldw	r2,20(sp)
  8036f4:	b8001115 	stw	zero,68(r23)
  8036f8:	000b883a 	mov	r5,zero
  8036fc:	d8800b15 	stw	r2,44(sp)
  803700:	003dc406 	br	802e14 <_dtoa_r+0x320>
  803704:	188000e0 	cmpeqi	r2,r3,3
  803708:	d8000715 	stw	zero,28(sp)
  80370c:	1002ac26 	beq	r2,zero,8041c0 <_dtoa_r+0x16cc>
  803710:	d8801e17 	ldw	r2,120(sp)
  803714:	d8c00417 	ldw	r3,16(sp)
  803718:	10c5883a 	add	r2,r2,r3
  80371c:	d8800b15 	stw	r2,44(sp)
  803720:	10800044 	addi	r2,r2,1
  803724:	d8800515 	stw	r2,20(sp)
  803728:	100d883a 	mov	r6,r2
  80372c:	00bdae16 	blt	zero,r2,802de8 <_dtoa_r+0x2f4>
  803730:	01800044 	movi	r6,1
  803734:	003dac06 	br	802de8 <_dtoa_r+0x2f4>
  803738:	00800044 	movi	r2,1
  80373c:	d8800915 	stw	r2,36(sp)
  803740:	b03d890e 	bge	r22,zero,802d68 <_dtoa_r+0x274>
  803744:	00800044 	movi	r2,1
  803748:	1405c83a 	sub	r2,r2,r16
  80374c:	d8800615 	stw	r2,24(sp)
  803750:	002d883a 	mov	r22,zero
  803754:	003d8506 	br	802d6c <_dtoa_r+0x278>
  803758:	a809883a 	mov	r4,r21
  80375c:	080d42c0 	call	80d42c <__floatsidf>
  803760:	900d883a 	mov	r6,r18
  803764:	b00f883a 	mov	r7,r22
  803768:	1009883a 	mov	r4,r2
  80376c:	180b883a 	mov	r5,r3
  803770:	080c0a80 	call	80c0a8 <__eqdf2>
  803774:	103d6926 	beq	r2,zero,802d1c <_dtoa_r+0x228>
  803778:	a8bfffc4 	addi	r2,r21,-1
  80377c:	d8800315 	stw	r2,12(sp)
  803780:	003d6606 	br	802d1c <_dtoa_r+0x228>
  803784:	00802074 	movhi	r2,129
  803788:	10bfd804 	addi	r2,r2,-160
  80378c:	d8800115 	stw	r2,4(sp)
  803790:	003d0a06 	br	802bbc <_dtoa_r+0xc8>
  803794:	dd000817 	ldw	r20,32(sp)
  803798:	dc800617 	ldw	r18,24(sp)
  80379c:	0021883a 	mov	r16,zero
  8037a0:	003f3206 	br	80346c <_dtoa_r+0x978>
  8037a4:	e00b883a 	mov	r5,fp
  8037a8:	100d883a 	mov	r6,r2
  8037ac:	b809883a 	mov	r4,r23
  8037b0:	0806a740 	call	806a74 <__lshift>
  8037b4:	1039883a 	mov	fp,r2
  8037b8:	003f6806 	br	80355c <_dtoa_r+0xa68>
  8037bc:	00800704 	movi	r2,28
  8037c0:	003f5f06 	br	803540 <_dtoa_r+0xa4c>
  8037c4:	01000804 	movi	r4,32
  8037c8:	2089c83a 	sub	r4,r4,r2
  8037cc:	9908983a 	sll	r4,r19,r4
  8037d0:	003d1d06 	br	802c48 <_dtoa_r+0x154>
  8037d4:	04000044 	movi	r16,1
  8037d8:	003d7606 	br	802db4 <_dtoa_r+0x2c0>
  8037dc:	100b883a 	mov	r5,r2
  8037e0:	b809883a 	mov	r4,r23
  8037e4:	080692c0 	call	80692c <__pow5mult>
  8037e8:	d8c00217 	ldw	r3,8(sp)
  8037ec:	1029883a 	mov	r20,r2
  8037f0:	18c00090 	cmplti	r3,r3,2
  8037f4:	1801511e 	bne	r3,zero,803d3c <_dtoa_r+0x1248>
  8037f8:	0023883a 	mov	r17,zero
  8037fc:	a0800417 	ldw	r2,16(r20)
  803800:	10800104 	addi	r2,r2,4
  803804:	100490ba 	slli	r2,r2,2
  803808:	a085883a 	add	r2,r20,r2
  80380c:	11000017 	ldw	r4,0(r2)
  803810:	08064a40 	call	8064a4 <__hi0bits>
  803814:	00c00804 	movi	r3,32
  803818:	1885c83a 	sub	r2,r3,r2
  80381c:	003f3f06 	br	80351c <_dtoa_r+0xa28>
  803820:	800b883a 	mov	r5,r16
  803824:	000f883a 	mov	r7,zero
  803828:	01800284 	movi	r6,10
  80382c:	b809883a 	mov	r4,r23
  803830:	08062100 	call	806210 <__multadd>
  803834:	1021883a 	mov	r16,r2
  803838:	d8800b17 	ldw	r2,44(sp)
  80383c:	00824b0e 	bge	zero,r2,80416c <_dtoa_r+0x1678>
  803840:	dd400415 	stw	r21,16(sp)
  803844:	d8800515 	stw	r2,20(sp)
  803848:	0480ac16 	blt	zero,r18,803afc <_dtoa_r+0x1008>
  80384c:	8801731e 	bne	r17,zero,803e1c <_dtoa_r+0x1328>
  803850:	8025883a 	mov	r18,r16
  803854:	dd800117 	ldw	r22,4(sp)
  803858:	d9000517 	ldw	r4,20(sp)
  80385c:	98c0004c 	andi	r3,r19,1
  803860:	b0bfffc4 	addi	r2,r22,-1
  803864:	1105883a 	add	r2,r2,r4
  803868:	d8800515 	stw	r2,20(sp)
  80386c:	d8800217 	ldw	r2,8(sp)
  803870:	d8c00815 	stw	r3,32(sp)
  803874:	1884b03a 	or	r2,r3,r2
  803878:	d8800715 	stw	r2,28(sp)
  80387c:	00002906 	br	803924 <_dtoa_r+0xe30>
  803880:	e009883a 	mov	r4,fp
  803884:	0806bfc0 	call	806bfc <__mcmp>
  803888:	980b883a 	mov	r5,r19
  80388c:	b809883a 	mov	r4,r23
  803890:	d8800315 	stw	r2,12(sp)
  803894:	08061ec0 	call	8061ec <_Bfree>
  803898:	d8800317 	ldw	r2,12(sp)
  80389c:	1000021e 	bne	r2,zero,8038a8 <_dtoa_r+0xdb4>
  8038a0:	d8c00717 	ldw	r3,28(sp)
  8038a4:	18022326 	beq	r3,zero,804134 <_dtoa_r+0x1640>
  8038a8:	b4c00044 	addi	r19,r22,1
  8038ac:	88012916 	blt	r17,zero,803d54 <_dtoa_r+0x1260>
  8038b0:	d8c00217 	ldw	r3,8(sp)
  8038b4:	88e2b03a 	or	r17,r17,r3
  8038b8:	d8c00817 	ldw	r3,32(sp)
  8038bc:	1c62b03a 	or	r17,r3,r17
  8038c0:	88012426 	beq	r17,zero,803d54 <_dtoa_r+0x1260>
  8038c4:	00816f16 	blt	zero,r2,803e84 <_dtoa_r+0x1390>
  8038c8:	d8800517 	ldw	r2,20(sp)
  8038cc:	b5400005 	stb	r21,0(r22)
  8038d0:	15817926 	beq	r2,r22,803eb8 <_dtoa_r+0x13c4>
  8038d4:	e00b883a 	mov	r5,fp
  8038d8:	000f883a 	mov	r7,zero
  8038dc:	01800284 	movi	r6,10
  8038e0:	b809883a 	mov	r4,r23
  8038e4:	08062100 	call	806210 <__multadd>
  8038e8:	1039883a 	mov	fp,r2
  8038ec:	800b883a 	mov	r5,r16
  8038f0:	000f883a 	mov	r7,zero
  8038f4:	01800284 	movi	r6,10
  8038f8:	b809883a 	mov	r4,r23
  8038fc:	84801f26 	beq	r16,r18,80397c <_dtoa_r+0xe88>
  803900:	08062100 	call	806210 <__multadd>
  803904:	900b883a 	mov	r5,r18
  803908:	000f883a 	mov	r7,zero
  80390c:	01800284 	movi	r6,10
  803910:	b809883a 	mov	r4,r23
  803914:	1021883a 	mov	r16,r2
  803918:	08062100 	call	806210 <__multadd>
  80391c:	1025883a 	mov	r18,r2
  803920:	982d883a 	mov	r22,r19
  803924:	a00b883a 	mov	r5,r20
  803928:	e009883a 	mov	r4,fp
  80392c:	08028d40 	call	8028d4 <quorem>
  803930:	800b883a 	mov	r5,r16
  803934:	e009883a 	mov	r4,fp
  803938:	102b883a 	mov	r21,r2
  80393c:	d8800615 	stw	r2,24(sp)
  803940:	0806bfc0 	call	806bfc <__mcmp>
  803944:	a00b883a 	mov	r5,r20
  803948:	900d883a 	mov	r6,r18
  80394c:	b809883a 	mov	r4,r23
  803950:	1023883a 	mov	r17,r2
  803954:	0806c540 	call	806c54 <__mdiff>
  803958:	1027883a 	mov	r19,r2
  80395c:	10800317 	ldw	r2,12(r2)
  803960:	ad400c04 	addi	r21,r21,48
  803964:	980b883a 	mov	r5,r19
  803968:	103fc526 	beq	r2,zero,803880 <_dtoa_r+0xd8c>
  80396c:	b809883a 	mov	r4,r23
  803970:	08061ec0 	call	8061ec <_Bfree>
  803974:	00800044 	movi	r2,1
  803978:	003fcb06 	br	8038a8 <_dtoa_r+0xdb4>
  80397c:	08062100 	call	806210 <__multadd>
  803980:	1021883a 	mov	r16,r2
  803984:	1025883a 	mov	r18,r2
  803988:	003fe506 	br	803920 <_dtoa_r+0xe2c>
  80398c:	d8800217 	ldw	r2,8(sp)
  803990:	108000d0 	cmplti	r2,r2,3
  803994:	10003e26 	beq	r2,zero,803a90 <_dtoa_r+0xf9c>
  803998:	d8800717 	ldw	r2,28(sp)
  80399c:	103faa1e 	bne	r2,zero,803848 <_dtoa_r+0xd54>
  8039a0:	a00b883a 	mov	r5,r20
  8039a4:	e009883a 	mov	r4,fp
  8039a8:	08028d40 	call	8028d4 <quorem>
  8039ac:	14c00c04 	addi	r19,r2,48
  8039b0:	d8800117 	ldw	r2,4(sp)
  8039b4:	0023883a 	mov	r17,zero
  8039b8:	15400044 	addi	r21,r2,1
  8039bc:	14c00005 	stb	r19,0(r2)
  8039c0:	d8800417 	ldw	r2,16(sp)
  8039c4:	10800044 	addi	r2,r2,1
  8039c8:	d8800415 	stw	r2,16(sp)
  8039cc:	003f0906 	br	8035f4 <_dtoa_r+0xb00>
  8039d0:	a00b883a 	mov	r5,r20
  8039d4:	e009883a 	mov	r4,fp
  8039d8:	0806bfc0 	call	806bfc <__mcmp>
  8039dc:	103ee70e 	bge	r2,zero,80357c <_dtoa_r+0xa88>
  8039e0:	e00b883a 	mov	r5,fp
  8039e4:	000f883a 	mov	r7,zero
  8039e8:	01800284 	movi	r6,10
  8039ec:	b809883a 	mov	r4,r23
  8039f0:	08062100 	call	806210 <__multadd>
  8039f4:	d8c00417 	ldw	r3,16(sp)
  8039f8:	1039883a 	mov	fp,r2
  8039fc:	d8800717 	ldw	r2,28(sp)
  803a00:	1d7fffc4 	addi	r21,r3,-1
  803a04:	103f861e 	bne	r2,zero,803820 <_dtoa_r+0xd2c>
  803a08:	d8800b17 	ldw	r2,44(sp)
  803a0c:	0081d20e 	bge	zero,r2,804158 <_dtoa_r+0x1664>
  803a10:	d8800515 	stw	r2,20(sp)
  803a14:	003ee006 	br	803598 <_dtoa_r+0xaa4>
  803a18:	00802074 	movhi	r2,129
  803a1c:	1007883a 	mov	r3,r2
  803a20:	18ffe104 	addi	r3,r3,-124
  803a24:	00802074 	movhi	r2,129
  803a28:	d8c00115 	stw	r3,4(sp)
  803a2c:	10bfe1c4 	addi	r2,r2,-121
  803a30:	003ded06 	br	8031e8 <_dtoa_r+0x6f4>
  803a34:	00800044 	movi	r2,1
  803a38:	d8800715 	stw	r2,28(sp)
  803a3c:	003f3406 	br	803710 <_dtoa_r+0xc1c>
  803a40:	983eb21e 	bne	r19,zero,80350c <_dtoa_r+0xa18>
  803a44:	00800434 	movhi	r2,16
  803a48:	10bfffc4 	addi	r2,r2,-1
  803a4c:	8884703a 	and	r2,r17,r2
  803a50:	103eae1e 	bne	r2,zero,80350c <_dtoa_r+0xa18>
  803a54:	8c5ffc2c 	andhi	r17,r17,32752
  803a58:	883eac26 	beq	r17,zero,80350c <_dtoa_r+0xa18>
  803a5c:	d8800617 	ldw	r2,24(sp)
  803a60:	b5800044 	addi	r22,r22,1
  803a64:	04400044 	movi	r17,1
  803a68:	10800044 	addi	r2,r2,1
  803a6c:	d8800615 	stw	r2,24(sp)
  803a70:	003ea706 	br	803510 <_dtoa_r+0xa1c>
  803a74:	00800044 	movi	r2,1
  803a78:	d8800515 	stw	r2,20(sp)
  803a7c:	d8801e15 	stw	r2,120(sp)
  803a80:	003f1b06 	br	8036f0 <_dtoa_r+0xbfc>
  803a84:	d8800b17 	ldw	r2,44(sp)
  803a88:	dd400415 	stw	r21,16(sp)
  803a8c:	d8800515 	stw	r2,20(sp)
  803a90:	d8800517 	ldw	r2,20(sp)
  803a94:	103e081e 	bne	r2,zero,8032b8 <_dtoa_r+0x7c4>
  803a98:	a00b883a 	mov	r5,r20
  803a9c:	b809883a 	mov	r4,r23
  803aa0:	000f883a 	mov	r7,zero
  803aa4:	01800144 	movi	r6,5
  803aa8:	08062100 	call	806210 <__multadd>
  803aac:	100b883a 	mov	r5,r2
  803ab0:	e009883a 	mov	r4,fp
  803ab4:	1029883a 	mov	r20,r2
  803ab8:	0806bfc0 	call	806bfc <__mcmp>
  803abc:	00bdfe0e 	bge	zero,r2,8032b8 <_dtoa_r+0x7c4>
  803ac0:	d8c00117 	ldw	r3,4(sp)
  803ac4:	00800c44 	movi	r2,49
  803ac8:	18800005 	stb	r2,0(r3)
  803acc:	d8800417 	ldw	r2,16(sp)
  803ad0:	1d400044 	addi	r21,r3,1
  803ad4:	14400044 	addi	r17,r2,1
  803ad8:	a00b883a 	mov	r5,r20
  803adc:	b809883a 	mov	r4,r23
  803ae0:	08061ec0 	call	8061ec <_Bfree>
  803ae4:	88800044 	addi	r2,r17,1
  803ae8:	d8800415 	stw	r2,16(sp)
  803aec:	803ee11e 	bne	r16,zero,803674 <_dtoa_r+0xb80>
  803af0:	003ee306 	br	803680 <_dtoa_r+0xb8c>
  803af4:	b005883a 	mov	r2,r22
  803af8:	003e6006 	br	80347c <_dtoa_r+0x988>
  803afc:	800b883a 	mov	r5,r16
  803b00:	900d883a 	mov	r6,r18
  803b04:	b809883a 	mov	r4,r23
  803b08:	0806a740 	call	806a74 <__lshift>
  803b0c:	1021883a 	mov	r16,r2
  803b10:	003f4e06 	br	80384c <_dtoa_r+0xd58>
  803b14:	1529c83a 	sub	r20,r2,r20
  803b18:	003e4906 	br	803440 <_dtoa_r+0x94c>
  803b1c:	dcc00c15 	stw	r19,48(sp)
  803b20:	8825883a 	mov	r18,r17
  803b24:	05400084 	movi	r21,2
  803b28:	003cdf06 	br	802ea8 <_dtoa_r+0x3b4>
  803b2c:	00800044 	movi	r2,1
  803b30:	003ead06 	br	8035e8 <_dtoa_r+0xaf4>
  803b34:	00800044 	movi	r2,1
  803b38:	d8800715 	stw	r2,28(sp)
  803b3c:	003ca506 	br	802dd4 <_dtoa_r+0x2e0>
  803b40:	1000021e 	bne	r2,zero,803b4c <_dtoa_r+0x1058>
  803b44:	98c0004c 	andi	r3,r19,1
  803b48:	183eb41e 	bne	r3,zero,80361c <_dtoa_r+0xb28>
  803b4c:	2005883a 	mov	r2,r4
  803b50:	00000206 	br	803b5c <_dtoa_r+0x1068>
  803b54:	a8bfff83 	ldbu	r2,-2(r21)
  803b58:	182b883a 	mov	r21,r3
  803b5c:	10803fcc 	andi	r2,r2,255
  803b60:	1080201c 	xori	r2,r2,128
  803b64:	10bfe004 	addi	r2,r2,-128
  803b68:	10800c18 	cmpnei	r2,r2,48
  803b6c:	a8ffffc4 	addi	r3,r21,-1
  803b70:	103ff826 	beq	r2,zero,803b54 <_dtoa_r+0x1060>
  803b74:	003eb606 	br	803650 <_dtoa_r+0xb5c>
  803b78:	d8c00117 	ldw	r3,4(sp)
  803b7c:	00800c44 	movi	r2,49
  803b80:	18800005 	stb	r2,0(r3)
  803b84:	d8800417 	ldw	r2,16(sp)
  803b88:	10800044 	addi	r2,r2,1
  803b8c:	d8800415 	stw	r2,16(sp)
  803b90:	003eaf06 	br	803650 <_dtoa_r+0xb5c>
  803b94:	d8c00a17 	ldw	r3,40(sp)
  803b98:	18011826 	beq	r3,zero,803ffc <_dtoa_r+0x1508>
  803b9c:	d8c00617 	ldw	r3,24(sp)
  803ba0:	10810cc4 	addi	r2,r2,1075
  803ba4:	b0ad883a 	add	r22,r22,r2
  803ba8:	1885883a 	add	r2,r3,r2
  803bac:	dd000817 	ldw	r20,32(sp)
  803bb0:	1825883a 	mov	r18,r3
  803bb4:	d8800615 	stw	r2,24(sp)
  803bb8:	003e2806 	br	80345c <_dtoa_r+0x968>
  803bbc:	a809883a 	mov	r4,r21
  803bc0:	080d42c0 	call	80d42c <__floatsidf>
  803bc4:	800d883a 	mov	r6,r16
  803bc8:	900f883a 	mov	r7,r18
  803bcc:	1009883a 	mov	r4,r2
  803bd0:	180b883a 	mov	r5,r3
  803bd4:	080c2f80 	call	80c2f8 <__muldf3>
  803bd8:	000d883a 	mov	r6,zero
  803bdc:	01d00734 	movhi	r7,16412
  803be0:	1009883a 	mov	r4,r2
  803be4:	180b883a 	mov	r5,r3
  803be8:	080ae880 	call	80ae88 <__adddf3>
  803bec:	1029883a 	mov	r20,r2
  803bf0:	00bf3034 	movhi	r2,64704
  803bf4:	1885883a 	add	r2,r3,r2
  803bf8:	d8800c15 	stw	r2,48(sp)
  803bfc:	8009883a 	mov	r4,r16
  803c00:	900b883a 	mov	r5,r18
  803c04:	000d883a 	mov	r6,zero
  803c08:	01d00534 	movhi	r7,16404
  803c0c:	080caa40 	call	80caa4 <__subdf3>
  803c10:	dd400c17 	ldw	r21,48(sp)
  803c14:	a00d883a 	mov	r6,r20
  803c18:	1009883a 	mov	r4,r2
  803c1c:	a80f883a 	mov	r7,r21
  803c20:	180b883a 	mov	r5,r3
  803c24:	1025883a 	mov	r18,r2
  803c28:	1821883a 	mov	r16,r3
  803c2c:	080c1280 	call	80c128 <__gedf2>
  803c30:	00812f16 	blt	zero,r2,8040f0 <_dtoa_r+0x15fc>
  803c34:	a9e0003c 	xorhi	r7,r21,32768
  803c38:	a00d883a 	mov	r6,r20
  803c3c:	9009883a 	mov	r4,r18
  803c40:	800b883a 	mov	r5,r16
  803c44:	080c2100 	call	80c210 <__ledf2>
  803c48:	103d7d0e 	bge	r2,zero,803240 <_dtoa_r+0x74c>
  803c4c:	0029883a 	mov	r20,zero
  803c50:	0021883a 	mov	r16,zero
  803c54:	003d9806 	br	8032b8 <_dtoa_r+0x7c4>
  803c58:	d9800817 	ldw	r6,32(sp)
  803c5c:	e00b883a 	mov	r5,fp
  803c60:	b809883a 	mov	r4,r23
  803c64:	080692c0 	call	80692c <__pow5mult>
  803c68:	1039883a 	mov	fp,r2
  803c6c:	003e1e06 	br	8034e8 <_dtoa_r+0x9f4>
  803c70:	d8800417 	ldw	r2,16(sp)
  803c74:	1000ed26 	beq	r2,zero,80402c <_dtoa_r+0x1538>
  803c78:	00a9c83a 	sub	r20,zero,r2
  803c7c:	a08003cc 	andi	r2,r20,15
  803c80:	100690fa 	slli	r3,r2,3
  803c84:	00802074 	movhi	r2,129
  803c88:	10802104 	addi	r2,r2,132
  803c8c:	10c5883a 	add	r2,r2,r3
  803c90:	11800017 	ldw	r6,0(r2)
  803c94:	11c00117 	ldw	r7,4(r2)
  803c98:	a029d13a 	srai	r20,r20,4
  803c9c:	9809883a 	mov	r4,r19
  803ca0:	880b883a 	mov	r5,r17
  803ca4:	080c2f80 	call	80c2f8 <__muldf3>
  803ca8:	1021883a 	mov	r16,r2
  803cac:	1825883a 	mov	r18,r3
  803cb0:	a0013826 	beq	r20,zero,804194 <_dtoa_r+0x16a0>
  803cb4:	02002074 	movhi	r8,129
  803cb8:	05400084 	movi	r21,2
  803cbc:	42001704 	addi	r8,r8,92
  803cc0:	1009883a 	mov	r4,r2
  803cc4:	9805883a 	mov	r2,r19
  803cc8:	180b883a 	mov	r5,r3
  803ccc:	dc000c15 	stw	r16,48(sp)
  803cd0:	8827883a 	mov	r19,r17
  803cd4:	0007883a 	mov	r3,zero
  803cd8:	a823883a 	mov	r17,r21
  803cdc:	4021883a 	mov	r16,r8
  803ce0:	102b883a 	mov	r21,r2
  803ce4:	a180004c 	andi	r6,r20,1
  803ce8:	30000726 	beq	r6,zero,803d08 <_dtoa_r+0x1214>
  803cec:	81800017 	ldw	r6,0(r16)
  803cf0:	81c00117 	ldw	r7,4(r16)
  803cf4:	8c400044 	addi	r17,r17,1
  803cf8:	080c2f80 	call	80c2f8 <__muldf3>
  803cfc:	180b883a 	mov	r5,r3
  803d00:	1009883a 	mov	r4,r2
  803d04:	00c00044 	movi	r3,1
  803d08:	a029d07a 	srai	r20,r20,1
  803d0c:	84000204 	addi	r16,r16,8
  803d10:	a03ff41e 	bne	r20,zero,803ce4 <_dtoa_r+0x11f0>
  803d14:	a805883a 	mov	r2,r21
  803d18:	18c03fcc 	andi	r3,r3,255
  803d1c:	882b883a 	mov	r21,r17
  803d20:	dc000c17 	ldw	r16,48(sp)
  803d24:	9823883a 	mov	r17,r19
  803d28:	1027883a 	mov	r19,r2
  803d2c:	183c7726 	beq	r3,zero,802f0c <_dtoa_r+0x418>
  803d30:	2021883a 	mov	r16,r4
  803d34:	2825883a 	mov	r18,r5
  803d38:	003c7406 	br	802f0c <_dtoa_r+0x418>
  803d3c:	983eae1e 	bne	r19,zero,8037f8 <_dtoa_r+0xd04>
  803d40:	00800434 	movhi	r2,16
  803d44:	10bfffc4 	addi	r2,r2,-1
  803d48:	8884703a 	and	r2,r17,r2
  803d4c:	103f4126 	beq	r2,zero,803a54 <_dtoa_r+0xf60>
  803d50:	003ea906 	br	8037f8 <_dtoa_r+0xd04>
  803d54:	9807883a 	mov	r3,r19
  803d58:	a827883a 	mov	r19,r21
  803d5c:	182b883a 	mov	r21,r3
  803d60:	d8c00417 	ldw	r3,16(sp)
  803d64:	18c00044 	addi	r3,r3,1
  803d68:	d8c00415 	stw	r3,16(sp)
  803d6c:	00800d0e 	bge	zero,r2,803da4 <_dtoa_r+0x12b0>
  803d70:	e00b883a 	mov	r5,fp
  803d74:	b809883a 	mov	r4,r23
  803d78:	01800044 	movi	r6,1
  803d7c:	0806a740 	call	806a74 <__lshift>
  803d80:	a00b883a 	mov	r5,r20
  803d84:	1009883a 	mov	r4,r2
  803d88:	1039883a 	mov	fp,r2
  803d8c:	0806bfc0 	call	806bfc <__mcmp>
  803d90:	0080df0e 	bge	zero,r2,804110 <_dtoa_r+0x161c>
  803d94:	98c00e60 	cmpeqi	r3,r19,57
  803d98:	1800ce1e 	bne	r3,zero,8040d4 <_dtoa_r+0x15e0>
  803d9c:	d8800617 	ldw	r2,24(sp)
  803da0:	14c00c44 	addi	r19,r2,49
  803da4:	8023883a 	mov	r17,r16
  803da8:	b4c00005 	stb	r19,0(r22)
  803dac:	9021883a 	mov	r16,r18
  803db0:	003e2706 	br	803650 <_dtoa_r+0xb5c>
  803db4:	b82b883a 	mov	r21,r23
  803db8:	ddc00217 	ldw	r23,8(sp)
  803dbc:	200d883a 	mov	r6,r4
  803dc0:	280f883a 	mov	r7,r5
  803dc4:	080ae880 	call	80ae88 <__adddf3>
  803dc8:	180b883a 	mov	r5,r3
  803dcc:	800d883a 	mov	r6,r16
  803dd0:	900f883a 	mov	r7,r18
  803dd4:	1009883a 	mov	r4,r2
  803dd8:	1823883a 	mov	r17,r3
  803ddc:	1027883a 	mov	r19,r2
  803de0:	080c1280 	call	80c128 <__gedf2>
  803de4:	d8c00417 	ldw	r3,16(sp)
  803de8:	18c00044 	addi	r3,r3,1
  803dec:	d8c00415 	stw	r3,16(sp)
  803df0:	00808c16 	blt	zero,r2,804024 <_dtoa_r+0x1530>
  803df4:	800d883a 	mov	r6,r16
  803df8:	900f883a 	mov	r7,r18
  803dfc:	9809883a 	mov	r4,r19
  803e00:	880b883a 	mov	r5,r17
  803e04:	080c0a80 	call	80c0a8 <__eqdf2>
  803e08:	1000021e 	bne	r2,zero,803e14 <_dtoa_r+0x1320>
  803e0c:	ad40004c 	andi	r21,r21,1
  803e10:	a800841e 	bne	r21,zero,804024 <_dtoa_r+0x1530>
  803e14:	a02b883a 	mov	r21,r20
  803e18:	003e1906 	br	803680 <_dtoa_r+0xb8c>
  803e1c:	81400117 	ldw	r5,4(r16)
  803e20:	b809883a 	mov	r4,r23
  803e24:	08061480 	call	806148 <_Balloc>
  803e28:	1023883a 	mov	r17,r2
  803e2c:	1000f326 	beq	r2,zero,8041fc <_dtoa_r+0x1708>
  803e30:	81800417 	ldw	r6,16(r16)
  803e34:	81400304 	addi	r5,r16,12
  803e38:	11000304 	addi	r4,r2,12
  803e3c:	31800084 	addi	r6,r6,2
  803e40:	300c90ba 	slli	r6,r6,2
  803e44:	0805e2c0 	call	805e2c <memcpy>
  803e48:	01800044 	movi	r6,1
  803e4c:	880b883a 	mov	r5,r17
  803e50:	b809883a 	mov	r4,r23
  803e54:	0806a740 	call	806a74 <__lshift>
  803e58:	1025883a 	mov	r18,r2
  803e5c:	003e7d06 	br	803854 <_dtoa_r+0xd60>
  803e60:	e00b883a 	mov	r5,fp
  803e64:	b809883a 	mov	r4,r23
  803e68:	080692c0 	call	80692c <__pow5mult>
  803e6c:	1039883a 	mov	fp,r2
  803e70:	003d9d06 	br	8034e8 <_dtoa_r+0x9f4>
  803e74:	d8800617 	ldw	r2,24(sp)
  803e78:	d8c00517 	ldw	r3,20(sp)
  803e7c:	10e5c83a 	sub	r18,r2,r3
  803e80:	003d7606 	br	80345c <_dtoa_r+0x968>
  803e84:	d8c00417 	ldw	r3,16(sp)
  803e88:	9805883a 	mov	r2,r19
  803e8c:	a827883a 	mov	r19,r21
  803e90:	18c00044 	addi	r3,r3,1
  803e94:	102b883a 	mov	r21,r2
  803e98:	d8c00415 	stw	r3,16(sp)
  803e9c:	98800e58 	cmpnei	r2,r19,57
  803ea0:	10008c26 	beq	r2,zero,8040d4 <_dtoa_r+0x15e0>
  803ea4:	98c00044 	addi	r3,r19,1
  803ea8:	8023883a 	mov	r17,r16
  803eac:	b0c00005 	stb	r3,0(r22)
  803eb0:	9021883a 	mov	r16,r18
  803eb4:	003de606 	br	803650 <_dtoa_r+0xb5c>
  803eb8:	9805883a 	mov	r2,r19
  803ebc:	a827883a 	mov	r19,r21
  803ec0:	102b883a 	mov	r21,r2
  803ec4:	d8800417 	ldw	r2,16(sp)
  803ec8:	8023883a 	mov	r17,r16
  803ecc:	9021883a 	mov	r16,r18
  803ed0:	10800044 	addi	r2,r2,1
  803ed4:	d8800415 	stw	r2,16(sp)
  803ed8:	003dc606 	br	8035f4 <_dtoa_r+0xb00>
  803edc:	d9400c17 	ldw	r5,48(sp)
  803ee0:	a009883a 	mov	r4,r20
  803ee4:	080c2f80 	call	80c2f8 <__muldf3>
  803ee8:	d9800d17 	ldw	r6,52(sp)
  803eec:	d9400117 	ldw	r5,4(sp)
  803ef0:	d9001017 	ldw	r4,64(sp)
  803ef4:	d8800c15 	stw	r2,48(sp)
  803ef8:	d8c00d15 	stw	r3,52(sp)
  803efc:	29000005 	stb	r4,0(r5)
  803f00:	31000058 	cmpnei	r4,r6,1
  803f04:	29a9883a 	add	r20,r5,r6
  803f08:	2000a026 	beq	r4,zero,80418c <_dtoa_r+0x1698>
  803f0c:	dc400e15 	stw	r17,56(sp)
  803f10:	8009883a 	mov	r4,r16
  803f14:	900b883a 	mov	r5,r18
  803f18:	a823883a 	mov	r17,r21
  803f1c:	000d883a 	mov	r6,zero
  803f20:	01d00934 	movhi	r7,16420
  803f24:	080c2f80 	call	80c2f8 <__muldf3>
  803f28:	180b883a 	mov	r5,r3
  803f2c:	1009883a 	mov	r4,r2
  803f30:	1825883a 	mov	r18,r3
  803f34:	102b883a 	mov	r21,r2
  803f38:	080d3ac0 	call	80d3ac <__fixdfsi>
  803f3c:	1009883a 	mov	r4,r2
  803f40:	1021883a 	mov	r16,r2
  803f44:	080d42c0 	call	80d42c <__floatsidf>
  803f48:	a809883a 	mov	r4,r21
  803f4c:	900b883a 	mov	r5,r18
  803f50:	100d883a 	mov	r6,r2
  803f54:	180f883a 	mov	r7,r3
  803f58:	8c400044 	addi	r17,r17,1
  803f5c:	84000c04 	addi	r16,r16,48
  803f60:	080caa40 	call	80caa4 <__subdf3>
  803f64:	8c3fffc5 	stb	r16,-1(r17)
  803f68:	1009883a 	mov	r4,r2
  803f6c:	180b883a 	mov	r5,r3
  803f70:	a47fea1e 	bne	r20,r17,803f1c <_dtoa_r+0x1428>
  803f74:	dc400e17 	ldw	r17,56(sp)
  803f78:	1021883a 	mov	r16,r2
  803f7c:	1825883a 	mov	r18,r3
  803f80:	d9000c17 	ldw	r4,48(sp)
  803f84:	d9400d17 	ldw	r5,52(sp)
  803f88:	000d883a 	mov	r6,zero
  803f8c:	01cff834 	movhi	r7,16352
  803f90:	080ae880 	call	80ae88 <__adddf3>
  803f94:	800d883a 	mov	r6,r16
  803f98:	900f883a 	mov	r7,r18
  803f9c:	1009883a 	mov	r4,r2
  803fa0:	180b883a 	mov	r5,r3
  803fa4:	080c2100 	call	80c210 <__ledf2>
  803fa8:	10005416 	blt	r2,zero,8040fc <_dtoa_r+0x1608>
  803fac:	d9800c17 	ldw	r6,48(sp)
  803fb0:	d9c00d17 	ldw	r7,52(sp)
  803fb4:	0009883a 	mov	r4,zero
  803fb8:	014ff834 	movhi	r5,16352
  803fbc:	080caa40 	call	80caa4 <__subdf3>
  803fc0:	800d883a 	mov	r6,r16
  803fc4:	900f883a 	mov	r7,r18
  803fc8:	1009883a 	mov	r4,r2
  803fcc:	180b883a 	mov	r5,r3
  803fd0:	080c1280 	call	80c128 <__gedf2>
  803fd4:	00bc9a0e 	bge	zero,r2,803240 <_dtoa_r+0x74c>
  803fd8:	a0bfffc7 	ldb	r2,-1(r20)
  803fdc:	a02b883a 	mov	r21,r20
  803fe0:	a53fffc4 	addi	r20,r20,-1
  803fe4:	10800c20 	cmpeqi	r2,r2,48
  803fe8:	103ffb1e 	bne	r2,zero,803fd8 <_dtoa_r+0x14e4>
  803fec:	d8801117 	ldw	r2,68(sp)
  803ff0:	10800044 	addi	r2,r2,1
  803ff4:	d8800415 	stw	r2,16(sp)
  803ff8:	003da106 	br	803680 <_dtoa_r+0xb8c>
  803ffc:	d8c01217 	ldw	r3,72(sp)
  804000:	d9000617 	ldw	r4,24(sp)
  804004:	00800d84 	movi	r2,54
  804008:	10c5c83a 	sub	r2,r2,r3
  80400c:	b0ad883a 	add	r22,r22,r2
  804010:	2085883a 	add	r2,r4,r2
  804014:	dd000817 	ldw	r20,32(sp)
  804018:	2025883a 	mov	r18,r4
  80401c:	d8800615 	stw	r2,24(sp)
  804020:	003d0e06 	br	80345c <_dtoa_r+0x968>
  804024:	d9000117 	ldw	r4,4(sp)
  804028:	003c4b06 	br	803158 <_dtoa_r+0x664>
  80402c:	9821883a 	mov	r16,r19
  804030:	8825883a 	mov	r18,r17
  804034:	05400084 	movi	r21,2
  804038:	003bb406 	br	802f0c <_dtoa_r+0x418>
  80403c:	d8800517 	ldw	r2,20(sp)
  804040:	103ede26 	beq	r2,zero,803bbc <_dtoa_r+0x10c8>
  804044:	d8800b17 	ldw	r2,44(sp)
  804048:	00bc7d0e 	bge	zero,r2,803240 <_dtoa_r+0x74c>
  80404c:	900b883a 	mov	r5,r18
  804050:	8009883a 	mov	r4,r16
  804054:	000d883a 	mov	r6,zero
  804058:	01d00934 	movhi	r7,16420
  80405c:	080c2f80 	call	80c2f8 <__muldf3>
  804060:	a9000044 	addi	r4,r21,1
  804064:	1021883a 	mov	r16,r2
  804068:	1825883a 	mov	r18,r3
  80406c:	080d42c0 	call	80d42c <__floatsidf>
  804070:	800d883a 	mov	r6,r16
  804074:	900f883a 	mov	r7,r18
  804078:	1009883a 	mov	r4,r2
  80407c:	180b883a 	mov	r5,r3
  804080:	080c2f80 	call	80c2f8 <__muldf3>
  804084:	1009883a 	mov	r4,r2
  804088:	000d883a 	mov	r6,zero
  80408c:	01d00734 	movhi	r7,16412
  804090:	180b883a 	mov	r5,r3
  804094:	080ae880 	call	80ae88 <__adddf3>
  804098:	d9000417 	ldw	r4,16(sp)
  80409c:	1029883a 	mov	r20,r2
  8040a0:	00bf3034 	movhi	r2,64704
  8040a4:	1887883a 	add	r3,r3,r2
  8040a8:	d8800b17 	ldw	r2,44(sp)
  8040ac:	213fffc4 	addi	r4,r4,-1
  8040b0:	d9001115 	stw	r4,68(sp)
  8040b4:	d8c00c15 	stw	r3,48(sp)
  8040b8:	d8800d15 	stw	r2,52(sp)
  8040bc:	003bb106 	br	802f84 <_dtoa_r+0x490>
  8040c0:	d8800417 	ldw	r2,16(sp)
  8040c4:	00c00c44 	movi	r3,49
  8040c8:	10800044 	addi	r2,r2,1
  8040cc:	d8800415 	stw	r2,16(sp)
  8040d0:	003c2a06 	br	80317c <_dtoa_r+0x688>
  8040d4:	00800e44 	movi	r2,57
  8040d8:	8023883a 	mov	r17,r16
  8040dc:	d9400117 	ldw	r5,4(sp)
  8040e0:	b0800005 	stb	r2,0(r22)
  8040e4:	9021883a 	mov	r16,r18
  8040e8:	01000e44 	movi	r4,57
  8040ec:	003d5006 	br	803630 <_dtoa_r+0xb3c>
  8040f0:	0029883a 	mov	r20,zero
  8040f4:	0021883a 	mov	r16,zero
  8040f8:	003e7106 	br	803ac0 <_dtoa_r+0xfcc>
  8040fc:	d8801117 	ldw	r2,68(sp)
  804100:	d9000117 	ldw	r4,4(sp)
  804104:	10800044 	addi	r2,r2,1
  804108:	d8800415 	stw	r2,16(sp)
  80410c:	003c1206 	br	803158 <_dtoa_r+0x664>
  804110:	103f241e 	bne	r2,zero,803da4 <_dtoa_r+0x12b0>
  804114:	9880004c 	andi	r2,r19,1
  804118:	103f1e1e 	bne	r2,zero,803d94 <_dtoa_r+0x12a0>
  80411c:	003f2106 	br	803da4 <_dtoa_r+0x12b0>
  804120:	d8801117 	ldw	r2,68(sp)
  804124:	ddc00d17 	ldw	r23,52(sp)
  804128:	10800044 	addi	r2,r2,1
  80412c:	d8800415 	stw	r2,16(sp)
  804130:	003d5306 	br	803680 <_dtoa_r+0xb8c>
  804134:	d8c00417 	ldw	r3,16(sp)
  804138:	a8800e60 	cmpeqi	r2,r21,57
  80413c:	a827883a 	mov	r19,r21
  804140:	18c00044 	addi	r3,r3,1
  804144:	d8c00415 	stw	r3,16(sp)
  804148:	b5400044 	addi	r21,r22,1
  80414c:	103fe11e 	bne	r2,zero,8040d4 <_dtoa_r+0x15e0>
  804150:	047f1216 	blt	zero,r17,803d9c <_dtoa_r+0x12a8>
  804154:	003f1306 	br	803da4 <_dtoa_r+0x12b0>
  804158:	d8800217 	ldw	r2,8(sp)
  80415c:	108000c8 	cmpgei	r2,r2,3
  804160:	103e481e 	bne	r2,zero,803a84 <_dtoa_r+0xf90>
  804164:	dd400415 	stw	r21,16(sp)
  804168:	003e0d06 	br	8039a0 <_dtoa_r+0xeac>
  80416c:	d8800217 	ldw	r2,8(sp)
  804170:	108000c8 	cmpgei	r2,r2,3
  804174:	103e431e 	bne	r2,zero,803a84 <_dtoa_r+0xf90>
  804178:	d8800b17 	ldw	r2,44(sp)
  80417c:	dd400415 	stw	r21,16(sp)
  804180:	d8800515 	stw	r2,20(sp)
  804184:	04bdb10e 	bge	zero,r18,80384c <_dtoa_r+0xd58>
  804188:	003e5c06 	br	803afc <_dtoa_r+0x1008>
  80418c:	a829883a 	mov	r20,r21
  804190:	003f7b06 	br	803f80 <_dtoa_r+0x148c>
  804194:	05400084 	movi	r21,2
  804198:	003b5c06 	br	802f0c <_dtoa_r+0x418>
  80419c:	01c02074 	movhi	r7,129
  8041a0:	01002074 	movhi	r4,129
  8041a4:	39ffe504 	addi	r7,r7,-108
  8041a8:	000d883a 	mov	r6,zero
  8041ac:	01406a84 	movi	r5,426
  8041b0:	213fea04 	addi	r4,r4,-88
  8041b4:	080901c0 	call	80901c <__assert_func>
  8041b8:	000b883a 	mov	r5,zero
  8041bc:	003b1506 	br	802e14 <_dtoa_r+0x320>
  8041c0:	b8001115 	stw	zero,68(r23)
  8041c4:	000b883a 	mov	r5,zero
  8041c8:	b809883a 	mov	r4,r23
  8041cc:	08061480 	call	806148 <_Balloc>
  8041d0:	d8800115 	stw	r2,4(sp)
  8041d4:	103ff126 	beq	r2,zero,80419c <_dtoa_r+0x16a8>
  8041d8:	d8800117 	ldw	r2,4(sp)
  8041dc:	d8001e15 	stw	zero,120(sp)
  8041e0:	b8801015 	stw	r2,64(r23)
  8041e4:	00bfffc4 	movi	r2,-1
  8041e8:	d8800515 	stw	r2,20(sp)
  8041ec:	d8800b15 	stw	r2,44(sp)
  8041f0:	00800044 	movi	r2,1
  8041f4:	d8800715 	stw	r2,28(sp)
  8041f8:	003c1106 	br	803240 <_dtoa_r+0x74c>
  8041fc:	01c02074 	movhi	r7,129
  804200:	01002074 	movhi	r4,129
  804204:	39ffe504 	addi	r7,r7,-108
  804208:	000d883a 	mov	r6,zero
  80420c:	0140ba84 	movi	r5,746
  804210:	213fea04 	addi	r4,r4,-88
  804214:	080901c0 	call	80901c <__assert_func>
  804218:	00802074 	movhi	r2,129
  80421c:	10bfe204 	addi	r2,r2,-120
  804220:	d8800115 	stw	r2,4(sp)
  804224:	003a6506 	br	802bbc <_dtoa_r+0xc8>
  804228:	18c00120 	cmpeqi	r3,r3,4
  80422c:	183cc91e 	bne	r3,zero,803554 <_dtoa_r+0xa60>
  804230:	00c00f04 	movi	r3,60
  804234:	1885c83a 	sub	r2,r3,r2
  804238:	003cc106 	br	803540 <_dtoa_r+0xa4c>

0080423c <__sflush_r>:
  80423c:	2880030b 	ldhu	r2,12(r5)
  804240:	defffb04 	addi	sp,sp,-20
  804244:	dcc00315 	stw	r19,12(sp)
  804248:	dc000015 	stw	r16,0(sp)
  80424c:	dfc00415 	stw	ra,16(sp)
  804250:	dc800215 	stw	r18,8(sp)
  804254:	dc400115 	stw	r17,4(sp)
  804258:	10c0020c 	andi	r3,r2,8
  80425c:	2821883a 	mov	r16,r5
  804260:	2027883a 	mov	r19,r4
  804264:	18003f1e 	bne	r3,zero,804364 <__sflush_r+0x128>
  804268:	28c00117 	ldw	r3,4(r5)
  80426c:	10820014 	ori	r2,r2,2048
  804270:	2880030d 	sth	r2,12(r5)
  804274:	00c0550e 	bge	zero,r3,8043cc <__sflush_r+0x190>
  804278:	82000a17 	ldw	r8,40(r16)
  80427c:	40003126 	beq	r8,zero,804344 <__sflush_r+0x108>
  804280:	9c400017 	ldw	r17,0(r19)
  804284:	1104000c 	andi	r4,r2,4096
  804288:	98000015 	stw	zero,0(r19)
  80428c:	81400717 	ldw	r5,28(r16)
  804290:	1007883a 	mov	r3,r2
  804294:	2000521e 	bne	r4,zero,8043e0 <__sflush_r+0x1a4>
  804298:	01c00044 	movi	r7,1
  80429c:	000d883a 	mov	r6,zero
  8042a0:	9809883a 	mov	r4,r19
  8042a4:	403ee83a 	callr	r8
  8042a8:	10ffffd8 	cmpnei	r3,r2,-1
  8042ac:	18005826 	beq	r3,zero,804410 <__sflush_r+0x1d4>
  8042b0:	80c0030b 	ldhu	r3,12(r16)
  8042b4:	82000a17 	ldw	r8,40(r16)
  8042b8:	81400717 	ldw	r5,28(r16)
  8042bc:	18c0010c 	andi	r3,r3,4
  8042c0:	18000626 	beq	r3,zero,8042dc <__sflush_r+0xa0>
  8042c4:	81000117 	ldw	r4,4(r16)
  8042c8:	80c00c17 	ldw	r3,48(r16)
  8042cc:	1105c83a 	sub	r2,r2,r4
  8042d0:	18000226 	beq	r3,zero,8042dc <__sflush_r+0xa0>
  8042d4:	80c00f17 	ldw	r3,60(r16)
  8042d8:	10c5c83a 	sub	r2,r2,r3
  8042dc:	100d883a 	mov	r6,r2
  8042e0:	000f883a 	mov	r7,zero
  8042e4:	9809883a 	mov	r4,r19
  8042e8:	403ee83a 	callr	r8
  8042ec:	10ffffd8 	cmpnei	r3,r2,-1
  8042f0:	18003d1e 	bne	r3,zero,8043e8 <__sflush_r+0x1ac>
  8042f4:	99000017 	ldw	r4,0(r19)
  8042f8:	80c0030b 	ldhu	r3,12(r16)
  8042fc:	20004e26 	beq	r4,zero,804438 <__sflush_r+0x1fc>
  804300:	21400760 	cmpeqi	r5,r4,29
  804304:	2800021e 	bne	r5,zero,804310 <__sflush_r+0xd4>
  804308:	210005a0 	cmpeqi	r4,r4,22
  80430c:	20002c26 	beq	r4,zero,8043c0 <__sflush_r+0x184>
  804310:	80800417 	ldw	r2,16(r16)
  804314:	18fdffcc 	andi	r3,r3,63487
  804318:	80c0030d 	sth	r3,12(r16)
  80431c:	80000115 	stw	zero,4(r16)
  804320:	80800015 	stw	r2,0(r16)
  804324:	81400c17 	ldw	r5,48(r16)
  804328:	9c400015 	stw	r17,0(r19)
  80432c:	28000526 	beq	r5,zero,804344 <__sflush_r+0x108>
  804330:	80801004 	addi	r2,r16,64
  804334:	28800226 	beq	r5,r2,804340 <__sflush_r+0x104>
  804338:	9809883a 	mov	r4,r19
  80433c:	0804a100 	call	804a10 <_free_r>
  804340:	80000c15 	stw	zero,48(r16)
  804344:	0005883a 	mov	r2,zero
  804348:	dfc00417 	ldw	ra,16(sp)
  80434c:	dcc00317 	ldw	r19,12(sp)
  804350:	dc800217 	ldw	r18,8(sp)
  804354:	dc400117 	ldw	r17,4(sp)
  804358:	dc000017 	ldw	r16,0(sp)
  80435c:	dec00504 	addi	sp,sp,20
  804360:	f800283a 	ret
  804364:	2c800417 	ldw	r18,16(r5)
  804368:	903ff626 	beq	r18,zero,804344 <__sflush_r+0x108>
  80436c:	2c400017 	ldw	r17,0(r5)
  804370:	108000cc 	andi	r2,r2,3
  804374:	2c800015 	stw	r18,0(r5)
  804378:	8ca3c83a 	sub	r17,r17,r18
  80437c:	1000161e 	bne	r2,zero,8043d8 <__sflush_r+0x19c>
  804380:	28800517 	ldw	r2,20(r5)
  804384:	80800215 	stw	r2,8(r16)
  804388:	04400316 	blt	zero,r17,804398 <__sflush_r+0x15c>
  80438c:	003fed06 	br	804344 <__sflush_r+0x108>
  804390:	90a5883a 	add	r18,r18,r2
  804394:	047feb0e 	bge	zero,r17,804344 <__sflush_r+0x108>
  804398:	80800917 	ldw	r2,36(r16)
  80439c:	81400717 	ldw	r5,28(r16)
  8043a0:	880f883a 	mov	r7,r17
  8043a4:	900d883a 	mov	r6,r18
  8043a8:	9809883a 	mov	r4,r19
  8043ac:	103ee83a 	callr	r2
  8043b0:	88a3c83a 	sub	r17,r17,r2
  8043b4:	00bff616 	blt	zero,r2,804390 <__sflush_r+0x154>
  8043b8:	80c0030b 	ldhu	r3,12(r16)
  8043bc:	00bfffc4 	movi	r2,-1
  8043c0:	18c01014 	ori	r3,r3,64
  8043c4:	80c0030d 	sth	r3,12(r16)
  8043c8:	003fdf06 	br	804348 <__sflush_r+0x10c>
  8043cc:	28c00f17 	ldw	r3,60(r5)
  8043d0:	00ffa916 	blt	zero,r3,804278 <__sflush_r+0x3c>
  8043d4:	003fdb06 	br	804344 <__sflush_r+0x108>
  8043d8:	0005883a 	mov	r2,zero
  8043dc:	003fe906 	br	804384 <__sflush_r+0x148>
  8043e0:	80801417 	ldw	r2,80(r16)
  8043e4:	003fb506 	br	8042bc <__sflush_r+0x80>
  8043e8:	80c0030b 	ldhu	r3,12(r16)
  8043ec:	81000417 	ldw	r4,16(r16)
  8043f0:	80000115 	stw	zero,4(r16)
  8043f4:	197dffcc 	andi	r5,r3,63487
  8043f8:	8140030d 	sth	r5,12(r16)
  8043fc:	81000015 	stw	r4,0(r16)
  804400:	18c4000c 	andi	r3,r3,4096
  804404:	183fc726 	beq	r3,zero,804324 <__sflush_r+0xe8>
  804408:	80801415 	stw	r2,80(r16)
  80440c:	003fc506 	br	804324 <__sflush_r+0xe8>
  804410:	98c00017 	ldw	r3,0(r19)
  804414:	183fa626 	beq	r3,zero,8042b0 <__sflush_r+0x74>
  804418:	19000760 	cmpeqi	r4,r3,29
  80441c:	20000e1e 	bne	r4,zero,804458 <__sflush_r+0x21c>
  804420:	18c00598 	cmpnei	r3,r3,22
  804424:	18000c26 	beq	r3,zero,804458 <__sflush_r+0x21c>
  804428:	80c0030b 	ldhu	r3,12(r16)
  80442c:	18c01014 	ori	r3,r3,64
  804430:	80c0030d 	sth	r3,12(r16)
  804434:	003fc406 	br	804348 <__sflush_r+0x10c>
  804438:	81000417 	ldw	r4,16(r16)
  80443c:	197dffcc 	andi	r5,r3,63487
  804440:	8140030d 	sth	r5,12(r16)
  804444:	80000115 	stw	zero,4(r16)
  804448:	81000015 	stw	r4,0(r16)
  80444c:	18c4000c 	andi	r3,r3,4096
  804450:	183fb426 	beq	r3,zero,804324 <__sflush_r+0xe8>
  804454:	003fec06 	br	804408 <__sflush_r+0x1cc>
  804458:	9c400015 	stw	r17,0(r19)
  80445c:	0005883a 	mov	r2,zero
  804460:	003fb906 	br	804348 <__sflush_r+0x10c>

00804464 <_fflush_r>:
  804464:	defffd04 	addi	sp,sp,-12
  804468:	dc000115 	stw	r16,4(sp)
  80446c:	dfc00215 	stw	ra,8(sp)
  804470:	2021883a 	mov	r16,r4
  804474:	20000226 	beq	r4,zero,804480 <_fflush_r+0x1c>
  804478:	20800e17 	ldw	r2,56(r4)
  80447c:	10000726 	beq	r2,zero,80449c <_fflush_r+0x38>
  804480:	2880030f 	ldh	r2,12(r5)
  804484:	10000a1e 	bne	r2,zero,8044b0 <_fflush_r+0x4c>
  804488:	0005883a 	mov	r2,zero
  80448c:	dfc00217 	ldw	ra,8(sp)
  804490:	dc000117 	ldw	r16,4(sp)
  804494:	dec00304 	addi	sp,sp,12
  804498:	f800283a 	ret
  80449c:	d9400015 	stw	r5,0(sp)
  8044a0:	08048ac0 	call	8048ac <__sinit>
  8044a4:	d9400017 	ldw	r5,0(sp)
  8044a8:	2880030f 	ldh	r2,12(r5)
  8044ac:	103ff626 	beq	r2,zero,804488 <_fflush_r+0x24>
  8044b0:	8009883a 	mov	r4,r16
  8044b4:	dfc00217 	ldw	ra,8(sp)
  8044b8:	dc000117 	ldw	r16,4(sp)
  8044bc:	dec00304 	addi	sp,sp,12
  8044c0:	080423c1 	jmpi	80423c <__sflush_r>

008044c4 <fflush>:
  8044c4:	20001726 	beq	r4,zero,804524 <fflush+0x60>
  8044c8:	00802074 	movhi	r2,129
  8044cc:	200b883a 	mov	r5,r4
  8044d0:	11084417 	ldw	r4,8464(r2)
  8044d4:	20000226 	beq	r4,zero,8044e0 <fflush+0x1c>
  8044d8:	20800e17 	ldw	r2,56(r4)
  8044dc:	10000526 	beq	r2,zero,8044f4 <fflush+0x30>
  8044e0:	2880030f 	ldh	r2,12(r5)
  8044e4:	1000021e 	bne	r2,zero,8044f0 <fflush+0x2c>
  8044e8:	0005883a 	mov	r2,zero
  8044ec:	f800283a 	ret
  8044f0:	080423c1 	jmpi	80423c <__sflush_r>
  8044f4:	defffd04 	addi	sp,sp,-12
  8044f8:	d9400115 	stw	r5,4(sp)
  8044fc:	d9000015 	stw	r4,0(sp)
  804500:	dfc00215 	stw	ra,8(sp)
  804504:	08048ac0 	call	8048ac <__sinit>
  804508:	d9400117 	ldw	r5,4(sp)
  80450c:	d9000017 	ldw	r4,0(sp)
  804510:	2880030f 	ldh	r2,12(r5)
  804514:	10000826 	beq	r2,zero,804538 <fflush+0x74>
  804518:	dfc00217 	ldw	ra,8(sp)
  80451c:	dec00304 	addi	sp,sp,12
  804520:	080423c1 	jmpi	80423c <__sflush_r>
  804524:	00802074 	movhi	r2,129
  804528:	11084317 	ldw	r4,8460(r2)
  80452c:	01402034 	movhi	r5,128
  804530:	29511904 	addi	r5,r5,17508
  804534:	080526c1 	jmpi	80526c <_fwalk_reent>
  804538:	0005883a 	mov	r2,zero
  80453c:	dfc00217 	ldw	ra,8(sp)
  804540:	dec00304 	addi	sp,sp,12
  804544:	f800283a 	ret

00804548 <__fp_lock>:
  804548:	0005883a 	mov	r2,zero
  80454c:	f800283a 	ret

00804550 <_cleanup_r>:
  804550:	01402074 	movhi	r5,129
  804554:	29648604 	addi	r5,r5,-28136
  804558:	080526c1 	jmpi	80526c <_fwalk_reent>

0080455c <__fp_unlock>:
  80455c:	0005883a 	mov	r2,zero
  804560:	f800283a 	ret

00804564 <__sinit.part.0>:
  804564:	00c02034 	movhi	r3,128
  804568:	20800117 	ldw	r2,4(r4)
  80456c:	18d15404 	addi	r3,r3,17744
  804570:	20c00f15 	stw	r3,60(r4)
  804574:	2140bb04 	addi	r5,r4,748
  804578:	00c000c4 	movi	r3,3
  80457c:	20c0b915 	stw	r3,740(r4)
  804580:	2140ba15 	stw	r5,744(r4)
  804584:	2000b815 	stw	zero,736(r4)
  804588:	10001705 	stb	zero,92(r2)
  80458c:	10001745 	stb	zero,93(r2)
  804590:	10001785 	stb	zero,94(r2)
  804594:	100017c5 	stb	zero,95(r2)
  804598:	10001805 	stb	zero,96(r2)
  80459c:	10001845 	stb	zero,97(r2)
  8045a0:	10001885 	stb	zero,98(r2)
  8045a4:	100018c5 	stb	zero,99(r2)
  8045a8:	00c00104 	movi	r3,4
  8045ac:	10c00315 	stw	r3,12(r2)
  8045b0:	02002034 	movhi	r8,128
  8045b4:	20c00217 	ldw	r3,8(r4)
  8045b8:	01c02034 	movhi	r7,128
  8045bc:	01802034 	movhi	r6,128
  8045c0:	01402034 	movhi	r5,128
  8045c4:	421e3d04 	addi	r8,r8,30964
  8045c8:	39de5404 	addi	r7,r7,31056
  8045cc:	319e7404 	addi	r6,r6,31184
  8045d0:	295e8b04 	addi	r5,r5,31276
  8045d4:	02400074 	movhi	r9,1
  8045d8:	10001915 	stw	zero,100(r2)
  8045dc:	10000015 	stw	zero,0(r2)
  8045e0:	10000115 	stw	zero,4(r2)
  8045e4:	10000215 	stw	zero,8(r2)
  8045e8:	10000415 	stw	zero,16(r2)
  8045ec:	10000515 	stw	zero,20(r2)
  8045f0:	10000615 	stw	zero,24(r2)
  8045f4:	10800715 	stw	r2,28(r2)
  8045f8:	12000815 	stw	r8,32(r2)
  8045fc:	11c00915 	stw	r7,36(r2)
  804600:	11800a15 	stw	r6,40(r2)
  804604:	11400b15 	stw	r5,44(r2)
  804608:	4a400284 	addi	r9,r9,10
  80460c:	1a400315 	stw	r9,12(r3)
  804610:	18001915 	stw	zero,100(r3)
  804614:	18000015 	stw	zero,0(r3)
  804618:	18000115 	stw	zero,4(r3)
  80461c:	18000215 	stw	zero,8(r3)
  804620:	18000415 	stw	zero,16(r3)
  804624:	18001705 	stb	zero,92(r3)
  804628:	18001745 	stb	zero,93(r3)
  80462c:	18001785 	stb	zero,94(r3)
  804630:	180017c5 	stb	zero,95(r3)
  804634:	18001805 	stb	zero,96(r3)
  804638:	18001845 	stb	zero,97(r3)
  80463c:	18001885 	stb	zero,98(r3)
  804640:	180018c5 	stb	zero,99(r3)
  804644:	20800317 	ldw	r2,12(r4)
  804648:	024000b4 	movhi	r9,2
  80464c:	18000515 	stw	zero,20(r3)
  804650:	18000615 	stw	zero,24(r3)
  804654:	18c00715 	stw	r3,28(r3)
  804658:	1a000815 	stw	r8,32(r3)
  80465c:	19c00915 	stw	r7,36(r3)
  804660:	19800a15 	stw	r6,40(r3)
  804664:	19400b15 	stw	r5,44(r3)
  804668:	4a400484 	addi	r9,r9,18
  80466c:	10001915 	stw	zero,100(r2)
  804670:	10000015 	stw	zero,0(r2)
  804674:	10000115 	stw	zero,4(r2)
  804678:	10000215 	stw	zero,8(r2)
  80467c:	12400315 	stw	r9,12(r2)
  804680:	10000415 	stw	zero,16(r2)
  804684:	10000515 	stw	zero,20(r2)
  804688:	10000615 	stw	zero,24(r2)
  80468c:	10001705 	stb	zero,92(r2)
  804690:	10001745 	stb	zero,93(r2)
  804694:	10001785 	stb	zero,94(r2)
  804698:	100017c5 	stb	zero,95(r2)
  80469c:	10001805 	stb	zero,96(r2)
  8046a0:	10001845 	stb	zero,97(r2)
  8046a4:	10001885 	stb	zero,98(r2)
  8046a8:	100018c5 	stb	zero,99(r2)
  8046ac:	10800715 	stw	r2,28(r2)
  8046b0:	12000815 	stw	r8,32(r2)
  8046b4:	11c00915 	stw	r7,36(r2)
  8046b8:	11800a15 	stw	r6,40(r2)
  8046bc:	11400b15 	stw	r5,44(r2)
  8046c0:	00800044 	movi	r2,1
  8046c4:	20800e15 	stw	r2,56(r4)
  8046c8:	f800283a 	ret

008046cc <__sfmoreglue>:
  8046cc:	defffc04 	addi	sp,sp,-16
  8046d0:	dc800215 	stw	r18,8(sp)
  8046d4:	2825883a 	mov	r18,r5
  8046d8:	dc000015 	stw	r16,0(sp)
  8046dc:	01401a04 	movi	r5,104
  8046e0:	2021883a 	mov	r16,r4
  8046e4:	913fffc4 	addi	r4,r18,-1
  8046e8:	dfc00315 	stw	ra,12(sp)
  8046ec:	dc400115 	stw	r17,4(sp)
  8046f0:	080ae600 	call	80ae60 <__mulsi3>
  8046f4:	8009883a 	mov	r4,r16
  8046f8:	11401d04 	addi	r5,r2,116
  8046fc:	1023883a 	mov	r17,r2
  804700:	080557c0 	call	80557c <_malloc_r>
  804704:	1021883a 	mov	r16,r2
  804708:	10000726 	beq	r2,zero,804728 <__sfmoreglue+0x5c>
  80470c:	11000304 	addi	r4,r2,12
  804710:	10000015 	stw	zero,0(r2)
  804714:	14800115 	stw	r18,4(r2)
  804718:	11000215 	stw	r4,8(r2)
  80471c:	89801a04 	addi	r6,r17,104
  804720:	000b883a 	mov	r5,zero
  804724:	08060580 	call	806058 <memset>
  804728:	8005883a 	mov	r2,r16
  80472c:	dfc00317 	ldw	ra,12(sp)
  804730:	dc800217 	ldw	r18,8(sp)
  804734:	dc400117 	ldw	r17,4(sp)
  804738:	dc000017 	ldw	r16,0(sp)
  80473c:	dec00404 	addi	sp,sp,16
  804740:	f800283a 	ret

00804744 <__sfp>:
  804744:	defffb04 	addi	sp,sp,-20
  804748:	00802074 	movhi	r2,129
  80474c:	dc000015 	stw	r16,0(sp)
  804750:	14084317 	ldw	r16,8460(r2)
  804754:	dc400115 	stw	r17,4(sp)
  804758:	dfc00415 	stw	ra,16(sp)
  80475c:	80800e17 	ldw	r2,56(r16)
  804760:	dcc00315 	stw	r19,12(sp)
  804764:	dc800215 	stw	r18,8(sp)
  804768:	2023883a 	mov	r17,r4
  80476c:	10003126 	beq	r2,zero,804834 <__sfp+0xf0>
  804770:	8100ba17 	ldw	r4,744(r16)
  804774:	8140b917 	ldw	r5,740(r16)
  804778:	04c00104 	movi	r19,4
  80477c:	8400b804 	addi	r16,r16,736
  804780:	297fffc4 	addi	r5,r5,-1
  804784:	2800050e 	bge	r5,zero,80479c <__sfp+0x58>
  804788:	00002406 	br	80481c <__sfp+0xd8>
  80478c:	297fffc4 	addi	r5,r5,-1
  804790:	28bfffd8 	cmpnei	r2,r5,-1
  804794:	21001a04 	addi	r4,r4,104
  804798:	10002026 	beq	r2,zero,80481c <__sfp+0xd8>
  80479c:	2080030f 	ldh	r2,12(r4)
  8047a0:	103ffa1e 	bne	r2,zero,80478c <__sfp+0x48>
  8047a4:	00bffff4 	movhi	r2,65535
  8047a8:	10800044 	addi	r2,r2,1
  8047ac:	20001915 	stw	zero,100(r4)
  8047b0:	20000015 	stw	zero,0(r4)
  8047b4:	20000115 	stw	zero,4(r4)
  8047b8:	20000215 	stw	zero,8(r4)
  8047bc:	20800315 	stw	r2,12(r4)
  8047c0:	20000415 	stw	zero,16(r4)
  8047c4:	20000515 	stw	zero,20(r4)
  8047c8:	20000615 	stw	zero,24(r4)
  8047cc:	20001705 	stb	zero,92(r4)
  8047d0:	20001745 	stb	zero,93(r4)
  8047d4:	20001785 	stb	zero,94(r4)
  8047d8:	200017c5 	stb	zero,95(r4)
  8047dc:	20001805 	stb	zero,96(r4)
  8047e0:	20001845 	stb	zero,97(r4)
  8047e4:	20001885 	stb	zero,98(r4)
  8047e8:	200018c5 	stb	zero,99(r4)
  8047ec:	20000c15 	stw	zero,48(r4)
  8047f0:	20000d15 	stw	zero,52(r4)
  8047f4:	20001115 	stw	zero,68(r4)
  8047f8:	20001215 	stw	zero,72(r4)
  8047fc:	2005883a 	mov	r2,r4
  804800:	dfc00417 	ldw	ra,16(sp)
  804804:	dcc00317 	ldw	r19,12(sp)
  804808:	dc800217 	ldw	r18,8(sp)
  80480c:	dc400117 	ldw	r17,4(sp)
  804810:	dc000017 	ldw	r16,0(sp)
  804814:	dec00504 	addi	sp,sp,20
  804818:	f800283a 	ret
  80481c:	80800017 	ldw	r2,0(r16)
  804820:	10000726 	beq	r2,zero,804840 <__sfp+0xfc>
  804824:	11000217 	ldw	r4,8(r2)
  804828:	11400117 	ldw	r5,4(r2)
  80482c:	1021883a 	mov	r16,r2
  804830:	003fd306 	br	804780 <__sfp+0x3c>
  804834:	8009883a 	mov	r4,r16
  804838:	08045640 	call	804564 <__sinit.part.0>
  80483c:	003fcc06 	br	804770 <__sfp+0x2c>
  804840:	01406b04 	movi	r5,428
  804844:	8809883a 	mov	r4,r17
  804848:	080557c0 	call	80557c <_malloc_r>
  80484c:	1025883a 	mov	r18,r2
  804850:	10000c26 	beq	r2,zero,804884 <__sfp+0x140>
  804854:	11000304 	addi	r4,r2,12
  804858:	11000215 	stw	r4,8(r2)
  80485c:	000b883a 	mov	r5,zero
  804860:	10000015 	stw	zero,0(r2)
  804864:	14c00115 	stw	r19,4(r2)
  804868:	01806804 	movi	r6,416
  80486c:	08060580 	call	806058 <memset>
  804870:	1009883a 	mov	r4,r2
  804874:	84800015 	stw	r18,0(r16)
  804878:	014000c4 	movi	r5,3
  80487c:	9021883a 	mov	r16,r18
  804880:	003fc606 	br	80479c <__sfp+0x58>
  804884:	80000015 	stw	zero,0(r16)
  804888:	00800304 	movi	r2,12
  80488c:	88800015 	stw	r2,0(r17)
  804890:	0009883a 	mov	r4,zero
  804894:	003fd906 	br	8047fc <__sfp+0xb8>

00804898 <_cleanup>:
  804898:	00802074 	movhi	r2,129
  80489c:	11084317 	ldw	r4,8460(r2)
  8048a0:	01402074 	movhi	r5,129
  8048a4:	29648604 	addi	r5,r5,-28136
  8048a8:	080526c1 	jmpi	80526c <_fwalk_reent>

008048ac <__sinit>:
  8048ac:	20800e17 	ldw	r2,56(r4)
  8048b0:	10000126 	beq	r2,zero,8048b8 <__sinit+0xc>
  8048b4:	f800283a 	ret
  8048b8:	08045641 	jmpi	804564 <__sinit.part.0>

008048bc <__sfp_lock_acquire>:
  8048bc:	f800283a 	ret

008048c0 <__sfp_lock_release>:
  8048c0:	f800283a 	ret

008048c4 <__sinit_lock_acquire>:
  8048c4:	f800283a 	ret

008048c8 <__sinit_lock_release>:
  8048c8:	f800283a 	ret

008048cc <__fp_lock_all>:
  8048cc:	00802074 	movhi	r2,129
  8048d0:	11084417 	ldw	r4,8464(r2)
  8048d4:	01402034 	movhi	r5,128
  8048d8:	29515204 	addi	r5,r5,17736
  8048dc:	08051d41 	jmpi	8051d4 <_fwalk>

008048e0 <__fp_unlock_all>:
  8048e0:	00802074 	movhi	r2,129
  8048e4:	11084417 	ldw	r4,8464(r2)
  8048e8:	01402034 	movhi	r5,128
  8048ec:	29515704 	addi	r5,r5,17756
  8048f0:	08051d41 	jmpi	8051d4 <_fwalk>

008048f4 <_malloc_trim_r>:
  8048f4:	defffb04 	addi	sp,sp,-20
  8048f8:	dcc00315 	stw	r19,12(sp)
  8048fc:	04c02074 	movhi	r19,129
  804900:	dc800215 	stw	r18,8(sp)
  804904:	dc400115 	stw	r17,4(sp)
  804908:	dc000015 	stw	r16,0(sp)
  80490c:	dfc00415 	stw	ra,16(sp)
  804910:	2821883a 	mov	r16,r5
  804914:	9cc26404 	addi	r19,r19,2448
  804918:	2025883a 	mov	r18,r4
  80491c:	080dd340 	call	80dd34 <__malloc_lock>
  804920:	98800217 	ldw	r2,8(r19)
  804924:	14400117 	ldw	r17,4(r2)
  804928:	00bfff04 	movi	r2,-4
  80492c:	88a2703a 	and	r17,r17,r2
  804930:	8c21c83a 	sub	r16,r17,r16
  804934:	8403fbc4 	addi	r16,r16,4079
  804938:	8020d33a 	srli	r16,r16,12
  80493c:	843fffc4 	addi	r16,r16,-1
  804940:	8020933a 	slli	r16,r16,12
  804944:	80840008 	cmpgei	r2,r16,4096
  804948:	10000626 	beq	r2,zero,804964 <_malloc_trim_r+0x70>
  80494c:	000b883a 	mov	r5,zero
  804950:	9009883a 	mov	r4,r18
  804954:	080789c0 	call	80789c <_sbrk_r>
  804958:	98c00217 	ldw	r3,8(r19)
  80495c:	1c47883a 	add	r3,r3,r17
  804960:	10c00a26 	beq	r2,r3,80498c <_malloc_trim_r+0x98>
  804964:	9009883a 	mov	r4,r18
  804968:	080dd580 	call	80dd58 <__malloc_unlock>
  80496c:	0005883a 	mov	r2,zero
  804970:	dfc00417 	ldw	ra,16(sp)
  804974:	dcc00317 	ldw	r19,12(sp)
  804978:	dc800217 	ldw	r18,8(sp)
  80497c:	dc400117 	ldw	r17,4(sp)
  804980:	dc000017 	ldw	r16,0(sp)
  804984:	dec00504 	addi	sp,sp,20
  804988:	f800283a 	ret
  80498c:	040bc83a 	sub	r5,zero,r16
  804990:	9009883a 	mov	r4,r18
  804994:	080789c0 	call	80789c <_sbrk_r>
  804998:	10bfffd8 	cmpnei	r2,r2,-1
  80499c:	10000d26 	beq	r2,zero,8049d4 <_malloc_trim_r+0xe0>
  8049a0:	00802074 	movhi	r2,129
  8049a4:	108f5317 	ldw	r2,15692(r2)
  8049a8:	98c00217 	ldw	r3,8(r19)
  8049ac:	8c23c83a 	sub	r17,r17,r16
  8049b0:	8c400054 	ori	r17,r17,1
  8049b4:	1421c83a 	sub	r16,r2,r16
  8049b8:	1c400115 	stw	r17,4(r3)
  8049bc:	00802074 	movhi	r2,129
  8049c0:	9009883a 	mov	r4,r18
  8049c4:	140f5315 	stw	r16,15692(r2)
  8049c8:	080dd580 	call	80dd58 <__malloc_unlock>
  8049cc:	00800044 	movi	r2,1
  8049d0:	003fe706 	br	804970 <_malloc_trim_r+0x7c>
  8049d4:	000b883a 	mov	r5,zero
  8049d8:	9009883a 	mov	r4,r18
  8049dc:	080789c0 	call	80789c <_sbrk_r>
  8049e0:	99000217 	ldw	r4,8(r19)
  8049e4:	1107c83a 	sub	r3,r2,r4
  8049e8:	19400410 	cmplti	r5,r3,16
  8049ec:	283fdd1e 	bne	r5,zero,804964 <_malloc_trim_r+0x70>
  8049f0:	01402074 	movhi	r5,129
  8049f4:	29484517 	ldw	r5,8468(r5)
  8049f8:	18c00054 	ori	r3,r3,1
  8049fc:	20c00115 	stw	r3,4(r4)
  804a00:	1145c83a 	sub	r2,r2,r5
  804a04:	01402074 	movhi	r5,129
  804a08:	288f5315 	stw	r2,15692(r5)
  804a0c:	003fd506 	br	804964 <_malloc_trim_r+0x70>

00804a10 <_free_r>:
  804a10:	28004f26 	beq	r5,zero,804b50 <_free_r+0x140>
  804a14:	defffd04 	addi	sp,sp,-12
  804a18:	dc400115 	stw	r17,4(sp)
  804a1c:	dc000015 	stw	r16,0(sp)
  804a20:	2023883a 	mov	r17,r4
  804a24:	2821883a 	mov	r16,r5
  804a28:	dfc00215 	stw	ra,8(sp)
  804a2c:	080dd340 	call	80dd34 <__malloc_lock>
  804a30:	81ffff17 	ldw	r7,-4(r16)
  804a34:	00bfff84 	movi	r2,-2
  804a38:	80fffe04 	addi	r3,r16,-8
  804a3c:	3884703a 	and	r2,r7,r2
  804a40:	01002074 	movhi	r4,129
  804a44:	188d883a 	add	r6,r3,r2
  804a48:	21026404 	addi	r4,r4,2448
  804a4c:	31400117 	ldw	r5,4(r6)
  804a50:	22000217 	ldw	r8,8(r4)
  804a54:	027fff04 	movi	r9,-4
  804a58:	2a4a703a 	and	r5,r5,r9
  804a5c:	41806426 	beq	r8,r6,804bf0 <_free_r+0x1e0>
  804a60:	31400115 	stw	r5,4(r6)
  804a64:	39c0004c 	andi	r7,r7,1
  804a68:	3151883a 	add	r8,r6,r5
  804a6c:	3800281e 	bne	r7,zero,804b10 <_free_r+0x100>
  804a70:	82bffe17 	ldw	r10,-8(r16)
  804a74:	42000117 	ldw	r8,4(r8)
  804a78:	01c02074 	movhi	r7,129
  804a7c:	1a87c83a 	sub	r3,r3,r10
  804a80:	1a400217 	ldw	r9,8(r3)
  804a84:	39c26604 	addi	r7,r7,2456
  804a88:	1285883a 	add	r2,r2,r10
  804a8c:	4200004c 	andi	r8,r8,1
  804a90:	49c04c26 	beq	r9,r7,804bc4 <_free_r+0x1b4>
  804a94:	1a800317 	ldw	r10,12(r3)
  804a98:	4a800315 	stw	r10,12(r9)
  804a9c:	52400215 	stw	r9,8(r10)
  804aa0:	40007126 	beq	r8,zero,804c68 <_free_r+0x258>
  804aa4:	11400054 	ori	r5,r2,1
  804aa8:	19400115 	stw	r5,4(r3)
  804aac:	30800015 	stw	r2,0(r6)
  804ab0:	11408028 	cmpgeui	r5,r2,512
  804ab4:	28002c1e 	bne	r5,zero,804b68 <_free_r+0x158>
  804ab8:	100ad0fa 	srli	r5,r2,3
  804abc:	100cd17a 	srli	r6,r2,5
  804ac0:	00800044 	movi	r2,1
  804ac4:	29400044 	addi	r5,r5,1
  804ac8:	280a90fa 	slli	r5,r5,3
  804acc:	21c00117 	ldw	r7,4(r4)
  804ad0:	1184983a 	sll	r2,r2,r6
  804ad4:	214b883a 	add	r5,r4,r5
  804ad8:	29800017 	ldw	r6,0(r5)
  804adc:	11c4b03a 	or	r2,r2,r7
  804ae0:	29fffe04 	addi	r7,r5,-8
  804ae4:	19c00315 	stw	r7,12(r3)
  804ae8:	19800215 	stw	r6,8(r3)
  804aec:	20800115 	stw	r2,4(r4)
  804af0:	28c00015 	stw	r3,0(r5)
  804af4:	30c00315 	stw	r3,12(r6)
  804af8:	8809883a 	mov	r4,r17
  804afc:	dfc00217 	ldw	ra,8(sp)
  804b00:	dc400117 	ldw	r17,4(sp)
  804b04:	dc000017 	ldw	r16,0(sp)
  804b08:	dec00304 	addi	sp,sp,12
  804b0c:	080dd581 	jmpi	80dd58 <__malloc_unlock>
  804b10:	41c00117 	ldw	r7,4(r8)
  804b14:	39c0004c 	andi	r7,r7,1
  804b18:	38000e1e 	bne	r7,zero,804b54 <_free_r+0x144>
  804b1c:	01c02074 	movhi	r7,129
  804b20:	1145883a 	add	r2,r2,r5
  804b24:	39c26604 	addi	r7,r7,2456
  804b28:	31400217 	ldw	r5,8(r6)
  804b2c:	12400054 	ori	r9,r2,1
  804b30:	1891883a 	add	r8,r3,r2
  804b34:	29c05226 	beq	r5,r7,804c80 <_free_r+0x270>
  804b38:	31800317 	ldw	r6,12(r6)
  804b3c:	29800315 	stw	r6,12(r5)
  804b40:	31400215 	stw	r5,8(r6)
  804b44:	1a400115 	stw	r9,4(r3)
  804b48:	40800015 	stw	r2,0(r8)
  804b4c:	003fd806 	br	804ab0 <_free_r+0xa0>
  804b50:	f800283a 	ret
  804b54:	11400054 	ori	r5,r2,1
  804b58:	817fff15 	stw	r5,-4(r16)
  804b5c:	30800015 	stw	r2,0(r6)
  804b60:	11408028 	cmpgeui	r5,r2,512
  804b64:	283fd426 	beq	r5,zero,804ab8 <_free_r+0xa8>
  804b68:	100ad27a 	srli	r5,r2,9
  804b6c:	29800168 	cmpgeui	r6,r5,5
  804b70:	3000341e 	bne	r6,zero,804c44 <_free_r+0x234>
  804b74:	100ad1ba 	srli	r5,r2,6
  804b78:	29800e44 	addi	r6,r5,57
  804b7c:	300c90fa 	slli	r6,r6,3
  804b80:	29c00e04 	addi	r7,r5,56
  804b84:	218d883a 	add	r6,r4,r6
  804b88:	31400017 	ldw	r5,0(r6)
  804b8c:	31bffe04 	addi	r6,r6,-8
  804b90:	31404226 	beq	r6,r5,804c9c <_free_r+0x28c>
  804b94:	01ffff04 	movi	r7,-4
  804b98:	29000117 	ldw	r4,4(r5)
  804b9c:	21c8703a 	and	r4,r4,r7
  804ba0:	1100022e 	bgeu	r2,r4,804bac <_free_r+0x19c>
  804ba4:	29400217 	ldw	r5,8(r5)
  804ba8:	317ffb1e 	bne	r6,r5,804b98 <_free_r+0x188>
  804bac:	29800317 	ldw	r6,12(r5)
  804bb0:	19800315 	stw	r6,12(r3)
  804bb4:	19400215 	stw	r5,8(r3)
  804bb8:	30c00215 	stw	r3,8(r6)
  804bbc:	28c00315 	stw	r3,12(r5)
  804bc0:	003fcd06 	br	804af8 <_free_r+0xe8>
  804bc4:	40004d1e 	bne	r8,zero,804cfc <_free_r+0x2ec>
  804bc8:	31000317 	ldw	r4,12(r6)
  804bcc:	31800217 	ldw	r6,8(r6)
  804bd0:	2885883a 	add	r2,r5,r2
  804bd4:	11400054 	ori	r5,r2,1
  804bd8:	31000315 	stw	r4,12(r6)
  804bdc:	21800215 	stw	r6,8(r4)
  804be0:	19400115 	stw	r5,4(r3)
  804be4:	1887883a 	add	r3,r3,r2
  804be8:	18800015 	stw	r2,0(r3)
  804bec:	003fc206 	br	804af8 <_free_r+0xe8>
  804bf0:	39c0004c 	andi	r7,r7,1
  804bf4:	1145883a 	add	r2,r2,r5
  804bf8:	3800071e 	bne	r7,zero,804c18 <_free_r+0x208>
  804bfc:	81fffe17 	ldw	r7,-8(r16)
  804c00:	19c7c83a 	sub	r3,r3,r7
  804c04:	19400317 	ldw	r5,12(r3)
  804c08:	19800217 	ldw	r6,8(r3)
  804c0c:	11c5883a 	add	r2,r2,r7
  804c10:	31400315 	stw	r5,12(r6)
  804c14:	29800215 	stw	r6,8(r5)
  804c18:	01402074 	movhi	r5,129
  804c1c:	11800054 	ori	r6,r2,1
  804c20:	29484617 	ldw	r5,8472(r5)
  804c24:	19800115 	stw	r6,4(r3)
  804c28:	20c00215 	stw	r3,8(r4)
  804c2c:	117fb236 	bltu	r2,r5,804af8 <_free_r+0xe8>
  804c30:	00802074 	movhi	r2,129
  804c34:	114f4917 	ldw	r5,15652(r2)
  804c38:	8809883a 	mov	r4,r17
  804c3c:	08048f40 	call	8048f4 <_malloc_trim_r>
  804c40:	003fad06 	br	804af8 <_free_r+0xe8>
  804c44:	29800568 	cmpgeui	r6,r5,21
  804c48:	30000926 	beq	r6,zero,804c70 <_free_r+0x260>
  804c4c:	29801568 	cmpgeui	r6,r5,85
  804c50:	3000191e 	bne	r6,zero,804cb8 <_free_r+0x2a8>
  804c54:	100ad33a 	srli	r5,r2,12
  804c58:	29801bc4 	addi	r6,r5,111
  804c5c:	300c90fa 	slli	r6,r6,3
  804c60:	29c01b84 	addi	r7,r5,110
  804c64:	003fc706 	br	804b84 <_free_r+0x174>
  804c68:	1145883a 	add	r2,r2,r5
  804c6c:	003fae06 	br	804b28 <_free_r+0x118>
  804c70:	29801704 	addi	r6,r5,92
  804c74:	300c90fa 	slli	r6,r6,3
  804c78:	29c016c4 	addi	r7,r5,91
  804c7c:	003fc106 	br	804b84 <_free_r+0x174>
  804c80:	20c00515 	stw	r3,20(r4)
  804c84:	20c00415 	stw	r3,16(r4)
  804c88:	19c00315 	stw	r7,12(r3)
  804c8c:	19c00215 	stw	r7,8(r3)
  804c90:	1a400115 	stw	r9,4(r3)
  804c94:	40800015 	stw	r2,0(r8)
  804c98:	003f9706 	br	804af8 <_free_r+0xe8>
  804c9c:	380fd0ba 	srai	r7,r7,2
  804ca0:	00800044 	movi	r2,1
  804ca4:	22000117 	ldw	r8,4(r4)
  804ca8:	11ce983a 	sll	r7,r2,r7
  804cac:	3a0eb03a 	or	r7,r7,r8
  804cb0:	21c00115 	stw	r7,4(r4)
  804cb4:	003fbe06 	br	804bb0 <_free_r+0x1a0>
  804cb8:	29805568 	cmpgeui	r6,r5,341
  804cbc:	3000051e 	bne	r6,zero,804cd4 <_free_r+0x2c4>
  804cc0:	100ad3fa 	srli	r5,r2,15
  804cc4:	29801e04 	addi	r6,r5,120
  804cc8:	300c90fa 	slli	r6,r6,3
  804ccc:	29c01dc4 	addi	r7,r5,119
  804cd0:	003fac06 	br	804b84 <_free_r+0x174>
  804cd4:	29415568 	cmpgeui	r5,r5,1365
  804cd8:	2800051e 	bne	r5,zero,804cf0 <_free_r+0x2e0>
  804cdc:	100ad4ba 	srli	r5,r2,18
  804ce0:	29801f44 	addi	r6,r5,125
  804ce4:	300c90fa 	slli	r6,r6,3
  804ce8:	29c01f04 	addi	r7,r5,124
  804cec:	003fa506 	br	804b84 <_free_r+0x174>
  804cf0:	0180fe04 	movi	r6,1016
  804cf4:	01c01f84 	movi	r7,126
  804cf8:	003fa206 	br	804b84 <_free_r+0x174>
  804cfc:	11000054 	ori	r4,r2,1
  804d00:	19000115 	stw	r4,4(r3)
  804d04:	30800015 	stw	r2,0(r6)
  804d08:	003f7b06 	br	804af8 <_free_r+0xe8>

00804d0c <__sfvwrite_r>:
  804d0c:	30800217 	ldw	r2,8(r6)
  804d10:	1000a326 	beq	r2,zero,804fa0 <__sfvwrite_r+0x294>
  804d14:	29c0030b 	ldhu	r7,12(r5)
  804d18:	defff404 	addi	sp,sp,-48
  804d1c:	ddc00915 	stw	r23,36(sp)
  804d20:	dd400715 	stw	r21,28(sp)
  804d24:	dc000215 	stw	r16,8(sp)
  804d28:	dfc00b15 	stw	ra,44(sp)
  804d2c:	df000a15 	stw	fp,40(sp)
  804d30:	dd800815 	stw	r22,32(sp)
  804d34:	dd000615 	stw	r20,24(sp)
  804d38:	dcc00515 	stw	r19,20(sp)
  804d3c:	dc800415 	stw	r18,16(sp)
  804d40:	dc400315 	stw	r17,12(sp)
  804d44:	3880020c 	andi	r2,r7,8
  804d48:	302f883a 	mov	r23,r6
  804d4c:	202b883a 	mov	r21,r4
  804d50:	2821883a 	mov	r16,r5
  804d54:	10002226 	beq	r2,zero,804de0 <__sfvwrite_r+0xd4>
  804d58:	28800417 	ldw	r2,16(r5)
  804d5c:	10002026 	beq	r2,zero,804de0 <__sfvwrite_r+0xd4>
  804d60:	3880008c 	andi	r2,r7,2
  804d64:	bc400017 	ldw	r17,0(r23)
  804d68:	10002526 	beq	r2,zero,804e00 <__sfvwrite_r+0xf4>
  804d6c:	80800917 	ldw	r2,36(r16)
  804d70:	81400717 	ldw	r5,28(r16)
  804d74:	05200034 	movhi	r20,32768
  804d78:	0027883a 	mov	r19,zero
  804d7c:	0025883a 	mov	r18,zero
  804d80:	a53f0004 	addi	r20,r20,-1024
  804d84:	980d883a 	mov	r6,r19
  804d88:	a809883a 	mov	r4,r21
  804d8c:	90001026 	beq	r18,zero,804dd0 <__sfvwrite_r+0xc4>
  804d90:	900f883a 	mov	r7,r18
  804d94:	a480012e 	bgeu	r20,r18,804d9c <__sfvwrite_r+0x90>
  804d98:	a00f883a 	mov	r7,r20
  804d9c:	103ee83a 	callr	r2
  804da0:	00807a0e 	bge	zero,r2,804f8c <__sfvwrite_r+0x280>
  804da4:	b9000217 	ldw	r4,8(r23)
  804da8:	98a7883a 	add	r19,r19,r2
  804dac:	90a5c83a 	sub	r18,r18,r2
  804db0:	2085c83a 	sub	r2,r4,r2
  804db4:	b8800215 	stw	r2,8(r23)
  804db8:	10006326 	beq	r2,zero,804f48 <__sfvwrite_r+0x23c>
  804dbc:	80800917 	ldw	r2,36(r16)
  804dc0:	81400717 	ldw	r5,28(r16)
  804dc4:	980d883a 	mov	r6,r19
  804dc8:	a809883a 	mov	r4,r21
  804dcc:	903ff01e 	bne	r18,zero,804d90 <__sfvwrite_r+0x84>
  804dd0:	8cc00017 	ldw	r19,0(r17)
  804dd4:	8c800117 	ldw	r18,4(r17)
  804dd8:	8c400204 	addi	r17,r17,8
  804ddc:	003fe906 	br	804d84 <__sfvwrite_r+0x78>
  804de0:	800b883a 	mov	r5,r16
  804de4:	a809883a 	mov	r4,r21
  804de8:	08027700 	call	802770 <__swsetup_r>
  804dec:	1000f71e 	bne	r2,zero,8051cc <__sfvwrite_r+0x4c0>
  804df0:	81c0030b 	ldhu	r7,12(r16)
  804df4:	bc400017 	ldw	r17,0(r23)
  804df8:	3880008c 	andi	r2,r7,2
  804dfc:	103fdb1e 	bne	r2,zero,804d6c <__sfvwrite_r+0x60>
  804e00:	3880004c 	andi	r2,r7,1
  804e04:	84800217 	ldw	r18,8(r16)
  804e08:	82000017 	ldw	r8,0(r16)
  804e0c:	1000661e 	bne	r2,zero,804fa8 <__sfvwrite_r+0x29c>
  804e10:	00a00034 	movhi	r2,32768
  804e14:	10bfff84 	addi	r2,r2,-2
  804e18:	00e00034 	movhi	r3,32768
  804e1c:	d8800015 	stw	r2,0(sp)
  804e20:	18bfffc4 	addi	r2,r3,-1
  804e24:	0039883a 	mov	fp,zero
  804e28:	0027883a 	mov	r19,zero
  804e2c:	d8800115 	stw	r2,4(sp)
  804e30:	98004126 	beq	r19,zero,804f38 <__sfvwrite_r+0x22c>
  804e34:	3880800c 	andi	r2,r7,512
  804e38:	10009726 	beq	r2,zero,805098 <__sfvwrite_r+0x38c>
  804e3c:	902d883a 	mov	r22,r18
  804e40:	9c80be36 	bltu	r19,r18,80513c <__sfvwrite_r+0x430>
  804e44:	3881200c 	andi	r2,r7,1152
  804e48:	10002626 	beq	r2,zero,804ee4 <__sfvwrite_r+0x1d8>
  804e4c:	81800517 	ldw	r6,20(r16)
  804e50:	81400417 	ldw	r5,16(r16)
  804e54:	98800044 	addi	r2,r19,1
  804e58:	3189883a 	add	r4,r6,r6
  804e5c:	2189883a 	add	r4,r4,r6
  804e60:	2028d7fa 	srli	r20,r4,31
  804e64:	4165c83a 	sub	r18,r8,r5
  804e68:	1485883a 	add	r2,r2,r18
  804e6c:	a109883a 	add	r4,r20,r4
  804e70:	2029d07a 	srai	r20,r4,1
  804e74:	a00d883a 	mov	r6,r20
  804e78:	a080022e 	bgeu	r20,r2,804e84 <__sfvwrite_r+0x178>
  804e7c:	1029883a 	mov	r20,r2
  804e80:	100d883a 	mov	r6,r2
  804e84:	39c1000c 	andi	r7,r7,1024
  804e88:	3800c026 	beq	r7,zero,80518c <__sfvwrite_r+0x480>
  804e8c:	a809883a 	mov	r4,r21
  804e90:	300b883a 	mov	r5,r6
  804e94:	080557c0 	call	80557c <_malloc_r>
  804e98:	1009883a 	mov	r4,r2
  804e9c:	1000c726 	beq	r2,zero,8051bc <__sfvwrite_r+0x4b0>
  804ea0:	81400417 	ldw	r5,16(r16)
  804ea4:	900d883a 	mov	r6,r18
  804ea8:	0805e2c0 	call	805e2c <memcpy>
  804eac:	1009883a 	mov	r4,r2
  804eb0:	8080030b 	ldhu	r2,12(r16)
  804eb4:	00fedfc4 	movi	r3,-1153
  804eb8:	10c4703a 	and	r2,r2,r3
  804ebc:	10802014 	ori	r2,r2,128
  804ec0:	8080030d 	sth	r2,12(r16)
  804ec4:	2491883a 	add	r8,r4,r18
  804ec8:	a485c83a 	sub	r2,r20,r18
  804ecc:	81000415 	stw	r4,16(r16)
  804ed0:	82000015 	stw	r8,0(r16)
  804ed4:	85000515 	stw	r20,20(r16)
  804ed8:	9825883a 	mov	r18,r19
  804edc:	80800215 	stw	r2,8(r16)
  804ee0:	982d883a 	mov	r22,r19
  804ee4:	4009883a 	mov	r4,r8
  804ee8:	b00d883a 	mov	r6,r22
  804eec:	e00b883a 	mov	r5,fp
  804ef0:	0805f2c0 	call	805f2c <memmove>
  804ef4:	81000217 	ldw	r4,8(r16)
  804ef8:	80800017 	ldw	r2,0(r16)
  804efc:	9829883a 	mov	r20,r19
  804f00:	24a5c83a 	sub	r18,r4,r18
  804f04:	1585883a 	add	r2,r2,r22
  804f08:	84800215 	stw	r18,8(r16)
  804f0c:	80800015 	stw	r2,0(r16)
  804f10:	0027883a 	mov	r19,zero
  804f14:	b8800217 	ldw	r2,8(r23)
  804f18:	e539883a 	add	fp,fp,r20
  804f1c:	1529c83a 	sub	r20,r2,r20
  804f20:	bd000215 	stw	r20,8(r23)
  804f24:	a0000826 	beq	r20,zero,804f48 <__sfvwrite_r+0x23c>
  804f28:	81c0030b 	ldhu	r7,12(r16)
  804f2c:	84800217 	ldw	r18,8(r16)
  804f30:	82000017 	ldw	r8,0(r16)
  804f34:	983fbf1e 	bne	r19,zero,804e34 <__sfvwrite_r+0x128>
  804f38:	8f000017 	ldw	fp,0(r17)
  804f3c:	8cc00117 	ldw	r19,4(r17)
  804f40:	8c400204 	addi	r17,r17,8
  804f44:	003fba06 	br	804e30 <__sfvwrite_r+0x124>
  804f48:	0005883a 	mov	r2,zero
  804f4c:	dfc00b17 	ldw	ra,44(sp)
  804f50:	df000a17 	ldw	fp,40(sp)
  804f54:	ddc00917 	ldw	r23,36(sp)
  804f58:	dd800817 	ldw	r22,32(sp)
  804f5c:	dd400717 	ldw	r21,28(sp)
  804f60:	dd000617 	ldw	r20,24(sp)
  804f64:	dcc00517 	ldw	r19,20(sp)
  804f68:	dc800417 	ldw	r18,16(sp)
  804f6c:	dc400317 	ldw	r17,12(sp)
  804f70:	dc000217 	ldw	r16,8(sp)
  804f74:	dec00c04 	addi	sp,sp,48
  804f78:	f800283a 	ret
  804f7c:	800b883a 	mov	r5,r16
  804f80:	a809883a 	mov	r4,r21
  804f84:	08044640 	call	804464 <_fflush_r>
  804f88:	10002026 	beq	r2,zero,80500c <__sfvwrite_r+0x300>
  804f8c:	8080030b 	ldhu	r2,12(r16)
  804f90:	10801014 	ori	r2,r2,64
  804f94:	8080030d 	sth	r2,12(r16)
  804f98:	00bfffc4 	movi	r2,-1
  804f9c:	003feb06 	br	804f4c <__sfvwrite_r+0x240>
  804fa0:	0005883a 	mov	r2,zero
  804fa4:	f800283a 	ret
  804fa8:	002d883a 	mov	r22,zero
  804fac:	0027883a 	mov	r19,zero
  804fb0:	0005883a 	mov	r2,zero
  804fb4:	0039883a 	mov	fp,zero
  804fb8:	b0001d26 	beq	r22,zero,805030 <__sfvwrite_r+0x324>
  804fbc:	10002026 	beq	r2,zero,805040 <__sfvwrite_r+0x334>
  804fc0:	9829883a 	mov	r20,r19
  804fc4:	b500012e 	bgeu	r22,r20,804fcc <__sfvwrite_r+0x2c0>
  804fc8:	b029883a 	mov	r20,r22
  804fcc:	80800417 	ldw	r2,16(r16)
  804fd0:	81c00517 	ldw	r7,20(r16)
  804fd4:	1200022e 	bgeu	r2,r8,804fe0 <__sfvwrite_r+0x2d4>
  804fd8:	3ca5883a 	add	r18,r7,r18
  804fdc:	95002216 	blt	r18,r20,805068 <__sfvwrite_r+0x35c>
  804fe0:	a1c05916 	blt	r20,r7,805148 <__sfvwrite_r+0x43c>
  804fe4:	80800917 	ldw	r2,36(r16)
  804fe8:	81400717 	ldw	r5,28(r16)
  804fec:	e00d883a 	mov	r6,fp
  804ff0:	a809883a 	mov	r4,r21
  804ff4:	103ee83a 	callr	r2
  804ff8:	1025883a 	mov	r18,r2
  804ffc:	00bfe30e 	bge	zero,r2,804f8c <__sfvwrite_r+0x280>
  805000:	9ca7c83a 	sub	r19,r19,r18
  805004:	983fdd26 	beq	r19,zero,804f7c <__sfvwrite_r+0x270>
  805008:	00800044 	movi	r2,1
  80500c:	b9800217 	ldw	r6,8(r23)
  805010:	e4b9883a 	add	fp,fp,r18
  805014:	b4adc83a 	sub	r22,r22,r18
  805018:	34a5c83a 	sub	r18,r6,r18
  80501c:	bc800215 	stw	r18,8(r23)
  805020:	903fc926 	beq	r18,zero,804f48 <__sfvwrite_r+0x23c>
  805024:	84800217 	ldw	r18,8(r16)
  805028:	82000017 	ldw	r8,0(r16)
  80502c:	b03fe31e 	bne	r22,zero,804fbc <__sfvwrite_r+0x2b0>
  805030:	8d800117 	ldw	r22,4(r17)
  805034:	8f000017 	ldw	fp,0(r17)
  805038:	8c400204 	addi	r17,r17,8
  80503c:	b03ffc26 	beq	r22,zero,805030 <__sfvwrite_r+0x324>
  805040:	b00d883a 	mov	r6,r22
  805044:	01400284 	movi	r5,10
  805048:	e009883a 	mov	r4,fp
  80504c:	da000015 	stw	r8,0(sp)
  805050:	0805d5c0 	call	805d5c <memchr>
  805054:	da000017 	ldw	r8,0(sp)
  805058:	10004926 	beq	r2,zero,805180 <__sfvwrite_r+0x474>
  80505c:	10800044 	addi	r2,r2,1
  805060:	1727c83a 	sub	r19,r2,fp
  805064:	003fd606 	br	804fc0 <__sfvwrite_r+0x2b4>
  805068:	e00b883a 	mov	r5,fp
  80506c:	4009883a 	mov	r4,r8
  805070:	900d883a 	mov	r6,r18
  805074:	0805f2c0 	call	805f2c <memmove>
  805078:	80800017 	ldw	r2,0(r16)
  80507c:	800b883a 	mov	r5,r16
  805080:	a809883a 	mov	r4,r21
  805084:	1485883a 	add	r2,r2,r18
  805088:	80800015 	stw	r2,0(r16)
  80508c:	08044640 	call	804464 <_fflush_r>
  805090:	103fdb26 	beq	r2,zero,805000 <__sfvwrite_r+0x2f4>
  805094:	003fbd06 	br	804f8c <__sfvwrite_r+0x280>
  805098:	80800417 	ldw	r2,16(r16)
  80509c:	12001436 	bltu	r2,r8,8050f0 <__sfvwrite_r+0x3e4>
  8050a0:	85000517 	ldw	r20,20(r16)
  8050a4:	9d001236 	bltu	r19,r20,8050f0 <__sfvwrite_r+0x3e4>
  8050a8:	d8800017 	ldw	r2,0(sp)
  8050ac:	14c0322e 	bgeu	r2,r19,805178 <__sfvwrite_r+0x46c>
  8050b0:	d9000117 	ldw	r4,4(sp)
  8050b4:	a00b883a 	mov	r5,r20
  8050b8:	080acac0 	call	80acac <__divsi3>
  8050bc:	a00b883a 	mov	r5,r20
  8050c0:	1009883a 	mov	r4,r2
  8050c4:	080ae600 	call	80ae60 <__mulsi3>
  8050c8:	82000917 	ldw	r8,36(r16)
  8050cc:	81400717 	ldw	r5,28(r16)
  8050d0:	100f883a 	mov	r7,r2
  8050d4:	e00d883a 	mov	r6,fp
  8050d8:	a809883a 	mov	r4,r21
  8050dc:	403ee83a 	callr	r8
  8050e0:	1029883a 	mov	r20,r2
  8050e4:	00bfa90e 	bge	zero,r2,804f8c <__sfvwrite_r+0x280>
  8050e8:	9d27c83a 	sub	r19,r19,r20
  8050ec:	003f8906 	br	804f14 <__sfvwrite_r+0x208>
  8050f0:	9029883a 	mov	r20,r18
  8050f4:	9c80012e 	bgeu	r19,r18,8050fc <__sfvwrite_r+0x3f0>
  8050f8:	9829883a 	mov	r20,r19
  8050fc:	4009883a 	mov	r4,r8
  805100:	a00d883a 	mov	r6,r20
  805104:	e00b883a 	mov	r5,fp
  805108:	0805f2c0 	call	805f2c <memmove>
  80510c:	80800217 	ldw	r2,8(r16)
  805110:	81000017 	ldw	r4,0(r16)
  805114:	1505c83a 	sub	r2,r2,r20
  805118:	2509883a 	add	r4,r4,r20
  80511c:	80800215 	stw	r2,8(r16)
  805120:	81000015 	stw	r4,0(r16)
  805124:	103ff01e 	bne	r2,zero,8050e8 <__sfvwrite_r+0x3dc>
  805128:	800b883a 	mov	r5,r16
  80512c:	a809883a 	mov	r4,r21
  805130:	08044640 	call	804464 <_fflush_r>
  805134:	103fec26 	beq	r2,zero,8050e8 <__sfvwrite_r+0x3dc>
  805138:	003f9406 	br	804f8c <__sfvwrite_r+0x280>
  80513c:	9825883a 	mov	r18,r19
  805140:	982d883a 	mov	r22,r19
  805144:	003f6706 	br	804ee4 <__sfvwrite_r+0x1d8>
  805148:	4009883a 	mov	r4,r8
  80514c:	a00d883a 	mov	r6,r20
  805150:	e00b883a 	mov	r5,fp
  805154:	0805f2c0 	call	805f2c <memmove>
  805158:	81000217 	ldw	r4,8(r16)
  80515c:	80800017 	ldw	r2,0(r16)
  805160:	a025883a 	mov	r18,r20
  805164:	2509c83a 	sub	r4,r4,r20
  805168:	1505883a 	add	r2,r2,r20
  80516c:	81000215 	stw	r4,8(r16)
  805170:	80800015 	stw	r2,0(r16)
  805174:	003fa206 	br	805000 <__sfvwrite_r+0x2f4>
  805178:	9809883a 	mov	r4,r19
  80517c:	003fcd06 	br	8050b4 <__sfvwrite_r+0x3a8>
  805180:	b5000044 	addi	r20,r22,1
  805184:	a027883a 	mov	r19,r20
  805188:	003f8e06 	br	804fc4 <__sfvwrite_r+0x2b8>
  80518c:	a809883a 	mov	r4,r21
  805190:	08073380 	call	807338 <_realloc_r>
  805194:	1009883a 	mov	r4,r2
  805198:	103f4a1e 	bne	r2,zero,804ec4 <__sfvwrite_r+0x1b8>
  80519c:	81400417 	ldw	r5,16(r16)
  8051a0:	a809883a 	mov	r4,r21
  8051a4:	0804a100 	call	804a10 <_free_r>
  8051a8:	8080030b 	ldhu	r2,12(r16)
  8051ac:	00c00304 	movi	r3,12
  8051b0:	a8c00015 	stw	r3,0(r21)
  8051b4:	10bfdfcc 	andi	r2,r2,65407
  8051b8:	003f7506 	br	804f90 <__sfvwrite_r+0x284>
  8051bc:	00c00304 	movi	r3,12
  8051c0:	8080030b 	ldhu	r2,12(r16)
  8051c4:	a8c00015 	stw	r3,0(r21)
  8051c8:	003f7106 	br	804f90 <__sfvwrite_r+0x284>
  8051cc:	00bfffc4 	movi	r2,-1
  8051d0:	003f5e06 	br	804f4c <__sfvwrite_r+0x240>

008051d4 <_fwalk>:
  8051d4:	defffa04 	addi	sp,sp,-24
  8051d8:	dd000415 	stw	r20,16(sp)
  8051dc:	dcc00315 	stw	r19,12(sp)
  8051e0:	dc800215 	stw	r18,8(sp)
  8051e4:	dfc00515 	stw	ra,20(sp)
  8051e8:	dc400115 	stw	r17,4(sp)
  8051ec:	dc000015 	stw	r16,0(sp)
  8051f0:	2827883a 	mov	r19,r5
  8051f4:	2480b804 	addi	r18,r4,736
  8051f8:	0029883a 	mov	r20,zero
  8051fc:	94400117 	ldw	r17,4(r18)
  805200:	94000217 	ldw	r16,8(r18)
  805204:	8c7fffc4 	addi	r17,r17,-1
  805208:	88000d16 	blt	r17,zero,805240 <_fwalk+0x6c>
  80520c:	8080030b 	ldhu	r2,12(r16)
  805210:	8c7fffc4 	addi	r17,r17,-1
  805214:	108000b0 	cmpltui	r2,r2,2
  805218:	1000061e 	bne	r2,zero,805234 <_fwalk+0x60>
  80521c:	8080038f 	ldh	r2,14(r16)
  805220:	8009883a 	mov	r4,r16
  805224:	10bfffe0 	cmpeqi	r2,r2,-1
  805228:	1000021e 	bne	r2,zero,805234 <_fwalk+0x60>
  80522c:	983ee83a 	callr	r19
  805230:	a0a8b03a 	or	r20,r20,r2
  805234:	88bfffd8 	cmpnei	r2,r17,-1
  805238:	84001a04 	addi	r16,r16,104
  80523c:	103ff31e 	bne	r2,zero,80520c <_fwalk+0x38>
  805240:	94800017 	ldw	r18,0(r18)
  805244:	903fed1e 	bne	r18,zero,8051fc <_fwalk+0x28>
  805248:	a005883a 	mov	r2,r20
  80524c:	dfc00517 	ldw	ra,20(sp)
  805250:	dd000417 	ldw	r20,16(sp)
  805254:	dcc00317 	ldw	r19,12(sp)
  805258:	dc800217 	ldw	r18,8(sp)
  80525c:	dc400117 	ldw	r17,4(sp)
  805260:	dc000017 	ldw	r16,0(sp)
  805264:	dec00604 	addi	sp,sp,24
  805268:	f800283a 	ret

0080526c <_fwalk_reent>:
  80526c:	defff904 	addi	sp,sp,-28
  805270:	dd400515 	stw	r21,20(sp)
  805274:	dd000415 	stw	r20,16(sp)
  805278:	dcc00315 	stw	r19,12(sp)
  80527c:	dc800215 	stw	r18,8(sp)
  805280:	dfc00615 	stw	ra,24(sp)
  805284:	dc400115 	stw	r17,4(sp)
  805288:	dc000015 	stw	r16,0(sp)
  80528c:	202b883a 	mov	r21,r4
  805290:	2827883a 	mov	r19,r5
  805294:	2480b804 	addi	r18,r4,736
  805298:	0029883a 	mov	r20,zero
  80529c:	94400117 	ldw	r17,4(r18)
  8052a0:	94000217 	ldw	r16,8(r18)
  8052a4:	8c7fffc4 	addi	r17,r17,-1
  8052a8:	88000e16 	blt	r17,zero,8052e4 <_fwalk_reent+0x78>
  8052ac:	8080030b 	ldhu	r2,12(r16)
  8052b0:	8c7fffc4 	addi	r17,r17,-1
  8052b4:	108000b0 	cmpltui	r2,r2,2
  8052b8:	1000071e 	bne	r2,zero,8052d8 <_fwalk_reent+0x6c>
  8052bc:	8080038f 	ldh	r2,14(r16)
  8052c0:	800b883a 	mov	r5,r16
  8052c4:	a809883a 	mov	r4,r21
  8052c8:	10bfffe0 	cmpeqi	r2,r2,-1
  8052cc:	1000021e 	bne	r2,zero,8052d8 <_fwalk_reent+0x6c>
  8052d0:	983ee83a 	callr	r19
  8052d4:	a0a8b03a 	or	r20,r20,r2
  8052d8:	88bfffd8 	cmpnei	r2,r17,-1
  8052dc:	84001a04 	addi	r16,r16,104
  8052e0:	103ff21e 	bne	r2,zero,8052ac <_fwalk_reent+0x40>
  8052e4:	94800017 	ldw	r18,0(r18)
  8052e8:	903fec1e 	bne	r18,zero,80529c <_fwalk_reent+0x30>
  8052ec:	a005883a 	mov	r2,r20
  8052f0:	dfc00617 	ldw	ra,24(sp)
  8052f4:	dd400517 	ldw	r21,20(sp)
  8052f8:	dd000417 	ldw	r20,16(sp)
  8052fc:	dcc00317 	ldw	r19,12(sp)
  805300:	dc800217 	ldw	r18,8(sp)
  805304:	dc400117 	ldw	r17,4(sp)
  805308:	dc000017 	ldw	r16,0(sp)
  80530c:	dec00704 	addi	sp,sp,28
  805310:	f800283a 	ret

00805314 <__localeconv_l>:
  805314:	20803c04 	addi	r2,r4,240
  805318:	f800283a 	ret

0080531c <_localeconv_r>:
  80531c:	00802074 	movhi	r2,129
  805320:	1083a204 	addi	r2,r2,3720
  805324:	f800283a 	ret

00805328 <localeconv>:
  805328:	00802074 	movhi	r2,129
  80532c:	1083a204 	addi	r2,r2,3720
  805330:	f800283a 	ret

00805334 <__smakebuf_r>:
  805334:	2880030b 	ldhu	r2,12(r5)
  805338:	deffe804 	addi	sp,sp,-96
  80533c:	dc001215 	stw	r16,72(sp)
  805340:	dfc01715 	stw	ra,92(sp)
  805344:	dd001615 	stw	r20,88(sp)
  805348:	dcc01515 	stw	r19,84(sp)
  80534c:	dc801415 	stw	r18,80(sp)
  805350:	dc401315 	stw	r17,76(sp)
  805354:	10c0008c 	andi	r3,r2,2
  805358:	2821883a 	mov	r16,r5
  80535c:	18000d26 	beq	r3,zero,805394 <__smakebuf_r+0x60>
  805360:	288010c4 	addi	r2,r5,67
  805364:	28800015 	stw	r2,0(r5)
  805368:	28800415 	stw	r2,16(r5)
  80536c:	00800044 	movi	r2,1
  805370:	28800515 	stw	r2,20(r5)
  805374:	dfc01717 	ldw	ra,92(sp)
  805378:	dd001617 	ldw	r20,88(sp)
  80537c:	dcc01517 	ldw	r19,84(sp)
  805380:	dc801417 	ldw	r18,80(sp)
  805384:	dc401317 	ldw	r17,76(sp)
  805388:	dc001217 	ldw	r16,72(sp)
  80538c:	dec01804 	addi	sp,sp,96
  805390:	f800283a 	ret
  805394:	2940038f 	ldh	r5,14(r5)
  805398:	2023883a 	mov	r17,r4
  80539c:	28002816 	blt	r5,zero,805440 <__smakebuf_r+0x10c>
  8053a0:	d80d883a 	mov	r6,sp
  8053a4:	08095500 	call	809550 <_fstat_r>
  8053a8:	10002416 	blt	r2,zero,80543c <__smakebuf_r+0x108>
  8053ac:	d8800117 	ldw	r2,4(sp)
  8053b0:	10bc000c 	andi	r2,r2,61440
  8053b4:	10880018 	cmpnei	r2,r2,8192
  8053b8:	1000461e 	bne	r2,zero,8054d4 <__smakebuf_r+0x1a0>
  8053bc:	8140038f 	ldh	r5,14(r16)
  8053c0:	8809883a 	mov	r4,r17
  8053c4:	08095b00 	call	8095b0 <_isatty_r>
  8053c8:	10003e26 	beq	r2,zero,8054c4 <__smakebuf_r+0x190>
  8053cc:	8080030b 	ldhu	r2,12(r16)
  8053d0:	80c010c4 	addi	r3,r16,67
  8053d4:	80c00015 	stw	r3,0(r16)
  8053d8:	10800054 	ori	r2,r2,1
  8053dc:	8080030d 	sth	r2,12(r16)
  8053e0:	00800044 	movi	r2,1
  8053e4:	80c00415 	stw	r3,16(r16)
  8053e8:	80800515 	stw	r2,20(r16)
  8053ec:	04c00044 	movi	r19,1
  8053f0:	05010004 	movi	r20,1024
  8053f4:	04820004 	movi	r18,2048
  8053f8:	a00b883a 	mov	r5,r20
  8053fc:	8809883a 	mov	r4,r17
  805400:	080557c0 	call	80557c <_malloc_r>
  805404:	10001726 	beq	r2,zero,805464 <__smakebuf_r+0x130>
  805408:	80c0030b 	ldhu	r3,12(r16)
  80540c:	01002034 	movhi	r4,128
  805410:	21115404 	addi	r4,r4,17744
  805414:	89000f15 	stw	r4,60(r17)
  805418:	18c02014 	ori	r3,r3,128
  80541c:	80c0030d 	sth	r3,12(r16)
  805420:	80800015 	stw	r2,0(r16)
  805424:	80800415 	stw	r2,16(r16)
  805428:	85000515 	stw	r20,20(r16)
  80542c:	98001d1e 	bne	r19,zero,8054a4 <__smakebuf_r+0x170>
  805430:	90c6b03a 	or	r3,r18,r3
  805434:	80c0030d 	sth	r3,12(r16)
  805438:	003fce06 	br	805374 <__smakebuf_r+0x40>
  80543c:	8080030b 	ldhu	r2,12(r16)
  805440:	1080200c 	andi	r2,r2,128
  805444:	0027883a 	mov	r19,zero
  805448:	10001326 	beq	r2,zero,805498 <__smakebuf_r+0x164>
  80544c:	05001004 	movi	r20,64
  805450:	a00b883a 	mov	r5,r20
  805454:	8809883a 	mov	r4,r17
  805458:	0025883a 	mov	r18,zero
  80545c:	080557c0 	call	80557c <_malloc_r>
  805460:	103fe91e 	bne	r2,zero,805408 <__smakebuf_r+0xd4>
  805464:	8080030b 	ldhu	r2,12(r16)
  805468:	10c0800c 	andi	r3,r2,512
  80546c:	183fc11e 	bne	r3,zero,805374 <__smakebuf_r+0x40>
  805470:	00ffff04 	movi	r3,-4
  805474:	10c4703a 	and	r2,r2,r3
  805478:	10800094 	ori	r2,r2,2
  80547c:	80c010c4 	addi	r3,r16,67
  805480:	8080030d 	sth	r2,12(r16)
  805484:	00800044 	movi	r2,1
  805488:	80c00015 	stw	r3,0(r16)
  80548c:	80c00415 	stw	r3,16(r16)
  805490:	80800515 	stw	r2,20(r16)
  805494:	003fb706 	br	805374 <__smakebuf_r+0x40>
  805498:	05010004 	movi	r20,1024
  80549c:	0025883a 	mov	r18,zero
  8054a0:	003fd506 	br	8053f8 <__smakebuf_r+0xc4>
  8054a4:	8140038f 	ldh	r5,14(r16)
  8054a8:	8809883a 	mov	r4,r17
  8054ac:	08095b00 	call	8095b0 <_isatty_r>
  8054b0:	80c0030b 	ldhu	r3,12(r16)
  8054b4:	103fde26 	beq	r2,zero,805430 <__smakebuf_r+0xfc>
  8054b8:	18ffff0c 	andi	r3,r3,65532
  8054bc:	18c00054 	ori	r3,r3,1
  8054c0:	003fdb06 	br	805430 <__smakebuf_r+0xfc>
  8054c4:	04c00044 	movi	r19,1
  8054c8:	05010004 	movi	r20,1024
  8054cc:	04820004 	movi	r18,2048
  8054d0:	003fc906 	br	8053f8 <__smakebuf_r+0xc4>
  8054d4:	0027883a 	mov	r19,zero
  8054d8:	05010004 	movi	r20,1024
  8054dc:	04820004 	movi	r18,2048
  8054e0:	003fc506 	br	8053f8 <__smakebuf_r+0xc4>

008054e4 <__swhatbuf_r>:
  8054e4:	deffea04 	addi	sp,sp,-88
  8054e8:	dc001215 	stw	r16,72(sp)
  8054ec:	2821883a 	mov	r16,r5
  8054f0:	2940038f 	ldh	r5,14(r5)
  8054f4:	dc801415 	stw	r18,80(sp)
  8054f8:	dc401315 	stw	r17,76(sp)
  8054fc:	dfc01515 	stw	ra,84(sp)
  805500:	3023883a 	mov	r17,r6
  805504:	3825883a 	mov	r18,r7
  805508:	28001016 	blt	r5,zero,80554c <__swhatbuf_r+0x68>
  80550c:	d80d883a 	mov	r6,sp
  805510:	08095500 	call	809550 <_fstat_r>
  805514:	10000d16 	blt	r2,zero,80554c <__swhatbuf_r+0x68>
  805518:	d8c00117 	ldw	r3,4(sp)
  80551c:	00820004 	movi	r2,2048
  805520:	18fc000c 	andi	r3,r3,61440
  805524:	18c80020 	cmpeqi	r3,r3,8192
  805528:	90c00015 	stw	r3,0(r18)
  80552c:	00c10004 	movi	r3,1024
  805530:	88c00015 	stw	r3,0(r17)
  805534:	dfc01517 	ldw	ra,84(sp)
  805538:	dc801417 	ldw	r18,80(sp)
  80553c:	dc401317 	ldw	r17,76(sp)
  805540:	dc001217 	ldw	r16,72(sp)
  805544:	dec01604 	addi	sp,sp,88
  805548:	f800283a 	ret
  80554c:	8080030b 	ldhu	r2,12(r16)
  805550:	90000015 	stw	zero,0(r18)
  805554:	1080200c 	andi	r2,r2,128
  805558:	10000426 	beq	r2,zero,80556c <__swhatbuf_r+0x88>
  80555c:	00801004 	movi	r2,64
  805560:	88800015 	stw	r2,0(r17)
  805564:	0005883a 	mov	r2,zero
  805568:	003ff206 	br	805534 <__swhatbuf_r+0x50>
  80556c:	00810004 	movi	r2,1024
  805570:	88800015 	stw	r2,0(r17)
  805574:	0005883a 	mov	r2,zero
  805578:	003fee06 	br	805534 <__swhatbuf_r+0x50>

0080557c <_malloc_r>:
  80557c:	defff604 	addi	sp,sp,-40
  805580:	dc400115 	stw	r17,4(sp)
  805584:	2c4002c4 	addi	r17,r5,11
  805588:	dc800215 	stw	r18,8(sp)
  80558c:	dfc00915 	stw	ra,36(sp)
  805590:	df000815 	stw	fp,32(sp)
  805594:	ddc00715 	stw	r23,28(sp)
  805598:	dd800615 	stw	r22,24(sp)
  80559c:	dd400515 	stw	r21,20(sp)
  8055a0:	dd000415 	stw	r20,16(sp)
  8055a4:	dcc00315 	stw	r19,12(sp)
  8055a8:	dc000015 	stw	r16,0(sp)
  8055ac:	888005e8 	cmpgeui	r2,r17,23
  8055b0:	2025883a 	mov	r18,r4
  8055b4:	10001b1e 	bne	r2,zero,805624 <_malloc_r+0xa8>
  8055b8:	29400468 	cmpgeui	r5,r5,17
  8055bc:	2800821e 	bne	r5,zero,8057c8 <_malloc_r+0x24c>
  8055c0:	080dd340 	call	80dd34 <__malloc_lock>
  8055c4:	04400404 	movi	r17,16
  8055c8:	00800604 	movi	r2,24
  8055cc:	01c00084 	movi	r7,2
  8055d0:	04c02074 	movhi	r19,129
  8055d4:	9cc26404 	addi	r19,r19,2448
  8055d8:	9885883a 	add	r2,r19,r2
  8055dc:	14000117 	ldw	r16,4(r2)
  8055e0:	10fffe04 	addi	r3,r2,-8
  8055e4:	80c08b26 	beq	r16,r3,805814 <_malloc_r+0x298>
  8055e8:	80800117 	ldw	r2,4(r16)
  8055ec:	81000317 	ldw	r4,12(r16)
  8055f0:	00ffff04 	movi	r3,-4
  8055f4:	10c4703a 	and	r2,r2,r3
  8055f8:	81400217 	ldw	r5,8(r16)
  8055fc:	8085883a 	add	r2,r16,r2
  805600:	10c00117 	ldw	r3,4(r2)
  805604:	29000315 	stw	r4,12(r5)
  805608:	21400215 	stw	r5,8(r4)
  80560c:	18c00054 	ori	r3,r3,1
  805610:	10c00115 	stw	r3,4(r2)
  805614:	9009883a 	mov	r4,r18
  805618:	080dd580 	call	80dd58 <__malloc_unlock>
  80561c:	80800204 	addi	r2,r16,8
  805620:	00006c06 	br	8057d4 <_malloc_r+0x258>
  805624:	00bffe04 	movi	r2,-8
  805628:	88a2703a 	and	r17,r17,r2
  80562c:	88006616 	blt	r17,zero,8057c8 <_malloc_r+0x24c>
  805630:	89406536 	bltu	r17,r5,8057c8 <_malloc_r+0x24c>
  805634:	080dd340 	call	80dd34 <__malloc_lock>
  805638:	88807e28 	cmpgeui	r2,r17,504
  80563c:	10012226 	beq	r2,zero,805ac8 <_malloc_r+0x54c>
  805640:	8804d27a 	srli	r2,r17,9
  805644:	10006f26 	beq	r2,zero,805804 <_malloc_r+0x288>
  805648:	10c00168 	cmpgeui	r3,r2,5
  80564c:	1800fe1e 	bne	r3,zero,805a48 <_malloc_r+0x4cc>
  805650:	8804d1ba 	srli	r2,r17,6
  805654:	11c00e44 	addi	r7,r2,57
  805658:	380890fa 	slli	r4,r7,3
  80565c:	12000e04 	addi	r8,r2,56
  805660:	04c02074 	movhi	r19,129
  805664:	9cc26404 	addi	r19,r19,2448
  805668:	9909883a 	add	r4,r19,r4
  80566c:	24000117 	ldw	r16,4(r4)
  805670:	213ffe04 	addi	r4,r4,-8
  805674:	24000b26 	beq	r4,r16,8056a4 <_malloc_r+0x128>
  805678:	01bfff04 	movi	r6,-4
  80567c:	00000306 	br	80568c <_malloc_r+0x110>
  805680:	1800d60e 	bge	r3,zero,8059dc <_malloc_r+0x460>
  805684:	84000317 	ldw	r16,12(r16)
  805688:	24000626 	beq	r4,r16,8056a4 <_malloc_r+0x128>
  80568c:	80800117 	ldw	r2,4(r16)
  805690:	1184703a 	and	r2,r2,r6
  805694:	1447c83a 	sub	r3,r2,r17
  805698:	19400408 	cmpgei	r5,r3,16
  80569c:	283ff826 	beq	r5,zero,805680 <_malloc_r+0x104>
  8056a0:	400f883a 	mov	r7,r8
  8056a4:	9c000417 	ldw	r16,16(r19)
  8056a8:	02402074 	movhi	r9,129
  8056ac:	4a426604 	addi	r9,r9,2456
  8056b0:	82405f26 	beq	r16,r9,805830 <_malloc_r+0x2b4>
  8056b4:	80c00117 	ldw	r3,4(r16)
  8056b8:	00bfff04 	movi	r2,-4
  8056bc:	1884703a 	and	r2,r3,r2
  8056c0:	1447c83a 	sub	r3,r2,r17
  8056c4:	19000410 	cmplti	r4,r3,16
  8056c8:	20010a26 	beq	r4,zero,805af4 <_malloc_r+0x578>
  8056cc:	9a400515 	stw	r9,20(r19)
  8056d0:	9a400415 	stw	r9,16(r19)
  8056d4:	1800ff0e 	bge	r3,zero,805ad4 <_malloc_r+0x558>
  8056d8:	10c08028 	cmpgeui	r3,r2,512
  8056dc:	1800c11e 	bne	r3,zero,8059e4 <_malloc_r+0x468>
  8056e0:	1006d0fa 	srli	r3,r2,3
  8056e4:	1008d17a 	srli	r4,r2,5
  8056e8:	00800044 	movi	r2,1
  8056ec:	18c00044 	addi	r3,r3,1
  8056f0:	180690fa 	slli	r3,r3,3
  8056f4:	99400117 	ldw	r5,4(r19)
  8056f8:	1104983a 	sll	r2,r2,r4
  8056fc:	98c7883a 	add	r3,r19,r3
  805700:	19000017 	ldw	r4,0(r3)
  805704:	1144b03a 	or	r2,r2,r5
  805708:	197ffe04 	addi	r5,r3,-8
  80570c:	81400315 	stw	r5,12(r16)
  805710:	81000215 	stw	r4,8(r16)
  805714:	98800115 	stw	r2,4(r19)
  805718:	1c000015 	stw	r16,0(r3)
  80571c:	24000315 	stw	r16,12(r4)
  805720:	3807d0ba 	srai	r3,r7,2
  805724:	01000044 	movi	r4,1
  805728:	20c8983a 	sll	r4,r4,r3
  80572c:	11004536 	bltu	r2,r4,805844 <_malloc_r+0x2c8>
  805730:	2086703a 	and	r3,r4,r2
  805734:	18000a1e 	bne	r3,zero,805760 <_malloc_r+0x1e4>
  805738:	00ffff04 	movi	r3,-4
  80573c:	2109883a 	add	r4,r4,r4
  805740:	38ce703a 	and	r7,r7,r3
  805744:	2086703a 	and	r3,r4,r2
  805748:	39c00104 	addi	r7,r7,4
  80574c:	1800041e 	bne	r3,zero,805760 <_malloc_r+0x1e4>
  805750:	2109883a 	add	r4,r4,r4
  805754:	2086703a 	and	r3,r4,r2
  805758:	39c00104 	addi	r7,r7,4
  80575c:	183ffc26 	beq	r3,zero,805750 <_malloc_r+0x1d4>
  805760:	02bfff04 	movi	r10,-4
  805764:	381690fa 	slli	r11,r7,3
  805768:	3819883a 	mov	r12,r7
  80576c:	9ad7883a 	add	r11,r19,r11
  805770:	5811883a 	mov	r8,r11
  805774:	40800317 	ldw	r2,12(r8)
  805778:	4080bc26 	beq	r8,r2,805a6c <_malloc_r+0x4f0>
  80577c:	10c00117 	ldw	r3,4(r2)
  805780:	1021883a 	mov	r16,r2
  805784:	10800317 	ldw	r2,12(r2)
  805788:	1a86703a 	and	r3,r3,r10
  80578c:	1c4bc83a 	sub	r5,r3,r17
  805790:	29800410 	cmplti	r6,r5,16
  805794:	3000ba26 	beq	r6,zero,805a80 <_malloc_r+0x504>
  805798:	283ff716 	blt	r5,zero,805778 <_malloc_r+0x1fc>
  80579c:	80c7883a 	add	r3,r16,r3
  8057a0:	19400117 	ldw	r5,4(r3)
  8057a4:	81800217 	ldw	r6,8(r16)
  8057a8:	9009883a 	mov	r4,r18
  8057ac:	29400054 	ori	r5,r5,1
  8057b0:	19400115 	stw	r5,4(r3)
  8057b4:	30800315 	stw	r2,12(r6)
  8057b8:	11800215 	stw	r6,8(r2)
  8057bc:	080dd580 	call	80dd58 <__malloc_unlock>
  8057c0:	80800204 	addi	r2,r16,8
  8057c4:	00000306 	br	8057d4 <_malloc_r+0x258>
  8057c8:	00800304 	movi	r2,12
  8057cc:	90800015 	stw	r2,0(r18)
  8057d0:	0005883a 	mov	r2,zero
  8057d4:	dfc00917 	ldw	ra,36(sp)
  8057d8:	df000817 	ldw	fp,32(sp)
  8057dc:	ddc00717 	ldw	r23,28(sp)
  8057e0:	dd800617 	ldw	r22,24(sp)
  8057e4:	dd400517 	ldw	r21,20(sp)
  8057e8:	dd000417 	ldw	r20,16(sp)
  8057ec:	dcc00317 	ldw	r19,12(sp)
  8057f0:	dc800217 	ldw	r18,8(sp)
  8057f4:	dc400117 	ldw	r17,4(sp)
  8057f8:	dc000017 	ldw	r16,0(sp)
  8057fc:	dec00a04 	addi	sp,sp,40
  805800:	f800283a 	ret
  805804:	01008004 	movi	r4,512
  805808:	01c01004 	movi	r7,64
  80580c:	02000fc4 	movi	r8,63
  805810:	003f9306 	br	805660 <_malloc_r+0xe4>
  805814:	14000317 	ldw	r16,12(r2)
  805818:	39c00084 	addi	r7,r7,2
  80581c:	143f721e 	bne	r2,r16,8055e8 <_malloc_r+0x6c>
  805820:	9c000417 	ldw	r16,16(r19)
  805824:	02402074 	movhi	r9,129
  805828:	4a426604 	addi	r9,r9,2456
  80582c:	827fa11e 	bne	r16,r9,8056b4 <_malloc_r+0x138>
  805830:	3807d0ba 	srai	r3,r7,2
  805834:	01000044 	movi	r4,1
  805838:	98800117 	ldw	r2,4(r19)
  80583c:	20c8983a 	sll	r4,r4,r3
  805840:	113fbb2e 	bgeu	r2,r4,805730 <_malloc_r+0x1b4>
  805844:	9c000217 	ldw	r16,8(r19)
  805848:	00bfff04 	movi	r2,-4
  80584c:	85400117 	ldw	r21,4(r16)
  805850:	a8ac703a 	and	r22,r21,r2
  805854:	b4400336 	bltu	r22,r17,805864 <_malloc_r+0x2e8>
  805858:	b445c83a 	sub	r2,r22,r17
  80585c:	10c00408 	cmpgei	r3,r2,16
  805860:	1800541e 	bne	r3,zero,8059b4 <_malloc_r+0x438>
  805864:	00802074 	movhi	r2,129
  805868:	10884517 	ldw	r2,8468(r2)
  80586c:	00c02074 	movhi	r3,129
  805870:	1d4f4917 	ldw	r21,15652(r3)
  805874:	10bfffd8 	cmpnei	r2,r2,-1
  805878:	85b9883a 	add	fp,r16,r22
  80587c:	8d6b883a 	add	r21,r17,r21
  805880:	1000d626 	beq	r2,zero,805bdc <_malloc_r+0x660>
  805884:	ad4403c4 	addi	r21,r21,4111
  805888:	00bc0004 	movi	r2,-4096
  80588c:	a8aa703a 	and	r21,r21,r2
  805890:	a80b883a 	mov	r5,r21
  805894:	9009883a 	mov	r4,r18
  805898:	080789c0 	call	80789c <_sbrk_r>
  80589c:	102f883a 	mov	r23,r2
  8058a0:	10bfffd8 	cmpnei	r2,r2,-1
  8058a4:	1000a826 	beq	r2,zero,805b48 <_malloc_r+0x5cc>
  8058a8:	bf00a636 	bltu	r23,fp,805b44 <_malloc_r+0x5c8>
  8058ac:	00802074 	movhi	r2,129
  8058b0:	150f5317 	ldw	r20,15692(r2)
  8058b4:	ad29883a 	add	r20,r21,r20
  8058b8:	150f5315 	stw	r20,15692(r2)
  8058bc:	a007883a 	mov	r3,r20
  8058c0:	e5c0ec26 	beq	fp,r23,805c74 <_malloc_r+0x6f8>
  8058c4:	00802074 	movhi	r2,129
  8058c8:	10884517 	ldw	r2,8468(r2)
  8058cc:	10bfffd8 	cmpnei	r2,r2,-1
  8058d0:	1000ef26 	beq	r2,zero,805c90 <_malloc_r+0x714>
  8058d4:	bf39c83a 	sub	fp,r23,fp
  8058d8:	e0c7883a 	add	r3,fp,r3
  8058dc:	00802074 	movhi	r2,129
  8058e0:	10cf5315 	stw	r3,15692(r2)
  8058e4:	bf0001cc 	andi	fp,r23,7
  8058e8:	e000c526 	beq	fp,zero,805c00 <_malloc_r+0x684>
  8058ec:	bf2fc83a 	sub	r23,r23,fp
  8058f0:	bdc00204 	addi	r23,r23,8
  8058f4:	05040204 	movi	r20,4104
  8058f8:	a729c83a 	sub	r20,r20,fp
  8058fc:	bd6b883a 	add	r21,r23,r21
  805900:	a569c83a 	sub	r20,r20,r21
  805904:	a503ffcc 	andi	r20,r20,4095
  805908:	a00b883a 	mov	r5,r20
  80590c:	9009883a 	mov	r4,r18
  805910:	080789c0 	call	80789c <_sbrk_r>
  805914:	10ffffe0 	cmpeqi	r3,r2,-1
  805918:	1800f31e 	bne	r3,zero,805ce8 <_malloc_r+0x76c>
  80591c:	15c5c83a 	sub	r2,r2,r23
  805920:	152b883a 	add	r21,r2,r20
  805924:	00802074 	movhi	r2,129
  805928:	114f5317 	ldw	r5,15692(r2)
  80592c:	9dc00215 	stw	r23,8(r19)
  805930:	ad400054 	ori	r21,r21,1
  805934:	a169883a 	add	r20,r20,r5
  805938:	150f5315 	stw	r20,15692(r2)
  80593c:	bd400115 	stw	r21,4(r23)
  805940:	84c0d626 	beq	r16,r19,805c9c <_malloc_r+0x720>
  805944:	b0800428 	cmpgeui	r2,r22,16
  805948:	1000d626 	beq	r2,zero,805ca4 <_malloc_r+0x728>
  80594c:	80c00117 	ldw	r3,4(r16)
  805950:	013ffe04 	movi	r4,-8
  805954:	b0bffd04 	addi	r2,r22,-12
  805958:	1104703a 	and	r2,r2,r4
  80595c:	18c0004c 	andi	r3,r3,1
  805960:	1886b03a 	or	r3,r3,r2
  805964:	80c00115 	stw	r3,4(r16)
  805968:	01000144 	movi	r4,5
  80596c:	8087883a 	add	r3,r16,r2
  805970:	19000115 	stw	r4,4(r3)
  805974:	19000215 	stw	r4,8(r3)
  805978:	10800428 	cmpgeui	r2,r2,16
  80597c:	1000df1e 	bne	r2,zero,805cfc <_malloc_r+0x780>
  805980:	bd400117 	ldw	r21,4(r23)
  805984:	b821883a 	mov	r16,r23
  805988:	00802074 	movhi	r2,129
  80598c:	108f4817 	ldw	r2,15648(r2)
  805990:	1500022e 	bgeu	r2,r20,80599c <_malloc_r+0x420>
  805994:	00802074 	movhi	r2,129
  805998:	150f4815 	stw	r20,15648(r2)
  80599c:	00802074 	movhi	r2,129
  8059a0:	108f4717 	ldw	r2,15644(r2)
  8059a4:	15006a2e 	bgeu	r2,r20,805b50 <_malloc_r+0x5d4>
  8059a8:	00802074 	movhi	r2,129
  8059ac:	150f4715 	stw	r20,15644(r2)
  8059b0:	00006706 	br	805b50 <_malloc_r+0x5d4>
  8059b4:	88c00054 	ori	r3,r17,1
  8059b8:	80c00115 	stw	r3,4(r16)
  8059bc:	8463883a 	add	r17,r16,r17
  8059c0:	10800054 	ori	r2,r2,1
  8059c4:	9c400215 	stw	r17,8(r19)
  8059c8:	88800115 	stw	r2,4(r17)
  8059cc:	9009883a 	mov	r4,r18
  8059d0:	080dd580 	call	80dd58 <__malloc_unlock>
  8059d4:	80800204 	addi	r2,r16,8
  8059d8:	003f7e06 	br	8057d4 <_malloc_r+0x258>
  8059dc:	81000317 	ldw	r4,12(r16)
  8059e0:	003f0506 	br	8055f8 <_malloc_r+0x7c>
  8059e4:	1006d27a 	srli	r3,r2,9
  8059e8:	19000168 	cmpgeui	r4,r3,5
  8059ec:	20005026 	beq	r4,zero,805b30 <_malloc_r+0x5b4>
  8059f0:	19000568 	cmpgeui	r4,r3,21
  8059f4:	20008c1e 	bne	r4,zero,805c28 <_malloc_r+0x6ac>
  8059f8:	19401704 	addi	r5,r3,92
  8059fc:	280a90fa 	slli	r5,r5,3
  805a00:	190016c4 	addi	r4,r3,91
  805a04:	994b883a 	add	r5,r19,r5
  805a08:	28c00017 	ldw	r3,0(r5)
  805a0c:	297ffe04 	addi	r5,r5,-8
  805a10:	28c07426 	beq	r5,r3,805be4 <_malloc_r+0x668>
  805a14:	01bfff04 	movi	r6,-4
  805a18:	19000117 	ldw	r4,4(r3)
  805a1c:	2188703a 	and	r4,r4,r6
  805a20:	1100022e 	bgeu	r2,r4,805a2c <_malloc_r+0x4b0>
  805a24:	18c00217 	ldw	r3,8(r3)
  805a28:	28fffb1e 	bne	r5,r3,805a18 <_malloc_r+0x49c>
  805a2c:	19400317 	ldw	r5,12(r3)
  805a30:	98800117 	ldw	r2,4(r19)
  805a34:	81400315 	stw	r5,12(r16)
  805a38:	80c00215 	stw	r3,8(r16)
  805a3c:	2c000215 	stw	r16,8(r5)
  805a40:	1c000315 	stw	r16,12(r3)
  805a44:	003f3606 	br	805720 <_malloc_r+0x1a4>
  805a48:	10c00568 	cmpgeui	r3,r2,21
  805a4c:	18004a26 	beq	r3,zero,805b78 <_malloc_r+0x5fc>
  805a50:	10c01568 	cmpgeui	r3,r2,85
  805a54:	18007b1e 	bne	r3,zero,805c44 <_malloc_r+0x6c8>
  805a58:	8804d33a 	srli	r2,r17,12
  805a5c:	11c01bc4 	addi	r7,r2,111
  805a60:	380890fa 	slli	r4,r7,3
  805a64:	12001b84 	addi	r8,r2,110
  805a68:	003efd06 	br	805660 <_malloc_r+0xe4>
  805a6c:	63000044 	addi	r12,r12,1
  805a70:	608000cc 	andi	r2,r12,3
  805a74:	42000204 	addi	r8,r8,8
  805a78:	103f3e1e 	bne	r2,zero,805774 <_malloc_r+0x1f8>
  805a7c:	00004506 	br	805b94 <_malloc_r+0x618>
  805a80:	81000217 	ldw	r4,8(r16)
  805a84:	89800054 	ori	r6,r17,1
  805a88:	81800115 	stw	r6,4(r16)
  805a8c:	20800315 	stw	r2,12(r4)
  805a90:	11000215 	stw	r4,8(r2)
  805a94:	8463883a 	add	r17,r16,r17
  805a98:	9c400515 	stw	r17,20(r19)
  805a9c:	9c400415 	stw	r17,16(r19)
  805aa0:	28800054 	ori	r2,r5,1
  805aa4:	88800115 	stw	r2,4(r17)
  805aa8:	8a400315 	stw	r9,12(r17)
  805aac:	8a400215 	stw	r9,8(r17)
  805ab0:	80c7883a 	add	r3,r16,r3
  805ab4:	19400015 	stw	r5,0(r3)
  805ab8:	9009883a 	mov	r4,r18
  805abc:	080dd580 	call	80dd58 <__malloc_unlock>
  805ac0:	80800204 	addi	r2,r16,8
  805ac4:	003f4306 	br	8057d4 <_malloc_r+0x258>
  805ac8:	880ed0fa 	srli	r7,r17,3
  805acc:	88800204 	addi	r2,r17,8
  805ad0:	003ebf06 	br	8055d0 <_malloc_r+0x54>
  805ad4:	8085883a 	add	r2,r16,r2
  805ad8:	10c00117 	ldw	r3,4(r2)
  805adc:	9009883a 	mov	r4,r18
  805ae0:	18c00054 	ori	r3,r3,1
  805ae4:	10c00115 	stw	r3,4(r2)
  805ae8:	080dd580 	call	80dd58 <__malloc_unlock>
  805aec:	80800204 	addi	r2,r16,8
  805af0:	003f3806 	br	8057d4 <_malloc_r+0x258>
  805af4:	89000054 	ori	r4,r17,1
  805af8:	81000115 	stw	r4,4(r16)
  805afc:	8463883a 	add	r17,r16,r17
  805b00:	9c400515 	stw	r17,20(r19)
  805b04:	9c400415 	stw	r17,16(r19)
  805b08:	19000054 	ori	r4,r3,1
  805b0c:	89000115 	stw	r4,4(r17)
  805b10:	8085883a 	add	r2,r16,r2
  805b14:	8a400315 	stw	r9,12(r17)
  805b18:	8a400215 	stw	r9,8(r17)
  805b1c:	10c00015 	stw	r3,0(r2)
  805b20:	9009883a 	mov	r4,r18
  805b24:	080dd580 	call	80dd58 <__malloc_unlock>
  805b28:	80800204 	addi	r2,r16,8
  805b2c:	003f2906 	br	8057d4 <_malloc_r+0x258>
  805b30:	1006d1ba 	srli	r3,r2,6
  805b34:	19400e44 	addi	r5,r3,57
  805b38:	280a90fa 	slli	r5,r5,3
  805b3c:	19000e04 	addi	r4,r3,56
  805b40:	003fb006 	br	805a04 <_malloc_r+0x488>
  805b44:	84c04626 	beq	r16,r19,805c60 <_malloc_r+0x6e4>
  805b48:	9c000217 	ldw	r16,8(r19)
  805b4c:	85400117 	ldw	r21,4(r16)
  805b50:	00bfff04 	movi	r2,-4
  805b54:	a8aa703a 	and	r21,r21,r2
  805b58:	ac45c83a 	sub	r2,r21,r17
  805b5c:	ac400236 	bltu	r21,r17,805b68 <_malloc_r+0x5ec>
  805b60:	10c00408 	cmpgei	r3,r2,16
  805b64:	183f931e 	bne	r3,zero,8059b4 <_malloc_r+0x438>
  805b68:	9009883a 	mov	r4,r18
  805b6c:	080dd580 	call	80dd58 <__malloc_unlock>
  805b70:	0005883a 	mov	r2,zero
  805b74:	003f1706 	br	8057d4 <_malloc_r+0x258>
  805b78:	11c01704 	addi	r7,r2,92
  805b7c:	380890fa 	slli	r4,r7,3
  805b80:	120016c4 	addi	r8,r2,91
  805b84:	003eb606 	br	805660 <_malloc_r+0xe4>
  805b88:	58800217 	ldw	r2,8(r11)
  805b8c:	39ffffc4 	addi	r7,r7,-1
  805b90:	12c0701e 	bne	r2,r11,805d54 <_malloc_r+0x7d8>
  805b94:	388000cc 	andi	r2,r7,3
  805b98:	5afffe04 	addi	r11,r11,-8
  805b9c:	103ffa1e 	bne	r2,zero,805b88 <_malloc_r+0x60c>
  805ba0:	98c00117 	ldw	r3,4(r19)
  805ba4:	0104303a 	nor	r2,zero,r4
  805ba8:	10c4703a 	and	r2,r2,r3
  805bac:	98800115 	stw	r2,4(r19)
  805bb0:	2109883a 	add	r4,r4,r4
  805bb4:	113f2336 	bltu	r2,r4,805844 <_malloc_r+0x2c8>
  805bb8:	203f2226 	beq	r4,zero,805844 <_malloc_r+0x2c8>
  805bbc:	2086703a 	and	r3,r4,r2
  805bc0:	1800041e 	bne	r3,zero,805bd4 <_malloc_r+0x658>
  805bc4:	2109883a 	add	r4,r4,r4
  805bc8:	2086703a 	and	r3,r4,r2
  805bcc:	63000104 	addi	r12,r12,4
  805bd0:	183ffc26 	beq	r3,zero,805bc4 <_malloc_r+0x648>
  805bd4:	600f883a 	mov	r7,r12
  805bd8:	003ee206 	br	805764 <_malloc_r+0x1e8>
  805bdc:	ad400404 	addi	r21,r21,16
  805be0:	003f2b06 	br	805890 <_malloc_r+0x314>
  805be4:	2009d0ba 	srai	r4,r4,2
  805be8:	00800044 	movi	r2,1
  805bec:	99800117 	ldw	r6,4(r19)
  805bf0:	1104983a 	sll	r2,r2,r4
  805bf4:	1184b03a 	or	r2,r2,r6
  805bf8:	98800115 	stw	r2,4(r19)
  805bfc:	003f8d06 	br	805a34 <_malloc_r+0x4b8>
  805c00:	bd69883a 	add	r20,r23,r21
  805c04:	0529c83a 	sub	r20,zero,r20
  805c08:	a503ffcc 	andi	r20,r20,4095
  805c0c:	a00b883a 	mov	r5,r20
  805c10:	9009883a 	mov	r4,r18
  805c14:	080789c0 	call	80789c <_sbrk_r>
  805c18:	10ffffe0 	cmpeqi	r3,r2,-1
  805c1c:	183f3f26 	beq	r3,zero,80591c <_malloc_r+0x3a0>
  805c20:	0029883a 	mov	r20,zero
  805c24:	003f3f06 	br	805924 <_malloc_r+0x3a8>
  805c28:	19001568 	cmpgeui	r4,r3,85
  805c2c:	2000201e 	bne	r4,zero,805cb0 <_malloc_r+0x734>
  805c30:	1006d33a 	srli	r3,r2,12
  805c34:	19401bc4 	addi	r5,r3,111
  805c38:	280a90fa 	slli	r5,r5,3
  805c3c:	19001b84 	addi	r4,r3,110
  805c40:	003f7006 	br	805a04 <_malloc_r+0x488>
  805c44:	10c05568 	cmpgeui	r3,r2,341
  805c48:	1800201e 	bne	r3,zero,805ccc <_malloc_r+0x750>
  805c4c:	8804d3fa 	srli	r2,r17,15
  805c50:	11c01e04 	addi	r7,r2,120
  805c54:	380890fa 	slli	r4,r7,3
  805c58:	12001dc4 	addi	r8,r2,119
  805c5c:	003e8006 	br	805660 <_malloc_r+0xe4>
  805c60:	00802074 	movhi	r2,129
  805c64:	10cf5317 	ldw	r3,15692(r2)
  805c68:	a8c7883a 	add	r3,r21,r3
  805c6c:	10cf5315 	stw	r3,15692(r2)
  805c70:	003f1406 	br	8058c4 <_malloc_r+0x348>
  805c74:	e083ffcc 	andi	r2,fp,4095
  805c78:	103f121e 	bne	r2,zero,8058c4 <_malloc_r+0x348>
  805c7c:	9c000217 	ldw	r16,8(r19)
  805c80:	b56b883a 	add	r21,r22,r21
  805c84:	ad400054 	ori	r21,r21,1
  805c88:	85400115 	stw	r21,4(r16)
  805c8c:	003f3e06 	br	805988 <_malloc_r+0x40c>
  805c90:	00802074 	movhi	r2,129
  805c94:	15c84515 	stw	r23,8468(r2)
  805c98:	003f1206 	br	8058e4 <_malloc_r+0x368>
  805c9c:	b821883a 	mov	r16,r23
  805ca0:	003f3906 	br	805988 <_malloc_r+0x40c>
  805ca4:	00800044 	movi	r2,1
  805ca8:	b8800115 	stw	r2,4(r23)
  805cac:	003fae06 	br	805b68 <_malloc_r+0x5ec>
  805cb0:	19005568 	cmpgeui	r4,r3,341
  805cb4:	2000191e 	bne	r4,zero,805d1c <_malloc_r+0x7a0>
  805cb8:	1006d3fa 	srli	r3,r2,15
  805cbc:	19401e04 	addi	r5,r3,120
  805cc0:	280a90fa 	slli	r5,r5,3
  805cc4:	19001dc4 	addi	r4,r3,119
  805cc8:	003f4e06 	br	805a04 <_malloc_r+0x488>
  805ccc:	10815568 	cmpgeui	r2,r2,1365
  805cd0:	1000191e 	bne	r2,zero,805d38 <_malloc_r+0x7bc>
  805cd4:	8804d4ba 	srli	r2,r17,18
  805cd8:	11c01f44 	addi	r7,r2,125
  805cdc:	380890fa 	slli	r4,r7,3
  805ce0:	12001f04 	addi	r8,r2,124
  805ce4:	003e5e06 	br	805660 <_malloc_r+0xe4>
  805ce8:	e73ffe04 	addi	fp,fp,-8
  805cec:	af2b883a 	add	r21,r21,fp
  805cf0:	adebc83a 	sub	r21,r21,r23
  805cf4:	0029883a 	mov	r20,zero
  805cf8:	003f0a06 	br	805924 <_malloc_r+0x3a8>
  805cfc:	81400204 	addi	r5,r16,8
  805d00:	9009883a 	mov	r4,r18
  805d04:	0804a100 	call	804a10 <_free_r>
  805d08:	9c000217 	ldw	r16,8(r19)
  805d0c:	00802074 	movhi	r2,129
  805d10:	150f5317 	ldw	r20,15692(r2)
  805d14:	85400117 	ldw	r21,4(r16)
  805d18:	003f1b06 	br	805988 <_malloc_r+0x40c>
  805d1c:	18c15568 	cmpgeui	r3,r3,1365
  805d20:	1800091e 	bne	r3,zero,805d48 <_malloc_r+0x7cc>
  805d24:	1006d4ba 	srli	r3,r2,18
  805d28:	19401f44 	addi	r5,r3,125
  805d2c:	280a90fa 	slli	r5,r5,3
  805d30:	19001f04 	addi	r4,r3,124
  805d34:	003f3306 	br	805a04 <_malloc_r+0x488>
  805d38:	0100fe04 	movi	r4,1016
  805d3c:	01c01fc4 	movi	r7,127
  805d40:	02001f84 	movi	r8,126
  805d44:	003e4606 	br	805660 <_malloc_r+0xe4>
  805d48:	0140fe04 	movi	r5,1016
  805d4c:	01001f84 	movi	r4,126
  805d50:	003f2c06 	br	805a04 <_malloc_r+0x488>
  805d54:	98800117 	ldw	r2,4(r19)
  805d58:	003f9506 	br	805bb0 <_malloc_r+0x634>

00805d5c <memchr>:
  805d5c:	208000cc 	andi	r2,r4,3
  805d60:	280f883a 	mov	r7,r5
  805d64:	10000e26 	beq	r2,zero,805da0 <memchr+0x44>
  805d68:	30bfffc4 	addi	r2,r6,-1
  805d6c:	30001726 	beq	r6,zero,805dcc <memchr+0x70>
  805d70:	29803fcc 	andi	r6,r5,255
  805d74:	00000606 	br	805d90 <memchr+0x34>
  805d78:	21000044 	addi	r4,r4,1
  805d7c:	20c000cc 	andi	r3,r4,3
  805d80:	18000826 	beq	r3,zero,805da4 <memchr+0x48>
  805d84:	10bfffc4 	addi	r2,r2,-1
  805d88:	10ffffe0 	cmpeqi	r3,r2,-1
  805d8c:	18000f1e 	bne	r3,zero,805dcc <memchr+0x70>
  805d90:	20c00003 	ldbu	r3,0(r4)
  805d94:	19bff81e 	bne	r3,r6,805d78 <memchr+0x1c>
  805d98:	2005883a 	mov	r2,r4
  805d9c:	f800283a 	ret
  805da0:	3005883a 	mov	r2,r6
  805da4:	10c00128 	cmpgeui	r3,r2,4
  805da8:	18000a1e 	bne	r3,zero,805dd4 <memchr+0x78>
  805dac:	10001e26 	beq	r2,zero,805e28 <memchr+0xcc>
  805db0:	2087883a 	add	r3,r4,r2
  805db4:	39803fcc 	andi	r6,r7,255
  805db8:	2005883a 	mov	r2,r4
  805dbc:	11000003 	ldbu	r4,0(r2)
  805dc0:	21bff626 	beq	r4,r6,805d9c <memchr+0x40>
  805dc4:	10800044 	addi	r2,r2,1
  805dc8:	18bffc1e 	bne	r3,r2,805dbc <memchr+0x60>
  805dcc:	0005883a 	mov	r2,zero
  805dd0:	f800283a 	ret
  805dd4:	29403fcc 	andi	r5,r5,255
  805dd8:	280c923a 	slli	r6,r5,8
  805ddc:	027fbff4 	movhi	r9,65279
  805de0:	02202074 	movhi	r8,32897
  805de4:	314ab03a 	or	r5,r6,r5
  805de8:	280c943a 	slli	r6,r5,16
  805dec:	4a7fbfc4 	addi	r9,r9,-257
  805df0:	42202004 	addi	r8,r8,-32640
  805df4:	314cb03a 	or	r6,r6,r5
  805df8:	20c00017 	ldw	r3,0(r4)
  805dfc:	30c6f03a 	xor	r3,r6,r3
  805e00:	1a4b883a 	add	r5,r3,r9
  805e04:	00c6303a 	nor	r3,zero,r3
  805e08:	28c6703a 	and	r3,r5,r3
  805e0c:	1a06703a 	and	r3,r3,r8
  805e10:	183fe71e 	bne	r3,zero,805db0 <memchr+0x54>
  805e14:	10bfff04 	addi	r2,r2,-4
  805e18:	10c00128 	cmpgeui	r3,r2,4
  805e1c:	21000104 	addi	r4,r4,4
  805e20:	183ff51e 	bne	r3,zero,805df8 <memchr+0x9c>
  805e24:	003fe106 	br	805dac <memchr+0x50>
  805e28:	f800283a 	ret

00805e2c <memcpy>:
  805e2c:	30c00430 	cmpltui	r3,r6,16
  805e30:	2005883a 	mov	r2,r4
  805e34:	18002d1e 	bne	r3,zero,805eec <memcpy+0xc0>
  805e38:	2906b03a 	or	r3,r5,r4
  805e3c:	18c000cc 	andi	r3,r3,3
  805e40:	1800351e 	bne	r3,zero,805f18 <memcpy+0xec>
  805e44:	32fffc04 	addi	r11,r6,-16
  805e48:	5816d13a 	srli	r11,r11,4
  805e4c:	280f883a 	mov	r7,r5
  805e50:	2007883a 	mov	r3,r4
  805e54:	5ac00044 	addi	r11,r11,1
  805e58:	5816913a 	slli	r11,r11,4
  805e5c:	22d5883a 	add	r10,r4,r11
  805e60:	39000117 	ldw	r4,4(r7)
  805e64:	3a400017 	ldw	r9,0(r7)
  805e68:	3a000217 	ldw	r8,8(r7)
  805e6c:	19000115 	stw	r4,4(r3)
  805e70:	39000317 	ldw	r4,12(r7)
  805e74:	1a400015 	stw	r9,0(r3)
  805e78:	1a000215 	stw	r8,8(r3)
  805e7c:	19000315 	stw	r4,12(r3)
  805e80:	18c00404 	addi	r3,r3,16
  805e84:	39c00404 	addi	r7,r7,16
  805e88:	50fff51e 	bne	r10,r3,805e60 <memcpy+0x34>
  805e8c:	3100030c 	andi	r4,r6,12
  805e90:	2acb883a 	add	r5,r5,r11
  805e94:	320003cc 	andi	r8,r6,15
  805e98:	20002226 	beq	r4,zero,805f24 <memcpy+0xf8>
  805e9c:	280f883a 	mov	r7,r5
  805ea0:	1813883a 	mov	r9,r3
  805ea4:	39c00104 	addi	r7,r7,4
  805ea8:	3abfff17 	ldw	r10,-4(r7)
  805eac:	41c9c83a 	sub	r4,r8,r7
  805eb0:	2909883a 	add	r4,r5,r4
  805eb4:	4a800015 	stw	r10,0(r9)
  805eb8:	21000128 	cmpgeui	r4,r4,4
  805ebc:	4a400104 	addi	r9,r9,4
  805ec0:	203ff81e 	bne	r4,zero,805ea4 <memcpy+0x78>
  805ec4:	413fff04 	addi	r4,r8,-4
  805ec8:	2008d0ba 	srli	r4,r4,2
  805ecc:	318000cc 	andi	r6,r6,3
  805ed0:	31ffffc4 	addi	r7,r6,-1
  805ed4:	21000044 	addi	r4,r4,1
  805ed8:	200890ba 	slli	r4,r4,2
  805edc:	1907883a 	add	r3,r3,r4
  805ee0:	290b883a 	add	r5,r5,r4
  805ee4:	3000041e 	bne	r6,zero,805ef8 <memcpy+0xcc>
  805ee8:	f800283a 	ret
  805eec:	2007883a 	mov	r3,r4
  805ef0:	31ffffc4 	addi	r7,r6,-1
  805ef4:	303ffc26 	beq	r6,zero,805ee8 <memcpy+0xbc>
  805ef8:	39c00044 	addi	r7,r7,1
  805efc:	19cf883a 	add	r7,r3,r7
  805f00:	29800003 	ldbu	r6,0(r5)
  805f04:	18c00044 	addi	r3,r3,1
  805f08:	29400044 	addi	r5,r5,1
  805f0c:	19bfffc5 	stb	r6,-1(r3)
  805f10:	38fffb1e 	bne	r7,r3,805f00 <memcpy+0xd4>
  805f14:	f800283a 	ret
  805f18:	31ffffc4 	addi	r7,r6,-1
  805f1c:	2007883a 	mov	r3,r4
  805f20:	003ff506 	br	805ef8 <memcpy+0xcc>
  805f24:	400d883a 	mov	r6,r8
  805f28:	003ff106 	br	805ef0 <memcpy+0xc4>

00805f2c <memmove>:
  805f2c:	2005883a 	mov	r2,r4
  805f30:	29000a2e 	bgeu	r5,r4,805f5c <memmove+0x30>
  805f34:	2989883a 	add	r4,r5,r6
  805f38:	1100082e 	bgeu	r2,r4,805f5c <memmove+0x30>
  805f3c:	1187883a 	add	r3,r2,r6
  805f40:	30003e26 	beq	r6,zero,80603c <memmove+0x110>
  805f44:	217fffc3 	ldbu	r5,-1(r4)
  805f48:	18ffffc4 	addi	r3,r3,-1
  805f4c:	213fffc4 	addi	r4,r4,-1
  805f50:	19400005 	stb	r5,0(r3)
  805f54:	10fffb1e 	bne	r2,r3,805f44 <memmove+0x18>
  805f58:	f800283a 	ret
  805f5c:	30c00430 	cmpltui	r3,r6,16
  805f60:	18000b26 	beq	r3,zero,805f90 <memmove+0x64>
  805f64:	1007883a 	mov	r3,r2
  805f68:	31ffffc4 	addi	r7,r6,-1
  805f6c:	30003726 	beq	r6,zero,80604c <memmove+0x120>
  805f70:	39c00044 	addi	r7,r7,1
  805f74:	29cf883a 	add	r7,r5,r7
  805f78:	29800003 	ldbu	r6,0(r5)
  805f7c:	29400044 	addi	r5,r5,1
  805f80:	18c00044 	addi	r3,r3,1
  805f84:	19bfffc5 	stb	r6,-1(r3)
  805f88:	29fffb1e 	bne	r5,r7,805f78 <memmove+0x4c>
  805f8c:	f800283a 	ret
  805f90:	2886b03a 	or	r3,r5,r2
  805f94:	18c000cc 	andi	r3,r3,3
  805f98:	1800291e 	bne	r3,zero,806040 <memmove+0x114>
  805f9c:	327ffc04 	addi	r9,r6,-16
  805fa0:	4812d13a 	srli	r9,r9,4
  805fa4:	280f883a 	mov	r7,r5
  805fa8:	1007883a 	mov	r3,r2
  805fac:	4a400044 	addi	r9,r9,1
  805fb0:	4812913a 	slli	r9,r9,4
  805fb4:	1251883a 	add	r8,r2,r9
  805fb8:	39000017 	ldw	r4,0(r7)
  805fbc:	39c00404 	addi	r7,r7,16
  805fc0:	18c00404 	addi	r3,r3,16
  805fc4:	193ffc15 	stw	r4,-16(r3)
  805fc8:	393ffd17 	ldw	r4,-12(r7)
  805fcc:	193ffd15 	stw	r4,-12(r3)
  805fd0:	393ffe17 	ldw	r4,-8(r7)
  805fd4:	193ffe15 	stw	r4,-8(r3)
  805fd8:	393fff17 	ldw	r4,-4(r7)
  805fdc:	193fff15 	stw	r4,-4(r3)
  805fe0:	40fff51e 	bne	r8,r3,805fb8 <memmove+0x8c>
  805fe4:	3100030c 	andi	r4,r6,12
  805fe8:	2a4b883a 	add	r5,r5,r9
  805fec:	320003cc 	andi	r8,r6,15
  805ff0:	20001726 	beq	r4,zero,806050 <memmove+0x124>
  805ff4:	2813883a 	mov	r9,r5
  805ff8:	180f883a 	mov	r7,r3
  805ffc:	4a800017 	ldw	r10,0(r9)
  806000:	39c00104 	addi	r7,r7,4
  806004:	41c9c83a 	sub	r4,r8,r7
  806008:	1909883a 	add	r4,r3,r4
  80600c:	21000128 	cmpgeui	r4,r4,4
  806010:	3abfff15 	stw	r10,-4(r7)
  806014:	4a400104 	addi	r9,r9,4
  806018:	203ff81e 	bne	r4,zero,805ffc <memmove+0xd0>
  80601c:	413fff04 	addi	r4,r8,-4
  806020:	2008d0ba 	srli	r4,r4,2
  806024:	318000cc 	andi	r6,r6,3
  806028:	21000044 	addi	r4,r4,1
  80602c:	200890ba 	slli	r4,r4,2
  806030:	1907883a 	add	r3,r3,r4
  806034:	290b883a 	add	r5,r5,r4
  806038:	003fcb06 	br	805f68 <memmove+0x3c>
  80603c:	f800283a 	ret
  806040:	31ffffc4 	addi	r7,r6,-1
  806044:	1007883a 	mov	r3,r2
  806048:	003fc906 	br	805f70 <memmove+0x44>
  80604c:	f800283a 	ret
  806050:	400d883a 	mov	r6,r8
  806054:	003fc406 	br	805f68 <memmove+0x3c>

00806058 <memset>:
  806058:	20c000cc 	andi	r3,r4,3
  80605c:	2005883a 	mov	r2,r4
  806060:	18003626 	beq	r3,zero,80613c <memset+0xe4>
  806064:	31ffffc4 	addi	r7,r6,-1
  806068:	30003326 	beq	r6,zero,806138 <memset+0xe0>
  80606c:	2811883a 	mov	r8,r5
  806070:	2007883a 	mov	r3,r4
  806074:	00000306 	br	806084 <memset+0x2c>
  806078:	39ffffc4 	addi	r7,r7,-1
  80607c:	39bfffe0 	cmpeqi	r6,r7,-1
  806080:	30002d1e 	bne	r6,zero,806138 <memset+0xe0>
  806084:	18c00044 	addi	r3,r3,1
  806088:	198000cc 	andi	r6,r3,3
  80608c:	1a3fffc5 	stb	r8,-1(r3)
  806090:	303ff91e 	bne	r6,zero,806078 <memset+0x20>
  806094:	39000130 	cmpltui	r4,r7,4
  806098:	2000221e 	bne	r4,zero,806124 <memset+0xcc>
  80609c:	29003fcc 	andi	r4,r5,255
  8060a0:	200c923a 	slli	r6,r4,8
  8060a4:	3a000430 	cmpltui	r8,r7,16
  8060a8:	3108b03a 	or	r4,r6,r4
  8060ac:	200c943a 	slli	r6,r4,16
  8060b0:	310cb03a 	or	r6,r6,r4
  8060b4:	40000e1e 	bne	r8,zero,8060f0 <memset+0x98>
  8060b8:	393ffc04 	addi	r4,r7,-16
  8060bc:	2008d13a 	srli	r4,r4,4
  8060c0:	21000044 	addi	r4,r4,1
  8060c4:	2008913a 	slli	r4,r4,4
  8060c8:	1909883a 	add	r4,r3,r4
  8060cc:	19800015 	stw	r6,0(r3)
  8060d0:	19800115 	stw	r6,4(r3)
  8060d4:	19800215 	stw	r6,8(r3)
  8060d8:	19800315 	stw	r6,12(r3)
  8060dc:	18c00404 	addi	r3,r3,16
  8060e0:	20fffa1e 	bne	r4,r3,8060cc <memset+0x74>
  8060e4:	3900030c 	andi	r4,r7,12
  8060e8:	39c003cc 	andi	r7,r7,15
  8060ec:	20000d26 	beq	r4,zero,806124 <memset+0xcc>
  8060f0:	1811883a 	mov	r8,r3
  8060f4:	42000104 	addi	r8,r8,4
  8060f8:	3a09c83a 	sub	r4,r7,r8
  8060fc:	1909883a 	add	r4,r3,r4
  806100:	21000128 	cmpgeui	r4,r4,4
  806104:	41bfff15 	stw	r6,-4(r8)
  806108:	203ffa1e 	bne	r4,zero,8060f4 <memset+0x9c>
  80610c:	393fff04 	addi	r4,r7,-4
  806110:	2008d0ba 	srli	r4,r4,2
  806114:	39c000cc 	andi	r7,r7,3
  806118:	21000044 	addi	r4,r4,1
  80611c:	200890ba 	slli	r4,r4,2
  806120:	1907883a 	add	r3,r3,r4
  806124:	38000426 	beq	r7,zero,806138 <memset+0xe0>
  806128:	19cf883a 	add	r7,r3,r7
  80612c:	18c00044 	addi	r3,r3,1
  806130:	197fffc5 	stb	r5,-1(r3)
  806134:	38fffd1e 	bne	r7,r3,80612c <memset+0xd4>
  806138:	f800283a 	ret
  80613c:	2007883a 	mov	r3,r4
  806140:	300f883a 	mov	r7,r6
  806144:	003fd306 	br	806094 <memset+0x3c>

00806148 <_Balloc>:
  806148:	20801317 	ldw	r2,76(r4)
  80614c:	defffc04 	addi	sp,sp,-16
  806150:	dc400115 	stw	r17,4(sp)
  806154:	dc000015 	stw	r16,0(sp)
  806158:	dfc00315 	stw	ra,12(sp)
  80615c:	dc800215 	stw	r18,8(sp)
  806160:	2021883a 	mov	r16,r4
  806164:	2823883a 	mov	r17,r5
  806168:	10000e26 	beq	r2,zero,8061a4 <_Balloc+0x5c>
  80616c:	880690ba 	slli	r3,r17,2
  806170:	10c7883a 	add	r3,r2,r3
  806174:	18800017 	ldw	r2,0(r3)
  806178:	10001126 	beq	r2,zero,8061c0 <_Balloc+0x78>
  80617c:	11000017 	ldw	r4,0(r2)
  806180:	19000015 	stw	r4,0(r3)
  806184:	10000415 	stw	zero,16(r2)
  806188:	10000315 	stw	zero,12(r2)
  80618c:	dfc00317 	ldw	ra,12(sp)
  806190:	dc800217 	ldw	r18,8(sp)
  806194:	dc400117 	ldw	r17,4(sp)
  806198:	dc000017 	ldw	r16,0(sp)
  80619c:	dec00404 	addi	sp,sp,16
  8061a0:	f800283a 	ret
  8061a4:	01800844 	movi	r6,33
  8061a8:	01400104 	movi	r5,4
  8061ac:	08090940 	call	809094 <_calloc_r>
  8061b0:	80801315 	stw	r2,76(r16)
  8061b4:	103fed1e 	bne	r2,zero,80616c <_Balloc+0x24>
  8061b8:	0005883a 	mov	r2,zero
  8061bc:	003ff306 	br	80618c <_Balloc+0x44>
  8061c0:	04800044 	movi	r18,1
  8061c4:	9464983a 	sll	r18,r18,r17
  8061c8:	01400044 	movi	r5,1
  8061cc:	8009883a 	mov	r4,r16
  8061d0:	91800144 	addi	r6,r18,5
  8061d4:	300c90ba 	slli	r6,r6,2
  8061d8:	08090940 	call	809094 <_calloc_r>
  8061dc:	103ff626 	beq	r2,zero,8061b8 <_Balloc+0x70>
  8061e0:	14400115 	stw	r17,4(r2)
  8061e4:	14800215 	stw	r18,8(r2)
  8061e8:	003fe606 	br	806184 <_Balloc+0x3c>

008061ec <_Bfree>:
  8061ec:	28000726 	beq	r5,zero,80620c <_Bfree+0x20>
  8061f0:	28c00117 	ldw	r3,4(r5)
  8061f4:	20801317 	ldw	r2,76(r4)
  8061f8:	180690ba 	slli	r3,r3,2
  8061fc:	10c5883a 	add	r2,r2,r3
  806200:	10c00017 	ldw	r3,0(r2)
  806204:	28c00015 	stw	r3,0(r5)
  806208:	11400015 	stw	r5,0(r2)
  80620c:	f800283a 	ret

00806210 <__multadd>:
  806210:	defff704 	addi	sp,sp,-36
  806214:	dc800215 	stw	r18,8(sp)
  806218:	2c800417 	ldw	r18,16(r5)
  80621c:	ddc00715 	stw	r23,28(sp)
  806220:	dd800615 	stw	r22,24(sp)
  806224:	dd400515 	stw	r21,20(sp)
  806228:	dd000415 	stw	r20,16(sp)
  80622c:	dcc00315 	stw	r19,12(sp)
  806230:	dc400115 	stw	r17,4(sp)
  806234:	dfc00815 	stw	ra,32(sp)
  806238:	dc000015 	stw	r16,0(sp)
  80623c:	2827883a 	mov	r19,r5
  806240:	2029883a 	mov	r20,r4
  806244:	302b883a 	mov	r21,r6
  806248:	3823883a 	mov	r17,r7
  80624c:	2d800504 	addi	r22,r5,20
  806250:	002f883a 	mov	r23,zero
  806254:	b4000017 	ldw	r16,0(r22)
  806258:	a80b883a 	mov	r5,r21
  80625c:	b5800104 	addi	r22,r22,4
  806260:	813fffcc 	andi	r4,r16,65535
  806264:	080ae600 	call	80ae60 <__mulsi3>
  806268:	8008d43a 	srli	r4,r16,16
  80626c:	a80b883a 	mov	r5,r21
  806270:	1461883a 	add	r16,r2,r17
  806274:	080ae600 	call	80ae60 <__mulsi3>
  806278:	800ed43a 	srli	r7,r16,16
  80627c:	843fffcc 	andi	r16,r16,65535
  806280:	bdc00044 	addi	r23,r23,1
  806284:	11c5883a 	add	r2,r2,r7
  806288:	1006943a 	slli	r3,r2,16
  80628c:	1022d43a 	srli	r17,r2,16
  806290:	1c21883a 	add	r16,r3,r16
  806294:	b43fff15 	stw	r16,-4(r22)
  806298:	bcbfee16 	blt	r23,r18,806254 <__multadd+0x44>
  80629c:	88000826 	beq	r17,zero,8062c0 <__multadd+0xb0>
  8062a0:	98800217 	ldw	r2,8(r19)
  8062a4:	9080120e 	bge	r18,r2,8062f0 <__multadd+0xe0>
  8062a8:	90800144 	addi	r2,r18,5
  8062ac:	100490ba 	slli	r2,r2,2
  8062b0:	94800044 	addi	r18,r18,1
  8062b4:	9885883a 	add	r2,r19,r2
  8062b8:	14400015 	stw	r17,0(r2)
  8062bc:	9c800415 	stw	r18,16(r19)
  8062c0:	9805883a 	mov	r2,r19
  8062c4:	dfc00817 	ldw	ra,32(sp)
  8062c8:	ddc00717 	ldw	r23,28(sp)
  8062cc:	dd800617 	ldw	r22,24(sp)
  8062d0:	dd400517 	ldw	r21,20(sp)
  8062d4:	dd000417 	ldw	r20,16(sp)
  8062d8:	dcc00317 	ldw	r19,12(sp)
  8062dc:	dc800217 	ldw	r18,8(sp)
  8062e0:	dc400117 	ldw	r17,4(sp)
  8062e4:	dc000017 	ldw	r16,0(sp)
  8062e8:	dec00904 	addi	sp,sp,36
  8062ec:	f800283a 	ret
  8062f0:	99400117 	ldw	r5,4(r19)
  8062f4:	a009883a 	mov	r4,r20
  8062f8:	29400044 	addi	r5,r5,1
  8062fc:	08061480 	call	806148 <_Balloc>
  806300:	1021883a 	mov	r16,r2
  806304:	10001226 	beq	r2,zero,806350 <__multadd+0x140>
  806308:	99800417 	ldw	r6,16(r19)
  80630c:	99400304 	addi	r5,r19,12
  806310:	11000304 	addi	r4,r2,12
  806314:	31800084 	addi	r6,r6,2
  806318:	300c90ba 	slli	r6,r6,2
  80631c:	0805e2c0 	call	805e2c <memcpy>
  806320:	98000926 	beq	r19,zero,806348 <__multadd+0x138>
  806324:	98c00117 	ldw	r3,4(r19)
  806328:	a0801317 	ldw	r2,76(r20)
  80632c:	180690ba 	slli	r3,r3,2
  806330:	10c5883a 	add	r2,r2,r3
  806334:	10c00017 	ldw	r3,0(r2)
  806338:	98c00015 	stw	r3,0(r19)
  80633c:	14c00015 	stw	r19,0(r2)
  806340:	8027883a 	mov	r19,r16
  806344:	003fd806 	br	8062a8 <__multadd+0x98>
  806348:	8027883a 	mov	r19,r16
  80634c:	003fd606 	br	8062a8 <__multadd+0x98>
  806350:	01c02074 	movhi	r7,129
  806354:	01002074 	movhi	r4,129
  806358:	39ffe504 	addi	r7,r7,-108
  80635c:	000d883a 	mov	r6,zero
  806360:	01402d44 	movi	r5,181
  806364:	213ffa04 	addi	r4,r4,-24
  806368:	080901c0 	call	80901c <__assert_func>

0080636c <__s2b>:
  80636c:	defff904 	addi	sp,sp,-28
  806370:	dc800215 	stw	r18,8(sp)
  806374:	dc000015 	stw	r16,0(sp)
  806378:	2025883a 	mov	r18,r4
  80637c:	2821883a 	mov	r16,r5
  806380:	39000204 	addi	r4,r7,8
  806384:	01400244 	movi	r5,9
  806388:	dcc00315 	stw	r19,12(sp)
  80638c:	dc400115 	stw	r17,4(sp)
  806390:	dfc00615 	stw	ra,24(sp)
  806394:	3823883a 	mov	r17,r7
  806398:	dd400515 	stw	r21,20(sp)
  80639c:	dd000415 	stw	r20,16(sp)
  8063a0:	3027883a 	mov	r19,r6
  8063a4:	080acac0 	call	80acac <__divsi3>
  8063a8:	88c00290 	cmplti	r3,r17,10
  8063ac:	1800341e 	bne	r3,zero,806480 <__s2b+0x114>
  8063b0:	00c00044 	movi	r3,1
  8063b4:	000b883a 	mov	r5,zero
  8063b8:	18c7883a 	add	r3,r3,r3
  8063bc:	29400044 	addi	r5,r5,1
  8063c0:	18bffd16 	blt	r3,r2,8063b8 <__s2b+0x4c>
  8063c4:	9009883a 	mov	r4,r18
  8063c8:	08061480 	call	806148 <_Balloc>
  8063cc:	100b883a 	mov	r5,r2
  8063d0:	10002d26 	beq	r2,zero,806488 <__s2b+0x11c>
  8063d4:	d8800717 	ldw	r2,28(sp)
  8063d8:	28800515 	stw	r2,20(r5)
  8063dc:	00800044 	movi	r2,1
  8063e0:	28800415 	stw	r2,16(r5)
  8063e4:	98800290 	cmplti	r2,r19,10
  8063e8:	1000221e 	bne	r2,zero,806474 <__s2b+0x108>
  8063ec:	85400244 	addi	r21,r16,9
  8063f0:	a829883a 	mov	r20,r21
  8063f4:	84e1883a 	add	r16,r16,r19
  8063f8:	a1c00007 	ldb	r7,0(r20)
  8063fc:	01800284 	movi	r6,10
  806400:	9009883a 	mov	r4,r18
  806404:	39fff404 	addi	r7,r7,-48
  806408:	08062100 	call	806210 <__multadd>
  80640c:	a5000044 	addi	r20,r20,1
  806410:	100b883a 	mov	r5,r2
  806414:	a43ff81e 	bne	r20,r16,8063f8 <__s2b+0x8c>
  806418:	9c3ffe04 	addi	r16,r19,-8
  80641c:	ac21883a 	add	r16,r21,r16
  806420:	9c400a0e 	bge	r19,r17,80644c <__s2b+0xe0>
  806424:	8ce3c83a 	sub	r17,r17,r19
  806428:	8463883a 	add	r17,r16,r17
  80642c:	81c00007 	ldb	r7,0(r16)
  806430:	01800284 	movi	r6,10
  806434:	9009883a 	mov	r4,r18
  806438:	39fff404 	addi	r7,r7,-48
  80643c:	08062100 	call	806210 <__multadd>
  806440:	84000044 	addi	r16,r16,1
  806444:	100b883a 	mov	r5,r2
  806448:	8c3ff81e 	bne	r17,r16,80642c <__s2b+0xc0>
  80644c:	2805883a 	mov	r2,r5
  806450:	dfc00617 	ldw	ra,24(sp)
  806454:	dd400517 	ldw	r21,20(sp)
  806458:	dd000417 	ldw	r20,16(sp)
  80645c:	dcc00317 	ldw	r19,12(sp)
  806460:	dc800217 	ldw	r18,8(sp)
  806464:	dc400117 	ldw	r17,4(sp)
  806468:	dc000017 	ldw	r16,0(sp)
  80646c:	dec00704 	addi	sp,sp,28
  806470:	f800283a 	ret
  806474:	84000284 	addi	r16,r16,10
  806478:	04c00244 	movi	r19,9
  80647c:	003fe806 	br	806420 <__s2b+0xb4>
  806480:	000b883a 	mov	r5,zero
  806484:	003fcf06 	br	8063c4 <__s2b+0x58>
  806488:	01c02074 	movhi	r7,129
  80648c:	01002074 	movhi	r4,129
  806490:	39ffe504 	addi	r7,r7,-108
  806494:	000d883a 	mov	r6,zero
  806498:	01403384 	movi	r5,206
  80649c:	213ffa04 	addi	r4,r4,-24
  8064a0:	080901c0 	call	80901c <__assert_func>

008064a4 <__hi0bits>:
  8064a4:	20bfffec 	andhi	r2,r4,65535
  8064a8:	1000131e 	bne	r2,zero,8064f8 <__hi0bits+0x54>
  8064ac:	2008943a 	slli	r4,r4,16
  8064b0:	00800404 	movi	r2,16
  8064b4:	20ffc02c 	andhi	r3,r4,65280
  8064b8:	1800021e 	bne	r3,zero,8064c4 <__hi0bits+0x20>
  8064bc:	2008923a 	slli	r4,r4,8
  8064c0:	10800204 	addi	r2,r2,8
  8064c4:	20fc002c 	andhi	r3,r4,61440
  8064c8:	1800021e 	bne	r3,zero,8064d4 <__hi0bits+0x30>
  8064cc:	2008913a 	slli	r4,r4,4
  8064d0:	10800104 	addi	r2,r2,4
  8064d4:	20f0002c 	andhi	r3,r4,49152
  8064d8:	1800021e 	bne	r3,zero,8064e4 <__hi0bits+0x40>
  8064dc:	200890ba 	slli	r4,r4,2
  8064e0:	10800084 	addi	r2,r2,2
  8064e4:	20000316 	blt	r4,zero,8064f4 <__hi0bits+0x50>
  8064e8:	2110002c 	andhi	r4,r4,16384
  8064ec:	10800044 	addi	r2,r2,1
  8064f0:	20000326 	beq	r4,zero,806500 <__hi0bits+0x5c>
  8064f4:	f800283a 	ret
  8064f8:	0005883a 	mov	r2,zero
  8064fc:	003fed06 	br	8064b4 <__hi0bits+0x10>
  806500:	00800804 	movi	r2,32
  806504:	f800283a 	ret

00806508 <__lo0bits>:
  806508:	20c00017 	ldw	r3,0(r4)
  80650c:	188001cc 	andi	r2,r3,7
  806510:	10000826 	beq	r2,zero,806534 <__lo0bits+0x2c>
  806514:	1880004c 	andi	r2,r3,1
  806518:	10001f1e 	bne	r2,zero,806598 <__lo0bits+0x90>
  80651c:	1880008c 	andi	r2,r3,2
  806520:	10002126 	beq	r2,zero,8065a8 <__lo0bits+0xa0>
  806524:	1806d07a 	srli	r3,r3,1
  806528:	00800044 	movi	r2,1
  80652c:	20c00015 	stw	r3,0(r4)
  806530:	f800283a 	ret
  806534:	18bfffcc 	andi	r2,r3,65535
  806538:	10001426 	beq	r2,zero,80658c <__lo0bits+0x84>
  80653c:	0005883a 	mov	r2,zero
  806540:	19403fcc 	andi	r5,r3,255
  806544:	2800021e 	bne	r5,zero,806550 <__lo0bits+0x48>
  806548:	1806d23a 	srli	r3,r3,8
  80654c:	10800204 	addi	r2,r2,8
  806550:	194003cc 	andi	r5,r3,15
  806554:	2800021e 	bne	r5,zero,806560 <__lo0bits+0x58>
  806558:	1806d13a 	srli	r3,r3,4
  80655c:	10800104 	addi	r2,r2,4
  806560:	194000cc 	andi	r5,r3,3
  806564:	2800021e 	bne	r5,zero,806570 <__lo0bits+0x68>
  806568:	1806d0ba 	srli	r3,r3,2
  80656c:	10800084 	addi	r2,r2,2
  806570:	1940004c 	andi	r5,r3,1
  806574:	2800031e 	bne	r5,zero,806584 <__lo0bits+0x7c>
  806578:	1806d07a 	srli	r3,r3,1
  80657c:	10800044 	addi	r2,r2,1
  806580:	18000726 	beq	r3,zero,8065a0 <__lo0bits+0x98>
  806584:	20c00015 	stw	r3,0(r4)
  806588:	f800283a 	ret
  80658c:	1806d43a 	srli	r3,r3,16
  806590:	00800404 	movi	r2,16
  806594:	003fea06 	br	806540 <__lo0bits+0x38>
  806598:	0005883a 	mov	r2,zero
  80659c:	f800283a 	ret
  8065a0:	00800804 	movi	r2,32
  8065a4:	f800283a 	ret
  8065a8:	1806d0ba 	srli	r3,r3,2
  8065ac:	00800084 	movi	r2,2
  8065b0:	20c00015 	stw	r3,0(r4)
  8065b4:	f800283a 	ret

008065b8 <__i2b>:
  8065b8:	20c01317 	ldw	r3,76(r4)
  8065bc:	defffd04 	addi	sp,sp,-12
  8065c0:	dc400115 	stw	r17,4(sp)
  8065c4:	dc000015 	stw	r16,0(sp)
  8065c8:	dfc00215 	stw	ra,8(sp)
  8065cc:	2021883a 	mov	r16,r4
  8065d0:	2823883a 	mov	r17,r5
  8065d4:	18000d26 	beq	r3,zero,80660c <__i2b+0x54>
  8065d8:	18800117 	ldw	r2,4(r3)
  8065dc:	10001826 	beq	r2,zero,806640 <__i2b+0x88>
  8065e0:	11000017 	ldw	r4,0(r2)
  8065e4:	19000115 	stw	r4,4(r3)
  8065e8:	00c00044 	movi	r3,1
  8065ec:	10000315 	stw	zero,12(r2)
  8065f0:	14400515 	stw	r17,20(r2)
  8065f4:	10c00415 	stw	r3,16(r2)
  8065f8:	dfc00217 	ldw	ra,8(sp)
  8065fc:	dc400117 	ldw	r17,4(sp)
  806600:	dc000017 	ldw	r16,0(sp)
  806604:	dec00304 	addi	sp,sp,12
  806608:	f800283a 	ret
  80660c:	01800844 	movi	r6,33
  806610:	01400104 	movi	r5,4
  806614:	08090940 	call	809094 <_calloc_r>
  806618:	80801315 	stw	r2,76(r16)
  80661c:	1007883a 	mov	r3,r2
  806620:	103fed1e 	bne	r2,zero,8065d8 <__i2b+0x20>
  806624:	01c02074 	movhi	r7,129
  806628:	01002074 	movhi	r4,129
  80662c:	39ffe504 	addi	r7,r7,-108
  806630:	000d883a 	mov	r6,zero
  806634:	01405004 	movi	r5,320
  806638:	213ffa04 	addi	r4,r4,-24
  80663c:	080901c0 	call	80901c <__assert_func>
  806640:	01800704 	movi	r6,28
  806644:	01400044 	movi	r5,1
  806648:	8009883a 	mov	r4,r16
  80664c:	08090940 	call	809094 <_calloc_r>
  806650:	103ff426 	beq	r2,zero,806624 <__i2b+0x6c>
  806654:	00c00044 	movi	r3,1
  806658:	10c00115 	stw	r3,4(r2)
  80665c:	00c00084 	movi	r3,2
  806660:	10c00215 	stw	r3,8(r2)
  806664:	003fe006 	br	8065e8 <__i2b+0x30>

00806668 <__multiply>:
  806668:	defff004 	addi	sp,sp,-64
  80666c:	dd800c15 	stw	r22,48(sp)
  806670:	dc400715 	stw	r17,28(sp)
  806674:	2d800417 	ldw	r22,16(r5)
  806678:	34400417 	ldw	r17,16(r6)
  80667c:	dc800815 	stw	r18,32(sp)
  806680:	dc000615 	stw	r16,24(sp)
  806684:	dfc00f15 	stw	ra,60(sp)
  806688:	df000e15 	stw	fp,56(sp)
  80668c:	ddc00d15 	stw	r23,52(sp)
  806690:	dd400b15 	stw	r21,44(sp)
  806694:	dd000a15 	stw	r20,40(sp)
  806698:	dcc00915 	stw	r19,36(sp)
  80669c:	2825883a 	mov	r18,r5
  8066a0:	3021883a 	mov	r16,r6
  8066a4:	b4400516 	blt	r22,r17,8066bc <__multiply+0x54>
  8066a8:	8807883a 	mov	r3,r17
  8066ac:	2821883a 	mov	r16,r5
  8066b0:	b023883a 	mov	r17,r22
  8066b4:	3025883a 	mov	r18,r6
  8066b8:	182d883a 	mov	r22,r3
  8066bc:	80800217 	ldw	r2,8(r16)
  8066c0:	8d87883a 	add	r3,r17,r22
  8066c4:	d8c00015 	stw	r3,0(sp)
  8066c8:	81400117 	ldw	r5,4(r16)
  8066cc:	10c0010e 	bge	r2,r3,8066d4 <__multiply+0x6c>
  8066d0:	29400044 	addi	r5,r5,1
  8066d4:	08061480 	call	806148 <_Balloc>
  8066d8:	d8800515 	stw	r2,20(sp)
  8066dc:	10008c26 	beq	r2,zero,806910 <__multiply+0x2a8>
  8066e0:	d8800017 	ldw	r2,0(sp)
  8066e4:	102690ba 	slli	r19,r2,2
  8066e8:	d8800517 	ldw	r2,20(sp)
  8066ec:	15000504 	addi	r20,r2,20
  8066f0:	a4c5883a 	add	r2,r20,r19
  8066f4:	d8800115 	stw	r2,4(sp)
  8066f8:	a0800a2e 	bgeu	r20,r2,806724 <__multiply+0xbc>
  8066fc:	d8800117 	ldw	r2,4(sp)
  806700:	d8c00517 	ldw	r3,20(sp)
  806704:	000b883a 	mov	r5,zero
  806708:	a009883a 	mov	r4,r20
  80670c:	10cdc83a 	sub	r6,r2,r3
  806710:	31bffac4 	addi	r6,r6,-21
  806714:	300cd0ba 	srli	r6,r6,2
  806718:	31800044 	addi	r6,r6,1
  80671c:	300c90ba 	slli	r6,r6,2
  806720:	08060580 	call	806058 <memset>
  806724:	b02c90ba 	slli	r22,r22,2
  806728:	882290ba 	slli	r17,r17,2
  80672c:	94800504 	addi	r18,r18,20
  806730:	80800504 	addi	r2,r16,20
  806734:	9587883a 	add	r3,r18,r22
  806738:	d8800315 	stw	r2,12(sp)
  80673c:	d8c00215 	stw	r3,8(sp)
  806740:	1463883a 	add	r17,r2,r17
  806744:	90c0542e 	bgeu	r18,r3,806898 <__multiply+0x230>
  806748:	80800544 	addi	r2,r16,21
  80674c:	88806d36 	bltu	r17,r2,806904 <__multiply+0x29c>
  806750:	8c05c83a 	sub	r2,r17,r16
  806754:	10bffac4 	addi	r2,r2,-21
  806758:	1004d0ba 	srli	r2,r2,2
  80675c:	10800044 	addi	r2,r2,1
  806760:	100490ba 	slli	r2,r2,2
  806764:	d8800415 	stw	r2,16(sp)
  806768:	00000606 	br	806784 <__multiply+0x11c>
  80676c:	102ad43a 	srli	r21,r2,16
  806770:	a800271e 	bne	r21,zero,806810 <__multiply+0x1a8>
  806774:	d8800217 	ldw	r2,8(sp)
  806778:	94800104 	addi	r18,r18,4
  80677c:	a5000104 	addi	r20,r20,4
  806780:	9080452e 	bgeu	r18,r2,806898 <__multiply+0x230>
  806784:	90800017 	ldw	r2,0(r18)
  806788:	15ffffcc 	andi	r23,r2,65535
  80678c:	b83ff726 	beq	r23,zero,80676c <__multiply+0x104>
  806790:	dd400317 	ldw	r21,12(sp)
  806794:	a02d883a 	mov	r22,r20
  806798:	0027883a 	mov	r19,zero
  80679c:	af000017 	ldw	fp,0(r21)
  8067a0:	b4000017 	ldw	r16,0(r22)
  8067a4:	b80b883a 	mov	r5,r23
  8067a8:	e13fffcc 	andi	r4,fp,65535
  8067ac:	080ae600 	call	80ae60 <__mulsi3>
  8067b0:	e008d43a 	srli	r4,fp,16
  8067b4:	823fffcc 	andi	r8,r16,65535
  8067b8:	1205883a 	add	r2,r2,r8
  8067bc:	b80b883a 	mov	r5,r23
  8067c0:	14e7883a 	add	r19,r2,r19
  8067c4:	8020d43a 	srli	r16,r16,16
  8067c8:	080ae600 	call	80ae60 <__mulsi3>
  8067cc:	9808d43a 	srli	r4,r19,16
  8067d0:	1405883a 	add	r2,r2,r16
  8067d4:	98ffffcc 	andi	r3,r19,65535
  8067d8:	1105883a 	add	r2,r2,r4
  8067dc:	1008943a 	slli	r4,r2,16
  8067e0:	b5800104 	addi	r22,r22,4
  8067e4:	ad400104 	addi	r21,r21,4
  8067e8:	20c6b03a 	or	r3,r4,r3
  8067ec:	b0ffff15 	stw	r3,-4(r22)
  8067f0:	1026d43a 	srli	r19,r2,16
  8067f4:	ac7fe936 	bltu	r21,r17,80679c <__multiply+0x134>
  8067f8:	d8800417 	ldw	r2,16(sp)
  8067fc:	a085883a 	add	r2,r20,r2
  806800:	14c00015 	stw	r19,0(r2)
  806804:	90800017 	ldw	r2,0(r18)
  806808:	102ad43a 	srli	r21,r2,16
  80680c:	a83fd926 	beq	r21,zero,806774 <__multiply+0x10c>
  806810:	a5c00017 	ldw	r23,0(r20)
  806814:	dd800317 	ldw	r22,12(sp)
  806818:	a027883a 	mov	r19,r20
  80681c:	b821883a 	mov	r16,r23
  806820:	0039883a 	mov	fp,zero
  806824:	b100000b 	ldhu	r4,0(r22)
  806828:	a80b883a 	mov	r5,r21
  80682c:	9cc00104 	addi	r19,r19,4
  806830:	080ae600 	call	80ae60 <__mulsi3>
  806834:	800cd43a 	srli	r6,r16,16
  806838:	b8ffffcc 	andi	r3,r23,65535
  80683c:	b5800104 	addi	r22,r22,4
  806840:	118d883a 	add	r6,r2,r6
  806844:	3739883a 	add	fp,r6,fp
  806848:	e004943a 	slli	r2,fp,16
  80684c:	9c000017 	ldw	r16,0(r19)
  806850:	a80b883a 	mov	r5,r21
  806854:	10c6b03a 	or	r3,r2,r3
  806858:	98ffff15 	stw	r3,-4(r19)
  80685c:	b13fff8b 	ldhu	r4,-2(r22)
  806860:	080ae600 	call	80ae60 <__mulsi3>
  806864:	e00cd43a 	srli	r6,fp,16
  806868:	80ffffcc 	andi	r3,r16,65535
  80686c:	10c7883a 	add	r3,r2,r3
  806870:	19af883a 	add	r23,r3,r6
  806874:	b838d43a 	srli	fp,r23,16
  806878:	b47fea36 	bltu	r22,r17,806824 <__multiply+0x1bc>
  80687c:	d8800417 	ldw	r2,16(sp)
  806880:	94800104 	addi	r18,r18,4
  806884:	a085883a 	add	r2,r20,r2
  806888:	15c00015 	stw	r23,0(r2)
  80688c:	d8800217 	ldw	r2,8(sp)
  806890:	a5000104 	addi	r20,r20,4
  806894:	90bfbb36 	bltu	r18,r2,806784 <__multiply+0x11c>
  806898:	d8800017 	ldw	r2,0(sp)
  80689c:	00800516 	blt	zero,r2,8068b4 <__multiply+0x24c>
  8068a0:	00000906 	br	8068c8 <__multiply+0x260>
  8068a4:	d8800017 	ldw	r2,0(sp)
  8068a8:	10bfffc4 	addi	r2,r2,-1
  8068ac:	d8800015 	stw	r2,0(sp)
  8068b0:	10000526 	beq	r2,zero,8068c8 <__multiply+0x260>
  8068b4:	d8c00117 	ldw	r3,4(sp)
  8068b8:	18bfff17 	ldw	r2,-4(r3)
  8068bc:	18ffff04 	addi	r3,r3,-4
  8068c0:	d8c00115 	stw	r3,4(sp)
  8068c4:	103ff726 	beq	r2,zero,8068a4 <__multiply+0x23c>
  8068c8:	d8800517 	ldw	r2,20(sp)
  8068cc:	d8c00017 	ldw	r3,0(sp)
  8068d0:	10c00415 	stw	r3,16(r2)
  8068d4:	dfc00f17 	ldw	ra,60(sp)
  8068d8:	df000e17 	ldw	fp,56(sp)
  8068dc:	ddc00d17 	ldw	r23,52(sp)
  8068e0:	dd800c17 	ldw	r22,48(sp)
  8068e4:	dd400b17 	ldw	r21,44(sp)
  8068e8:	dd000a17 	ldw	r20,40(sp)
  8068ec:	dcc00917 	ldw	r19,36(sp)
  8068f0:	dc800817 	ldw	r18,32(sp)
  8068f4:	dc400717 	ldw	r17,28(sp)
  8068f8:	dc000617 	ldw	r16,24(sp)
  8068fc:	dec01004 	addi	sp,sp,64
  806900:	f800283a 	ret
  806904:	00800104 	movi	r2,4
  806908:	d8800415 	stw	r2,16(sp)
  80690c:	003f9d06 	br	806784 <__multiply+0x11c>
  806910:	01c02074 	movhi	r7,129
  806914:	01002074 	movhi	r4,129
  806918:	39ffe504 	addi	r7,r7,-108
  80691c:	000d883a 	mov	r6,zero
  806920:	01405744 	movi	r5,349
  806924:	213ffa04 	addi	r4,r4,-24
  806928:	080901c0 	call	80901c <__assert_func>

0080692c <__pow5mult>:
  80692c:	defffb04 	addi	sp,sp,-20
  806930:	dcc00315 	stw	r19,12(sp)
  806934:	dc000015 	stw	r16,0(sp)
  806938:	dfc00415 	stw	ra,16(sp)
  80693c:	dc800215 	stw	r18,8(sp)
  806940:	dc400115 	stw	r17,4(sp)
  806944:	308000cc 	andi	r2,r6,3
  806948:	3021883a 	mov	r16,r6
  80694c:	2027883a 	mov	r19,r4
  806950:	10002d1e 	bne	r2,zero,806a08 <__pow5mult+0xdc>
  806954:	2825883a 	mov	r18,r5
  806958:	8021d0ba 	srai	r16,r16,2
  80695c:	80001926 	beq	r16,zero,8069c4 <__pow5mult+0x98>
  806960:	9c401217 	ldw	r17,72(r19)
  806964:	8800061e 	bne	r17,zero,806980 <__pow5mult+0x54>
  806968:	00002f06 	br	806a28 <__pow5mult+0xfc>
  80696c:	8021d07a 	srai	r16,r16,1
  806970:	80001426 	beq	r16,zero,8069c4 <__pow5mult+0x98>
  806974:	88800017 	ldw	r2,0(r17)
  806978:	10001a26 	beq	r2,zero,8069e4 <__pow5mult+0xb8>
  80697c:	1023883a 	mov	r17,r2
  806980:	8080004c 	andi	r2,r16,1
  806984:	103ff926 	beq	r2,zero,80696c <__pow5mult+0x40>
  806988:	880d883a 	mov	r6,r17
  80698c:	900b883a 	mov	r5,r18
  806990:	9809883a 	mov	r4,r19
  806994:	08066680 	call	806668 <__multiply>
  806998:	90001926 	beq	r18,zero,806a00 <__pow5mult+0xd4>
  80699c:	91000117 	ldw	r4,4(r18)
  8069a0:	98c01317 	ldw	r3,76(r19)
  8069a4:	8021d07a 	srai	r16,r16,1
  8069a8:	200890ba 	slli	r4,r4,2
  8069ac:	1907883a 	add	r3,r3,r4
  8069b0:	19000017 	ldw	r4,0(r3)
  8069b4:	91000015 	stw	r4,0(r18)
  8069b8:	1c800015 	stw	r18,0(r3)
  8069bc:	1025883a 	mov	r18,r2
  8069c0:	803fec1e 	bne	r16,zero,806974 <__pow5mult+0x48>
  8069c4:	9005883a 	mov	r2,r18
  8069c8:	dfc00417 	ldw	ra,16(sp)
  8069cc:	dcc00317 	ldw	r19,12(sp)
  8069d0:	dc800217 	ldw	r18,8(sp)
  8069d4:	dc400117 	ldw	r17,4(sp)
  8069d8:	dc000017 	ldw	r16,0(sp)
  8069dc:	dec00504 	addi	sp,sp,20
  8069e0:	f800283a 	ret
  8069e4:	880d883a 	mov	r6,r17
  8069e8:	880b883a 	mov	r5,r17
  8069ec:	9809883a 	mov	r4,r19
  8069f0:	08066680 	call	806668 <__multiply>
  8069f4:	88800015 	stw	r2,0(r17)
  8069f8:	10000015 	stw	zero,0(r2)
  8069fc:	003fdf06 	br	80697c <__pow5mult+0x50>
  806a00:	1025883a 	mov	r18,r2
  806a04:	003fd906 	br	80696c <__pow5mult+0x40>
  806a08:	100490ba 	slli	r2,r2,2
  806a0c:	00c02074 	movhi	r3,129
  806a10:	000f883a 	mov	r7,zero
  806a14:	10c7883a 	add	r3,r2,r3
  806a18:	19800917 	ldw	r6,36(r3)
  806a1c:	08062100 	call	806210 <__multadd>
  806a20:	1025883a 	mov	r18,r2
  806a24:	003fcc06 	br	806958 <__pow5mult+0x2c>
  806a28:	01400044 	movi	r5,1
  806a2c:	9809883a 	mov	r4,r19
  806a30:	08061480 	call	806148 <_Balloc>
  806a34:	1023883a 	mov	r17,r2
  806a38:	10000726 	beq	r2,zero,806a58 <__pow5mult+0x12c>
  806a3c:	00809c44 	movi	r2,625
  806a40:	88800515 	stw	r2,20(r17)
  806a44:	00800044 	movi	r2,1
  806a48:	88800415 	stw	r2,16(r17)
  806a4c:	9c401215 	stw	r17,72(r19)
  806a50:	88000015 	stw	zero,0(r17)
  806a54:	003fca06 	br	806980 <__pow5mult+0x54>
  806a58:	01c02074 	movhi	r7,129
  806a5c:	01002074 	movhi	r4,129
  806a60:	39ffe504 	addi	r7,r7,-108
  806a64:	000d883a 	mov	r6,zero
  806a68:	01405004 	movi	r5,320
  806a6c:	213ffa04 	addi	r4,r4,-24
  806a70:	080901c0 	call	80901c <__assert_func>

00806a74 <__lshift>:
  806a74:	defff804 	addi	sp,sp,-32
  806a78:	dd800615 	stw	r22,24(sp)
  806a7c:	dc000015 	stw	r16,0(sp)
  806a80:	302dd17a 	srai	r22,r6,5
  806a84:	2c000417 	ldw	r16,16(r5)
  806a88:	28800217 	ldw	r2,8(r5)
  806a8c:	dd000415 	stw	r20,16(sp)
  806a90:	b421883a 	add	r16,r22,r16
  806a94:	dcc00315 	stw	r19,12(sp)
  806a98:	dc800215 	stw	r18,8(sp)
  806a9c:	dc400115 	stw	r17,4(sp)
  806aa0:	dfc00715 	stw	ra,28(sp)
  806aa4:	dd400515 	stw	r21,20(sp)
  806aa8:	85000044 	addi	r20,r16,1
  806aac:	2827883a 	mov	r19,r5
  806ab0:	3025883a 	mov	r18,r6
  806ab4:	29400117 	ldw	r5,4(r5)
  806ab8:	2023883a 	mov	r17,r4
  806abc:	1500030e 	bge	r2,r20,806acc <__lshift+0x58>
  806ac0:	1085883a 	add	r2,r2,r2
  806ac4:	29400044 	addi	r5,r5,1
  806ac8:	153ffd16 	blt	r2,r20,806ac0 <__lshift+0x4c>
  806acc:	8809883a 	mov	r4,r17
  806ad0:	08061480 	call	806148 <_Balloc>
  806ad4:	102b883a 	mov	r21,r2
  806ad8:	10004126 	beq	r2,zero,806be0 <__lshift+0x16c>
  806adc:	11000504 	addi	r4,r2,20
  806ae0:	0580050e 	bge	zero,r22,806af8 <__lshift+0x84>
  806ae4:	b02c90ba 	slli	r22,r22,2
  806ae8:	000b883a 	mov	r5,zero
  806aec:	b00d883a 	mov	r6,r22
  806af0:	08060580 	call	806058 <memset>
  806af4:	1589883a 	add	r4,r2,r22
  806af8:	9a000417 	ldw	r8,16(r19)
  806afc:	98c00504 	addi	r3,r19,20
  806b00:	948007cc 	andi	r18,r18,31
  806b04:	401090ba 	slli	r8,r8,2
  806b08:	1a11883a 	add	r8,r3,r8
  806b0c:	90002c26 	beq	r18,zero,806bc0 <__lshift+0x14c>
  806b10:	01400804 	movi	r5,32
  806b14:	2c8bc83a 	sub	r5,r5,r18
  806b18:	2005883a 	mov	r2,r4
  806b1c:	000f883a 	mov	r7,zero
  806b20:	19800017 	ldw	r6,0(r3)
  806b24:	10800104 	addi	r2,r2,4
  806b28:	18c00104 	addi	r3,r3,4
  806b2c:	348c983a 	sll	r6,r6,r18
  806b30:	31ccb03a 	or	r6,r6,r7
  806b34:	11bfff15 	stw	r6,-4(r2)
  806b38:	19bfff17 	ldw	r6,-4(r3)
  806b3c:	314ed83a 	srl	r7,r6,r5
  806b40:	1a3ff736 	bltu	r3,r8,806b20 <__lshift+0xac>
  806b44:	98800544 	addi	r2,r19,21
  806b48:	40802336 	bltu	r8,r2,806bd8 <__lshift+0x164>
  806b4c:	44c7c83a 	sub	r3,r8,r19
  806b50:	18fffac4 	addi	r3,r3,-21
  806b54:	1806d0ba 	srli	r3,r3,2
  806b58:	18c00044 	addi	r3,r3,1
  806b5c:	180690ba 	slli	r3,r3,2
  806b60:	20c9883a 	add	r4,r4,r3
  806b64:	21c00015 	stw	r7,0(r4)
  806b68:	38000126 	beq	r7,zero,806b70 <__lshift+0xfc>
  806b6c:	a021883a 	mov	r16,r20
  806b70:	ac000415 	stw	r16,16(r21)
  806b74:	98000726 	beq	r19,zero,806b94 <__lshift+0x120>
  806b78:	98c00117 	ldw	r3,4(r19)
  806b7c:	88801317 	ldw	r2,76(r17)
  806b80:	180690ba 	slli	r3,r3,2
  806b84:	10c5883a 	add	r2,r2,r3
  806b88:	10c00017 	ldw	r3,0(r2)
  806b8c:	98c00015 	stw	r3,0(r19)
  806b90:	14c00015 	stw	r19,0(r2)
  806b94:	a805883a 	mov	r2,r21
  806b98:	dfc00717 	ldw	ra,28(sp)
  806b9c:	dd800617 	ldw	r22,24(sp)
  806ba0:	dd400517 	ldw	r21,20(sp)
  806ba4:	dd000417 	ldw	r20,16(sp)
  806ba8:	dcc00317 	ldw	r19,12(sp)
  806bac:	dc800217 	ldw	r18,8(sp)
  806bb0:	dc400117 	ldw	r17,4(sp)
  806bb4:	dc000017 	ldw	r16,0(sp)
  806bb8:	dec00804 	addi	sp,sp,32
  806bbc:	f800283a 	ret
  806bc0:	18800017 	ldw	r2,0(r3)
  806bc4:	18c00104 	addi	r3,r3,4
  806bc8:	21000104 	addi	r4,r4,4
  806bcc:	20bfff15 	stw	r2,-4(r4)
  806bd0:	1a3ffb36 	bltu	r3,r8,806bc0 <__lshift+0x14c>
  806bd4:	003fe606 	br	806b70 <__lshift+0xfc>
  806bd8:	00c00104 	movi	r3,4
  806bdc:	003fe006 	br	806b60 <__lshift+0xec>
  806be0:	01c02074 	movhi	r7,129
  806be4:	01002074 	movhi	r4,129
  806be8:	39ffe504 	addi	r7,r7,-108
  806bec:	000d883a 	mov	r6,zero
  806bf0:	01407644 	movi	r5,473
  806bf4:	213ffa04 	addi	r4,r4,-24
  806bf8:	080901c0 	call	80901c <__assert_func>

00806bfc <__mcmp>:
  806bfc:	21800417 	ldw	r6,16(r4)
  806c00:	28c00417 	ldw	r3,16(r5)
  806c04:	30c5c83a 	sub	r2,r6,r3
  806c08:	30c00e1e 	bne	r6,r3,806c44 <__mcmp+0x48>
  806c0c:	180690ba 	slli	r3,r3,2
  806c10:	21c00504 	addi	r7,r4,20
  806c14:	29400504 	addi	r5,r5,20
  806c18:	38c9883a 	add	r4,r7,r3
  806c1c:	28c7883a 	add	r3,r5,r3
  806c20:	00000106 	br	806c28 <__mcmp+0x2c>
  806c24:	3900082e 	bgeu	r7,r4,806c48 <__mcmp+0x4c>
  806c28:	21bfff17 	ldw	r6,-4(r4)
  806c2c:	197fff17 	ldw	r5,-4(r3)
  806c30:	213fff04 	addi	r4,r4,-4
  806c34:	18ffff04 	addi	r3,r3,-4
  806c38:	317ffa26 	beq	r6,r5,806c24 <__mcmp+0x28>
  806c3c:	3140032e 	bgeu	r6,r5,806c4c <__mcmp+0x50>
  806c40:	00bfffc4 	movi	r2,-1
  806c44:	f800283a 	ret
  806c48:	f800283a 	ret
  806c4c:	00800044 	movi	r2,1
  806c50:	f800283a 	ret

00806c54 <__mdiff>:
  806c54:	28800417 	ldw	r2,16(r5)
  806c58:	30c00417 	ldw	r3,16(r6)
  806c5c:	defffc04 	addi	sp,sp,-16
  806c60:	dc800215 	stw	r18,8(sp)
  806c64:	dc400115 	stw	r17,4(sp)
  806c68:	dc000015 	stw	r16,0(sp)
  806c6c:	dfc00315 	stw	ra,12(sp)
  806c70:	2823883a 	mov	r17,r5
  806c74:	3021883a 	mov	r16,r6
  806c78:	10e5c83a 	sub	r18,r2,r3
  806c7c:	10c0641e 	bne	r2,r3,806e10 <__mdiff+0x1bc>
  806c80:	180c90ba 	slli	r6,r3,2
  806c84:	29400504 	addi	r5,r5,20
  806c88:	80c00504 	addi	r3,r16,20
  806c8c:	2985883a 	add	r2,r5,r6
  806c90:	1987883a 	add	r3,r3,r6
  806c94:	00000106 	br	806c9c <__mdiff+0x48>
  806c98:	2880642e 	bgeu	r5,r2,806e2c <__mdiff+0x1d8>
  806c9c:	11bfff17 	ldw	r6,-4(r2)
  806ca0:	19ffff17 	ldw	r7,-4(r3)
  806ca4:	10bfff04 	addi	r2,r2,-4
  806ca8:	18ffff04 	addi	r3,r3,-4
  806cac:	31fffa26 	beq	r6,r7,806c98 <__mdiff+0x44>
  806cb0:	31c05236 	bltu	r6,r7,806dfc <__mdiff+0x1a8>
  806cb4:	89400117 	ldw	r5,4(r17)
  806cb8:	08061480 	call	806148 <_Balloc>
  806cbc:	10006226 	beq	r2,zero,806e48 <__mdiff+0x1f4>
  806cc0:	8a400417 	ldw	r9,16(r17)
  806cc4:	83000417 	ldw	r12,16(r16)
  806cc8:	8ac00504 	addi	r11,r17,20
  806ccc:	481090ba 	slli	r8,r9,2
  806cd0:	601890ba 	slli	r12,r12,2
  806cd4:	81800504 	addi	r6,r16,20
  806cd8:	13400504 	addi	r13,r2,20
  806cdc:	14800315 	stw	r18,12(r2)
  806ce0:	5a11883a 	add	r8,r11,r8
  806ce4:	3319883a 	add	r12,r6,r12
  806ce8:	681d883a 	mov	r14,r13
  806cec:	5815883a 	mov	r10,r11
  806cf0:	0007883a 	mov	r3,zero
  806cf4:	51000017 	ldw	r4,0(r10)
  806cf8:	31c00017 	ldw	r7,0(r6)
  806cfc:	73800104 	addi	r14,r14,4
  806d00:	217fffcc 	andi	r5,r4,65535
  806d04:	28cb883a 	add	r5,r5,r3
  806d08:	38ffffcc 	andi	r3,r7,65535
  806d0c:	28cbc83a 	sub	r5,r5,r3
  806d10:	380ed43a 	srli	r7,r7,16
  806d14:	2006d43a 	srli	r3,r4,16
  806d18:	2809d43a 	srai	r4,r5,16
  806d1c:	297fffcc 	andi	r5,r5,65535
  806d20:	19c7c83a 	sub	r3,r3,r7
  806d24:	1907883a 	add	r3,r3,r4
  806d28:	1808943a 	slli	r4,r3,16
  806d2c:	31800104 	addi	r6,r6,4
  806d30:	1807d43a 	srai	r3,r3,16
  806d34:	214ab03a 	or	r5,r4,r5
  806d38:	717fff15 	stw	r5,-4(r14)
  806d3c:	52800104 	addi	r10,r10,4
  806d40:	333fec36 	bltu	r6,r12,806cf4 <__mdiff+0xa0>
  806d44:	640fc83a 	sub	r7,r12,r16
  806d48:	39fffac4 	addi	r7,r7,-21
  806d4c:	84000544 	addi	r16,r16,21
  806d50:	380ed0ba 	srli	r7,r7,2
  806d54:	64003336 	bltu	r12,r16,806e24 <__mdiff+0x1d0>
  806d58:	380890ba 	slli	r4,r7,2
  806d5c:	6909883a 	add	r4,r13,r4
  806d60:	64002e36 	bltu	r12,r16,806e1c <__mdiff+0x1c8>
  806d64:	39800044 	addi	r6,r7,1
  806d68:	300c90ba 	slli	r6,r6,2
  806d6c:	5997883a 	add	r11,r11,r6
  806d70:	699b883a 	add	r13,r13,r6
  806d74:	5a00152e 	bgeu	r11,r8,806dcc <__mdiff+0x178>
  806d78:	680f883a 	mov	r7,r13
  806d7c:	580d883a 	mov	r6,r11
  806d80:	31000017 	ldw	r4,0(r6)
  806d84:	39c00104 	addi	r7,r7,4
  806d88:	31800104 	addi	r6,r6,4
  806d8c:	217fffcc 	andi	r5,r4,65535
  806d90:	28cb883a 	add	r5,r5,r3
  806d94:	2815d43a 	srai	r10,r5,16
  806d98:	2006d43a 	srli	r3,r4,16
  806d9c:	297fffcc 	andi	r5,r5,65535
  806da0:	1a87883a 	add	r3,r3,r10
  806da4:	1814943a 	slli	r10,r3,16
  806da8:	1807d43a 	srai	r3,r3,16
  806dac:	514ab03a 	or	r5,r10,r5
  806db0:	397fff15 	stw	r5,-4(r7)
  806db4:	323ff236 	bltu	r6,r8,806d80 <__mdiff+0x12c>
  806db8:	413fffc4 	addi	r4,r8,-1
  806dbc:	22c9c83a 	sub	r4,r4,r11
  806dc0:	2008d0ba 	srli	r4,r4,2
  806dc4:	200890ba 	slli	r4,r4,2
  806dc8:	6909883a 	add	r4,r13,r4
  806dcc:	2800041e 	bne	r5,zero,806de0 <__mdiff+0x18c>
  806dd0:	20ffff17 	ldw	r3,-4(r4)
  806dd4:	4a7fffc4 	addi	r9,r9,-1
  806dd8:	213fff04 	addi	r4,r4,-4
  806ddc:	183ffc26 	beq	r3,zero,806dd0 <__mdiff+0x17c>
  806de0:	12400415 	stw	r9,16(r2)
  806de4:	dfc00317 	ldw	ra,12(sp)
  806de8:	dc800217 	ldw	r18,8(sp)
  806dec:	dc400117 	ldw	r17,4(sp)
  806df0:	dc000017 	ldw	r16,0(sp)
  806df4:	dec00404 	addi	sp,sp,16
  806df8:	f800283a 	ret
  806dfc:	8805883a 	mov	r2,r17
  806e00:	04800044 	movi	r18,1
  806e04:	8023883a 	mov	r17,r16
  806e08:	1021883a 	mov	r16,r2
  806e0c:	003fa906 	br	806cb4 <__mdiff+0x60>
  806e10:	903ffa16 	blt	r18,zero,806dfc <__mdiff+0x1a8>
  806e14:	0025883a 	mov	r18,zero
  806e18:	003fa606 	br	806cb4 <__mdiff+0x60>
  806e1c:	01800104 	movi	r6,4
  806e20:	003fd206 	br	806d6c <__mdiff+0x118>
  806e24:	0009883a 	mov	r4,zero
  806e28:	003fcc06 	br	806d5c <__mdiff+0x108>
  806e2c:	000b883a 	mov	r5,zero
  806e30:	08061480 	call	806148 <_Balloc>
  806e34:	10000b26 	beq	r2,zero,806e64 <__mdiff+0x210>
  806e38:	00c00044 	movi	r3,1
  806e3c:	10c00415 	stw	r3,16(r2)
  806e40:	10000515 	stw	zero,20(r2)
  806e44:	003fe706 	br	806de4 <__mdiff+0x190>
  806e48:	01c02074 	movhi	r7,129
  806e4c:	01002074 	movhi	r4,129
  806e50:	39ffe504 	addi	r7,r7,-108
  806e54:	000d883a 	mov	r6,zero
  806e58:	01409004 	movi	r5,576
  806e5c:	213ffa04 	addi	r4,r4,-24
  806e60:	080901c0 	call	80901c <__assert_func>
  806e64:	01c02074 	movhi	r7,129
  806e68:	01002074 	movhi	r4,129
  806e6c:	39ffe504 	addi	r7,r7,-108
  806e70:	000d883a 	mov	r6,zero
  806e74:	01408c84 	movi	r5,562
  806e78:	213ffa04 	addi	r4,r4,-24
  806e7c:	080901c0 	call	80901c <__assert_func>

00806e80 <__ulp>:
  806e80:	28dffc2c 	andhi	r3,r5,32752
  806e84:	017f3034 	movhi	r5,64704
  806e88:	1947883a 	add	r3,r3,r5
  806e8c:	00c0020e 	bge	zero,r3,806e98 <__ulp+0x18>
  806e90:	0005883a 	mov	r2,zero
  806e94:	f800283a 	ret
  806e98:	00c7c83a 	sub	r3,zero,r3
  806e9c:	1807d53a 	srai	r3,r3,20
  806ea0:	18800508 	cmpgei	r2,r3,20
  806ea4:	1000041e 	bne	r2,zero,806eb8 <__ulp+0x38>
  806ea8:	00800234 	movhi	r2,8
  806eac:	10c7d83a 	sra	r3,r2,r3
  806eb0:	0005883a 	mov	r2,zero
  806eb4:	f800283a 	ret
  806eb8:	193ffb04 	addi	r4,r3,-20
  806ebc:	208007c8 	cmpgei	r2,r4,31
  806ec0:	0007883a 	mov	r3,zero
  806ec4:	1000031e 	bne	r2,zero,806ed4 <__ulp+0x54>
  806ec8:	00a00034 	movhi	r2,32768
  806ecc:	1104d83a 	srl	r2,r2,r4
  806ed0:	f800283a 	ret
  806ed4:	00800044 	movi	r2,1
  806ed8:	f800283a 	ret

00806edc <__b2d>:
  806edc:	defffa04 	addi	sp,sp,-24
  806ee0:	dc400115 	stw	r17,4(sp)
  806ee4:	24400417 	ldw	r17,16(r4)
  806ee8:	dc000015 	stw	r16,0(sp)
  806eec:	24000504 	addi	r16,r4,20
  806ef0:	882290ba 	slli	r17,r17,2
  806ef4:	dc800215 	stw	r18,8(sp)
  806ef8:	dd000415 	stw	r20,16(sp)
  806efc:	8463883a 	add	r17,r16,r17
  806f00:	8cbfff17 	ldw	r18,-4(r17)
  806f04:	dcc00315 	stw	r19,12(sp)
  806f08:	dfc00515 	stw	ra,20(sp)
  806f0c:	9009883a 	mov	r4,r18
  806f10:	2827883a 	mov	r19,r5
  806f14:	08064a40 	call	8064a4 <__hi0bits>
  806f18:	00c00804 	movi	r3,32
  806f1c:	1889c83a 	sub	r4,r3,r2
  806f20:	99000015 	stw	r4,0(r19)
  806f24:	110002c8 	cmpgei	r4,r2,11
  806f28:	8d3fff04 	addi	r20,r17,-4
  806f2c:	20002026 	beq	r4,zero,806fb0 <__b2d+0xd4>
  806f30:	10bffd44 	addi	r2,r2,-11
  806f34:	85000e2e 	bgeu	r16,r20,806f70 <__b2d+0x94>
  806f38:	897ffe17 	ldw	r5,-8(r17)
  806f3c:	10001226 	beq	r2,zero,806f88 <__b2d+0xac>
  806f40:	1889c83a 	sub	r4,r3,r2
  806f44:	90a4983a 	sll	r18,r18,r2
  806f48:	2906d83a 	srl	r3,r5,r4
  806f4c:	89bffe04 	addi	r6,r17,-8
  806f50:	2884983a 	sll	r2,r5,r2
  806f54:	90e4b03a 	or	r18,r18,r3
  806f58:	90cffc34 	orhi	r3,r18,16368
  806f5c:	81800c2e 	bgeu	r16,r6,806f90 <__b2d+0xb4>
  806f60:	897ffd17 	ldw	r5,-12(r17)
  806f64:	2908d83a 	srl	r4,r5,r4
  806f68:	1104b03a 	or	r2,r2,r4
  806f6c:	00000806 	br	806f90 <__b2d+0xb4>
  806f70:	10000426 	beq	r2,zero,806f84 <__b2d+0xa8>
  806f74:	90a4983a 	sll	r18,r18,r2
  806f78:	0005883a 	mov	r2,zero
  806f7c:	90cffc34 	orhi	r3,r18,16368
  806f80:	00000306 	br	806f90 <__b2d+0xb4>
  806f84:	000b883a 	mov	r5,zero
  806f88:	90cffc34 	orhi	r3,r18,16368
  806f8c:	2805883a 	mov	r2,r5
  806f90:	dfc00517 	ldw	ra,20(sp)
  806f94:	dd000417 	ldw	r20,16(sp)
  806f98:	dcc00317 	ldw	r19,12(sp)
  806f9c:	dc800217 	ldw	r18,8(sp)
  806fa0:	dc400117 	ldw	r17,4(sp)
  806fa4:	dc000017 	ldw	r16,0(sp)
  806fa8:	dec00604 	addi	sp,sp,24
  806fac:	f800283a 	ret
  806fb0:	014002c4 	movi	r5,11
  806fb4:	2889c83a 	sub	r4,r5,r2
  806fb8:	9106d83a 	srl	r3,r18,r4
  806fbc:	18cffc34 	orhi	r3,r3,16368
  806fc0:	85000536 	bltu	r16,r20,806fd8 <__b2d+0xfc>
  806fc4:	000b883a 	mov	r5,zero
  806fc8:	10800544 	addi	r2,r2,21
  806fcc:	9084983a 	sll	r2,r18,r2
  806fd0:	1144b03a 	or	r2,r2,r5
  806fd4:	003fee06 	br	806f90 <__b2d+0xb4>
  806fd8:	897ffe17 	ldw	r5,-8(r17)
  806fdc:	290ad83a 	srl	r5,r5,r4
  806fe0:	003ff906 	br	806fc8 <__b2d+0xec>

00806fe4 <__d2b>:
  806fe4:	defff804 	addi	sp,sp,-32
  806fe8:	dd000615 	stw	r20,24(sp)
  806fec:	2829883a 	mov	r20,r5
  806ff0:	01400044 	movi	r5,1
  806ff4:	dcc00515 	stw	r19,20(sp)
  806ff8:	dc000215 	stw	r16,8(sp)
  806ffc:	dfc00715 	stw	ra,28(sp)
  807000:	dc800415 	stw	r18,16(sp)
  807004:	dc400315 	stw	r17,12(sp)
  807008:	3021883a 	mov	r16,r6
  80700c:	3827883a 	mov	r19,r7
  807010:	08061480 	call	806148 <_Balloc>
  807014:	10004526 	beq	r2,zero,80712c <__d2b+0x148>
  807018:	8024d53a 	srli	r18,r16,20
  80701c:	01800434 	movhi	r6,16
  807020:	31bfffc4 	addi	r6,r6,-1
  807024:	9481ffcc 	andi	r18,r18,2047
  807028:	1023883a 	mov	r17,r2
  80702c:	81a0703a 	and	r16,r16,r6
  807030:	90000126 	beq	r18,zero,807038 <__d2b+0x54>
  807034:	84000434 	orhi	r16,r16,16
  807038:	dc000115 	stw	r16,4(sp)
  80703c:	a0002226 	beq	r20,zero,8070c8 <__d2b+0xe4>
  807040:	d809883a 	mov	r4,sp
  807044:	dd000015 	stw	r20,0(sp)
  807048:	08065080 	call	806508 <__lo0bits>
  80704c:	d8c00117 	ldw	r3,4(sp)
  807050:	10003326 	beq	r2,zero,807120 <__d2b+0x13c>
  807054:	01000804 	movi	r4,32
  807058:	2089c83a 	sub	r4,r4,r2
  80705c:	1908983a 	sll	r4,r3,r4
  807060:	d9400017 	ldw	r5,0(sp)
  807064:	1886d83a 	srl	r3,r3,r2
  807068:	2148b03a 	or	r4,r4,r5
  80706c:	89000515 	stw	r4,20(r17)
  807070:	d8c00115 	stw	r3,4(sp)
  807074:	88c00615 	stw	r3,24(r17)
  807078:	1800271e 	bne	r3,zero,807118 <__d2b+0x134>
  80707c:	04000044 	movi	r16,1
  807080:	8c000415 	stw	r16,16(r17)
  807084:	90001926 	beq	r18,zero,8070ec <__d2b+0x108>
  807088:	00c00d44 	movi	r3,53
  80708c:	94bef344 	addi	r18,r18,-1075
  807090:	90a5883a 	add	r18,r18,r2
  807094:	1885c83a 	sub	r2,r3,r2
  807098:	d8c00817 	ldw	r3,32(sp)
  80709c:	9c800015 	stw	r18,0(r19)
  8070a0:	18800015 	stw	r2,0(r3)
  8070a4:	8805883a 	mov	r2,r17
  8070a8:	dfc00717 	ldw	ra,28(sp)
  8070ac:	dd000617 	ldw	r20,24(sp)
  8070b0:	dcc00517 	ldw	r19,20(sp)
  8070b4:	dc800417 	ldw	r18,16(sp)
  8070b8:	dc400317 	ldw	r17,12(sp)
  8070bc:	dc000217 	ldw	r16,8(sp)
  8070c0:	dec00804 	addi	sp,sp,32
  8070c4:	f800283a 	ret
  8070c8:	d9000104 	addi	r4,sp,4
  8070cc:	08065080 	call	806508 <__lo0bits>
  8070d0:	00c00044 	movi	r3,1
  8070d4:	88c00415 	stw	r3,16(r17)
  8070d8:	d8c00117 	ldw	r3,4(sp)
  8070dc:	10800804 	addi	r2,r2,32
  8070e0:	04000044 	movi	r16,1
  8070e4:	88c00515 	stw	r3,20(r17)
  8070e8:	903fe71e 	bne	r18,zero,807088 <__d2b+0xa4>
  8070ec:	800690ba 	slli	r3,r16,2
  8070f0:	10bef384 	addi	r2,r2,-1074
  8070f4:	98800015 	stw	r2,0(r19)
  8070f8:	88c5883a 	add	r2,r17,r3
  8070fc:	11000417 	ldw	r4,16(r2)
  807100:	8020917a 	slli	r16,r16,5
  807104:	08064a40 	call	8064a4 <__hi0bits>
  807108:	80a1c83a 	sub	r16,r16,r2
  80710c:	d8800817 	ldw	r2,32(sp)
  807110:	14000015 	stw	r16,0(r2)
  807114:	003fe306 	br	8070a4 <__d2b+0xc0>
  807118:	04000084 	movi	r16,2
  80711c:	003fd806 	br	807080 <__d2b+0x9c>
  807120:	d9000017 	ldw	r4,0(sp)
  807124:	89000515 	stw	r4,20(r17)
  807128:	003fd206 	br	807074 <__d2b+0x90>
  80712c:	01c02074 	movhi	r7,129
  807130:	01002074 	movhi	r4,129
  807134:	39ffe504 	addi	r7,r7,-108
  807138:	000d883a 	mov	r6,zero
  80713c:	0140c284 	movi	r5,778
  807140:	213ffa04 	addi	r4,r4,-24
  807144:	080901c0 	call	80901c <__assert_func>

00807148 <__ratio>:
  807148:	defff904 	addi	sp,sp,-28
  80714c:	dc400315 	stw	r17,12(sp)
  807150:	2823883a 	mov	r17,r5
  807154:	d80b883a 	mov	r5,sp
  807158:	dfc00615 	stw	ra,24(sp)
  80715c:	dcc00515 	stw	r19,20(sp)
  807160:	dc800415 	stw	r18,16(sp)
  807164:	2027883a 	mov	r19,r4
  807168:	dc000215 	stw	r16,8(sp)
  80716c:	0806edc0 	call	806edc <__b2d>
  807170:	d9400104 	addi	r5,sp,4
  807174:	8809883a 	mov	r4,r17
  807178:	1025883a 	mov	r18,r2
  80717c:	1821883a 	mov	r16,r3
  807180:	0806edc0 	call	806edc <__b2d>
  807184:	89000417 	ldw	r4,16(r17)
  807188:	9a000417 	ldw	r8,16(r19)
  80718c:	d9400117 	ldw	r5,4(sp)
  807190:	100d883a 	mov	r6,r2
  807194:	4111c83a 	sub	r8,r8,r4
  807198:	d9000017 	ldw	r4,0(sp)
  80719c:	4010917a 	slli	r8,r8,5
  8071a0:	180f883a 	mov	r7,r3
  8071a4:	2149c83a 	sub	r4,r4,r5
  8071a8:	4111883a 	add	r8,r8,r4
  8071ac:	02000c0e 	bge	zero,r8,8071e0 <__ratio+0x98>
  8071b0:	4010953a 	slli	r8,r8,20
  8071b4:	4421883a 	add	r16,r8,r16
  8071b8:	9009883a 	mov	r4,r18
  8071bc:	800b883a 	mov	r5,r16
  8071c0:	080b7780 	call	80b778 <__divdf3>
  8071c4:	dfc00617 	ldw	ra,24(sp)
  8071c8:	dcc00517 	ldw	r19,20(sp)
  8071cc:	dc800417 	ldw	r18,16(sp)
  8071d0:	dc400317 	ldw	r17,12(sp)
  8071d4:	dc000217 	ldw	r16,8(sp)
  8071d8:	dec00704 	addi	sp,sp,28
  8071dc:	f800283a 	ret
  8071e0:	4010953a 	slli	r8,r8,20
  8071e4:	1a0fc83a 	sub	r7,r3,r8
  8071e8:	003ff306 	br	8071b8 <__ratio+0x70>

008071ec <_mprec_log10>:
  8071ec:	defffe04 	addi	sp,sp,-8
  8071f0:	dc000015 	stw	r16,0(sp)
  8071f4:	dfc00115 	stw	ra,4(sp)
  8071f8:	20800608 	cmpgei	r2,r4,24
  8071fc:	2021883a 	mov	r16,r4
  807200:	10000f26 	beq	r2,zero,807240 <_mprec_log10+0x54>
  807204:	0009883a 	mov	r4,zero
  807208:	014ffc34 	movhi	r5,16368
  80720c:	000d883a 	mov	r6,zero
  807210:	01d00934 	movhi	r7,16420
  807214:	080c2f80 	call	80c2f8 <__muldf3>
  807218:	843fffc4 	addi	r16,r16,-1
  80721c:	1009883a 	mov	r4,r2
  807220:	180b883a 	mov	r5,r3
  807224:	803ff91e 	bne	r16,zero,80720c <_mprec_log10+0x20>
  807228:	2005883a 	mov	r2,r4
  80722c:	2807883a 	mov	r3,r5
  807230:	dfc00117 	ldw	ra,4(sp)
  807234:	dc000017 	ldw	r16,0(sp)
  807238:	dec00204 	addi	sp,sp,8
  80723c:	f800283a 	ret
  807240:	202090fa 	slli	r16,r4,3
  807244:	00802074 	movhi	r2,129
  807248:	10802104 	addi	r2,r2,132
  80724c:	1421883a 	add	r16,r2,r16
  807250:	81000017 	ldw	r4,0(r16)
  807254:	81400117 	ldw	r5,4(r16)
  807258:	003ff306 	br	807228 <_mprec_log10+0x3c>

0080725c <__copybits>:
  80725c:	297fffc4 	addi	r5,r5,-1
  807260:	280fd17a 	srai	r7,r5,5
  807264:	31400417 	ldw	r5,16(r6)
  807268:	30800504 	addi	r2,r6,20
  80726c:	39c00044 	addi	r7,r7,1
  807270:	280a90ba 	slli	r5,r5,2
  807274:	380e90ba 	slli	r7,r7,2
  807278:	114b883a 	add	r5,r2,r5
  80727c:	21cf883a 	add	r7,r4,r7
  807280:	11400c2e 	bgeu	r2,r5,8072b4 <__copybits+0x58>
  807284:	2007883a 	mov	r3,r4
  807288:	12000017 	ldw	r8,0(r2)
  80728c:	10800104 	addi	r2,r2,4
  807290:	18c00104 	addi	r3,r3,4
  807294:	1a3fff15 	stw	r8,-4(r3)
  807298:	117ffb36 	bltu	r2,r5,807288 <__copybits+0x2c>
  80729c:	2985c83a 	sub	r2,r5,r6
  8072a0:	10bffac4 	addi	r2,r2,-21
  8072a4:	1004d0ba 	srli	r2,r2,2
  8072a8:	10800044 	addi	r2,r2,1
  8072ac:	100490ba 	slli	r2,r2,2
  8072b0:	2089883a 	add	r4,r4,r2
  8072b4:	21c0072e 	bgeu	r4,r7,8072d4 <__copybits+0x78>
  8072b8:	39bfffc4 	addi	r6,r7,-1
  8072bc:	310dc83a 	sub	r6,r6,r4
  8072c0:	300cd0ba 	srli	r6,r6,2
  8072c4:	000b883a 	mov	r5,zero
  8072c8:	31800044 	addi	r6,r6,1
  8072cc:	300c90ba 	slli	r6,r6,2
  8072d0:	08060581 	jmpi	806058 <memset>
  8072d4:	f800283a 	ret

008072d8 <__any_on>:
  8072d8:	20c00417 	ldw	r3,16(r4)
  8072dc:	280dd17a 	srai	r6,r5,5
  8072e0:	21000504 	addi	r4,r4,20
  8072e4:	1980080e 	bge	r3,r6,807308 <__any_on+0x30>
  8072e8:	180490ba 	slli	r2,r3,2
  8072ec:	2085883a 	add	r2,r4,r2
  8072f0:	20800f2e 	bgeu	r4,r2,807330 <__any_on+0x58>
  8072f4:	10ffff17 	ldw	r3,-4(r2)
  8072f8:	10bfff04 	addi	r2,r2,-4
  8072fc:	183ffc26 	beq	r3,zero,8072f0 <__any_on+0x18>
  807300:	00800044 	movi	r2,1
  807304:	f800283a 	ret
  807308:	300490ba 	slli	r2,r6,2
  80730c:	2085883a 	add	r2,r4,r2
  807310:	30fff70e 	bge	r6,r3,8072f0 <__any_on+0x18>
  807314:	294007cc 	andi	r5,r5,31
  807318:	283ff526 	beq	r5,zero,8072f0 <__any_on+0x18>
  80731c:	11800017 	ldw	r6,0(r2)
  807320:	3146d83a 	srl	r3,r6,r5
  807324:	194a983a 	sll	r5,r3,r5
  807328:	317ff51e 	bne	r6,r5,807300 <__any_on+0x28>
  80732c:	003ff006 	br	8072f0 <__any_on+0x18>
  807330:	0005883a 	mov	r2,zero
  807334:	f800283a 	ret

00807338 <_realloc_r>:
  807338:	defff504 	addi	sp,sp,-44
  80733c:	dc800315 	stw	r18,12(sp)
  807340:	dfc00a15 	stw	ra,40(sp)
  807344:	df000915 	stw	fp,36(sp)
  807348:	ddc00815 	stw	r23,32(sp)
  80734c:	dd800715 	stw	r22,28(sp)
  807350:	dd400615 	stw	r21,24(sp)
  807354:	dd000515 	stw	r20,20(sp)
  807358:	dcc00415 	stw	r19,16(sp)
  80735c:	dc400215 	stw	r17,8(sp)
  807360:	dc000115 	stw	r16,4(sp)
  807364:	3025883a 	mov	r18,r6
  807368:	28008b26 	beq	r5,zero,807598 <_realloc_r+0x260>
  80736c:	2821883a 	mov	r16,r5
  807370:	2027883a 	mov	r19,r4
  807374:	944002c4 	addi	r17,r18,11
  807378:	080dd340 	call	80dd34 <__malloc_lock>
  80737c:	888005f0 	cmpltui	r2,r17,23
  807380:	1000521e 	bne	r2,zero,8074cc <_realloc_r+0x194>
  807384:	017ffe04 	movi	r5,-8
  807388:	8962703a 	and	r17,r17,r5
  80738c:	8807883a 	mov	r3,r17
  807390:	88005116 	blt	r17,zero,8074d8 <_realloc_r+0x1a0>
  807394:	8c805036 	bltu	r17,r18,8074d8 <_realloc_r+0x1a0>
  807398:	80bfff17 	ldw	r2,-4(r16)
  80739c:	017fff04 	movi	r5,-4
  8073a0:	857ffe04 	addi	r21,r16,-8
  8073a4:	1168703a 	and	r20,r2,r5
  8073a8:	ad2d883a 	add	r22,r21,r20
  8073ac:	a0c0390e 	bge	r20,r3,807494 <_realloc_r+0x15c>
  8073b0:	07002074 	movhi	fp,129
  8073b4:	e7026404 	addi	fp,fp,2448
  8073b8:	e2000217 	ldw	r8,8(fp)
  8073bc:	b1000117 	ldw	r4,4(r22)
  8073c0:	45808e26 	beq	r8,r22,8075fc <_realloc_r+0x2c4>
  8073c4:	01bfff84 	movi	r6,-2
  8073c8:	218c703a 	and	r6,r4,r6
  8073cc:	b18d883a 	add	r6,r22,r6
  8073d0:	31800117 	ldw	r6,4(r6)
  8073d4:	3180004c 	andi	r6,r6,1
  8073d8:	30004f1e 	bne	r6,zero,807518 <_realloc_r+0x1e0>
  8073dc:	2148703a 	and	r4,r4,r5
  8073e0:	a10b883a 	add	r5,r20,r4
  8073e4:	28c0bf0e 	bge	r5,r3,8076e4 <_realloc_r+0x3ac>
  8073e8:	1080004c 	andi	r2,r2,1
  8073ec:	10004c1e 	bne	r2,zero,807520 <_realloc_r+0x1e8>
  8073f0:	81fffe17 	ldw	r7,-8(r16)
  8073f4:	00bfff04 	movi	r2,-4
  8073f8:	a9cfc83a 	sub	r7,r21,r7
  8073fc:	39400117 	ldw	r5,4(r7)
  807400:	288a703a 	and	r5,r5,r2
  807404:	b0000426 	beq	r22,zero,807418 <_realloc_r+0xe0>
  807408:	a16f883a 	add	r23,r20,r5
  80740c:	b92f883a 	add	r23,r23,r4
  807410:	4580bf26 	beq	r8,r22,807710 <_realloc_r+0x3d8>
  807414:	b8c0930e 	bge	r23,r3,807664 <_realloc_r+0x32c>
  807418:	38004126 	beq	r7,zero,807520 <_realloc_r+0x1e8>
  80741c:	a16f883a 	add	r23,r20,r5
  807420:	b8c03f16 	blt	r23,r3,807520 <_realloc_r+0x1e8>
  807424:	38800317 	ldw	r2,12(r7)
  807428:	38c00217 	ldw	r3,8(r7)
  80742c:	a1bfff04 	addi	r6,r20,-4
  807430:	31400968 	cmpgeui	r5,r6,37
  807434:	18800315 	stw	r2,12(r3)
  807438:	10c00215 	stw	r3,8(r2)
  80743c:	39000204 	addi	r4,r7,8
  807440:	3ded883a 	add	r22,r7,r23
  807444:	2800941e 	bne	r5,zero,807698 <_realloc_r+0x360>
  807448:	30800530 	cmpltui	r2,r6,20
  80744c:	80c00017 	ldw	r3,0(r16)
  807450:	1000df1e 	bne	r2,zero,8077d0 <_realloc_r+0x498>
  807454:	38c00215 	stw	r3,8(r7)
  807458:	80c00117 	ldw	r3,4(r16)
  80745c:	30800728 	cmpgeui	r2,r6,28
  807460:	38c00315 	stw	r3,12(r7)
  807464:	1000dc1e 	bne	r2,zero,8077d8 <_realloc_r+0x4a0>
  807468:	80c00217 	ldw	r3,8(r16)
  80746c:	38800404 	addi	r2,r7,16
  807470:	84000204 	addi	r16,r16,8
  807474:	10c00015 	stw	r3,0(r2)
  807478:	80c00117 	ldw	r3,4(r16)
  80747c:	b829883a 	mov	r20,r23
  807480:	382b883a 	mov	r21,r7
  807484:	10c00115 	stw	r3,4(r2)
  807488:	80c00217 	ldw	r3,8(r16)
  80748c:	2021883a 	mov	r16,r4
  807490:	10c00215 	stw	r3,8(r2)
  807494:	a9800117 	ldw	r6,4(r21)
  807498:	a445c83a 	sub	r2,r20,r17
  80749c:	10c00430 	cmpltui	r3,r2,16
  8074a0:	3180004c 	andi	r6,r6,1
  8074a4:	18004926 	beq	r3,zero,8075cc <_realloc_r+0x294>
  8074a8:	a18cb03a 	or	r6,r20,r6
  8074ac:	a9800115 	stw	r6,4(r21)
  8074b0:	b0800117 	ldw	r2,4(r22)
  8074b4:	10800054 	ori	r2,r2,1
  8074b8:	b0800115 	stw	r2,4(r22)
  8074bc:	9809883a 	mov	r4,r19
  8074c0:	080dd580 	call	80dd58 <__malloc_unlock>
  8074c4:	8025883a 	mov	r18,r16
  8074c8:	00000606 	br	8074e4 <_realloc_r+0x1ac>
  8074cc:	04400404 	movi	r17,16
  8074d0:	00c00404 	movi	r3,16
  8074d4:	8cbfb02e 	bgeu	r17,r18,807398 <_realloc_r+0x60>
  8074d8:	00800304 	movi	r2,12
  8074dc:	98800015 	stw	r2,0(r19)
  8074e0:	0025883a 	mov	r18,zero
  8074e4:	9005883a 	mov	r2,r18
  8074e8:	dfc00a17 	ldw	ra,40(sp)
  8074ec:	df000917 	ldw	fp,36(sp)
  8074f0:	ddc00817 	ldw	r23,32(sp)
  8074f4:	dd800717 	ldw	r22,28(sp)
  8074f8:	dd400617 	ldw	r21,24(sp)
  8074fc:	dd000517 	ldw	r20,20(sp)
  807500:	dcc00417 	ldw	r19,16(sp)
  807504:	dc800317 	ldw	r18,12(sp)
  807508:	dc400217 	ldw	r17,8(sp)
  80750c:	dc000117 	ldw	r16,4(sp)
  807510:	dec00b04 	addi	sp,sp,44
  807514:	f800283a 	ret
  807518:	1080004c 	andi	r2,r2,1
  80751c:	10006c26 	beq	r2,zero,8076d0 <_realloc_r+0x398>
  807520:	900b883a 	mov	r5,r18
  807524:	9809883a 	mov	r4,r19
  807528:	080557c0 	call	80557c <_malloc_r>
  80752c:	1025883a 	mov	r18,r2
  807530:	10001626 	beq	r2,zero,80758c <_realloc_r+0x254>
  807534:	80bfff17 	ldw	r2,-4(r16)
  807538:	013fff84 	movi	r4,-2
  80753c:	90fffe04 	addi	r3,r18,-8
  807540:	1104703a 	and	r2,r2,r4
  807544:	a885883a 	add	r2,r21,r2
  807548:	10c05b26 	beq	r2,r3,8076b8 <_realloc_r+0x380>
  80754c:	a1bfff04 	addi	r6,r20,-4
  807550:	30800968 	cmpgeui	r2,r6,37
  807554:	10006a1e 	bne	r2,zero,807700 <_realloc_r+0x3c8>
  807558:	30800530 	cmpltui	r2,r6,20
  80755c:	81000017 	ldw	r4,0(r16)
  807560:	10003726 	beq	r2,zero,807640 <_realloc_r+0x308>
  807564:	9005883a 	mov	r2,r18
  807568:	8007883a 	mov	r3,r16
  80756c:	11000015 	stw	r4,0(r2)
  807570:	19000117 	ldw	r4,4(r3)
  807574:	11000115 	stw	r4,4(r2)
  807578:	18c00217 	ldw	r3,8(r3)
  80757c:	10c00215 	stw	r3,8(r2)
  807580:	800b883a 	mov	r5,r16
  807584:	9809883a 	mov	r4,r19
  807588:	0804a100 	call	804a10 <_free_r>
  80758c:	9809883a 	mov	r4,r19
  807590:	080dd580 	call	80dd58 <__malloc_unlock>
  807594:	003fd306 	br	8074e4 <_realloc_r+0x1ac>
  807598:	300b883a 	mov	r5,r6
  80759c:	dfc00a17 	ldw	ra,40(sp)
  8075a0:	df000917 	ldw	fp,36(sp)
  8075a4:	ddc00817 	ldw	r23,32(sp)
  8075a8:	dd800717 	ldw	r22,28(sp)
  8075ac:	dd400617 	ldw	r21,24(sp)
  8075b0:	dd000517 	ldw	r20,20(sp)
  8075b4:	dcc00417 	ldw	r19,16(sp)
  8075b8:	dc800317 	ldw	r18,12(sp)
  8075bc:	dc400217 	ldw	r17,8(sp)
  8075c0:	dc000117 	ldw	r16,4(sp)
  8075c4:	dec00b04 	addi	sp,sp,44
  8075c8:	080557c1 	jmpi	80557c <_malloc_r>
  8075cc:	344cb03a 	or	r6,r6,r17
  8075d0:	a9800115 	stw	r6,4(r21)
  8075d4:	ac4b883a 	add	r5,r21,r17
  8075d8:	10800054 	ori	r2,r2,1
  8075dc:	28800115 	stw	r2,4(r5)
  8075e0:	b0800117 	ldw	r2,4(r22)
  8075e4:	29400204 	addi	r5,r5,8
  8075e8:	9809883a 	mov	r4,r19
  8075ec:	10800054 	ori	r2,r2,1
  8075f0:	b0800115 	stw	r2,4(r22)
  8075f4:	0804a100 	call	804a10 <_free_r>
  8075f8:	003fb006 	br	8074bc <_realloc_r+0x184>
  8075fc:	2148703a 	and	r4,r4,r5
  807600:	a10b883a 	add	r5,r20,r4
  807604:	89800404 	addi	r6,r17,16
  807608:	29bf7716 	blt	r5,r6,8073e8 <_realloc_r+0xb0>
  80760c:	ac6b883a 	add	r21,r21,r17
  807610:	2c45c83a 	sub	r2,r5,r17
  807614:	e5400215 	stw	r21,8(fp)
  807618:	10800054 	ori	r2,r2,1
  80761c:	a8800115 	stw	r2,4(r21)
  807620:	80bfff17 	ldw	r2,-4(r16)
  807624:	9809883a 	mov	r4,r19
  807628:	8025883a 	mov	r18,r16
  80762c:	1080004c 	andi	r2,r2,1
  807630:	1462b03a 	or	r17,r2,r17
  807634:	847fff15 	stw	r17,-4(r16)
  807638:	080dd580 	call	80dd58 <__malloc_unlock>
  80763c:	003fa906 	br	8074e4 <_realloc_r+0x1ac>
  807640:	91000015 	stw	r4,0(r18)
  807644:	80c00117 	ldw	r3,4(r16)
  807648:	30800728 	cmpgeui	r2,r6,28
  80764c:	90c00115 	stw	r3,4(r18)
  807650:	1000551e 	bne	r2,zero,8077a8 <_realloc_r+0x470>
  807654:	81000217 	ldw	r4,8(r16)
  807658:	80c00204 	addi	r3,r16,8
  80765c:	90800204 	addi	r2,r18,8
  807660:	003fc206 	br	80756c <_realloc_r+0x234>
  807664:	b0800317 	ldw	r2,12(r22)
  807668:	b0c00217 	ldw	r3,8(r22)
  80766c:	a1bfff04 	addi	r6,r20,-4
  807670:	31400968 	cmpgeui	r5,r6,37
  807674:	18800315 	stw	r2,12(r3)
  807678:	10c00215 	stw	r3,8(r2)
  80767c:	38c00217 	ldw	r3,8(r7)
  807680:	38800317 	ldw	r2,12(r7)
  807684:	39000204 	addi	r4,r7,8
  807688:	3ded883a 	add	r22,r7,r23
  80768c:	18800315 	stw	r2,12(r3)
  807690:	10c00215 	stw	r3,8(r2)
  807694:	283f6c26 	beq	r5,zero,807448 <_realloc_r+0x110>
  807698:	800b883a 	mov	r5,r16
  80769c:	d9c00015 	stw	r7,0(sp)
  8076a0:	0805f2c0 	call	805f2c <memmove>
  8076a4:	d9c00017 	ldw	r7,0(sp)
  8076a8:	1021883a 	mov	r16,r2
  8076ac:	b829883a 	mov	r20,r23
  8076b0:	382b883a 	mov	r21,r7
  8076b4:	003f7706 	br	807494 <_realloc_r+0x15c>
  8076b8:	90bfff17 	ldw	r2,-4(r18)
  8076bc:	00ffff04 	movi	r3,-4
  8076c0:	10c4703a 	and	r2,r2,r3
  8076c4:	a0a9883a 	add	r20,r20,r2
  8076c8:	ad2d883a 	add	r22,r21,r20
  8076cc:	003f7106 	br	807494 <_realloc_r+0x15c>
  8076d0:	81fffe17 	ldw	r7,-8(r16)
  8076d4:	a9cfc83a 	sub	r7,r21,r7
  8076d8:	38800117 	ldw	r2,4(r7)
  8076dc:	114a703a 	and	r5,r2,r5
  8076e0:	003f4d06 	br	807418 <_realloc_r+0xe0>
  8076e4:	b0800317 	ldw	r2,12(r22)
  8076e8:	b0c00217 	ldw	r3,8(r22)
  8076ec:	2829883a 	mov	r20,r5
  8076f0:	a96d883a 	add	r22,r21,r5
  8076f4:	18800315 	stw	r2,12(r3)
  8076f8:	10c00215 	stw	r3,8(r2)
  8076fc:	003f6506 	br	807494 <_realloc_r+0x15c>
  807700:	800b883a 	mov	r5,r16
  807704:	9009883a 	mov	r4,r18
  807708:	0805f2c0 	call	805f2c <memmove>
  80770c:	003f9c06 	br	807580 <_realloc_r+0x248>
  807710:	88800404 	addi	r2,r17,16
  807714:	b8bf4016 	blt	r23,r2,807418 <_realloc_r+0xe0>
  807718:	38800317 	ldw	r2,12(r7)
  80771c:	38c00217 	ldw	r3,8(r7)
  807720:	a1bfff04 	addi	r6,r20,-4
  807724:	31000968 	cmpgeui	r4,r6,37
  807728:	18800315 	stw	r2,12(r3)
  80772c:	10c00215 	stw	r3,8(r2)
  807730:	3c800204 	addi	r18,r7,8
  807734:	20003b1e 	bne	r4,zero,807824 <_realloc_r+0x4ec>
  807738:	30800530 	cmpltui	r2,r6,20
  80773c:	80c00017 	ldw	r3,0(r16)
  807740:	1000361e 	bne	r2,zero,80781c <_realloc_r+0x4e4>
  807744:	38c00215 	stw	r3,8(r7)
  807748:	80c00117 	ldw	r3,4(r16)
  80774c:	30800728 	cmpgeui	r2,r6,28
  807750:	38c00315 	stw	r3,12(r7)
  807754:	1000401e 	bne	r2,zero,807858 <_realloc_r+0x520>
  807758:	80c00217 	ldw	r3,8(r16)
  80775c:	38800404 	addi	r2,r7,16
  807760:	84000204 	addi	r16,r16,8
  807764:	10c00015 	stw	r3,0(r2)
  807768:	80c00117 	ldw	r3,4(r16)
  80776c:	10c00115 	stw	r3,4(r2)
  807770:	80c00217 	ldw	r3,8(r16)
  807774:	10c00215 	stw	r3,8(r2)
  807778:	3c47883a 	add	r3,r7,r17
  80777c:	bc45c83a 	sub	r2,r23,r17
  807780:	e0c00215 	stw	r3,8(fp)
  807784:	10800054 	ori	r2,r2,1
  807788:	18800115 	stw	r2,4(r3)
  80778c:	38800117 	ldw	r2,4(r7)
  807790:	9809883a 	mov	r4,r19
  807794:	1080004c 	andi	r2,r2,1
  807798:	1462b03a 	or	r17,r2,r17
  80779c:	3c400115 	stw	r17,4(r7)
  8077a0:	080dd580 	call	80dd58 <__malloc_unlock>
  8077a4:	003f4f06 	br	8074e4 <_realloc_r+0x1ac>
  8077a8:	80800217 	ldw	r2,8(r16)
  8077ac:	31800920 	cmpeqi	r6,r6,36
  8077b0:	90800215 	stw	r2,8(r18)
  8077b4:	80800317 	ldw	r2,12(r16)
  8077b8:	90800315 	stw	r2,12(r18)
  8077bc:	81000417 	ldw	r4,16(r16)
  8077c0:	30000f1e 	bne	r6,zero,807800 <_realloc_r+0x4c8>
  8077c4:	80c00404 	addi	r3,r16,16
  8077c8:	90800404 	addi	r2,r18,16
  8077cc:	003f6706 	br	80756c <_realloc_r+0x234>
  8077d0:	2005883a 	mov	r2,r4
  8077d4:	003f2706 	br	807474 <_realloc_r+0x13c>
  8077d8:	80800217 	ldw	r2,8(r16)
  8077dc:	31800920 	cmpeqi	r6,r6,36
  8077e0:	38800415 	stw	r2,16(r7)
  8077e4:	80800317 	ldw	r2,12(r16)
  8077e8:	38800515 	stw	r2,20(r7)
  8077ec:	80c00417 	ldw	r3,16(r16)
  8077f0:	3000121e 	bne	r6,zero,80783c <_realloc_r+0x504>
  8077f4:	38800604 	addi	r2,r7,24
  8077f8:	84000404 	addi	r16,r16,16
  8077fc:	003f1d06 	br	807474 <_realloc_r+0x13c>
  807800:	91000415 	stw	r4,16(r18)
  807804:	81000517 	ldw	r4,20(r16)
  807808:	80c00604 	addi	r3,r16,24
  80780c:	90800604 	addi	r2,r18,24
  807810:	91000515 	stw	r4,20(r18)
  807814:	81000617 	ldw	r4,24(r16)
  807818:	003f5406 	br	80756c <_realloc_r+0x234>
  80781c:	9005883a 	mov	r2,r18
  807820:	003fd006 	br	807764 <_realloc_r+0x42c>
  807824:	800b883a 	mov	r5,r16
  807828:	9009883a 	mov	r4,r18
  80782c:	d9c00015 	stw	r7,0(sp)
  807830:	0805f2c0 	call	805f2c <memmove>
  807834:	d9c00017 	ldw	r7,0(sp)
  807838:	003fcf06 	br	807778 <_realloc_r+0x440>
  80783c:	84000604 	addi	r16,r16,24
  807840:	38c00615 	stw	r3,24(r7)
  807844:	80ffff17 	ldw	r3,-4(r16)
  807848:	38800804 	addi	r2,r7,32
  80784c:	38c00715 	stw	r3,28(r7)
  807850:	80c00017 	ldw	r3,0(r16)
  807854:	003f0706 	br	807474 <_realloc_r+0x13c>
  807858:	80800217 	ldw	r2,8(r16)
  80785c:	31800920 	cmpeqi	r6,r6,36
  807860:	38800415 	stw	r2,16(r7)
  807864:	80800317 	ldw	r2,12(r16)
  807868:	38800515 	stw	r2,20(r7)
  80786c:	80c00417 	ldw	r3,16(r16)
  807870:	3000031e 	bne	r6,zero,807880 <_realloc_r+0x548>
  807874:	38800604 	addi	r2,r7,24
  807878:	84000404 	addi	r16,r16,16
  80787c:	003fb906 	br	807764 <_realloc_r+0x42c>
  807880:	84000604 	addi	r16,r16,24
  807884:	38c00615 	stw	r3,24(r7)
  807888:	80ffff17 	ldw	r3,-4(r16)
  80788c:	38800804 	addi	r2,r7,32
  807890:	38c00715 	stw	r3,28(r7)
  807894:	80c00017 	ldw	r3,0(r16)
  807898:	003fb206 	br	807764 <_realloc_r+0x42c>

0080789c <_sbrk_r>:
  80789c:	defffe04 	addi	sp,sp,-8
  8078a0:	dc000015 	stw	r16,0(sp)
  8078a4:	00802074 	movhi	r2,129
  8078a8:	2021883a 	mov	r16,r4
  8078ac:	2809883a 	mov	r4,r5
  8078b0:	dfc00115 	stw	ra,4(sp)
  8078b4:	100f4a15 	stw	zero,15656(r2)
  8078b8:	080df300 	call	80df30 <sbrk>
  8078bc:	10ffffd8 	cmpnei	r3,r2,-1
  8078c0:	18000426 	beq	r3,zero,8078d4 <_sbrk_r+0x38>
  8078c4:	dfc00117 	ldw	ra,4(sp)
  8078c8:	dc000017 	ldw	r16,0(sp)
  8078cc:	dec00204 	addi	sp,sp,8
  8078d0:	f800283a 	ret
  8078d4:	00c02074 	movhi	r3,129
  8078d8:	18cf4a17 	ldw	r3,15656(r3)
  8078dc:	183ff926 	beq	r3,zero,8078c4 <_sbrk_r+0x28>
  8078e0:	80c00015 	stw	r3,0(r16)
  8078e4:	dfc00117 	ldw	ra,4(sp)
  8078e8:	dc000017 	ldw	r16,0(sp)
  8078ec:	dec00204 	addi	sp,sp,8
  8078f0:	f800283a 	ret

008078f4 <__sread>:
  8078f4:	defffe04 	addi	sp,sp,-8
  8078f8:	dc000015 	stw	r16,0(sp)
  8078fc:	2821883a 	mov	r16,r5
  807900:	2940038f 	ldh	r5,14(r5)
  807904:	dfc00115 	stw	ra,4(sp)
  807908:	08097b00 	call	8097b0 <_read_r>
  80790c:	10000716 	blt	r2,zero,80792c <__sread+0x38>
  807910:	80c01417 	ldw	r3,80(r16)
  807914:	1887883a 	add	r3,r3,r2
  807918:	80c01415 	stw	r3,80(r16)
  80791c:	dfc00117 	ldw	ra,4(sp)
  807920:	dc000017 	ldw	r16,0(sp)
  807924:	dec00204 	addi	sp,sp,8
  807928:	f800283a 	ret
  80792c:	80c0030b 	ldhu	r3,12(r16)
  807930:	18fbffcc 	andi	r3,r3,61439
  807934:	80c0030d 	sth	r3,12(r16)
  807938:	dfc00117 	ldw	ra,4(sp)
  80793c:	dc000017 	ldw	r16,0(sp)
  807940:	dec00204 	addi	sp,sp,8
  807944:	f800283a 	ret

00807948 <__seofread>:
  807948:	0005883a 	mov	r2,zero
  80794c:	f800283a 	ret

00807950 <__swrite>:
  807950:	2880030b 	ldhu	r2,12(r5)
  807954:	defffb04 	addi	sp,sp,-20
  807958:	dcc00315 	stw	r19,12(sp)
  80795c:	dc800215 	stw	r18,8(sp)
  807960:	dc400115 	stw	r17,4(sp)
  807964:	dc000015 	stw	r16,0(sp)
  807968:	dfc00415 	stw	ra,16(sp)
  80796c:	10c0400c 	andi	r3,r2,256
  807970:	2821883a 	mov	r16,r5
  807974:	2023883a 	mov	r17,r4
  807978:	2940038f 	ldh	r5,14(r5)
  80797c:	3025883a 	mov	r18,r6
  807980:	3827883a 	mov	r19,r7
  807984:	18000c1e 	bne	r3,zero,8079b8 <__swrite+0x68>
  807988:	10bbffcc 	andi	r2,r2,61439
  80798c:	980f883a 	mov	r7,r19
  807990:	900d883a 	mov	r6,r18
  807994:	8809883a 	mov	r4,r17
  807998:	8080030d 	sth	r2,12(r16)
  80799c:	dfc00417 	ldw	ra,16(sp)
  8079a0:	dcc00317 	ldw	r19,12(sp)
  8079a4:	dc800217 	ldw	r18,8(sp)
  8079a8:	dc400117 	ldw	r17,4(sp)
  8079ac:	dc000017 	ldw	r16,0(sp)
  8079b0:	dec00504 	addi	sp,sp,20
  8079b4:	0808f601 	jmpi	808f60 <_write_r>
  8079b8:	01c00084 	movi	r7,2
  8079bc:	000d883a 	mov	r6,zero
  8079c0:	08096fc0 	call	8096fc <_lseek_r>
  8079c4:	8080030b 	ldhu	r2,12(r16)
  8079c8:	8140038f 	ldh	r5,14(r16)
  8079cc:	003fee06 	br	807988 <__swrite+0x38>

008079d0 <__sseek>:
  8079d0:	defffe04 	addi	sp,sp,-8
  8079d4:	dc000015 	stw	r16,0(sp)
  8079d8:	2821883a 	mov	r16,r5
  8079dc:	2940038f 	ldh	r5,14(r5)
  8079e0:	dfc00115 	stw	ra,4(sp)
  8079e4:	08096fc0 	call	8096fc <_lseek_r>
  8079e8:	10ffffd8 	cmpnei	r3,r2,-1
  8079ec:	18000826 	beq	r3,zero,807a10 <__sseek+0x40>
  8079f0:	80c0030b 	ldhu	r3,12(r16)
  8079f4:	80801415 	stw	r2,80(r16)
  8079f8:	18c40014 	ori	r3,r3,4096
  8079fc:	80c0030d 	sth	r3,12(r16)
  807a00:	dfc00117 	ldw	ra,4(sp)
  807a04:	dc000017 	ldw	r16,0(sp)
  807a08:	dec00204 	addi	sp,sp,8
  807a0c:	f800283a 	ret
  807a10:	80c0030b 	ldhu	r3,12(r16)
  807a14:	18fbffcc 	andi	r3,r3,61439
  807a18:	80c0030d 	sth	r3,12(r16)
  807a1c:	dfc00117 	ldw	ra,4(sp)
  807a20:	dc000017 	ldw	r16,0(sp)
  807a24:	dec00204 	addi	sp,sp,8
  807a28:	f800283a 	ret

00807a2c <__sclose>:
  807a2c:	2940038f 	ldh	r5,14(r5)
  807a30:	0808fc41 	jmpi	808fc4 <_close_r>

00807a34 <__sprint_r.part.0>:
  807a34:	28801917 	ldw	r2,100(r5)
  807a38:	defff604 	addi	sp,sp,-40
  807a3c:	dcc00315 	stw	r19,12(sp)
  807a40:	dfc00915 	stw	ra,36(sp)
  807a44:	df000815 	stw	fp,32(sp)
  807a48:	ddc00715 	stw	r23,28(sp)
  807a4c:	dd800615 	stw	r22,24(sp)
  807a50:	dd400515 	stw	r21,20(sp)
  807a54:	dd000415 	stw	r20,16(sp)
  807a58:	dc800215 	stw	r18,8(sp)
  807a5c:	dc400115 	stw	r17,4(sp)
  807a60:	dc000015 	stw	r16,0(sp)
  807a64:	1088000c 	andi	r2,r2,8192
  807a68:	3027883a 	mov	r19,r6
  807a6c:	10002c26 	beq	r2,zero,807b20 <__sprint_r.part.0+0xec>
  807a70:	30800217 	ldw	r2,8(r6)
  807a74:	35000017 	ldw	r20,0(r6)
  807a78:	2821883a 	mov	r16,r5
  807a7c:	2023883a 	mov	r17,r4
  807a80:	05bfff04 	movi	r22,-4
  807a84:	10002426 	beq	r2,zero,807b18 <__sprint_r.part.0+0xe4>
  807a88:	a5400117 	ldw	r21,4(r20)
  807a8c:	a5c00017 	ldw	r23,0(r20)
  807a90:	a824d0ba 	srli	r18,r21,2
  807a94:	90001b26 	beq	r18,zero,807b04 <__sprint_r.part.0+0xd0>
  807a98:	0039883a 	mov	fp,zero
  807a9c:	00000206 	br	807aa8 <__sprint_r.part.0+0x74>
  807aa0:	bdc00104 	addi	r23,r23,4
  807aa4:	97001626 	beq	r18,fp,807b00 <__sprint_r.part.0+0xcc>
  807aa8:	b9400017 	ldw	r5,0(r23)
  807aac:	800d883a 	mov	r6,r16
  807ab0:	8809883a 	mov	r4,r17
  807ab4:	08094b40 	call	8094b4 <_fputwc_r>
  807ab8:	10bfffe0 	cmpeqi	r2,r2,-1
  807abc:	e7000044 	addi	fp,fp,1
  807ac0:	103ff726 	beq	r2,zero,807aa0 <__sprint_r.part.0+0x6c>
  807ac4:	00bfffc4 	movi	r2,-1
  807ac8:	98000215 	stw	zero,8(r19)
  807acc:	98000115 	stw	zero,4(r19)
  807ad0:	dfc00917 	ldw	ra,36(sp)
  807ad4:	df000817 	ldw	fp,32(sp)
  807ad8:	ddc00717 	ldw	r23,28(sp)
  807adc:	dd800617 	ldw	r22,24(sp)
  807ae0:	dd400517 	ldw	r21,20(sp)
  807ae4:	dd000417 	ldw	r20,16(sp)
  807ae8:	dcc00317 	ldw	r19,12(sp)
  807aec:	dc800217 	ldw	r18,8(sp)
  807af0:	dc400117 	ldw	r17,4(sp)
  807af4:	dc000017 	ldw	r16,0(sp)
  807af8:	dec00a04 	addi	sp,sp,40
  807afc:	f800283a 	ret
  807b00:	98800217 	ldw	r2,8(r19)
  807b04:	adaa703a 	and	r21,r21,r22
  807b08:	1545c83a 	sub	r2,r2,r21
  807b0c:	98800215 	stw	r2,8(r19)
  807b10:	a5000204 	addi	r20,r20,8
  807b14:	103fdc1e 	bne	r2,zero,807a88 <__sprint_r.part.0+0x54>
  807b18:	0005883a 	mov	r2,zero
  807b1c:	003fea06 	br	807ac8 <__sprint_r.part.0+0x94>
  807b20:	0804d0c0 	call	804d0c <__sfvwrite_r>
  807b24:	003fe806 	br	807ac8 <__sprint_r.part.0+0x94>

00807b28 <__sprint_r>:
  807b28:	30c00217 	ldw	r3,8(r6)
  807b2c:	18000126 	beq	r3,zero,807b34 <__sprint_r+0xc>
  807b30:	0807a341 	jmpi	807a34 <__sprint_r.part.0>
  807b34:	30000115 	stw	zero,4(r6)
  807b38:	0005883a 	mov	r2,zero
  807b3c:	f800283a 	ret

00807b40 <___vfiprintf_internal_r>:
  807b40:	deffcf04 	addi	sp,sp,-196
  807b44:	dd802d15 	stw	r22,180(sp)
  807b48:	dd402c15 	stw	r21,176(sp)
  807b4c:	dd002b15 	stw	r20,172(sp)
  807b50:	dfc03015 	stw	ra,192(sp)
  807b54:	df002f15 	stw	fp,188(sp)
  807b58:	ddc02e15 	stw	r23,184(sp)
  807b5c:	dcc02a15 	stw	r19,168(sp)
  807b60:	dc802915 	stw	r18,164(sp)
  807b64:	dc402815 	stw	r17,160(sp)
  807b68:	dc002715 	stw	r16,156(sp)
  807b6c:	d9c00415 	stw	r7,16(sp)
  807b70:	202d883a 	mov	r22,r4
  807b74:	282b883a 	mov	r21,r5
  807b78:	3029883a 	mov	r20,r6
  807b7c:	20000226 	beq	r4,zero,807b88 <___vfiprintf_internal_r+0x48>
  807b80:	20800e17 	ldw	r2,56(r4)
  807b84:	1001bd26 	beq	r2,zero,80827c <___vfiprintf_internal_r+0x73c>
  807b88:	a880030b 	ldhu	r2,12(r21)
  807b8c:	10c8000c 	andi	r3,r2,8192
  807b90:	1800061e 	bne	r3,zero,807bac <___vfiprintf_internal_r+0x6c>
  807b94:	a8c01917 	ldw	r3,100(r21)
  807b98:	0137ffc4 	movi	r4,-8193
  807b9c:	10880014 	ori	r2,r2,8192
  807ba0:	1906703a 	and	r3,r3,r4
  807ba4:	a880030d 	sth	r2,12(r21)
  807ba8:	a8c01915 	stw	r3,100(r21)
  807bac:	10c0020c 	andi	r3,r2,8
  807bb0:	18010826 	beq	r3,zero,807fd4 <___vfiprintf_internal_r+0x494>
  807bb4:	a8c00417 	ldw	r3,16(r21)
  807bb8:	18010626 	beq	r3,zero,807fd4 <___vfiprintf_internal_r+0x494>
  807bbc:	1080068c 	andi	r2,r2,26
  807bc0:	10800298 	cmpnei	r2,r2,10
  807bc4:	10010b26 	beq	r2,zero,807ff4 <___vfiprintf_internal_r+0x4b4>
  807bc8:	dc801704 	addi	r18,sp,92
  807bcc:	dc800a15 	stw	r18,40(sp)
  807bd0:	d8000c15 	stw	zero,48(sp)
  807bd4:	d8000b15 	stw	zero,44(sp)
  807bd8:	9021883a 	mov	r16,r18
  807bdc:	d8000515 	stw	zero,20(sp)
  807be0:	d8000115 	stw	zero,4(sp)
  807be4:	a0800007 	ldb	r2,0(r20)
  807be8:	1000e826 	beq	r2,zero,807f8c <___vfiprintf_internal_r+0x44c>
  807bec:	a023883a 	mov	r17,r20
  807bf0:	00000306 	br	807c00 <___vfiprintf_internal_r+0xc0>
  807bf4:	88800047 	ldb	r2,1(r17)
  807bf8:	8c400044 	addi	r17,r17,1
  807bfc:	10013326 	beq	r2,zero,8080cc <___vfiprintf_internal_r+0x58c>
  807c00:	10800958 	cmpnei	r2,r2,37
  807c04:	103ffb1e 	bne	r2,zero,807bf4 <___vfiprintf_internal_r+0xb4>
  807c08:	8d27c83a 	sub	r19,r17,r20
  807c0c:	8d01311e 	bne	r17,r20,8080d4 <___vfiprintf_internal_r+0x594>
  807c10:	88800003 	ldbu	r2,0(r17)
  807c14:	10803fcc 	andi	r2,r2,255
  807c18:	1080201c 	xori	r2,r2,128
  807c1c:	10bfe004 	addi	r2,r2,-128
  807c20:	1000da26 	beq	r2,zero,807f8c <___vfiprintf_internal_r+0x44c>
  807c24:	88800047 	ldb	r2,1(r17)
  807c28:	8d000044 	addi	r20,r17,1
  807c2c:	d8000945 	stb	zero,37(sp)
  807c30:	000b883a 	mov	r5,zero
  807c34:	000d883a 	mov	r6,zero
  807c38:	023fffc4 	movi	r8,-1
  807c3c:	0023883a 	mov	r17,zero
  807c40:	001b883a 	mov	r13,zero
  807c44:	a5000044 	addi	r20,r20,1
  807c48:	10fff804 	addi	r3,r2,-32
  807c4c:	19001668 	cmpgeui	r4,r3,89
  807c50:	20006c1e 	bne	r4,zero,807e04 <___vfiprintf_internal_r+0x2c4>
  807c54:	180690ba 	slli	r3,r3,2
  807c58:	01002034 	movhi	r4,128
  807c5c:	1909883a 	add	r4,r3,r4
  807c60:	20df1a17 	ldw	r3,31848(r4)
  807c64:	1800683a 	jmp	r3
  807c68:	008085a4 	muli	r2,zero,534
  807c6c:	00807e04 	movi	r2,504
  807c70:	00807e04 	movi	r2,504
  807c74:	00808598 	cmpnei	r2,zero,534
  807c78:	00807e04 	movi	r2,504
  807c7c:	00807e04 	movi	r2,504
  807c80:	00807e04 	movi	r2,504
  807c84:	00807e04 	movi	r2,504
  807c88:	00807e04 	movi	r2,504
  807c8c:	00807e04 	movi	r2,504
  807c90:	00808570 	cmpltui	r2,zero,533
  807c94:	00808560 	cmpeqi	r2,zero,533
  807c98:	00807e04 	movi	r2,504
  807c9c:	00808548 	cmpgei	r2,zero,533
  807ca0:	008084fc 	xorhi	r2,zero,531
  807ca4:	00807e04 	movi	r2,504
  807ca8:	008084f0 	cmpltui	r2,zero,531
  807cac:	00807dcc 	andi	r2,zero,503
  807cb0:	00807dcc 	andi	r2,zero,503
  807cb4:	00807dcc 	andi	r2,zero,503
  807cb8:	00807dcc 	andi	r2,zero,503
  807cbc:	00807dcc 	andi	r2,zero,503
  807cc0:	00807dcc 	andi	r2,zero,503
  807cc4:	00807dcc 	andi	r2,zero,503
  807cc8:	00807dcc 	andi	r2,zero,503
  807ccc:	00807dcc 	andi	r2,zero,503
  807cd0:	00807e04 	movi	r2,504
  807cd4:	00807e04 	movi	r2,504
  807cd8:	00807e04 	movi	r2,504
  807cdc:	00807e04 	movi	r2,504
  807ce0:	00807e04 	movi	r2,504
  807ce4:	00807e04 	movi	r2,504
  807ce8:	00807e04 	movi	r2,504
  807cec:	00807e04 	movi	r2,504
  807cf0:	00807e04 	movi	r2,504
  807cf4:	00807e04 	movi	r2,504
  807cf8:	008083ec 	andhi	r2,zero,527
  807cfc:	00807e04 	movi	r2,504
  807d00:	00807e04 	movi	r2,504
  807d04:	00807e04 	movi	r2,504
  807d08:	00807e04 	movi	r2,504
  807d0c:	00807e04 	movi	r2,504
  807d10:	00807e04 	movi	r2,504
  807d14:	00807e04 	movi	r2,504
  807d18:	00807e04 	movi	r2,504
  807d1c:	00807e04 	movi	r2,504
  807d20:	00807e04 	movi	r2,504
  807d24:	00808064 	muli	r2,zero,513
  807d28:	00807e04 	movi	r2,504
  807d2c:	00807e04 	movi	r2,504
  807d30:	00807e04 	movi	r2,504
  807d34:	00807e04 	movi	r2,504
  807d38:	00807e04 	movi	r2,504
  807d3c:	0080803c 	xorhi	r2,zero,512
  807d40:	00807e04 	movi	r2,504
  807d44:	00807e04 	movi	r2,504
  807d48:	008085f8 	rdprs	r2,zero,535
  807d4c:	00807e04 	movi	r2,504
  807d50:	00807e04 	movi	r2,504
  807d54:	00807e04 	movi	r2,504
  807d58:	00807e04 	movi	r2,504
  807d5c:	00807e04 	movi	r2,504
  807d60:	00807e04 	movi	r2,504
  807d64:	00807e04 	movi	r2,504
  807d68:	00807e04 	movi	r2,504
  807d6c:	00807e04 	movi	r2,504
  807d70:	00807e04 	movi	r2,504
  807d74:	008085d0 	cmplti	r2,zero,535
  807d78:	00808284 	movi	r2,522
  807d7c:	00807e04 	movi	r2,504
  807d80:	00807e04 	movi	r2,504
  807d84:	00807e04 	movi	r2,504
  807d88:	008082f8 	rdprs	r2,zero,523
  807d8c:	00808284 	movi	r2,522
  807d90:	00807e04 	movi	r2,504
  807d94:	00807e04 	movi	r2,504
  807d98:	0080867c 	xorhi	r2,zero,537
  807d9c:	00807e04 	movi	r2,504
  807da0:	00808640 	call	80864 <__reset-0x77f79c>
  807da4:	00808068 	cmpgeui	r2,zero,513
  807da8:	008083b0 	cmpltui	r2,zero,526
  807dac:	008083a4 	muli	r2,zero,526
  807db0:	00807e04 	movi	r2,504
  807db4:	0080834c 	andi	r2,zero,525
  807db8:	00807e04 	movi	r2,504
  807dbc:	00808040 	call	80804 <__reset-0x77f7fc>
  807dc0:	00807e04 	movi	r2,504
  807dc4:	00807e04 	movi	r2,504
  807dc8:	00808304 	movi	r2,524
  807dcc:	0023883a 	mov	r17,zero
  807dd0:	113ff404 	addi	r4,r2,-48
  807dd4:	880690ba 	slli	r3,r17,2
  807dd8:	a0800007 	ldb	r2,0(r20)
  807ddc:	a5000044 	addi	r20,r20,1
  807de0:	1c63883a 	add	r17,r3,r17
  807de4:	8c63883a 	add	r17,r17,r17
  807de8:	2463883a 	add	r17,r4,r17
  807dec:	113ff404 	addi	r4,r2,-48
  807df0:	20c002b0 	cmpltui	r3,r4,10
  807df4:	183ff71e 	bne	r3,zero,807dd4 <___vfiprintf_internal_r+0x294>
  807df8:	10fff804 	addi	r3,r2,-32
  807dfc:	19001668 	cmpgeui	r4,r3,89
  807e00:	203f9426 	beq	r4,zero,807c54 <___vfiprintf_internal_r+0x114>
  807e04:	29403fcc 	andi	r5,r5,255
  807e08:	2803ed1e 	bne	r5,zero,808dc0 <___vfiprintf_internal_r+0x1280>
  807e0c:	10005f26 	beq	r2,zero,807f8c <___vfiprintf_internal_r+0x44c>
  807e10:	d8800d05 	stb	r2,52(sp)
  807e14:	d8000945 	stb	zero,37(sp)
  807e18:	05c00044 	movi	r23,1
  807e1c:	07000044 	movi	fp,1
  807e20:	dcc00d04 	addi	r19,sp,52
  807e24:	db400015 	stw	r13,0(sp)
  807e28:	0011883a 	mov	r8,zero
  807e2c:	d8800017 	ldw	r2,0(sp)
  807e30:	1380008c 	andi	r14,r2,2
  807e34:	70000126 	beq	r14,zero,807e3c <___vfiprintf_internal_r+0x2fc>
  807e38:	bdc00084 	addi	r23,r23,2
  807e3c:	d8800017 	ldw	r2,0(sp)
  807e40:	d9000b17 	ldw	r4,44(sp)
  807e44:	1340210c 	andi	r13,r2,132
  807e48:	21800044 	addi	r6,r4,1
  807e4c:	d8800c17 	ldw	r2,48(sp)
  807e50:	300b883a 	mov	r5,r6
  807e54:	6800021e 	bne	r13,zero,807e60 <___vfiprintf_internal_r+0x320>
  807e58:	8dc7c83a 	sub	r3,r17,r23
  807e5c:	00c2e216 	blt	zero,r3,8089e8 <___vfiprintf_internal_r+0xea8>
  807e60:	d8c00947 	ldb	r3,37(sp)
  807e64:	81800204 	addi	r6,r16,8
  807e68:	18000d26 	beq	r3,zero,807ea0 <___vfiprintf_internal_r+0x360>
  807e6c:	d8c00944 	addi	r3,sp,37
  807e70:	10800044 	addi	r2,r2,1
  807e74:	80c00015 	stw	r3,0(r16)
  807e78:	00c00044 	movi	r3,1
  807e7c:	80c00115 	stw	r3,4(r16)
  807e80:	d8800c15 	stw	r2,48(sp)
  807e84:	d9400b15 	stw	r5,44(sp)
  807e88:	28c00208 	cmpgei	r3,r5,8
  807e8c:	18029a1e 	bne	r3,zero,8088f8 <___vfiprintf_internal_r+0xdb8>
  807e90:	2809883a 	mov	r4,r5
  807e94:	3021883a 	mov	r16,r6
  807e98:	29400044 	addi	r5,r5,1
  807e9c:	31800204 	addi	r6,r6,8
  807ea0:	70001826 	beq	r14,zero,807f04 <___vfiprintf_internal_r+0x3c4>
  807ea4:	d8c00984 	addi	r3,sp,38
  807ea8:	10800084 	addi	r2,r2,2
  807eac:	80c00015 	stw	r3,0(r16)
  807eb0:	00c00084 	movi	r3,2
  807eb4:	80c00115 	stw	r3,4(r16)
  807eb8:	d8800c15 	stw	r2,48(sp)
  807ebc:	d9400b15 	stw	r5,44(sp)
  807ec0:	28c00208 	cmpgei	r3,r5,8
  807ec4:	1802a426 	beq	r3,zero,808958 <___vfiprintf_internal_r+0xe18>
  807ec8:	10032226 	beq	r2,zero,808b54 <___vfiprintf_internal_r+0x1014>
  807ecc:	d9800a04 	addi	r6,sp,40
  807ed0:	a80b883a 	mov	r5,r21
  807ed4:	b009883a 	mov	r4,r22
  807ed8:	da000315 	stw	r8,12(sp)
  807edc:	db400215 	stw	r13,8(sp)
  807ee0:	0807a340 	call	807a34 <__sprint_r.part.0>
  807ee4:	10002b1e 	bne	r2,zero,807f94 <___vfiprintf_internal_r+0x454>
  807ee8:	d9000b17 	ldw	r4,44(sp)
  807eec:	d8800c17 	ldw	r2,48(sp)
  807ef0:	da000317 	ldw	r8,12(sp)
  807ef4:	db400217 	ldw	r13,8(sp)
  807ef8:	d9801904 	addi	r6,sp,100
  807efc:	21400044 	addi	r5,r4,1
  807f00:	9021883a 	mov	r16,r18
  807f04:	6b402018 	cmpnei	r13,r13,128
  807f08:	6801e526 	beq	r13,zero,8086a0 <___vfiprintf_internal_r+0xb60>
  807f0c:	4711c83a 	sub	r8,r8,fp
  807f10:	02022416 	blt	zero,r8,8087a4 <___vfiprintf_internal_r+0xc64>
  807f14:	e085883a 	add	r2,fp,r2
  807f18:	d9400b15 	stw	r5,44(sp)
  807f1c:	84c00015 	stw	r19,0(r16)
  807f20:	87000115 	stw	fp,4(r16)
  807f24:	d8800c15 	stw	r2,48(sp)
  807f28:	29400210 	cmplti	r5,r5,8
  807f2c:	2800081e 	bne	r5,zero,807f50 <___vfiprintf_internal_r+0x410>
  807f30:	10009826 	beq	r2,zero,808194 <___vfiprintf_internal_r+0x654>
  807f34:	d9800a04 	addi	r6,sp,40
  807f38:	a80b883a 	mov	r5,r21
  807f3c:	b009883a 	mov	r4,r22
  807f40:	0807a340 	call	807a34 <__sprint_r.part.0>
  807f44:	1000131e 	bne	r2,zero,807f94 <___vfiprintf_internal_r+0x454>
  807f48:	d8800c17 	ldw	r2,48(sp)
  807f4c:	900d883a 	mov	r6,r18
  807f50:	d8c00017 	ldw	r3,0(sp)
  807f54:	1cc0010c 	andi	r19,r3,4
  807f58:	98000226 	beq	r19,zero,807f64 <___vfiprintf_internal_r+0x424>
  807f5c:	8de1c83a 	sub	r16,r17,r23
  807f60:	04009316 	blt	zero,r16,8081b0 <___vfiprintf_internal_r+0x670>
  807f64:	8dc0010e 	bge	r17,r23,807f6c <___vfiprintf_internal_r+0x42c>
  807f68:	b823883a 	mov	r17,r23
  807f6c:	d8c00117 	ldw	r3,4(sp)
  807f70:	1c47883a 	add	r3,r3,r17
  807f74:	d8c00115 	stw	r3,4(sp)
  807f78:	1002551e 	bne	r2,zero,8088d0 <___vfiprintf_internal_r+0xd90>
  807f7c:	a0800007 	ldb	r2,0(r20)
  807f80:	d8000b15 	stw	zero,44(sp)
  807f84:	9021883a 	mov	r16,r18
  807f88:	103f181e 	bne	r2,zero,807bec <___vfiprintf_internal_r+0xac>
  807f8c:	d8800c17 	ldw	r2,48(sp)
  807f90:	10038d1e 	bne	r2,zero,808dc8 <___vfiprintf_internal_r+0x1288>
  807f94:	a880030b 	ldhu	r2,12(r21)
  807f98:	1080100c 	andi	r2,r2,64
  807f9c:	1003a51e 	bne	r2,zero,808e34 <___vfiprintf_internal_r+0x12f4>
  807fa0:	d8800117 	ldw	r2,4(sp)
  807fa4:	dfc03017 	ldw	ra,192(sp)
  807fa8:	df002f17 	ldw	fp,188(sp)
  807fac:	ddc02e17 	ldw	r23,184(sp)
  807fb0:	dd802d17 	ldw	r22,180(sp)
  807fb4:	dd402c17 	ldw	r21,176(sp)
  807fb8:	dd002b17 	ldw	r20,172(sp)
  807fbc:	dcc02a17 	ldw	r19,168(sp)
  807fc0:	dc802917 	ldw	r18,164(sp)
  807fc4:	dc402817 	ldw	r17,160(sp)
  807fc8:	dc002717 	ldw	r16,156(sp)
  807fcc:	dec03104 	addi	sp,sp,196
  807fd0:	f800283a 	ret
  807fd4:	a80b883a 	mov	r5,r21
  807fd8:	b009883a 	mov	r4,r22
  807fdc:	08027700 	call	802770 <__swsetup_r>
  807fe0:	1003941e 	bne	r2,zero,808e34 <___vfiprintf_internal_r+0x12f4>
  807fe4:	a880030b 	ldhu	r2,12(r21)
  807fe8:	1080068c 	andi	r2,r2,26
  807fec:	10800298 	cmpnei	r2,r2,10
  807ff0:	103ef51e 	bne	r2,zero,807bc8 <___vfiprintf_internal_r+0x88>
  807ff4:	a880038f 	ldh	r2,14(r21)
  807ff8:	103ef316 	blt	r2,zero,807bc8 <___vfiprintf_internal_r+0x88>
  807ffc:	d9c00417 	ldw	r7,16(sp)
  808000:	a00d883a 	mov	r6,r20
  808004:	a80b883a 	mov	r5,r21
  808008:	b009883a 	mov	r4,r22
  80800c:	dfc03017 	ldw	ra,192(sp)
  808010:	df002f17 	ldw	fp,188(sp)
  808014:	ddc02e17 	ldw	r23,184(sp)
  808018:	dd802d17 	ldw	r22,180(sp)
  80801c:	dd402c17 	ldw	r21,176(sp)
  808020:	dd002b17 	ldw	r20,172(sp)
  808024:	dcc02a17 	ldw	r19,168(sp)
  808028:	dc802917 	ldw	r18,164(sp)
  80802c:	dc402817 	ldw	r17,160(sp)
  808030:	dc002717 	ldw	r16,156(sp)
  808034:	dec03104 	addi	sp,sp,196
  808038:	0808ea01 	jmpi	808ea0 <__sbprintf>
  80803c:	6b400414 	ori	r13,r13,16
  808040:	6880080c 	andi	r2,r13,32
  808044:	10004726 	beq	r2,zero,808164 <___vfiprintf_internal_r+0x624>
  808048:	d8c00417 	ldw	r3,16(sp)
  80804c:	00800044 	movi	r2,1
  808050:	1dc00017 	ldw	r23,0(r3)
  808054:	1f000117 	ldw	fp,4(r3)
  808058:	18c00204 	addi	r3,r3,8
  80805c:	d8c00415 	stw	r3,16(sp)
  808060:	00000906 	br	808088 <___vfiprintf_internal_r+0x548>
  808064:	6b400414 	ori	r13,r13,16
  808068:	6880080c 	andi	r2,r13,32
  80806c:	10003126 	beq	r2,zero,808134 <___vfiprintf_internal_r+0x5f4>
  808070:	d8c00417 	ldw	r3,16(sp)
  808074:	0005883a 	mov	r2,zero
  808078:	1dc00017 	ldw	r23,0(r3)
  80807c:	1f000117 	ldw	fp,4(r3)
  808080:	18c00204 	addi	r3,r3,8
  808084:	d8c00415 	stw	r3,16(sp)
  808088:	d8000945 	stb	zero,37(sp)
  80808c:	40ffffe0 	cmpeqi	r3,r8,-1
  808090:	001d883a 	mov	r14,zero
  808094:	1800f01e 	bne	r3,zero,808458 <___vfiprintf_internal_r+0x918>
  808098:	04ffdfc4 	movi	r19,-129
  80809c:	6cc8703a 	and	r4,r13,r19
  8080a0:	bf06b03a 	or	r3,r23,fp
  8080a4:	d9000015 	stw	r4,0(sp)
  8080a8:	1802301e 	bne	r3,zero,80896c <___vfiprintf_internal_r+0xe2c>
  8080ac:	4001f31e 	bne	r8,zero,80887c <___vfiprintf_internal_r+0xd3c>
  8080b0:	10029e1e 	bne	r2,zero,808b2c <___vfiprintf_internal_r+0xfec>
  8080b4:	6f00004c 	andi	fp,r13,1
  8080b8:	e002bc26 	beq	fp,zero,808bac <___vfiprintf_internal_r+0x106c>
  8080bc:	00800c04 	movi	r2,48
  8080c0:	d88016c5 	stb	r2,91(sp)
  8080c4:	dcc016c4 	addi	r19,sp,91
  8080c8:	00010006 	br	8084cc <___vfiprintf_internal_r+0x98c>
  8080cc:	8d27c83a 	sub	r19,r17,r20
  8080d0:	8d3fae26 	beq	r17,r20,807f8c <___vfiprintf_internal_r+0x44c>
  8080d4:	d8c00c17 	ldw	r3,48(sp)
  8080d8:	d8800b17 	ldw	r2,44(sp)
  8080dc:	85000015 	stw	r20,0(r16)
  8080e0:	98c7883a 	add	r3,r19,r3
  8080e4:	10800044 	addi	r2,r2,1
  8080e8:	d8800b15 	stw	r2,44(sp)
  8080ec:	84c00115 	stw	r19,4(r16)
  8080f0:	d8c00c15 	stw	r3,48(sp)
  8080f4:	10800208 	cmpgei	r2,r2,8
  8080f8:	1000061e 	bne	r2,zero,808114 <___vfiprintf_internal_r+0x5d4>
  8080fc:	84000204 	addi	r16,r16,8
  808100:	d8c00117 	ldw	r3,4(sp)
  808104:	88800003 	ldbu	r2,0(r17)
  808108:	1cc7883a 	add	r3,r3,r19
  80810c:	d8c00115 	stw	r3,4(sp)
  808110:	003ec006 	br	807c14 <___vfiprintf_internal_r+0xd4>
  808114:	18028126 	beq	r3,zero,808b1c <___vfiprintf_internal_r+0xfdc>
  808118:	d9800a04 	addi	r6,sp,40
  80811c:	a80b883a 	mov	r5,r21
  808120:	b009883a 	mov	r4,r22
  808124:	0807a340 	call	807a34 <__sprint_r.part.0>
  808128:	103f9a1e 	bne	r2,zero,807f94 <___vfiprintf_internal_r+0x454>
  80812c:	9021883a 	mov	r16,r18
  808130:	003ff306 	br	808100 <___vfiprintf_internal_r+0x5c0>
  808134:	d9000417 	ldw	r4,16(sp)
  808138:	6880040c 	andi	r2,r13,16
  80813c:	20c00104 	addi	r3,r4,4
  808140:	1002ac1e 	bne	r2,zero,808bf4 <___vfiprintf_internal_r+0x10b4>
  808144:	6880100c 	andi	r2,r13,64
  808148:	1002fb26 	beq	r2,zero,808d38 <___vfiprintf_internal_r+0x11f8>
  80814c:	d8800417 	ldw	r2,16(sp)
  808150:	0039883a 	mov	fp,zero
  808154:	d8c00415 	stw	r3,16(sp)
  808158:	15c0000b 	ldhu	r23,0(r2)
  80815c:	0005883a 	mov	r2,zero
  808160:	003fc906 	br	808088 <___vfiprintf_internal_r+0x548>
  808164:	d9000417 	ldw	r4,16(sp)
  808168:	6880040c 	andi	r2,r13,16
  80816c:	20c00104 	addi	r3,r4,4
  808170:	1002af1e 	bne	r2,zero,808c30 <___vfiprintf_internal_r+0x10f0>
  808174:	6880100c 	andi	r2,r13,64
  808178:	1002fb26 	beq	r2,zero,808d68 <___vfiprintf_internal_r+0x1228>
  80817c:	d8800417 	ldw	r2,16(sp)
  808180:	0039883a 	mov	fp,zero
  808184:	d8c00415 	stw	r3,16(sp)
  808188:	15c0000b 	ldhu	r23,0(r2)
  80818c:	00800044 	movi	r2,1
  808190:	003fbd06 	br	808088 <___vfiprintf_internal_r+0x548>
  808194:	d8c00017 	ldw	r3,0(sp)
  808198:	d8000b15 	stw	zero,44(sp)
  80819c:	1cc0010c 	andi	r19,r3,4
  8081a0:	98024c26 	beq	r19,zero,808ad4 <___vfiprintf_internal_r+0xf94>
  8081a4:	8de1c83a 	sub	r16,r17,r23
  8081a8:	04024a0e 	bge	zero,r16,808ad4 <___vfiprintf_internal_r+0xf94>
  8081ac:	900d883a 	mov	r6,r18
  8081b0:	80c00450 	cmplti	r3,r16,17
  8081b4:	d9000b17 	ldw	r4,44(sp)
  8081b8:	01c02074 	movhi	r7,129
  8081bc:	18031a1e 	bne	r3,zero,808e28 <___vfiprintf_internal_r+0x12e8>
  8081c0:	39c05704 	addi	r7,r7,348
  8081c4:	04c00404 	movi	r19,16
  8081c8:	00000606 	br	8081e4 <___vfiprintf_internal_r+0x6a4>
  8081cc:	21400084 	addi	r5,r4,2
  8081d0:	31800204 	addi	r6,r6,8
  8081d4:	1809883a 	mov	r4,r3
  8081d8:	843ffc04 	addi	r16,r16,-16
  8081dc:	80c00448 	cmpgei	r3,r16,17
  8081e0:	18001726 	beq	r3,zero,808240 <___vfiprintf_internal_r+0x700>
  8081e4:	20c00044 	addi	r3,r4,1
  8081e8:	10800404 	addi	r2,r2,16
  8081ec:	31c00015 	stw	r7,0(r6)
  8081f0:	34c00115 	stw	r19,4(r6)
  8081f4:	d8800c15 	stw	r2,48(sp)
  8081f8:	d8c00b15 	stw	r3,44(sp)
  8081fc:	19400208 	cmpgei	r5,r3,8
  808200:	283ff226 	beq	r5,zero,8081cc <___vfiprintf_internal_r+0x68c>
  808204:	d9800a04 	addi	r6,sp,40
  808208:	a80b883a 	mov	r5,r21
  80820c:	b009883a 	mov	r4,r22
  808210:	10011f26 	beq	r2,zero,808690 <___vfiprintf_internal_r+0xb50>
  808214:	d9c00015 	stw	r7,0(sp)
  808218:	0807a340 	call	807a34 <__sprint_r.part.0>
  80821c:	103f5d1e 	bne	r2,zero,807f94 <___vfiprintf_internal_r+0x454>
  808220:	d9000b17 	ldw	r4,44(sp)
  808224:	843ffc04 	addi	r16,r16,-16
  808228:	80c00448 	cmpgei	r3,r16,17
  80822c:	d8800c17 	ldw	r2,48(sp)
  808230:	d9c00017 	ldw	r7,0(sp)
  808234:	900d883a 	mov	r6,r18
  808238:	21400044 	addi	r5,r4,1
  80823c:	183fe91e 	bne	r3,zero,8081e4 <___vfiprintf_internal_r+0x6a4>
  808240:	1405883a 	add	r2,r2,r16
  808244:	d9400b15 	stw	r5,44(sp)
  808248:	31c00015 	stw	r7,0(r6)
  80824c:	34000115 	stw	r16,4(r6)
  808250:	d8800c15 	stw	r2,48(sp)
  808254:	29400210 	cmplti	r5,r5,8
  808258:	283f421e 	bne	r5,zero,807f64 <___vfiprintf_internal_r+0x424>
  80825c:	10021d26 	beq	r2,zero,808ad4 <___vfiprintf_internal_r+0xf94>
  808260:	d9800a04 	addi	r6,sp,40
  808264:	a80b883a 	mov	r5,r21
  808268:	b009883a 	mov	r4,r22
  80826c:	0807a340 	call	807a34 <__sprint_r.part.0>
  808270:	103f481e 	bne	r2,zero,807f94 <___vfiprintf_internal_r+0x454>
  808274:	d8800c17 	ldw	r2,48(sp)
  808278:	003f3a06 	br	807f64 <___vfiprintf_internal_r+0x424>
  80827c:	08048ac0 	call	8048ac <__sinit>
  808280:	003e4106 	br	807b88 <___vfiprintf_internal_r+0x48>
  808284:	29403fcc 	andi	r5,r5,255
  808288:	2802da1e 	bne	r5,zero,808df4 <___vfiprintf_internal_r+0x12b4>
  80828c:	6880080c 	andi	r2,r13,32
  808290:	10005b26 	beq	r2,zero,808400 <___vfiprintf_internal_r+0x8c0>
  808294:	d8c00417 	ldw	r3,16(sp)
  808298:	18800117 	ldw	r2,4(r3)
  80829c:	1dc00017 	ldw	r23,0(r3)
  8082a0:	18c00204 	addi	r3,r3,8
  8082a4:	d8c00415 	stw	r3,16(sp)
  8082a8:	1039883a 	mov	fp,r2
  8082ac:	10006016 	blt	r2,zero,808430 <___vfiprintf_internal_r+0x8f0>
  8082b0:	40bfffd8 	cmpnei	r2,r8,-1
  8082b4:	db800943 	ldbu	r14,37(sp)
  8082b8:	10000626 	beq	r2,zero,8082d4 <___vfiprintf_internal_r+0x794>
  8082bc:	04ffdfc4 	movi	r19,-129
  8082c0:	6cc6703a 	and	r3,r13,r19
  8082c4:	bf04b03a 	or	r2,r23,fp
  8082c8:	d8c00015 	stw	r3,0(sp)
  8082cc:	10021626 	beq	r2,zero,808b28 <___vfiprintf_internal_r+0xfe8>
  8082d0:	db400017 	ldw	r13,0(sp)
  8082d4:	e001a71e 	bne	fp,zero,808974 <___vfiprintf_internal_r+0xe34>
  8082d8:	b88002a8 	cmpgeui	r2,r23,10
  8082dc:	1001a51e 	bne	r2,zero,808974 <___vfiprintf_internal_r+0xe34>
  8082e0:	bdc00c04 	addi	r23,r23,48
  8082e4:	ddc016c5 	stb	r23,91(sp)
  8082e8:	db400015 	stw	r13,0(sp)
  8082ec:	07000044 	movi	fp,1
  8082f0:	dcc016c4 	addi	r19,sp,91
  8082f4:	00007506 	br	8084cc <___vfiprintf_internal_r+0x98c>
  8082f8:	a0800007 	ldb	r2,0(r20)
  8082fc:	6b401014 	ori	r13,r13,64
  808300:	003e5006 	br	807c44 <___vfiprintf_internal_r+0x104>
  808304:	29403fcc 	andi	r5,r5,255
  808308:	2802bc1e 	bne	r5,zero,808dfc <___vfiprintf_internal_r+0x12bc>
  80830c:	00c02074 	movhi	r3,129
  808310:	18ffcc04 	addi	r3,r3,-208
  808314:	d8c00515 	stw	r3,20(sp)
  808318:	68c0080c 	andi	r3,r13,32
  80831c:	1800bd26 	beq	r3,zero,808614 <___vfiprintf_internal_r+0xad4>
  808320:	d8c00417 	ldw	r3,16(sp)
  808324:	1dc00017 	ldw	r23,0(r3)
  808328:	1f000117 	ldw	fp,4(r3)
  80832c:	18c00204 	addi	r3,r3,8
  808330:	d8c00415 	stw	r3,16(sp)
  808334:	68c0004c 	andi	r3,r13,1
  808338:	18000226 	beq	r3,zero,808344 <___vfiprintf_internal_r+0x804>
  80833c:	bf06b03a 	or	r3,r23,fp
  808340:	1802261e 	bne	r3,zero,808bdc <___vfiprintf_internal_r+0x109c>
  808344:	00800084 	movi	r2,2
  808348:	003f4f06 	br	808088 <___vfiprintf_internal_r+0x548>
  80834c:	d8800417 	ldw	r2,16(sp)
  808350:	d8000945 	stb	zero,37(sp)
  808354:	14c00017 	ldw	r19,0(r2)
  808358:	10c00104 	addi	r3,r2,4
  80835c:	98026926 	beq	r19,zero,808d04 <___vfiprintf_internal_r+0x11c4>
  808360:	40bfffe0 	cmpeqi	r2,r8,-1
  808364:	1002411e 	bne	r2,zero,808c6c <___vfiprintf_internal_r+0x112c>
  808368:	400d883a 	mov	r6,r8
  80836c:	000b883a 	mov	r5,zero
  808370:	9809883a 	mov	r4,r19
  808374:	d8c00315 	stw	r3,12(sp)
  808378:	db400215 	stw	r13,8(sp)
  80837c:	da000015 	stw	r8,0(sp)
  808380:	0805d5c0 	call	805d5c <memchr>
  808384:	da000017 	ldw	r8,0(sp)
  808388:	db400217 	ldw	r13,8(sp)
  80838c:	d8c00317 	ldw	r3,12(sp)
  808390:	10029426 	beq	r2,zero,808de4 <___vfiprintf_internal_r+0x12a4>
  808394:	14f9c83a 	sub	fp,r2,r19
  808398:	e02f883a 	mov	r23,fp
  80839c:	d8c00415 	stw	r3,16(sp)
  8083a0:	003ea006 	br	807e24 <___vfiprintf_internal_r+0x2e4>
  8083a4:	a0800007 	ldb	r2,0(r20)
  8083a8:	6b400814 	ori	r13,r13,32
  8083ac:	003e2506 	br	807c44 <___vfiprintf_internal_r+0x104>
  8083b0:	d8c00417 	ldw	r3,16(sp)
  8083b4:	00800c04 	movi	r2,48
  8083b8:	d8800985 	stb	r2,38(sp)
  8083bc:	00801e04 	movi	r2,120
  8083c0:	01002074 	movhi	r4,129
  8083c4:	d88009c5 	stb	r2,39(sp)
  8083c8:	18800104 	addi	r2,r3,4
  8083cc:	d8800415 	stw	r2,16(sp)
  8083d0:	20bfcc04 	addi	r2,r4,-208
  8083d4:	d8800515 	stw	r2,20(sp)
  8083d8:	1dc00017 	ldw	r23,0(r3)
  8083dc:	0039883a 	mov	fp,zero
  8083e0:	6b400094 	ori	r13,r13,2
  8083e4:	00800084 	movi	r2,2
  8083e8:	003f2706 	br	808088 <___vfiprintf_internal_r+0x548>
  8083ec:	29403fcc 	andi	r5,r5,255
  8083f0:	2802841e 	bne	r5,zero,808e04 <___vfiprintf_internal_r+0x12c4>
  8083f4:	6b400414 	ori	r13,r13,16
  8083f8:	6880080c 	andi	r2,r13,32
  8083fc:	103fa51e 	bne	r2,zero,808294 <___vfiprintf_internal_r+0x754>
  808400:	d9000417 	ldw	r4,16(sp)
  808404:	6880040c 	andi	r2,r13,16
  808408:	20c00104 	addi	r3,r4,4
  80840c:	1001ee1e 	bne	r2,zero,808bc8 <___vfiprintf_internal_r+0x1088>
  808410:	6880100c 	andi	r2,r13,64
  808414:	10024e26 	beq	r2,zero,808d50 <___vfiprintf_internal_r+0x1210>
  808418:	d8800417 	ldw	r2,16(sp)
  80841c:	d8c00415 	stw	r3,16(sp)
  808420:	15c0000f 	ldh	r23,0(r2)
  808424:	b839d7fa 	srai	fp,r23,31
  808428:	e005883a 	mov	r2,fp
  80842c:	103fa00e 	bge	r2,zero,8082b0 <___vfiprintf_internal_r+0x770>
  808430:	b804c03a 	cmpne	r2,r23,zero
  808434:	0739c83a 	sub	fp,zero,fp
  808438:	e0b9c83a 	sub	fp,fp,r2
  80843c:	00800b44 	movi	r2,45
  808440:	d8800945 	stb	r2,37(sp)
  808444:	40ffffe0 	cmpeqi	r3,r8,-1
  808448:	05efc83a 	sub	r23,zero,r23
  80844c:	03800b44 	movi	r14,45
  808450:	00800044 	movi	r2,1
  808454:	183f1026 	beq	r3,zero,808098 <___vfiprintf_internal_r+0x558>
  808458:	10c00060 	cmpeqi	r3,r2,1
  80845c:	183f9d1e 	bne	r3,zero,8082d4 <___vfiprintf_internal_r+0x794>
  808460:	108000a0 	cmpeqi	r2,r2,2
  808464:	10010a1e 	bne	r2,zero,808890 <___vfiprintf_internal_r+0xd50>
  808468:	9027883a 	mov	r19,r18
  80846c:	e008977a 	slli	r4,fp,29
  808470:	b806d0fa 	srli	r3,r23,3
  808474:	e038d0fa 	srli	fp,fp,3
  808478:	b88001cc 	andi	r2,r23,7
  80847c:	10800c04 	addi	r2,r2,48
  808480:	20eeb03a 	or	r23,r4,r3
  808484:	98bfffc5 	stb	r2,-1(r19)
  808488:	bf06b03a 	or	r3,r23,fp
  80848c:	980b883a 	mov	r5,r19
  808490:	9cffffc4 	addi	r19,r19,-1
  808494:	183ff51e 	bne	r3,zero,80846c <___vfiprintf_internal_r+0x92c>
  808498:	68c0004c 	andi	r3,r13,1
  80849c:	18010926 	beq	r3,zero,8088c4 <___vfiprintf_internal_r+0xd84>
  8084a0:	10803fcc 	andi	r2,r2,255
  8084a4:	1080201c 	xori	r2,r2,128
  8084a8:	10bfe004 	addi	r2,r2,-128
  8084ac:	10800c18 	cmpnei	r2,r2,48
  8084b0:	10010426 	beq	r2,zero,8088c4 <___vfiprintf_internal_r+0xd84>
  8084b4:	297fff84 	addi	r5,r5,-2
  8084b8:	00800c04 	movi	r2,48
  8084bc:	98bfffc5 	stb	r2,-1(r19)
  8084c0:	9179c83a 	sub	fp,r18,r5
  8084c4:	db400015 	stw	r13,0(sp)
  8084c8:	2827883a 	mov	r19,r5
  8084cc:	402f883a 	mov	r23,r8
  8084d0:	4700010e 	bge	r8,fp,8084d8 <___vfiprintf_internal_r+0x998>
  8084d4:	e02f883a 	mov	r23,fp
  8084d8:	73803fcc 	andi	r14,r14,255
  8084dc:	7380201c 	xori	r14,r14,128
  8084e0:	73bfe004 	addi	r14,r14,-128
  8084e4:	703e5126 	beq	r14,zero,807e2c <___vfiprintf_internal_r+0x2ec>
  8084e8:	bdc00044 	addi	r23,r23,1
  8084ec:	003e4f06 	br	807e2c <___vfiprintf_internal_r+0x2ec>
  8084f0:	a0800007 	ldb	r2,0(r20)
  8084f4:	6b402014 	ori	r13,r13,128
  8084f8:	003dd206 	br	807c44 <___vfiprintf_internal_r+0x104>
  8084fc:	a0800007 	ldb	r2,0(r20)
  808500:	a0c00044 	addi	r3,r20,1
  808504:	11000aa0 	cmpeqi	r4,r2,42
  808508:	2002521e 	bne	r4,zero,808e54 <___vfiprintf_internal_r+0x1314>
  80850c:	113ff404 	addi	r4,r2,-48
  808510:	21c002b0 	cmpltui	r7,r4,10
  808514:	1829883a 	mov	r20,r3
  808518:	0011883a 	mov	r8,zero
  80851c:	383dca26 	beq	r7,zero,807c48 <___vfiprintf_internal_r+0x108>
  808520:	400690ba 	slli	r3,r8,2
  808524:	a0800007 	ldb	r2,0(r20)
  808528:	a5000044 	addi	r20,r20,1
  80852c:	1a11883a 	add	r8,r3,r8
  808530:	4211883a 	add	r8,r8,r8
  808534:	4111883a 	add	r8,r8,r4
  808538:	113ff404 	addi	r4,r2,-48
  80853c:	20c002b0 	cmpltui	r3,r4,10
  808540:	183ff71e 	bne	r3,zero,808520 <___vfiprintf_internal_r+0x9e0>
  808544:	003dc006 	br	807c48 <___vfiprintf_internal_r+0x108>
  808548:	a0800003 	ldbu	r2,0(r20)
  80854c:	10803fcc 	andi	r2,r2,255
  808550:	1080201c 	xori	r2,r2,128
  808554:	6b400114 	ori	r13,r13,4
  808558:	10bfe004 	addi	r2,r2,-128
  80855c:	003db906 	br	807c44 <___vfiprintf_internal_r+0x104>
  808560:	a0800007 	ldb	r2,0(r20)
  808564:	01400044 	movi	r5,1
  808568:	01800ac4 	movi	r6,43
  80856c:	003db506 	br	807c44 <___vfiprintf_internal_r+0x104>
  808570:	d8c00417 	ldw	r3,16(sp)
  808574:	a0800003 	ldbu	r2,0(r20)
  808578:	1c400017 	ldw	r17,0(r3)
  80857c:	18c00104 	addi	r3,r3,4
  808580:	8801b716 	blt	r17,zero,808c60 <___vfiprintf_internal_r+0x1120>
  808584:	d8c00415 	stw	r3,16(sp)
  808588:	10803fcc 	andi	r2,r2,255
  80858c:	1080201c 	xori	r2,r2,128
  808590:	10bfe004 	addi	r2,r2,-128
  808594:	003dab06 	br	807c44 <___vfiprintf_internal_r+0x104>
  808598:	a0800007 	ldb	r2,0(r20)
  80859c:	6b400054 	ori	r13,r13,1
  8085a0:	003da806 	br	807c44 <___vfiprintf_internal_r+0x104>
  8085a4:	30c03fcc 	andi	r3,r6,255
  8085a8:	18c0201c 	xori	r3,r3,128
  8085ac:	18ffe004 	addi	r3,r3,-128
  8085b0:	a0800003 	ldbu	r2,0(r20)
  8085b4:	183ff41e 	bne	r3,zero,808588 <___vfiprintf_internal_r+0xa48>
  8085b8:	10803fcc 	andi	r2,r2,255
  8085bc:	1080201c 	xori	r2,r2,128
  8085c0:	01400044 	movi	r5,1
  8085c4:	01800804 	movi	r6,32
  8085c8:	10bfe004 	addi	r2,r2,-128
  8085cc:	003d9d06 	br	807c44 <___vfiprintf_internal_r+0x104>
  8085d0:	d8c00417 	ldw	r3,16(sp)
  8085d4:	d8000945 	stb	zero,37(sp)
  8085d8:	05c00044 	movi	r23,1
  8085dc:	18800017 	ldw	r2,0(r3)
  8085e0:	18c00104 	addi	r3,r3,4
  8085e4:	d8c00415 	stw	r3,16(sp)
  8085e8:	d8800d05 	stb	r2,52(sp)
  8085ec:	07000044 	movi	fp,1
  8085f0:	dcc00d04 	addi	r19,sp,52
  8085f4:	003e0b06 	br	807e24 <___vfiprintf_internal_r+0x2e4>
  8085f8:	29403fcc 	andi	r5,r5,255
  8085fc:	2802061e 	bne	r5,zero,808e18 <___vfiprintf_internal_r+0x12d8>
  808600:	00c02074 	movhi	r3,129
  808604:	18ffd104 	addi	r3,r3,-188
  808608:	d8c00515 	stw	r3,20(sp)
  80860c:	68c0080c 	andi	r3,r13,32
  808610:	183f431e 	bne	r3,zero,808320 <___vfiprintf_internal_r+0x7e0>
  808614:	d9400417 	ldw	r5,16(sp)
  808618:	68c0040c 	andi	r3,r13,16
  80861c:	29000104 	addi	r4,r5,4
  808620:	18017f1e 	bne	r3,zero,808c20 <___vfiprintf_internal_r+0x10e0>
  808624:	68c0100c 	andi	r3,r13,64
  808628:	1801be26 	beq	r3,zero,808d24 <___vfiprintf_internal_r+0x11e4>
  80862c:	d8c00417 	ldw	r3,16(sp)
  808630:	0039883a 	mov	fp,zero
  808634:	d9000415 	stw	r4,16(sp)
  808638:	1dc0000b 	ldhu	r23,0(r3)
  80863c:	003f3d06 	br	808334 <___vfiprintf_internal_r+0x7f4>
  808640:	29403fcc 	andi	r5,r5,255
  808644:	2801f61e 	bne	r5,zero,808e20 <___vfiprintf_internal_r+0x12e0>
  808648:	d9000417 	ldw	r4,16(sp)
  80864c:	6880080c 	andi	r2,r13,32
  808650:	20c00017 	ldw	r3,0(r4)
  808654:	21000104 	addi	r4,r4,4
  808658:	10016b1e 	bne	r2,zero,808c08 <___vfiprintf_internal_r+0x10c8>
  80865c:	6880040c 	andi	r2,r13,16
  808660:	1001951e 	bne	r2,zero,808cb8 <___vfiprintf_internal_r+0x1178>
  808664:	6b40100c 	andi	r13,r13,64
  808668:	68019326 	beq	r13,zero,808cb8 <___vfiprintf_internal_r+0x1178>
  80866c:	d8800117 	ldw	r2,4(sp)
  808670:	d9000415 	stw	r4,16(sp)
  808674:	1880000d 	sth	r2,0(r3)
  808678:	003d5a06 	br	807be4 <___vfiprintf_internal_r+0xa4>
  80867c:	a0800007 	ldb	r2,0(r20)
  808680:	10c01b18 	cmpnei	r3,r2,108
  808684:	18019826 	beq	r3,zero,808ce8 <___vfiprintf_internal_r+0x11a8>
  808688:	6b400414 	ori	r13,r13,16
  80868c:	003d6d06 	br	807c44 <___vfiprintf_internal_r+0x104>
  808690:	01400044 	movi	r5,1
  808694:	0009883a 	mov	r4,zero
  808698:	900d883a 	mov	r6,r18
  80869c:	003ece06 	br	8081d8 <___vfiprintf_internal_r+0x698>
  8086a0:	8dc7c83a 	sub	r3,r17,r23
  8086a4:	00fe190e 	bge	zero,r3,807f0c <___vfiprintf_internal_r+0x3cc>
  8086a8:	19c00450 	cmplti	r7,r3,17
  8086ac:	3801e41e 	bne	r7,zero,808e40 <___vfiprintf_internal_r+0x1300>
  8086b0:	01c02074 	movhi	r7,129
  8086b4:	39c05304 	addi	r7,r7,332
  8086b8:	03400404 	movi	r13,16
  8086bc:	00000606 	br	8086d8 <___vfiprintf_internal_r+0xb98>
  8086c0:	23800084 	addi	r14,r4,2
  8086c4:	84000204 	addi	r16,r16,8
  8086c8:	2809883a 	mov	r4,r5
  8086cc:	18fffc04 	addi	r3,r3,-16
  8086d0:	19400448 	cmpgei	r5,r3,17
  8086d4:	28001c26 	beq	r5,zero,808748 <___vfiprintf_internal_r+0xc08>
  8086d8:	21400044 	addi	r5,r4,1
  8086dc:	10800404 	addi	r2,r2,16
  8086e0:	81c00015 	stw	r7,0(r16)
  8086e4:	83400115 	stw	r13,4(r16)
  8086e8:	d8800c15 	stw	r2,48(sp)
  8086ec:	d9400b15 	stw	r5,44(sp)
  8086f0:	29800208 	cmpgei	r6,r5,8
  8086f4:	303ff226 	beq	r6,zero,8086c0 <___vfiprintf_internal_r+0xb80>
  8086f8:	d9800a04 	addi	r6,sp,40
  8086fc:	a80b883a 	mov	r5,r21
  808700:	b009883a 	mov	r4,r22
  808704:	10007826 	beq	r2,zero,8088e8 <___vfiprintf_internal_r+0xda8>
  808708:	d9c00615 	stw	r7,24(sp)
  80870c:	d8c00315 	stw	r3,12(sp)
  808710:	da000215 	stw	r8,8(sp)
  808714:	0807a340 	call	807a34 <__sprint_r.part.0>
  808718:	103e1e1e 	bne	r2,zero,807f94 <___vfiprintf_internal_r+0x454>
  80871c:	d8c00317 	ldw	r3,12(sp)
  808720:	d9000b17 	ldw	r4,44(sp)
  808724:	d8800c17 	ldw	r2,48(sp)
  808728:	18fffc04 	addi	r3,r3,-16
  80872c:	19400448 	cmpgei	r5,r3,17
  808730:	d9c00617 	ldw	r7,24(sp)
  808734:	da000217 	ldw	r8,8(sp)
  808738:	9021883a 	mov	r16,r18
  80873c:	23800044 	addi	r14,r4,1
  808740:	03400404 	movi	r13,16
  808744:	283fe41e 	bne	r5,zero,8086d8 <___vfiprintf_internal_r+0xb98>
  808748:	83400204 	addi	r13,r16,8
  80874c:	10c5883a 	add	r2,r2,r3
  808750:	80c00115 	stw	r3,4(r16)
  808754:	81c00015 	stw	r7,0(r16)
  808758:	d8800c15 	stw	r2,48(sp)
  80875c:	db800b15 	stw	r14,44(sp)
  808760:	70c00208 	cmpgei	r3,r14,8
  808764:	18011326 	beq	r3,zero,808bb4 <___vfiprintf_internal_r+0x1074>
  808768:	10018826 	beq	r2,zero,808d8c <___vfiprintf_internal_r+0x124c>
  80876c:	d9800a04 	addi	r6,sp,40
  808770:	a80b883a 	mov	r5,r21
  808774:	b009883a 	mov	r4,r22
  808778:	da000215 	stw	r8,8(sp)
  80877c:	0807a340 	call	807a34 <__sprint_r.part.0>
  808780:	103e041e 	bne	r2,zero,807f94 <___vfiprintf_internal_r+0x454>
  808784:	da000217 	ldw	r8,8(sp)
  808788:	d9000b17 	ldw	r4,44(sp)
  80878c:	d8800c17 	ldw	r2,48(sp)
  808790:	4711c83a 	sub	r8,r8,fp
  808794:	d9801904 	addi	r6,sp,100
  808798:	21400044 	addi	r5,r4,1
  80879c:	9021883a 	mov	r16,r18
  8087a0:	023ddc0e 	bge	zero,r8,807f14 <___vfiprintf_internal_r+0x3d4>
  8087a4:	40c00450 	cmplti	r3,r8,17
  8087a8:	01c02074 	movhi	r7,129
  8087ac:	1801741e 	bne	r3,zero,808d80 <___vfiprintf_internal_r+0x1240>
  8087b0:	39c05304 	addi	r7,r7,332
  8087b4:	03400404 	movi	r13,16
  8087b8:	00000606 	br	8087d4 <___vfiprintf_internal_r+0xc94>
  8087bc:	21400084 	addi	r5,r4,2
  8087c0:	84000204 	addi	r16,r16,8
  8087c4:	1809883a 	mov	r4,r3
  8087c8:	423ffc04 	addi	r8,r8,-16
  8087cc:	40c00448 	cmpgei	r3,r8,17
  8087d0:	18001a26 	beq	r3,zero,80883c <___vfiprintf_internal_r+0xcfc>
  8087d4:	20c00044 	addi	r3,r4,1
  8087d8:	10800404 	addi	r2,r2,16
  8087dc:	81c00015 	stw	r7,0(r16)
  8087e0:	83400115 	stw	r13,4(r16)
  8087e4:	d8800c15 	stw	r2,48(sp)
  8087e8:	d8c00b15 	stw	r3,44(sp)
  8087ec:	19400208 	cmpgei	r5,r3,8
  8087f0:	283ff226 	beq	r5,zero,8087bc <___vfiprintf_internal_r+0xc7c>
  8087f4:	d9800a04 	addi	r6,sp,40
  8087f8:	a80b883a 	mov	r5,r21
  8087fc:	b009883a 	mov	r4,r22
  808800:	10001a26 	beq	r2,zero,80886c <___vfiprintf_internal_r+0xd2c>
  808804:	d9c00315 	stw	r7,12(sp)
  808808:	da000215 	stw	r8,8(sp)
  80880c:	0807a340 	call	807a34 <__sprint_r.part.0>
  808810:	103de01e 	bne	r2,zero,807f94 <___vfiprintf_internal_r+0x454>
  808814:	da000217 	ldw	r8,8(sp)
  808818:	d9000b17 	ldw	r4,44(sp)
  80881c:	d8800c17 	ldw	r2,48(sp)
  808820:	423ffc04 	addi	r8,r8,-16
  808824:	40c00448 	cmpgei	r3,r8,17
  808828:	d9c00317 	ldw	r7,12(sp)
  80882c:	9021883a 	mov	r16,r18
  808830:	21400044 	addi	r5,r4,1
  808834:	03400404 	movi	r13,16
  808838:	183fe61e 	bne	r3,zero,8087d4 <___vfiprintf_internal_r+0xc94>
  80883c:	81000204 	addi	r4,r16,8
  808840:	1205883a 	add	r2,r2,r8
  808844:	81c00015 	stw	r7,0(r16)
  808848:	82000115 	stw	r8,4(r16)
  80884c:	d8800c15 	stw	r2,48(sp)
  808850:	d9400b15 	stw	r5,44(sp)
  808854:	28c00208 	cmpgei	r3,r5,8
  808858:	1800a41e 	bne	r3,zero,808aec <___vfiprintf_internal_r+0xfac>
  80885c:	29400044 	addi	r5,r5,1
  808860:	21800204 	addi	r6,r4,8
  808864:	2021883a 	mov	r16,r4
  808868:	003daa06 	br	807f14 <___vfiprintf_internal_r+0x3d4>
  80886c:	01400044 	movi	r5,1
  808870:	0009883a 	mov	r4,zero
  808874:	9021883a 	mov	r16,r18
  808878:	003fd306 	br	8087c8 <___vfiprintf_internal_r+0xc88>
  80887c:	10c00060 	cmpeqi	r3,r2,1
  808880:	1801561e 	bne	r3,zero,808ddc <___vfiprintf_internal_r+0x129c>
  808884:	108000a0 	cmpeqi	r2,r2,2
  808888:	db400017 	ldw	r13,0(sp)
  80888c:	103ef626 	beq	r2,zero,808468 <___vfiprintf_internal_r+0x928>
  808890:	9027883a 	mov	r19,r18
  808894:	d9000517 	ldw	r4,20(sp)
  808898:	b88003cc 	andi	r2,r23,15
  80889c:	e006973a 	slli	r3,fp,28
  8088a0:	b82ed13a 	srli	r23,r23,4
  8088a4:	2085883a 	add	r2,r4,r2
  8088a8:	10800003 	ldbu	r2,0(r2)
  8088ac:	e038d13a 	srli	fp,fp,4
  8088b0:	1deeb03a 	or	r23,r3,r23
  8088b4:	98bfffc5 	stb	r2,-1(r19)
  8088b8:	bf04b03a 	or	r2,r23,fp
  8088bc:	9cffffc4 	addi	r19,r19,-1
  8088c0:	103ff41e 	bne	r2,zero,808894 <___vfiprintf_internal_r+0xd54>
  8088c4:	94f9c83a 	sub	fp,r18,r19
  8088c8:	db400015 	stw	r13,0(sp)
  8088cc:	003eff06 	br	8084cc <___vfiprintf_internal_r+0x98c>
  8088d0:	d9800a04 	addi	r6,sp,40
  8088d4:	a80b883a 	mov	r5,r21
  8088d8:	b009883a 	mov	r4,r22
  8088dc:	0807a340 	call	807a34 <__sprint_r.part.0>
  8088e0:	103da626 	beq	r2,zero,807f7c <___vfiprintf_internal_r+0x43c>
  8088e4:	003dab06 	br	807f94 <___vfiprintf_internal_r+0x454>
  8088e8:	03800044 	movi	r14,1
  8088ec:	0009883a 	mov	r4,zero
  8088f0:	9021883a 	mov	r16,r18
  8088f4:	003f7506 	br	8086cc <___vfiprintf_internal_r+0xb8c>
  8088f8:	10009026 	beq	r2,zero,808b3c <___vfiprintf_internal_r+0xffc>
  8088fc:	d9800a04 	addi	r6,sp,40
  808900:	a80b883a 	mov	r5,r21
  808904:	b009883a 	mov	r4,r22
  808908:	da000615 	stw	r8,24(sp)
  80890c:	db400315 	stw	r13,12(sp)
  808910:	db800215 	stw	r14,8(sp)
  808914:	0807a340 	call	807a34 <__sprint_r.part.0>
  808918:	103d9e1e 	bne	r2,zero,807f94 <___vfiprintf_internal_r+0x454>
  80891c:	d9000b17 	ldw	r4,44(sp)
  808920:	d8800c17 	ldw	r2,48(sp)
  808924:	da000617 	ldw	r8,24(sp)
  808928:	db400317 	ldw	r13,12(sp)
  80892c:	db800217 	ldw	r14,8(sp)
  808930:	d9801904 	addi	r6,sp,100
  808934:	21400044 	addi	r5,r4,1
  808938:	9021883a 	mov	r16,r18
  80893c:	003d5806 	br	807ea0 <___vfiprintf_internal_r+0x360>
  808940:	d8800984 	addi	r2,sp,38
  808944:	d8801715 	stw	r2,92(sp)
  808948:	00800084 	movi	r2,2
  80894c:	d8801815 	stw	r2,96(sp)
  808950:	d9801904 	addi	r6,sp,100
  808954:	01400044 	movi	r5,1
  808958:	3021883a 	mov	r16,r6
  80895c:	2809883a 	mov	r4,r5
  808960:	21400044 	addi	r5,r4,1
  808964:	81800204 	addi	r6,r16,8
  808968:	003d6606 	br	807f04 <___vfiprintf_internal_r+0x3c4>
  80896c:	db400017 	ldw	r13,0(sp)
  808970:	003eb906 	br	808458 <___vfiprintf_internal_r+0x918>
  808974:	9027883a 	mov	r19,r18
  808978:	b809883a 	mov	r4,r23
  80897c:	e00b883a 	mov	r5,fp
  808980:	01800284 	movi	r6,10
  808984:	000f883a 	mov	r7,zero
  808988:	db800315 	stw	r14,12(sp)
  80898c:	da000215 	stw	r8,8(sp)
  808990:	db400015 	stw	r13,0(sp)
  808994:	080a6e80 	call	80a6e8 <__umoddi3>
  808998:	10800c04 	addi	r2,r2,48
  80899c:	b809883a 	mov	r4,r23
  8089a0:	e00b883a 	mov	r5,fp
  8089a4:	98bfffc5 	stb	r2,-1(r19)
  8089a8:	01800284 	movi	r6,10
  8089ac:	000f883a 	mov	r7,zero
  8089b0:	080a0c80 	call	80a0c8 <__udivdi3>
  8089b4:	e009883a 	mov	r4,fp
  8089b8:	b80b883a 	mov	r5,r23
  8089bc:	db400017 	ldw	r13,0(sp)
  8089c0:	da000217 	ldw	r8,8(sp)
  8089c4:	db800317 	ldw	r14,12(sp)
  8089c8:	9cffffc4 	addi	r19,r19,-1
  8089cc:	102f883a 	mov	r23,r2
  8089d0:	1839883a 	mov	fp,r3
  8089d4:	203fe81e 	bne	r4,zero,808978 <___vfiprintf_internal_r+0xe38>
  8089d8:	294002a8 	cmpgeui	r5,r5,10
  8089dc:	283fe61e 	bne	r5,zero,808978 <___vfiprintf_internal_r+0xe38>
  8089e0:	94f9c83a 	sub	fp,r18,r19
  8089e4:	003eb906 	br	8084cc <___vfiprintf_internal_r+0x98c>
  8089e8:	19400450 	cmplti	r5,r3,17
  8089ec:	01c02074 	movhi	r7,129
  8089f0:	2801061e 	bne	r5,zero,808e0c <___vfiprintf_internal_r+0x12cc>
  8089f4:	39c05704 	addi	r7,r7,348
  8089f8:	03c00404 	movi	r15,16
  8089fc:	00000706 	br	808a1c <___vfiprintf_internal_r+0xedc>
  808a00:	27c00084 	addi	ra,r4,2
  808a04:	84000204 	addi	r16,r16,8
  808a08:	3009883a 	mov	r4,r6
  808a0c:	18fffc04 	addi	r3,r3,-16
  808a10:	19400448 	cmpgei	r5,r3,17
  808a14:	28002026 	beq	r5,zero,808a98 <___vfiprintf_internal_r+0xf58>
  808a18:	21800044 	addi	r6,r4,1
  808a1c:	10800404 	addi	r2,r2,16
  808a20:	81c00015 	stw	r7,0(r16)
  808a24:	83c00115 	stw	r15,4(r16)
  808a28:	d8800c15 	stw	r2,48(sp)
  808a2c:	d9800b15 	stw	r6,44(sp)
  808a30:	31400208 	cmpgei	r5,r6,8
  808a34:	283ff226 	beq	r5,zero,808a00 <___vfiprintf_internal_r+0xec0>
  808a38:	d9800a04 	addi	r6,sp,40
  808a3c:	a80b883a 	mov	r5,r21
  808a40:	b009883a 	mov	r4,r22
  808a44:	10001f26 	beq	r2,zero,808ac4 <___vfiprintf_internal_r+0xf84>
  808a48:	d9c00815 	stw	r7,32(sp)
  808a4c:	d8c00715 	stw	r3,28(sp)
  808a50:	da000615 	stw	r8,24(sp)
  808a54:	db400315 	stw	r13,12(sp)
  808a58:	db800215 	stw	r14,8(sp)
  808a5c:	0807a340 	call	807a34 <__sprint_r.part.0>
  808a60:	103d4c1e 	bne	r2,zero,807f94 <___vfiprintf_internal_r+0x454>
  808a64:	d8c00717 	ldw	r3,28(sp)
  808a68:	d9000b17 	ldw	r4,44(sp)
  808a6c:	d8800c17 	ldw	r2,48(sp)
  808a70:	18fffc04 	addi	r3,r3,-16
  808a74:	19400448 	cmpgei	r5,r3,17
  808a78:	d9c00817 	ldw	r7,32(sp)
  808a7c:	da000617 	ldw	r8,24(sp)
  808a80:	db400317 	ldw	r13,12(sp)
  808a84:	db800217 	ldw	r14,8(sp)
  808a88:	9021883a 	mov	r16,r18
  808a8c:	27c00044 	addi	ra,r4,1
  808a90:	03c00404 	movi	r15,16
  808a94:	283fe01e 	bne	r5,zero,808a18 <___vfiprintf_internal_r+0xed8>
  808a98:	10c5883a 	add	r2,r2,r3
  808a9c:	80c00115 	stw	r3,4(r16)
  808aa0:	81c00015 	stw	r7,0(r16)
  808aa4:	d8800c15 	stw	r2,48(sp)
  808aa8:	dfc00b15 	stw	ra,44(sp)
  808aac:	f8c00208 	cmpgei	r3,ra,8
  808ab0:	18002d1e 	bne	r3,zero,808b68 <___vfiprintf_internal_r+0x1028>
  808ab4:	84000204 	addi	r16,r16,8
  808ab8:	f9400044 	addi	r5,ra,1
  808abc:	f809883a 	mov	r4,ra
  808ac0:	003ce706 	br	807e60 <___vfiprintf_internal_r+0x320>
  808ac4:	0009883a 	mov	r4,zero
  808ac8:	07c00044 	movi	ra,1
  808acc:	9021883a 	mov	r16,r18
  808ad0:	003fce06 	br	808a0c <___vfiprintf_internal_r+0xecc>
  808ad4:	8dc0010e 	bge	r17,r23,808adc <___vfiprintf_internal_r+0xf9c>
  808ad8:	b823883a 	mov	r17,r23
  808adc:	d8800117 	ldw	r2,4(sp)
  808ae0:	1445883a 	add	r2,r2,r17
  808ae4:	d8800115 	stw	r2,4(sp)
  808ae8:	003d2406 	br	807f7c <___vfiprintf_internal_r+0x43c>
  808aec:	10007626 	beq	r2,zero,808cc8 <___vfiprintf_internal_r+0x1188>
  808af0:	d9800a04 	addi	r6,sp,40
  808af4:	a80b883a 	mov	r5,r21
  808af8:	b009883a 	mov	r4,r22
  808afc:	0807a340 	call	807a34 <__sprint_r.part.0>
  808b00:	103d241e 	bne	r2,zero,807f94 <___vfiprintf_internal_r+0x454>
  808b04:	d9400b17 	ldw	r5,44(sp)
  808b08:	d8800c17 	ldw	r2,48(sp)
  808b0c:	d9801904 	addi	r6,sp,100
  808b10:	29400044 	addi	r5,r5,1
  808b14:	9021883a 	mov	r16,r18
  808b18:	003cfe06 	br	807f14 <___vfiprintf_internal_r+0x3d4>
  808b1c:	d8000b15 	stw	zero,44(sp)
  808b20:	9021883a 	mov	r16,r18
  808b24:	003d7606 	br	808100 <___vfiprintf_internal_r+0x5c0>
  808b28:	4000ac1e 	bne	r8,zero,808ddc <___vfiprintf_internal_r+0x129c>
  808b2c:	0011883a 	mov	r8,zero
  808b30:	0039883a 	mov	fp,zero
  808b34:	9027883a 	mov	r19,r18
  808b38:	003e6406 	br	8084cc <___vfiprintf_internal_r+0x98c>
  808b3c:	7000411e 	bne	r14,zero,808c44 <___vfiprintf_internal_r+0x1104>
  808b40:	0009883a 	mov	r4,zero
  808b44:	d9801904 	addi	r6,sp,100
  808b48:	01400044 	movi	r5,1
  808b4c:	9021883a 	mov	r16,r18
  808b50:	003cec06 	br	807f04 <___vfiprintf_internal_r+0x3c4>
  808b54:	d9801904 	addi	r6,sp,100
  808b58:	01400044 	movi	r5,1
  808b5c:	0009883a 	mov	r4,zero
  808b60:	9021883a 	mov	r16,r18
  808b64:	003ce706 	br	807f04 <___vfiprintf_internal_r+0x3c4>
  808b68:	10004a26 	beq	r2,zero,808c94 <___vfiprintf_internal_r+0x1154>
  808b6c:	d9800a04 	addi	r6,sp,40
  808b70:	a80b883a 	mov	r5,r21
  808b74:	b009883a 	mov	r4,r22
  808b78:	da000615 	stw	r8,24(sp)
  808b7c:	db400315 	stw	r13,12(sp)
  808b80:	db800215 	stw	r14,8(sp)
  808b84:	0807a340 	call	807a34 <__sprint_r.part.0>
  808b88:	103d021e 	bne	r2,zero,807f94 <___vfiprintf_internal_r+0x454>
  808b8c:	d9000b17 	ldw	r4,44(sp)
  808b90:	d8800c17 	ldw	r2,48(sp)
  808b94:	da000617 	ldw	r8,24(sp)
  808b98:	db400317 	ldw	r13,12(sp)
  808b9c:	db800217 	ldw	r14,8(sp)
  808ba0:	9021883a 	mov	r16,r18
  808ba4:	21400044 	addi	r5,r4,1
  808ba8:	003cad06 	br	807e60 <___vfiprintf_internal_r+0x320>
  808bac:	9027883a 	mov	r19,r18
  808bb0:	003e4606 	br	8084cc <___vfiprintf_internal_r+0x98c>
  808bb4:	71400044 	addi	r5,r14,1
  808bb8:	69800204 	addi	r6,r13,8
  808bbc:	7009883a 	mov	r4,r14
  808bc0:	6821883a 	mov	r16,r13
  808bc4:	003cd106 	br	807f0c <___vfiprintf_internal_r+0x3cc>
  808bc8:	25c00017 	ldw	r23,0(r4)
  808bcc:	d8c00415 	stw	r3,16(sp)
  808bd0:	b839d7fa 	srai	fp,r23,31
  808bd4:	e005883a 	mov	r2,fp
  808bd8:	003db406 	br	8082ac <___vfiprintf_internal_r+0x76c>
  808bdc:	00c00c04 	movi	r3,48
  808be0:	d88009c5 	stb	r2,39(sp)
  808be4:	d8c00985 	stb	r3,38(sp)
  808be8:	6b400094 	ori	r13,r13,2
  808bec:	00800084 	movi	r2,2
  808bf0:	003d2506 	br	808088 <___vfiprintf_internal_r+0x548>
  808bf4:	25c00017 	ldw	r23,0(r4)
  808bf8:	0039883a 	mov	fp,zero
  808bfc:	d8c00415 	stw	r3,16(sp)
  808c00:	0005883a 	mov	r2,zero
  808c04:	003d2006 	br	808088 <___vfiprintf_internal_r+0x548>
  808c08:	d9400117 	ldw	r5,4(sp)
  808c0c:	d9000415 	stw	r4,16(sp)
  808c10:	2805d7fa 	srai	r2,r5,31
  808c14:	19400015 	stw	r5,0(r3)
  808c18:	18800115 	stw	r2,4(r3)
  808c1c:	003bf106 	br	807be4 <___vfiprintf_internal_r+0xa4>
  808c20:	2dc00017 	ldw	r23,0(r5)
  808c24:	0039883a 	mov	fp,zero
  808c28:	d9000415 	stw	r4,16(sp)
  808c2c:	003dc106 	br	808334 <___vfiprintf_internal_r+0x7f4>
  808c30:	25c00017 	ldw	r23,0(r4)
  808c34:	0039883a 	mov	fp,zero
  808c38:	d8c00415 	stw	r3,16(sp)
  808c3c:	00800044 	movi	r2,1
  808c40:	003d1106 	br	808088 <___vfiprintf_internal_r+0x548>
  808c44:	d8800984 	addi	r2,sp,38
  808c48:	d8801715 	stw	r2,92(sp)
  808c4c:	00800084 	movi	r2,2
  808c50:	d8801815 	stw	r2,96(sp)
  808c54:	dc001904 	addi	r16,sp,100
  808c58:	01000044 	movi	r4,1
  808c5c:	003f4006 	br	808960 <___vfiprintf_internal_r+0xe20>
  808c60:	0463c83a 	sub	r17,zero,r17
  808c64:	d8c00415 	stw	r3,16(sp)
  808c68:	003e3806 	br	80854c <___vfiprintf_internal_r+0xa0c>
  808c6c:	9809883a 	mov	r4,r19
  808c70:	d8c00215 	stw	r3,8(sp)
  808c74:	db400015 	stw	r13,0(sp)
  808c78:	08004f80 	call	8004f8 <strlen>
  808c7c:	d8c00217 	ldw	r3,8(sp)
  808c80:	db400017 	ldw	r13,0(sp)
  808c84:	1039883a 	mov	fp,r2
  808c88:	102f883a 	mov	r23,r2
  808c8c:	d8c00415 	stw	r3,16(sp)
  808c90:	003c6406 	br	807e24 <___vfiprintf_internal_r+0x2e4>
  808c94:	d8c00947 	ldb	r3,37(sp)
  808c98:	18004326 	beq	r3,zero,808da8 <___vfiprintf_internal_r+0x1268>
  808c9c:	d8800944 	addi	r2,sp,37
  808ca0:	d8801715 	stw	r2,92(sp)
  808ca4:	00800044 	movi	r2,1
  808ca8:	d8801815 	stw	r2,96(sp)
  808cac:	d9801904 	addi	r6,sp,100
  808cb0:	01400044 	movi	r5,1
  808cb4:	003c7606 	br	807e90 <___vfiprintf_internal_r+0x350>
  808cb8:	d8800117 	ldw	r2,4(sp)
  808cbc:	18800015 	stw	r2,0(r3)
  808cc0:	d9000415 	stw	r4,16(sp)
  808cc4:	003bc706 	br	807be4 <___vfiprintf_internal_r+0xa4>
  808cc8:	00c00044 	movi	r3,1
  808ccc:	e005883a 	mov	r2,fp
  808cd0:	dcc01715 	stw	r19,92(sp)
  808cd4:	df001815 	stw	fp,96(sp)
  808cd8:	df000c15 	stw	fp,48(sp)
  808cdc:	d8c00b15 	stw	r3,44(sp)
  808ce0:	d9801904 	addi	r6,sp,100
  808ce4:	003c9a06 	br	807f50 <___vfiprintf_internal_r+0x410>
  808ce8:	a0800043 	ldbu	r2,1(r20)
  808cec:	6b400814 	ori	r13,r13,32
  808cf0:	a5000044 	addi	r20,r20,1
  808cf4:	10803fcc 	andi	r2,r2,255
  808cf8:	1080201c 	xori	r2,r2,128
  808cfc:	10bfe004 	addi	r2,r2,-128
  808d00:	003bd006 	br	807c44 <___vfiprintf_internal_r+0x104>
  808d04:	408001f0 	cmpltui	r2,r8,7
  808d08:	4039883a 	mov	fp,r8
  808d0c:	10002426 	beq	r2,zero,808da0 <___vfiprintf_internal_r+0x1260>
  808d10:	04c02074 	movhi	r19,129
  808d14:	e02f883a 	mov	r23,fp
  808d18:	d8c00415 	stw	r3,16(sp)
  808d1c:	9cffd604 	addi	r19,r19,-168
  808d20:	003c4006 	br	807e24 <___vfiprintf_internal_r+0x2e4>
  808d24:	d8c00417 	ldw	r3,16(sp)
  808d28:	0039883a 	mov	fp,zero
  808d2c:	d9000415 	stw	r4,16(sp)
  808d30:	1dc00017 	ldw	r23,0(r3)
  808d34:	003d7f06 	br	808334 <___vfiprintf_internal_r+0x7f4>
  808d38:	d8800417 	ldw	r2,16(sp)
  808d3c:	0039883a 	mov	fp,zero
  808d40:	d8c00415 	stw	r3,16(sp)
  808d44:	15c00017 	ldw	r23,0(r2)
  808d48:	0005883a 	mov	r2,zero
  808d4c:	003cce06 	br	808088 <___vfiprintf_internal_r+0x548>
  808d50:	d8800417 	ldw	r2,16(sp)
  808d54:	d8c00415 	stw	r3,16(sp)
  808d58:	15c00017 	ldw	r23,0(r2)
  808d5c:	b839d7fa 	srai	fp,r23,31
  808d60:	e005883a 	mov	r2,fp
  808d64:	003d5106 	br	8082ac <___vfiprintf_internal_r+0x76c>
  808d68:	d8800417 	ldw	r2,16(sp)
  808d6c:	0039883a 	mov	fp,zero
  808d70:	d8c00415 	stw	r3,16(sp)
  808d74:	15c00017 	ldw	r23,0(r2)
  808d78:	00800044 	movi	r2,1
  808d7c:	003cc206 	br	808088 <___vfiprintf_internal_r+0x548>
  808d80:	3009883a 	mov	r4,r6
  808d84:	39c05304 	addi	r7,r7,332
  808d88:	003ead06 	br	808840 <___vfiprintf_internal_r+0xd00>
  808d8c:	d9801904 	addi	r6,sp,100
  808d90:	01400044 	movi	r5,1
  808d94:	0009883a 	mov	r4,zero
  808d98:	9021883a 	mov	r16,r18
  808d9c:	003c5b06 	br	807f0c <___vfiprintf_internal_r+0x3cc>
  808da0:	07000184 	movi	fp,6
  808da4:	003fda06 	br	808d10 <___vfiprintf_internal_r+0x11d0>
  808da8:	703ee51e 	bne	r14,zero,808940 <___vfiprintf_internal_r+0xe00>
  808dac:	0009883a 	mov	r4,zero
  808db0:	d9801904 	addi	r6,sp,100
  808db4:	01400044 	movi	r5,1
  808db8:	9021883a 	mov	r16,r18
  808dbc:	003c5306 	br	807f0c <___vfiprintf_internal_r+0x3cc>
  808dc0:	d9800945 	stb	r6,37(sp)
  808dc4:	003c1106 	br	807e0c <___vfiprintf_internal_r+0x2cc>
  808dc8:	d9800a04 	addi	r6,sp,40
  808dcc:	a80b883a 	mov	r5,r21
  808dd0:	b009883a 	mov	r4,r22
  808dd4:	0807a340 	call	807a34 <__sprint_r.part.0>
  808dd8:	003c6e06 	br	807f94 <___vfiprintf_internal_r+0x454>
  808ddc:	db400017 	ldw	r13,0(sp)
  808de0:	003d3f06 	br	8082e0 <___vfiprintf_internal_r+0x7a0>
  808de4:	402f883a 	mov	r23,r8
  808de8:	d8c00415 	stw	r3,16(sp)
  808dec:	4039883a 	mov	fp,r8
  808df0:	003c0c06 	br	807e24 <___vfiprintf_internal_r+0x2e4>
  808df4:	d9800945 	stb	r6,37(sp)
  808df8:	003d2406 	br	80828c <___vfiprintf_internal_r+0x74c>
  808dfc:	d9800945 	stb	r6,37(sp)
  808e00:	003d4206 	br	80830c <___vfiprintf_internal_r+0x7cc>
  808e04:	d9800945 	stb	r6,37(sp)
  808e08:	003d7a06 	br	8083f4 <___vfiprintf_internal_r+0x8b4>
  808e0c:	303f883a 	mov	ra,r6
  808e10:	39c05704 	addi	r7,r7,348
  808e14:	003f2006 	br	808a98 <___vfiprintf_internal_r+0xf58>
  808e18:	d9800945 	stb	r6,37(sp)
  808e1c:	003df806 	br	808600 <___vfiprintf_internal_r+0xac0>
  808e20:	d9800945 	stb	r6,37(sp)
  808e24:	003e0806 	br	808648 <___vfiprintf_internal_r+0xb08>
  808e28:	21400044 	addi	r5,r4,1
  808e2c:	39c05704 	addi	r7,r7,348
  808e30:	003d0306 	br	808240 <___vfiprintf_internal_r+0x700>
  808e34:	00bfffc4 	movi	r2,-1
  808e38:	d8800115 	stw	r2,4(sp)
  808e3c:	003c5806 	br	807fa0 <___vfiprintf_internal_r+0x460>
  808e40:	01c02074 	movhi	r7,129
  808e44:	301b883a 	mov	r13,r6
  808e48:	281d883a 	mov	r14,r5
  808e4c:	39c05304 	addi	r7,r7,332
  808e50:	003e3e06 	br	80874c <___vfiprintf_internal_r+0xc0c>
  808e54:	d8800417 	ldw	r2,16(sp)
  808e58:	12000017 	ldw	r8,0(r2)
  808e5c:	11000104 	addi	r4,r2,4
  808e60:	4000010e 	bge	r8,zero,808e68 <___vfiprintf_internal_r+0x1328>
  808e64:	023fffc4 	movi	r8,-1
  808e68:	a0800043 	ldbu	r2,1(r20)
  808e6c:	d9000415 	stw	r4,16(sp)
  808e70:	1829883a 	mov	r20,r3
  808e74:	10803fcc 	andi	r2,r2,255
  808e78:	1080201c 	xori	r2,r2,128
  808e7c:	10bfe004 	addi	r2,r2,-128
  808e80:	003b7006 	br	807c44 <___vfiprintf_internal_r+0x104>

00808e84 <__vfiprintf_internal>:
  808e84:	00c02074 	movhi	r3,129
  808e88:	2005883a 	mov	r2,r4
  808e8c:	19084417 	ldw	r4,8464(r3)
  808e90:	300f883a 	mov	r7,r6
  808e94:	280d883a 	mov	r6,r5
  808e98:	100b883a 	mov	r5,r2
  808e9c:	0807b401 	jmpi	807b40 <___vfiprintf_internal_r>

00808ea0 <__sbprintf>:
  808ea0:	2880030b 	ldhu	r2,12(r5)
  808ea4:	2b001917 	ldw	r12,100(r5)
  808ea8:	2ac0038b 	ldhu	r11,14(r5)
  808eac:	2a800717 	ldw	r10,28(r5)
  808eb0:	2a400917 	ldw	r9,36(r5)
  808eb4:	defee204 	addi	sp,sp,-1144
  808eb8:	da001a04 	addi	r8,sp,104
  808ebc:	00c10004 	movi	r3,1024
  808ec0:	dc011a15 	stw	r16,1128(sp)
  808ec4:	10bfff4c 	andi	r2,r2,65533
  808ec8:	2821883a 	mov	r16,r5
  808ecc:	d80b883a 	mov	r5,sp
  808ed0:	dc811c15 	stw	r18,1136(sp)
  808ed4:	dc411b15 	stw	r17,1132(sp)
  808ed8:	dfc11d15 	stw	ra,1140(sp)
  808edc:	2025883a 	mov	r18,r4
  808ee0:	d880030d 	sth	r2,12(sp)
  808ee4:	db001915 	stw	r12,100(sp)
  808ee8:	dac0038d 	sth	r11,14(sp)
  808eec:	da800715 	stw	r10,28(sp)
  808ef0:	da400915 	stw	r9,36(sp)
  808ef4:	da000015 	stw	r8,0(sp)
  808ef8:	da000415 	stw	r8,16(sp)
  808efc:	d8c00215 	stw	r3,8(sp)
  808f00:	d8c00515 	stw	r3,20(sp)
  808f04:	d8000615 	stw	zero,24(sp)
  808f08:	0807b400 	call	807b40 <___vfiprintf_internal_r>
  808f0c:	1023883a 	mov	r17,r2
  808f10:	10000d0e 	bge	r2,zero,808f48 <__sbprintf+0xa8>
  808f14:	d880030b 	ldhu	r2,12(sp)
  808f18:	1080100c 	andi	r2,r2,64
  808f1c:	10000326 	beq	r2,zero,808f2c <__sbprintf+0x8c>
  808f20:	8080030b 	ldhu	r2,12(r16)
  808f24:	10801014 	ori	r2,r2,64
  808f28:	8080030d 	sth	r2,12(r16)
  808f2c:	8805883a 	mov	r2,r17
  808f30:	dfc11d17 	ldw	ra,1140(sp)
  808f34:	dc811c17 	ldw	r18,1136(sp)
  808f38:	dc411b17 	ldw	r17,1132(sp)
  808f3c:	dc011a17 	ldw	r16,1128(sp)
  808f40:	dec11e04 	addi	sp,sp,1144
  808f44:	f800283a 	ret
  808f48:	d80b883a 	mov	r5,sp
  808f4c:	9009883a 	mov	r4,r18
  808f50:	08044640 	call	804464 <_fflush_r>
  808f54:	103fef26 	beq	r2,zero,808f14 <__sbprintf+0x74>
  808f58:	047fffc4 	movi	r17,-1
  808f5c:	003fed06 	br	808f14 <__sbprintf+0x74>

00808f60 <_write_r>:
  808f60:	2807883a 	mov	r3,r5
  808f64:	defffe04 	addi	sp,sp,-8
  808f68:	dc000015 	stw	r16,0(sp)
  808f6c:	300b883a 	mov	r5,r6
  808f70:	00802074 	movhi	r2,129
  808f74:	380d883a 	mov	r6,r7
  808f78:	2021883a 	mov	r16,r4
  808f7c:	1809883a 	mov	r4,r3
  808f80:	dfc00115 	stw	ra,4(sp)
  808f84:	100f4a15 	stw	zero,15656(r2)
  808f88:	080e0240 	call	80e024 <write>
  808f8c:	10ffffd8 	cmpnei	r3,r2,-1
  808f90:	18000426 	beq	r3,zero,808fa4 <_write_r+0x44>
  808f94:	dfc00117 	ldw	ra,4(sp)
  808f98:	dc000017 	ldw	r16,0(sp)
  808f9c:	dec00204 	addi	sp,sp,8
  808fa0:	f800283a 	ret
  808fa4:	00c02074 	movhi	r3,129
  808fa8:	18cf4a17 	ldw	r3,15656(r3)
  808fac:	183ff926 	beq	r3,zero,808f94 <_write_r+0x34>
  808fb0:	80c00015 	stw	r3,0(r16)
  808fb4:	dfc00117 	ldw	ra,4(sp)
  808fb8:	dc000017 	ldw	r16,0(sp)
  808fbc:	dec00204 	addi	sp,sp,8
  808fc0:	f800283a 	ret

00808fc4 <_close_r>:
  808fc4:	defffe04 	addi	sp,sp,-8
  808fc8:	dc000015 	stw	r16,0(sp)
  808fcc:	00802074 	movhi	r2,129
  808fd0:	2021883a 	mov	r16,r4
  808fd4:	2809883a 	mov	r4,r5
  808fd8:	dfc00115 	stw	ra,4(sp)
  808fdc:	100f4a15 	stw	zero,15656(r2)
  808fe0:	080d6040 	call	80d604 <close>
  808fe4:	10ffffd8 	cmpnei	r3,r2,-1
  808fe8:	18000426 	beq	r3,zero,808ffc <_close_r+0x38>
  808fec:	dfc00117 	ldw	ra,4(sp)
  808ff0:	dc000017 	ldw	r16,0(sp)
  808ff4:	dec00204 	addi	sp,sp,8
  808ff8:	f800283a 	ret
  808ffc:	00c02074 	movhi	r3,129
  809000:	18cf4a17 	ldw	r3,15656(r3)
  809004:	183ff926 	beq	r3,zero,808fec <_close_r+0x28>
  809008:	80c00015 	stw	r3,0(r16)
  80900c:	dfc00117 	ldw	ra,4(sp)
  809010:	dc000017 	ldw	r16,0(sp)
  809014:	dec00204 	addi	sp,sp,8
  809018:	f800283a 	ret

0080901c <__assert_func>:
  80901c:	00802074 	movhi	r2,129
  809020:	12084417 	ldw	r8,8464(r2)
  809024:	defffc04 	addi	sp,sp,-16
  809028:	3807883a 	mov	r3,r7
  80902c:	3005883a 	mov	r2,r6
  809030:	dfc00315 	stw	ra,12(sp)
  809034:	42400317 	ldw	r9,12(r8)
  809038:	200f883a 	mov	r7,r4
  80903c:	2811883a 	mov	r8,r5
  809040:	180d883a 	mov	r6,r3
  809044:	10000a26 	beq	r2,zero,809070 <__assert_func+0x54>
  809048:	00c02074 	movhi	r3,129
  80904c:	18c05b04 	addi	r3,r3,364
  809050:	01402074 	movhi	r5,129
  809054:	29405f04 	addi	r5,r5,380
  809058:	4809883a 	mov	r4,r9
  80905c:	d8c00115 	stw	r3,4(sp)
  809060:	da000015 	stw	r8,0(sp)
  809064:	d8800215 	stw	r2,8(sp)
  809068:	08093180 	call	809318 <fiprintf>
  80906c:	0809b600 	call	809b60 <abort>
  809070:	00c02074 	movhi	r3,129
  809074:	18c05e04 	addi	r3,r3,376
  809078:	1805883a 	mov	r2,r3
  80907c:	003ff406 	br	809050 <__assert_func+0x34>

00809080 <__assert>:
  809080:	deffff04 	addi	sp,sp,-4
  809084:	300f883a 	mov	r7,r6
  809088:	000d883a 	mov	r6,zero
  80908c:	dfc00015 	stw	ra,0(sp)
  809090:	080901c0 	call	80901c <__assert_func>

00809094 <_calloc_r>:
  809094:	defffe04 	addi	sp,sp,-8
  809098:	dc000015 	stw	r16,0(sp)
  80909c:	2021883a 	mov	r16,r4
  8090a0:	2809883a 	mov	r4,r5
  8090a4:	300b883a 	mov	r5,r6
  8090a8:	dfc00115 	stw	ra,4(sp)
  8090ac:	080ae600 	call	80ae60 <__mulsi3>
  8090b0:	8009883a 	mov	r4,r16
  8090b4:	100b883a 	mov	r5,r2
  8090b8:	080557c0 	call	80557c <_malloc_r>
  8090bc:	1009883a 	mov	r4,r2
  8090c0:	10000c26 	beq	r2,zero,8090f4 <_calloc_r+0x60>
  8090c4:	11bfff17 	ldw	r6,-4(r2)
  8090c8:	00bfff04 	movi	r2,-4
  8090cc:	308c703a 	and	r6,r6,r2
  8090d0:	31bfff04 	addi	r6,r6,-4
  8090d4:	30800968 	cmpgeui	r2,r6,37
  8090d8:	1000151e 	bne	r2,zero,809130 <_calloc_r+0x9c>
  8090dc:	30800530 	cmpltui	r2,r6,20
  8090e0:	10000926 	beq	r2,zero,809108 <_calloc_r+0x74>
  8090e4:	2005883a 	mov	r2,r4
  8090e8:	10000015 	stw	zero,0(r2)
  8090ec:	10000115 	stw	zero,4(r2)
  8090f0:	10000215 	stw	zero,8(r2)
  8090f4:	2005883a 	mov	r2,r4
  8090f8:	dfc00117 	ldw	ra,4(sp)
  8090fc:	dc000017 	ldw	r16,0(sp)
  809100:	dec00204 	addi	sp,sp,8
  809104:	f800283a 	ret
  809108:	20000015 	stw	zero,0(r4)
  80910c:	20000115 	stw	zero,4(r4)
  809110:	30800728 	cmpgeui	r2,r6,28
  809114:	10000a26 	beq	r2,zero,809140 <_calloc_r+0xac>
  809118:	20000215 	stw	zero,8(r4)
  80911c:	20000315 	stw	zero,12(r4)
  809120:	31800920 	cmpeqi	r6,r6,36
  809124:	3000081e 	bne	r6,zero,809148 <_calloc_r+0xb4>
  809128:	20800404 	addi	r2,r4,16
  80912c:	003fee06 	br	8090e8 <_calloc_r+0x54>
  809130:	000b883a 	mov	r5,zero
  809134:	08060580 	call	806058 <memset>
  809138:	1009883a 	mov	r4,r2
  80913c:	003fed06 	br	8090f4 <_calloc_r+0x60>
  809140:	20800204 	addi	r2,r4,8
  809144:	003fe806 	br	8090e8 <_calloc_r+0x54>
  809148:	20000415 	stw	zero,16(r4)
  80914c:	20800604 	addi	r2,r4,24
  809150:	20000515 	stw	zero,20(r4)
  809154:	003fe406 	br	8090e8 <_calloc_r+0x54>

00809158 <_fclose_r.part.0>:
  809158:	defffc04 	addi	sp,sp,-16
  80915c:	dc800215 	stw	r18,8(sp)
  809160:	dc400115 	stw	r17,4(sp)
  809164:	dc000015 	stw	r16,0(sp)
  809168:	dfc00315 	stw	ra,12(sp)
  80916c:	2821883a 	mov	r16,r5
  809170:	2023883a 	mov	r17,r4
  809174:	080423c0 	call	80423c <__sflush_r>
  809178:	80c00b17 	ldw	r3,44(r16)
  80917c:	1025883a 	mov	r18,r2
  809180:	18000426 	beq	r3,zero,809194 <_fclose_r.part.0+0x3c>
  809184:	81400717 	ldw	r5,28(r16)
  809188:	8809883a 	mov	r4,r17
  80918c:	183ee83a 	callr	r3
  809190:	10001916 	blt	r2,zero,8091f8 <_fclose_r.part.0+0xa0>
  809194:	8080030b 	ldhu	r2,12(r16)
  809198:	1080200c 	andi	r2,r2,128
  80919c:	10001a1e 	bne	r2,zero,809208 <_fclose_r.part.0+0xb0>
  8091a0:	81400c17 	ldw	r5,48(r16)
  8091a4:	28000526 	beq	r5,zero,8091bc <_fclose_r.part.0+0x64>
  8091a8:	80801004 	addi	r2,r16,64
  8091ac:	28800226 	beq	r5,r2,8091b8 <_fclose_r.part.0+0x60>
  8091b0:	8809883a 	mov	r4,r17
  8091b4:	0804a100 	call	804a10 <_free_r>
  8091b8:	80000c15 	stw	zero,48(r16)
  8091bc:	81401117 	ldw	r5,68(r16)
  8091c0:	28000326 	beq	r5,zero,8091d0 <_fclose_r.part.0+0x78>
  8091c4:	8809883a 	mov	r4,r17
  8091c8:	0804a100 	call	804a10 <_free_r>
  8091cc:	80001115 	stw	zero,68(r16)
  8091d0:	08048bc0 	call	8048bc <__sfp_lock_acquire>
  8091d4:	8000030d 	sth	zero,12(r16)
  8091d8:	08048c00 	call	8048c0 <__sfp_lock_release>
  8091dc:	9005883a 	mov	r2,r18
  8091e0:	dfc00317 	ldw	ra,12(sp)
  8091e4:	dc800217 	ldw	r18,8(sp)
  8091e8:	dc400117 	ldw	r17,4(sp)
  8091ec:	dc000017 	ldw	r16,0(sp)
  8091f0:	dec00404 	addi	sp,sp,16
  8091f4:	f800283a 	ret
  8091f8:	8080030b 	ldhu	r2,12(r16)
  8091fc:	04bfffc4 	movi	r18,-1
  809200:	1080200c 	andi	r2,r2,128
  809204:	103fe626 	beq	r2,zero,8091a0 <_fclose_r.part.0+0x48>
  809208:	81400417 	ldw	r5,16(r16)
  80920c:	8809883a 	mov	r4,r17
  809210:	0804a100 	call	804a10 <_free_r>
  809214:	003fe206 	br	8091a0 <_fclose_r.part.0+0x48>

00809218 <_fclose_r>:
  809218:	28001926 	beq	r5,zero,809280 <_fclose_r+0x68>
  80921c:	defffd04 	addi	sp,sp,-12
  809220:	dc000115 	stw	r16,4(sp)
  809224:	dfc00215 	stw	ra,8(sp)
  809228:	2021883a 	mov	r16,r4
  80922c:	20000226 	beq	r4,zero,809238 <_fclose_r+0x20>
  809230:	20800e17 	ldw	r2,56(r4)
  809234:	10000c26 	beq	r2,zero,809268 <_fclose_r+0x50>
  809238:	2880030f 	ldh	r2,12(r5)
  80923c:	1000051e 	bne	r2,zero,809254 <_fclose_r+0x3c>
  809240:	0005883a 	mov	r2,zero
  809244:	dfc00217 	ldw	ra,8(sp)
  809248:	dc000117 	ldw	r16,4(sp)
  80924c:	dec00304 	addi	sp,sp,12
  809250:	f800283a 	ret
  809254:	8009883a 	mov	r4,r16
  809258:	dfc00217 	ldw	ra,8(sp)
  80925c:	dc000117 	ldw	r16,4(sp)
  809260:	dec00304 	addi	sp,sp,12
  809264:	08091581 	jmpi	809158 <_fclose_r.part.0>
  809268:	d9400015 	stw	r5,0(sp)
  80926c:	08048ac0 	call	8048ac <__sinit>
  809270:	d9400017 	ldw	r5,0(sp)
  809274:	2880030f 	ldh	r2,12(r5)
  809278:	103ff126 	beq	r2,zero,809240 <_fclose_r+0x28>
  80927c:	003ff506 	br	809254 <_fclose_r+0x3c>
  809280:	0005883a 	mov	r2,zero
  809284:	f800283a 	ret

00809288 <fclose>:
  809288:	20000826 	beq	r4,zero,8092ac <fclose+0x24>
  80928c:	00802074 	movhi	r2,129
  809290:	200b883a 	mov	r5,r4
  809294:	11084417 	ldw	r4,8464(r2)
  809298:	20000226 	beq	r4,zero,8092a4 <fclose+0x1c>
  80929c:	20800e17 	ldw	r2,56(r4)
  8092a0:	10000526 	beq	r2,zero,8092b8 <fclose+0x30>
  8092a4:	2880030f 	ldh	r2,12(r5)
  8092a8:	1000021e 	bne	r2,zero,8092b4 <fclose+0x2c>
  8092ac:	0005883a 	mov	r2,zero
  8092b0:	f800283a 	ret
  8092b4:	08091581 	jmpi	809158 <_fclose_r.part.0>
  8092b8:	defffd04 	addi	sp,sp,-12
  8092bc:	d9400115 	stw	r5,4(sp)
  8092c0:	d9000015 	stw	r4,0(sp)
  8092c4:	dfc00215 	stw	ra,8(sp)
  8092c8:	08048ac0 	call	8048ac <__sinit>
  8092cc:	d9400117 	ldw	r5,4(sp)
  8092d0:	d9000017 	ldw	r4,0(sp)
  8092d4:	2880030f 	ldh	r2,12(r5)
  8092d8:	10000326 	beq	r2,zero,8092e8 <fclose+0x60>
  8092dc:	dfc00217 	ldw	ra,8(sp)
  8092e0:	dec00304 	addi	sp,sp,12
  8092e4:	08091581 	jmpi	809158 <_fclose_r.part.0>
  8092e8:	0005883a 	mov	r2,zero
  8092ec:	dfc00217 	ldw	ra,8(sp)
  8092f0:	dec00304 	addi	sp,sp,12
  8092f4:	f800283a 	ret

008092f8 <_fiprintf_r>:
  8092f8:	defffe04 	addi	sp,sp,-8
  8092fc:	dfc00015 	stw	ra,0(sp)
  809300:	d9c00115 	stw	r7,4(sp)
  809304:	d9c00104 	addi	r7,sp,4
  809308:	08098cc0 	call	8098cc <_vfiprintf_r>
  80930c:	dfc00017 	ldw	ra,0(sp)
  809310:	dec00204 	addi	sp,sp,8
  809314:	f800283a 	ret

00809318 <fiprintf>:
  809318:	defffd04 	addi	sp,sp,-12
  80931c:	2005883a 	mov	r2,r4
  809320:	dfc00015 	stw	ra,0(sp)
  809324:	d9800115 	stw	r6,4(sp)
  809328:	d9c00215 	stw	r7,8(sp)
  80932c:	00c02074 	movhi	r3,129
  809330:	19084417 	ldw	r4,8464(r3)
  809334:	280d883a 	mov	r6,r5
  809338:	d9c00104 	addi	r7,sp,4
  80933c:	100b883a 	mov	r5,r2
  809340:	08098cc0 	call	8098cc <_vfiprintf_r>
  809344:	dfc00017 	ldw	ra,0(sp)
  809348:	dec00304 	addi	sp,sp,12
  80934c:	f800283a 	ret

00809350 <__fputwc>:
  809350:	defff904 	addi	sp,sp,-28
  809354:	dcc00415 	stw	r19,16(sp)
  809358:	dc800315 	stw	r18,12(sp)
  80935c:	dc000115 	stw	r16,4(sp)
  809360:	dfc00615 	stw	ra,24(sp)
  809364:	dd000515 	stw	r20,20(sp)
  809368:	dc400215 	stw	r17,8(sp)
  80936c:	2025883a 	mov	r18,r4
  809370:	2827883a 	mov	r19,r5
  809374:	3021883a 	mov	r16,r6
  809378:	080967c0 	call	80967c <__locale_mb_cur_max>
  80937c:	10800058 	cmpnei	r2,r2,1
  809380:	1000071e 	bne	r2,zero,8093a0 <__fputwc+0x50>
  809384:	98bfffc4 	addi	r2,r19,-1
  809388:	10803fe8 	cmpgeui	r2,r2,255
  80938c:	1000041e 	bne	r2,zero,8093a0 <__fputwc+0x50>
  809390:	980b883a 	mov	r5,r19
  809394:	dcc000c5 	stb	r19,3(sp)
  809398:	05000044 	movi	r20,1
  80939c:	00000a06 	br	8093c8 <__fputwc+0x78>
  8093a0:	81c01704 	addi	r7,r16,92
  8093a4:	980d883a 	mov	r6,r19
  8093a8:	d94000c4 	addi	r5,sp,3
  8093ac:	9009883a 	mov	r4,r18
  8093b0:	0809a300 	call	809a30 <_wcrtomb_r>
  8093b4:	1029883a 	mov	r20,r2
  8093b8:	10bfffd8 	cmpnei	r2,r2,-1
  8093bc:	10003926 	beq	r2,zero,8094a4 <__fputwc+0x154>
  8093c0:	a0001f26 	beq	r20,zero,809440 <__fputwc+0xf0>
  8093c4:	d94000c3 	ldbu	r5,3(sp)
  8093c8:	0023883a 	mov	r17,zero
  8093cc:	00000a06 	br	8093f8 <__fputwc+0xa8>
  8093d0:	80800017 	ldw	r2,0(r16)
  8093d4:	11400005 	stb	r5,0(r2)
  8093d8:	80c00017 	ldw	r3,0(r16)
  8093dc:	18c00044 	addi	r3,r3,1
  8093e0:	80c00015 	stw	r3,0(r16)
  8093e4:	8c400044 	addi	r17,r17,1
  8093e8:	d88000c4 	addi	r2,sp,3
  8093ec:	1447883a 	add	r3,r2,r17
  8093f0:	8d00132e 	bgeu	r17,r20,809440 <__fputwc+0xf0>
  8093f4:	19400003 	ldbu	r5,0(r3)
  8093f8:	80c00217 	ldw	r3,8(r16)
  8093fc:	18ffffc4 	addi	r3,r3,-1
  809400:	80c00215 	stw	r3,8(r16)
  809404:	183ff20e 	bge	r3,zero,8093d0 <__fputwc+0x80>
  809408:	80800617 	ldw	r2,24(r16)
  80940c:	18801616 	blt	r3,r2,809468 <__fputwc+0x118>
  809410:	80800017 	ldw	r2,0(r16)
  809414:	11400005 	stb	r5,0(r2)
  809418:	80800017 	ldw	r2,0(r16)
  80941c:	10c00003 	ldbu	r3,0(r2)
  809420:	10800044 	addi	r2,r2,1
  809424:	18c002a0 	cmpeqi	r3,r3,10
  809428:	1800171e 	bne	r3,zero,809488 <__fputwc+0x138>
  80942c:	80800015 	stw	r2,0(r16)
  809430:	8c400044 	addi	r17,r17,1
  809434:	d88000c4 	addi	r2,sp,3
  809438:	1447883a 	add	r3,r2,r17
  80943c:	8d3fed36 	bltu	r17,r20,8093f4 <__fputwc+0xa4>
  809440:	9829883a 	mov	r20,r19
  809444:	a005883a 	mov	r2,r20
  809448:	dfc00617 	ldw	ra,24(sp)
  80944c:	dd000517 	ldw	r20,20(sp)
  809450:	dcc00417 	ldw	r19,16(sp)
  809454:	dc800317 	ldw	r18,12(sp)
  809458:	dc400217 	ldw	r17,8(sp)
  80945c:	dc000117 	ldw	r16,4(sp)
  809460:	dec00704 	addi	sp,sp,28
  809464:	f800283a 	ret
  809468:	29403fcc 	andi	r5,r5,255
  80946c:	800d883a 	mov	r6,r16
  809470:	9009883a 	mov	r4,r18
  809474:	08098d00 	call	8098d0 <__swbuf_r>
  809478:	10bfffe0 	cmpeqi	r2,r2,-1
  80947c:	103fd926 	beq	r2,zero,8093e4 <__fputwc+0x94>
  809480:	053fffc4 	movi	r20,-1
  809484:	003fef06 	br	809444 <__fputwc+0xf4>
  809488:	800d883a 	mov	r6,r16
  80948c:	01400284 	movi	r5,10
  809490:	9009883a 	mov	r4,r18
  809494:	08098d00 	call	8098d0 <__swbuf_r>
  809498:	10bfffe0 	cmpeqi	r2,r2,-1
  80949c:	103fd126 	beq	r2,zero,8093e4 <__fputwc+0x94>
  8094a0:	003ff706 	br	809480 <__fputwc+0x130>
  8094a4:	8080030b 	ldhu	r2,12(r16)
  8094a8:	10801014 	ori	r2,r2,64
  8094ac:	8080030d 	sth	r2,12(r16)
  8094b0:	003fe406 	br	809444 <__fputwc+0xf4>

008094b4 <_fputwc_r>:
  8094b4:	3080030b 	ldhu	r2,12(r6)
  8094b8:	10c8000c 	andi	r3,r2,8192
  8094bc:	1800051e 	bne	r3,zero,8094d4 <_fputwc_r+0x20>
  8094c0:	30c01917 	ldw	r3,100(r6)
  8094c4:	10880014 	ori	r2,r2,8192
  8094c8:	3080030d 	sth	r2,12(r6)
  8094cc:	18880014 	ori	r2,r3,8192
  8094d0:	30801915 	stw	r2,100(r6)
  8094d4:	08093501 	jmpi	809350 <__fputwc>

008094d8 <fputwc>:
  8094d8:	defffc04 	addi	sp,sp,-16
  8094dc:	00802074 	movhi	r2,129
  8094e0:	dc000215 	stw	r16,8(sp)
  8094e4:	14084417 	ldw	r16,8464(r2)
  8094e8:	dfc00315 	stw	ra,12(sp)
  8094ec:	280d883a 	mov	r6,r5
  8094f0:	200b883a 	mov	r5,r4
  8094f4:	80000226 	beq	r16,zero,809500 <fputwc+0x28>
  8094f8:	80800e17 	ldw	r2,56(r16)
  8094fc:	10000d26 	beq	r2,zero,809534 <fputwc+0x5c>
  809500:	3080030b 	ldhu	r2,12(r6)
  809504:	10c8000c 	andi	r3,r2,8192
  809508:	1800051e 	bne	r3,zero,809520 <fputwc+0x48>
  80950c:	30c01917 	ldw	r3,100(r6)
  809510:	10880014 	ori	r2,r2,8192
  809514:	3080030d 	sth	r2,12(r6)
  809518:	18880014 	ori	r2,r3,8192
  80951c:	30801915 	stw	r2,100(r6)
  809520:	8009883a 	mov	r4,r16
  809524:	dfc00317 	ldw	ra,12(sp)
  809528:	dc000217 	ldw	r16,8(sp)
  80952c:	dec00404 	addi	sp,sp,16
  809530:	08093501 	jmpi	809350 <__fputwc>
  809534:	d9000015 	stw	r4,0(sp)
  809538:	8009883a 	mov	r4,r16
  80953c:	d9800115 	stw	r6,4(sp)
  809540:	08048ac0 	call	8048ac <__sinit>
  809544:	d9800117 	ldw	r6,4(sp)
  809548:	d9400017 	ldw	r5,0(sp)
  80954c:	003fec06 	br	809500 <fputwc+0x28>

00809550 <_fstat_r>:
  809550:	2807883a 	mov	r3,r5
  809554:	defffe04 	addi	sp,sp,-8
  809558:	dc000015 	stw	r16,0(sp)
  80955c:	00802074 	movhi	r2,129
  809560:	300b883a 	mov	r5,r6
  809564:	2021883a 	mov	r16,r4
  809568:	1809883a 	mov	r4,r3
  80956c:	dfc00115 	stw	ra,4(sp)
  809570:	100f4a15 	stw	zero,15656(r2)
  809574:	080d7800 	call	80d780 <fstat>
  809578:	10ffffd8 	cmpnei	r3,r2,-1
  80957c:	18000426 	beq	r3,zero,809590 <_fstat_r+0x40>
  809580:	dfc00117 	ldw	ra,4(sp)
  809584:	dc000017 	ldw	r16,0(sp)
  809588:	dec00204 	addi	sp,sp,8
  80958c:	f800283a 	ret
  809590:	00c02074 	movhi	r3,129
  809594:	18cf4a17 	ldw	r3,15656(r3)
  809598:	183ff926 	beq	r3,zero,809580 <_fstat_r+0x30>
  80959c:	80c00015 	stw	r3,0(r16)
  8095a0:	dfc00117 	ldw	ra,4(sp)
  8095a4:	dc000017 	ldw	r16,0(sp)
  8095a8:	dec00204 	addi	sp,sp,8
  8095ac:	f800283a 	ret

008095b0 <_isatty_r>:
  8095b0:	defffe04 	addi	sp,sp,-8
  8095b4:	dc000015 	stw	r16,0(sp)
  8095b8:	00802074 	movhi	r2,129
  8095bc:	2021883a 	mov	r16,r4
  8095c0:	2809883a 	mov	r4,r5
  8095c4:	dfc00115 	stw	ra,4(sp)
  8095c8:	100f4a15 	stw	zero,15656(r2)
  8095cc:	080d8980 	call	80d898 <isatty>
  8095d0:	10ffffd8 	cmpnei	r3,r2,-1
  8095d4:	18000426 	beq	r3,zero,8095e8 <_isatty_r+0x38>
  8095d8:	dfc00117 	ldw	ra,4(sp)
  8095dc:	dc000017 	ldw	r16,0(sp)
  8095e0:	dec00204 	addi	sp,sp,8
  8095e4:	f800283a 	ret
  8095e8:	00c02074 	movhi	r3,129
  8095ec:	18cf4a17 	ldw	r3,15656(r3)
  8095f0:	183ff926 	beq	r3,zero,8095d8 <_isatty_r+0x28>
  8095f4:	80c00015 	stw	r3,0(r16)
  8095f8:	dfc00117 	ldw	ra,4(sp)
  8095fc:	dc000017 	ldw	r16,0(sp)
  809600:	dec00204 	addi	sp,sp,8
  809604:	f800283a 	ret

00809608 <_setlocale_r>:
  809608:	30001626 	beq	r6,zero,809664 <_setlocale_r+0x5c>
  80960c:	01402074 	movhi	r5,129
  809610:	defffe04 	addi	sp,sp,-8
  809614:	29406c04 	addi	r5,r5,432
  809618:	3009883a 	mov	r4,r6
  80961c:	dc000015 	stw	r16,0(sp)
  809620:	dfc00115 	stw	ra,4(sp)
  809624:	3021883a 	mov	r16,r6
  809628:	08098140 	call	809814 <strcmp>
  80962c:	1000061e 	bne	r2,zero,809648 <_setlocale_r+0x40>
  809630:	00802074 	movhi	r2,129
  809634:	10806b04 	addi	r2,r2,428
  809638:	dfc00117 	ldw	ra,4(sp)
  80963c:	dc000017 	ldw	r16,0(sp)
  809640:	dec00204 	addi	sp,sp,8
  809644:	f800283a 	ret
  809648:	80800003 	ldbu	r2,0(r16)
  80964c:	10bfef44 	addi	r2,r2,-67
  809650:	10000726 	beq	r2,zero,809670 <_setlocale_r+0x68>
  809654:	80800003 	ldbu	r2,0(r16)
  809658:	103ff526 	beq	r2,zero,809630 <_setlocale_r+0x28>
  80965c:	0005883a 	mov	r2,zero
  809660:	003ff506 	br	809638 <_setlocale_r+0x30>
  809664:	00802074 	movhi	r2,129
  809668:	10806b04 	addi	r2,r2,428
  80966c:	f800283a 	ret
  809670:	80800043 	ldbu	r2,1(r16)
  809674:	103fee26 	beq	r2,zero,809630 <_setlocale_r+0x28>
  809678:	003ff606 	br	809654 <_setlocale_r+0x4c>

0080967c <__locale_mb_cur_max>:
  80967c:	00802074 	movhi	r2,129
  809680:	1083b007 	ldb	r2,3776(r2)
  809684:	f800283a 	ret

00809688 <setlocale>:
  809688:	28001626 	beq	r5,zero,8096e4 <setlocale+0x5c>
  80968c:	defffe04 	addi	sp,sp,-8
  809690:	dc000015 	stw	r16,0(sp)
  809694:	2821883a 	mov	r16,r5
  809698:	01402074 	movhi	r5,129
  80969c:	29406c04 	addi	r5,r5,432
  8096a0:	8009883a 	mov	r4,r16
  8096a4:	dfc00115 	stw	ra,4(sp)
  8096a8:	08098140 	call	809814 <strcmp>
  8096ac:	1000061e 	bne	r2,zero,8096c8 <setlocale+0x40>
  8096b0:	00802074 	movhi	r2,129
  8096b4:	10806b04 	addi	r2,r2,428
  8096b8:	dfc00117 	ldw	ra,4(sp)
  8096bc:	dc000017 	ldw	r16,0(sp)
  8096c0:	dec00204 	addi	sp,sp,8
  8096c4:	f800283a 	ret
  8096c8:	80800003 	ldbu	r2,0(r16)
  8096cc:	10bfef44 	addi	r2,r2,-67
  8096d0:	10000726 	beq	r2,zero,8096f0 <setlocale+0x68>
  8096d4:	80800003 	ldbu	r2,0(r16)
  8096d8:	103ff526 	beq	r2,zero,8096b0 <setlocale+0x28>
  8096dc:	0005883a 	mov	r2,zero
  8096e0:	003ff506 	br	8096b8 <setlocale+0x30>
  8096e4:	00802074 	movhi	r2,129
  8096e8:	10806b04 	addi	r2,r2,428
  8096ec:	f800283a 	ret
  8096f0:	80800043 	ldbu	r2,1(r16)
  8096f4:	103fee26 	beq	r2,zero,8096b0 <setlocale+0x28>
  8096f8:	003ff606 	br	8096d4 <setlocale+0x4c>

008096fc <_lseek_r>:
  8096fc:	2807883a 	mov	r3,r5
  809700:	defffe04 	addi	sp,sp,-8
  809704:	dc000015 	stw	r16,0(sp)
  809708:	300b883a 	mov	r5,r6
  80970c:	00802074 	movhi	r2,129
  809710:	380d883a 	mov	r6,r7
  809714:	2021883a 	mov	r16,r4
  809718:	1809883a 	mov	r4,r3
  80971c:	dfc00115 	stw	ra,4(sp)
  809720:	100f4a15 	stw	zero,15656(r2)
  809724:	080dbd80 	call	80dbd8 <lseek>
  809728:	10ffffd8 	cmpnei	r3,r2,-1
  80972c:	18000426 	beq	r3,zero,809740 <_lseek_r+0x44>
  809730:	dfc00117 	ldw	ra,4(sp)
  809734:	dc000017 	ldw	r16,0(sp)
  809738:	dec00204 	addi	sp,sp,8
  80973c:	f800283a 	ret
  809740:	00c02074 	movhi	r3,129
  809744:	18cf4a17 	ldw	r3,15656(r3)
  809748:	183ff926 	beq	r3,zero,809730 <_lseek_r+0x34>
  80974c:	80c00015 	stw	r3,0(r16)
  809750:	dfc00117 	ldw	ra,4(sp)
  809754:	dc000017 	ldw	r16,0(sp)
  809758:	dec00204 	addi	sp,sp,8
  80975c:	f800283a 	ret

00809760 <_mbtowc_r>:
  809760:	00802074 	movhi	r2,129
  809764:	10839f17 	ldw	r2,3708(r2)
  809768:	1000683a 	jmp	r2

0080976c <__ascii_mbtowc>:
  80976c:	deffff04 	addi	sp,sp,-4
  809770:	28000826 	beq	r5,zero,809794 <__ascii_mbtowc+0x28>
  809774:	30000926 	beq	r6,zero,80979c <__ascii_mbtowc+0x30>
  809778:	38000b26 	beq	r7,zero,8097a8 <__ascii_mbtowc+0x3c>
  80977c:	30800003 	ldbu	r2,0(r6)
  809780:	28800015 	stw	r2,0(r5)
  809784:	30800003 	ldbu	r2,0(r6)
  809788:	1004c03a 	cmpne	r2,r2,zero
  80978c:	dec00104 	addi	sp,sp,4
  809790:	f800283a 	ret
  809794:	d80b883a 	mov	r5,sp
  809798:	303ff71e 	bne	r6,zero,809778 <__ascii_mbtowc+0xc>
  80979c:	0005883a 	mov	r2,zero
  8097a0:	dec00104 	addi	sp,sp,4
  8097a4:	f800283a 	ret
  8097a8:	00bfff84 	movi	r2,-2
  8097ac:	003ff706 	br	80978c <__ascii_mbtowc+0x20>

008097b0 <_read_r>:
  8097b0:	2807883a 	mov	r3,r5
  8097b4:	defffe04 	addi	sp,sp,-8
  8097b8:	dc000015 	stw	r16,0(sp)
  8097bc:	300b883a 	mov	r5,r6
  8097c0:	00802074 	movhi	r2,129
  8097c4:	380d883a 	mov	r6,r7
  8097c8:	2021883a 	mov	r16,r4
  8097cc:	1809883a 	mov	r4,r3
  8097d0:	dfc00115 	stw	ra,4(sp)
  8097d4:	100f4a15 	stw	zero,15656(r2)
  8097d8:	080ddb80 	call	80ddb8 <read>
  8097dc:	10ffffd8 	cmpnei	r3,r2,-1
  8097e0:	18000426 	beq	r3,zero,8097f4 <_read_r+0x44>
  8097e4:	dfc00117 	ldw	ra,4(sp)
  8097e8:	dc000017 	ldw	r16,0(sp)
  8097ec:	dec00204 	addi	sp,sp,8
  8097f0:	f800283a 	ret
  8097f4:	00c02074 	movhi	r3,129
  8097f8:	18cf4a17 	ldw	r3,15656(r3)
  8097fc:	183ff926 	beq	r3,zero,8097e4 <_read_r+0x34>
  809800:	80c00015 	stw	r3,0(r16)
  809804:	dfc00117 	ldw	ra,4(sp)
  809808:	dc000017 	ldw	r16,0(sp)
  80980c:	dec00204 	addi	sp,sp,8
  809810:	f800283a 	ret

00809814 <strcmp>:
  809814:	2144b03a 	or	r2,r4,r5
  809818:	108000cc 	andi	r2,r2,3
  80981c:	1000141e 	bne	r2,zero,809870 <strcmp+0x5c>
  809820:	20800017 	ldw	r2,0(r4)
  809824:	28c00017 	ldw	r3,0(r5)
  809828:	10c0111e 	bne	r2,r3,809870 <strcmp+0x5c>
  80982c:	01ffbff4 	movhi	r7,65279
  809830:	01a02074 	movhi	r6,32897
  809834:	39ffbfc4 	addi	r7,r7,-257
  809838:	31a02004 	addi	r6,r6,-32640
  80983c:	00000306 	br	80984c <strcmp+0x38>
  809840:	20800017 	ldw	r2,0(r4)
  809844:	28c00017 	ldw	r3,0(r5)
  809848:	10c0091e 	bne	r2,r3,809870 <strcmp+0x5c>
  80984c:	11c7883a 	add	r3,r2,r7
  809850:	0084303a 	nor	r2,zero,r2
  809854:	1884703a 	and	r2,r3,r2
  809858:	1184703a 	and	r2,r2,r6
  80985c:	21000104 	addi	r4,r4,4
  809860:	29400104 	addi	r5,r5,4
  809864:	103ff626 	beq	r2,zero,809840 <strcmp+0x2c>
  809868:	0005883a 	mov	r2,zero
  80986c:	f800283a 	ret
  809870:	20c00003 	ldbu	r3,0(r4)
  809874:	18803fcc 	andi	r2,r3,255
  809878:	1080201c 	xori	r2,r2,128
  80987c:	10bfe004 	addi	r2,r2,-128
  809880:	1000071e 	bne	r2,zero,8098a0 <strcmp+0x8c>
  809884:	00000a06 	br	8098b0 <strcmp+0x9c>
  809888:	20c00003 	ldbu	r3,0(r4)
  80988c:	29400044 	addi	r5,r5,1
  809890:	18803fcc 	andi	r2,r3,255
  809894:	1080201c 	xori	r2,r2,128
  809898:	10bfe004 	addi	r2,r2,-128
  80989c:	10000726 	beq	r2,zero,8098bc <strcmp+0xa8>
  8098a0:	29800007 	ldb	r6,0(r5)
  8098a4:	21000044 	addi	r4,r4,1
  8098a8:	30bff726 	beq	r6,r2,809888 <strcmp+0x74>
  8098ac:	18803fcc 	andi	r2,r3,255
  8098b0:	28c00003 	ldbu	r3,0(r5)
  8098b4:	10c5c83a 	sub	r2,r2,r3
  8098b8:	f800283a 	ret
  8098bc:	28c00003 	ldbu	r3,0(r5)
  8098c0:	0005883a 	mov	r2,zero
  8098c4:	10c5c83a 	sub	r2,r2,r3
  8098c8:	f800283a 	ret

008098cc <_vfiprintf_r>:
  8098cc:	0807b401 	jmpi	807b40 <___vfiprintf_internal_r>

008098d0 <__swbuf_r>:
  8098d0:	defffb04 	addi	sp,sp,-20
  8098d4:	dcc00315 	stw	r19,12(sp)
  8098d8:	dc400115 	stw	r17,4(sp)
  8098dc:	dc000015 	stw	r16,0(sp)
  8098e0:	dfc00415 	stw	ra,16(sp)
  8098e4:	dc800215 	stw	r18,8(sp)
  8098e8:	2027883a 	mov	r19,r4
  8098ec:	2823883a 	mov	r17,r5
  8098f0:	3021883a 	mov	r16,r6
  8098f4:	20000226 	beq	r4,zero,809900 <__swbuf_r+0x30>
  8098f8:	20800e17 	ldw	r2,56(r4)
  8098fc:	10003e26 	beq	r2,zero,8099f8 <__swbuf_r+0x128>
  809900:	80800617 	ldw	r2,24(r16)
  809904:	80c0030b 	ldhu	r3,12(r16)
  809908:	80800215 	stw	r2,8(r16)
  80990c:	1880020c 	andi	r2,r3,8
  809910:	10001f26 	beq	r2,zero,809990 <__swbuf_r+0xc0>
  809914:	80800417 	ldw	r2,16(r16)
  809918:	10001d26 	beq	r2,zero,809990 <__swbuf_r+0xc0>
  80991c:	1948000c 	andi	r5,r3,8192
  809920:	8c803fcc 	andi	r18,r17,255
  809924:	28002326 	beq	r5,zero,8099b4 <__swbuf_r+0xe4>
  809928:	80c00017 	ldw	r3,0(r16)
  80992c:	81000517 	ldw	r4,20(r16)
  809930:	1885c83a 	sub	r2,r3,r2
  809934:	1100290e 	bge	r2,r4,8099dc <__swbuf_r+0x10c>
  809938:	10800044 	addi	r2,r2,1
  80993c:	81400217 	ldw	r5,8(r16)
  809940:	19000044 	addi	r4,r3,1
  809944:	81000015 	stw	r4,0(r16)
  809948:	297fffc4 	addi	r5,r5,-1
  80994c:	81400215 	stw	r5,8(r16)
  809950:	1c400005 	stb	r17,0(r3)
  809954:	80c00517 	ldw	r3,20(r16)
  809958:	18802926 	beq	r3,r2,809a00 <__swbuf_r+0x130>
  80995c:	8080030b 	ldhu	r2,12(r16)
  809960:	1080004c 	andi	r2,r2,1
  809964:	10000226 	beq	r2,zero,809970 <__swbuf_r+0xa0>
  809968:	90800298 	cmpnei	r2,r18,10
  80996c:	10002426 	beq	r2,zero,809a00 <__swbuf_r+0x130>
  809970:	9005883a 	mov	r2,r18
  809974:	dfc00417 	ldw	ra,16(sp)
  809978:	dcc00317 	ldw	r19,12(sp)
  80997c:	dc800217 	ldw	r18,8(sp)
  809980:	dc400117 	ldw	r17,4(sp)
  809984:	dc000017 	ldw	r16,0(sp)
  809988:	dec00504 	addi	sp,sp,20
  80998c:	f800283a 	ret
  809990:	800b883a 	mov	r5,r16
  809994:	9809883a 	mov	r4,r19
  809998:	08027700 	call	802770 <__swsetup_r>
  80999c:	10001c1e 	bne	r2,zero,809a10 <__swbuf_r+0x140>
  8099a0:	80c0030b 	ldhu	r3,12(r16)
  8099a4:	80800417 	ldw	r2,16(r16)
  8099a8:	8c803fcc 	andi	r18,r17,255
  8099ac:	1948000c 	andi	r5,r3,8192
  8099b0:	283fdd1e 	bne	r5,zero,809928 <__swbuf_r+0x58>
  8099b4:	81001917 	ldw	r4,100(r16)
  8099b8:	18c80014 	ori	r3,r3,8192
  8099bc:	0177ffc4 	movi	r5,-8193
  8099c0:	2148703a 	and	r4,r4,r5
  8099c4:	80c0030d 	sth	r3,12(r16)
  8099c8:	80c00017 	ldw	r3,0(r16)
  8099cc:	81001915 	stw	r4,100(r16)
  8099d0:	81000517 	ldw	r4,20(r16)
  8099d4:	1885c83a 	sub	r2,r3,r2
  8099d8:	113fd716 	blt	r2,r4,809938 <__swbuf_r+0x68>
  8099dc:	800b883a 	mov	r5,r16
  8099e0:	9809883a 	mov	r4,r19
  8099e4:	08044640 	call	804464 <_fflush_r>
  8099e8:	1000091e 	bne	r2,zero,809a10 <__swbuf_r+0x140>
  8099ec:	80c00017 	ldw	r3,0(r16)
  8099f0:	00800044 	movi	r2,1
  8099f4:	003fd106 	br	80993c <__swbuf_r+0x6c>
  8099f8:	08048ac0 	call	8048ac <__sinit>
  8099fc:	003fc006 	br	809900 <__swbuf_r+0x30>
  809a00:	800b883a 	mov	r5,r16
  809a04:	9809883a 	mov	r4,r19
  809a08:	08044640 	call	804464 <_fflush_r>
  809a0c:	103fd826 	beq	r2,zero,809970 <__swbuf_r+0xa0>
  809a10:	04bfffc4 	movi	r18,-1
  809a14:	003fd606 	br	809970 <__swbuf_r+0xa0>

00809a18 <__swbuf>:
  809a18:	00c02074 	movhi	r3,129
  809a1c:	2005883a 	mov	r2,r4
  809a20:	19084417 	ldw	r4,8464(r3)
  809a24:	280d883a 	mov	r6,r5
  809a28:	100b883a 	mov	r5,r2
  809a2c:	08098d01 	jmpi	8098d0 <__swbuf_r>

00809a30 <_wcrtomb_r>:
  809a30:	defffa04 	addi	sp,sp,-24
  809a34:	dc400415 	stw	r17,16(sp)
  809a38:	dc000315 	stw	r16,12(sp)
  809a3c:	00802074 	movhi	r2,129
  809a40:	dfc00515 	stw	ra,20(sp)
  809a44:	10839e17 	ldw	r2,3704(r2)
  809a48:	2023883a 	mov	r17,r4
  809a4c:	3821883a 	mov	r16,r7
  809a50:	28000826 	beq	r5,zero,809a74 <_wcrtomb_r+0x44>
  809a54:	103ee83a 	callr	r2
  809a58:	10ffffd8 	cmpnei	r3,r2,-1
  809a5c:	18000a26 	beq	r3,zero,809a88 <_wcrtomb_r+0x58>
  809a60:	dfc00517 	ldw	ra,20(sp)
  809a64:	dc400417 	ldw	r17,16(sp)
  809a68:	dc000317 	ldw	r16,12(sp)
  809a6c:	dec00604 	addi	sp,sp,24
  809a70:	f800283a 	ret
  809a74:	000d883a 	mov	r6,zero
  809a78:	d9400084 	addi	r5,sp,2
  809a7c:	103ee83a 	callr	r2
  809a80:	10ffffd8 	cmpnei	r3,r2,-1
  809a84:	183ff61e 	bne	r3,zero,809a60 <_wcrtomb_r+0x30>
  809a88:	00802284 	movi	r2,138
  809a8c:	80000015 	stw	zero,0(r16)
  809a90:	88800015 	stw	r2,0(r17)
  809a94:	00bfffc4 	movi	r2,-1
  809a98:	003ff106 	br	809a60 <_wcrtomb_r+0x30>

00809a9c <wcrtomb>:
  809a9c:	defffa04 	addi	sp,sp,-24
  809aa0:	00c02074 	movhi	r3,129
  809aa4:	dc400415 	stw	r17,16(sp)
  809aa8:	dc000315 	stw	r16,12(sp)
  809aac:	1c484417 	ldw	r17,8464(r3)
  809ab0:	dfc00515 	stw	ra,20(sp)
  809ab4:	00c02074 	movhi	r3,129
  809ab8:	18c39e17 	ldw	r3,3704(r3)
  809abc:	3021883a 	mov	r16,r6
  809ac0:	20000c26 	beq	r4,zero,809af4 <wcrtomb+0x58>
  809ac4:	280d883a 	mov	r6,r5
  809ac8:	800f883a 	mov	r7,r16
  809acc:	200b883a 	mov	r5,r4
  809ad0:	8809883a 	mov	r4,r17
  809ad4:	183ee83a 	callr	r3
  809ad8:	10ffffd8 	cmpnei	r3,r2,-1
  809adc:	18000c26 	beq	r3,zero,809b10 <wcrtomb+0x74>
  809ae0:	dfc00517 	ldw	ra,20(sp)
  809ae4:	dc400417 	ldw	r17,16(sp)
  809ae8:	dc000317 	ldw	r16,12(sp)
  809aec:	dec00604 	addi	sp,sp,24
  809af0:	f800283a 	ret
  809af4:	300f883a 	mov	r7,r6
  809af8:	d9400084 	addi	r5,sp,2
  809afc:	000d883a 	mov	r6,zero
  809b00:	8809883a 	mov	r4,r17
  809b04:	183ee83a 	callr	r3
  809b08:	10ffffd8 	cmpnei	r3,r2,-1
  809b0c:	183ff41e 	bne	r3,zero,809ae0 <wcrtomb+0x44>
  809b10:	00802284 	movi	r2,138
  809b14:	80000015 	stw	zero,0(r16)
  809b18:	88800015 	stw	r2,0(r17)
  809b1c:	00bfffc4 	movi	r2,-1
  809b20:	003fef06 	br	809ae0 <wcrtomb+0x44>

00809b24 <_wctomb_r>:
  809b24:	00802074 	movhi	r2,129
  809b28:	10839e17 	ldw	r2,3704(r2)
  809b2c:	1000683a 	jmp	r2

00809b30 <__ascii_wctomb>:
  809b30:	28000926 	beq	r5,zero,809b58 <__ascii_wctomb+0x28>
  809b34:	30804030 	cmpltui	r2,r6,256
  809b38:	10000326 	beq	r2,zero,809b48 <__ascii_wctomb+0x18>
  809b3c:	29800005 	stb	r6,0(r5)
  809b40:	00800044 	movi	r2,1
  809b44:	f800283a 	ret
  809b48:	00802284 	movi	r2,138
  809b4c:	20800015 	stw	r2,0(r4)
  809b50:	00bfffc4 	movi	r2,-1
  809b54:	f800283a 	ret
  809b58:	0005883a 	mov	r2,zero
  809b5c:	f800283a 	ret

00809b60 <abort>:
  809b60:	deffff04 	addi	sp,sp,-4
  809b64:	01000184 	movi	r4,6
  809b68:	dfc00015 	stw	ra,0(sp)
  809b6c:	0809dec0 	call	809dec <raise>
  809b70:	01000044 	movi	r4,1
  809b74:	080d70c0 	call	80d70c <_exit>

00809b78 <_init_signal_r>:
  809b78:	2080b717 	ldw	r2,732(r4)
  809b7c:	10000226 	beq	r2,zero,809b88 <_init_signal_r+0x10>
  809b80:	0005883a 	mov	r2,zero
  809b84:	f800283a 	ret
  809b88:	defffe04 	addi	sp,sp,-8
  809b8c:	01402004 	movi	r5,128
  809b90:	dc000015 	stw	r16,0(sp)
  809b94:	dfc00115 	stw	ra,4(sp)
  809b98:	2021883a 	mov	r16,r4
  809b9c:	080557c0 	call	80557c <_malloc_r>
  809ba0:	8080b715 	stw	r2,732(r16)
  809ba4:	1009883a 	mov	r4,r2
  809ba8:	10000826 	beq	r2,zero,809bcc <_init_signal_r+0x54>
  809bac:	01802004 	movi	r6,128
  809bb0:	000b883a 	mov	r5,zero
  809bb4:	08060580 	call	806058 <memset>
  809bb8:	0005883a 	mov	r2,zero
  809bbc:	dfc00117 	ldw	ra,4(sp)
  809bc0:	dc000017 	ldw	r16,0(sp)
  809bc4:	dec00204 	addi	sp,sp,8
  809bc8:	f800283a 	ret
  809bcc:	00bfffc4 	movi	r2,-1
  809bd0:	003ffa06 	br	809bbc <_init_signal_r+0x44>

00809bd4 <_signal_r>:
  809bd4:	defffc04 	addi	sp,sp,-16
  809bd8:	dc400115 	stw	r17,4(sp)
  809bdc:	dfc00315 	stw	ra,12(sp)
  809be0:	dc800215 	stw	r18,8(sp)
  809be4:	dc000015 	stw	r16,0(sp)
  809be8:	28800830 	cmpltui	r2,r5,32
  809bec:	2023883a 	mov	r17,r4
  809bf0:	10000e26 	beq	r2,zero,809c2c <_signal_r+0x58>
  809bf4:	20c0b717 	ldw	r3,732(r4)
  809bf8:	2821883a 	mov	r16,r5
  809bfc:	3025883a 	mov	r18,r6
  809c00:	18000e26 	beq	r3,zero,809c3c <_signal_r+0x68>
  809c04:	802090ba 	slli	r16,r16,2
  809c08:	1c21883a 	add	r16,r3,r16
  809c0c:	80800017 	ldw	r2,0(r16)
  809c10:	84800015 	stw	r18,0(r16)
  809c14:	dfc00317 	ldw	ra,12(sp)
  809c18:	dc800217 	ldw	r18,8(sp)
  809c1c:	dc400117 	ldw	r17,4(sp)
  809c20:	dc000017 	ldw	r16,0(sp)
  809c24:	dec00404 	addi	sp,sp,16
  809c28:	f800283a 	ret
  809c2c:	00800584 	movi	r2,22
  809c30:	20800015 	stw	r2,0(r4)
  809c34:	00bfffc4 	movi	r2,-1
  809c38:	003ff606 	br	809c14 <_signal_r+0x40>
  809c3c:	01402004 	movi	r5,128
  809c40:	080557c0 	call	80557c <_malloc_r>
  809c44:	8880b715 	stw	r2,732(r17)
  809c48:	10000626 	beq	r2,zero,809c64 <_signal_r+0x90>
  809c4c:	01802004 	movi	r6,128
  809c50:	000b883a 	mov	r5,zero
  809c54:	1009883a 	mov	r4,r2
  809c58:	08060580 	call	806058 <memset>
  809c5c:	1007883a 	mov	r3,r2
  809c60:	003fe806 	br	809c04 <_signal_r+0x30>
  809c64:	00bfffc4 	movi	r2,-1
  809c68:	003fea06 	br	809c14 <_signal_r+0x40>

00809c6c <_raise_r>:
  809c6c:	28800830 	cmpltui	r2,r5,32
  809c70:	10002b26 	beq	r2,zero,809d20 <_raise_r+0xb4>
  809c74:	2080b717 	ldw	r2,732(r4)
  809c78:	defffd04 	addi	sp,sp,-12
  809c7c:	dc000115 	stw	r16,4(sp)
  809c80:	dfc00215 	stw	ra,8(sp)
  809c84:	2821883a 	mov	r16,r5
  809c88:	10001026 	beq	r2,zero,809ccc <_raise_r+0x60>
  809c8c:	280690ba 	slli	r3,r5,2
  809c90:	10c5883a 	add	r2,r2,r3
  809c94:	10c00017 	ldw	r3,0(r2)
  809c98:	18000c26 	beq	r3,zero,809ccc <_raise_r+0x60>
  809c9c:	19400060 	cmpeqi	r5,r3,1
  809ca0:	28001a1e 	bne	r5,zero,809d0c <_raise_r+0xa0>
  809ca4:	197fffd8 	cmpnei	r5,r3,-1
  809ca8:	28001126 	beq	r5,zero,809cf0 <_raise_r+0x84>
  809cac:	10000015 	stw	zero,0(r2)
  809cb0:	8009883a 	mov	r4,r16
  809cb4:	183ee83a 	callr	r3
  809cb8:	0005883a 	mov	r2,zero
  809cbc:	dfc00217 	ldw	ra,8(sp)
  809cc0:	dc000117 	ldw	r16,4(sp)
  809cc4:	dec00304 	addi	sp,sp,12
  809cc8:	f800283a 	ret
  809ccc:	d9000015 	stw	r4,0(sp)
  809cd0:	080a0c40 	call	80a0c4 <_getpid_r>
  809cd4:	d9000017 	ldw	r4,0(sp)
  809cd8:	800d883a 	mov	r6,r16
  809cdc:	100b883a 	mov	r5,r2
  809ce0:	dfc00217 	ldw	ra,8(sp)
  809ce4:	dc000117 	ldw	r16,4(sp)
  809ce8:	dec00304 	addi	sp,sp,12
  809cec:	080a0641 	jmpi	80a064 <_kill_r>
  809cf0:	00800584 	movi	r2,22
  809cf4:	20800015 	stw	r2,0(r4)
  809cf8:	00800044 	movi	r2,1
  809cfc:	dfc00217 	ldw	ra,8(sp)
  809d00:	dc000117 	ldw	r16,4(sp)
  809d04:	dec00304 	addi	sp,sp,12
  809d08:	f800283a 	ret
  809d0c:	0005883a 	mov	r2,zero
  809d10:	dfc00217 	ldw	ra,8(sp)
  809d14:	dc000117 	ldw	r16,4(sp)
  809d18:	dec00304 	addi	sp,sp,12
  809d1c:	f800283a 	ret
  809d20:	00800584 	movi	r2,22
  809d24:	20800015 	stw	r2,0(r4)
  809d28:	00bfffc4 	movi	r2,-1
  809d2c:	f800283a 	ret

00809d30 <__sigtramp_r>:
  809d30:	28800830 	cmpltui	r2,r5,32
  809d34:	10002b26 	beq	r2,zero,809de4 <__sigtramp_r+0xb4>
  809d38:	20c0b717 	ldw	r3,732(r4)
  809d3c:	defffd04 	addi	sp,sp,-12
  809d40:	dc400115 	stw	r17,4(sp)
  809d44:	dc000015 	stw	r16,0(sp)
  809d48:	dfc00215 	stw	ra,8(sp)
  809d4c:	2821883a 	mov	r16,r5
  809d50:	2023883a 	mov	r17,r4
  809d54:	18001326 	beq	r3,zero,809da4 <__sigtramp_r+0x74>
  809d58:	800490ba 	slli	r2,r16,2
  809d5c:	1887883a 	add	r3,r3,r2
  809d60:	18800017 	ldw	r2,0(r3)
  809d64:	10000d26 	beq	r2,zero,809d9c <__sigtramp_r+0x6c>
  809d68:	113fffe0 	cmpeqi	r4,r2,-1
  809d6c:	2000191e 	bne	r4,zero,809dd4 <__sigtramp_r+0xa4>
  809d70:	11000060 	cmpeqi	r4,r2,1
  809d74:	2000151e 	bne	r4,zero,809dcc <__sigtramp_r+0x9c>
  809d78:	18000015 	stw	zero,0(r3)
  809d7c:	8009883a 	mov	r4,r16
  809d80:	103ee83a 	callr	r2
  809d84:	0005883a 	mov	r2,zero
  809d88:	dfc00217 	ldw	ra,8(sp)
  809d8c:	dc400117 	ldw	r17,4(sp)
  809d90:	dc000017 	ldw	r16,0(sp)
  809d94:	dec00304 	addi	sp,sp,12
  809d98:	f800283a 	ret
  809d9c:	00800044 	movi	r2,1
  809da0:	003ff906 	br	809d88 <__sigtramp_r+0x58>
  809da4:	01402004 	movi	r5,128
  809da8:	080557c0 	call	80557c <_malloc_r>
  809dac:	8880b715 	stw	r2,732(r17)
  809db0:	10000a26 	beq	r2,zero,809ddc <__sigtramp_r+0xac>
  809db4:	01802004 	movi	r6,128
  809db8:	000b883a 	mov	r5,zero
  809dbc:	1009883a 	mov	r4,r2
  809dc0:	08060580 	call	806058 <memset>
  809dc4:	1007883a 	mov	r3,r2
  809dc8:	003fe306 	br	809d58 <__sigtramp_r+0x28>
  809dcc:	008000c4 	movi	r2,3
  809dd0:	003fed06 	br	809d88 <__sigtramp_r+0x58>
  809dd4:	00800084 	movi	r2,2
  809dd8:	003feb06 	br	809d88 <__sigtramp_r+0x58>
  809ddc:	00bfffc4 	movi	r2,-1
  809de0:	003fe906 	br	809d88 <__sigtramp_r+0x58>
  809de4:	00bfffc4 	movi	r2,-1
  809de8:	f800283a 	ret

00809dec <raise>:
  809dec:	defffd04 	addi	sp,sp,-12
  809df0:	dc400115 	stw	r17,4(sp)
  809df4:	00c02074 	movhi	r3,129
  809df8:	dfc00215 	stw	ra,8(sp)
  809dfc:	dc000015 	stw	r16,0(sp)
  809e00:	20800830 	cmpltui	r2,r4,32
  809e04:	1c484417 	ldw	r17,8464(r3)
  809e08:	10002326 	beq	r2,zero,809e98 <raise+0xac>
  809e0c:	8880b717 	ldw	r2,732(r17)
  809e10:	2021883a 	mov	r16,r4
  809e14:	10001026 	beq	r2,zero,809e58 <raise+0x6c>
  809e18:	200690ba 	slli	r3,r4,2
  809e1c:	10c5883a 	add	r2,r2,r3
  809e20:	10c00017 	ldw	r3,0(r2)
  809e24:	18000c26 	beq	r3,zero,809e58 <raise+0x6c>
  809e28:	19400060 	cmpeqi	r5,r3,1
  809e2c:	2800181e 	bne	r5,zero,809e90 <raise+0xa4>
  809e30:	197fffd8 	cmpnei	r5,r3,-1
  809e34:	28001226 	beq	r5,zero,809e80 <raise+0x94>
  809e38:	10000015 	stw	zero,0(r2)
  809e3c:	183ee83a 	callr	r3
  809e40:	0005883a 	mov	r2,zero
  809e44:	dfc00217 	ldw	ra,8(sp)
  809e48:	dc400117 	ldw	r17,4(sp)
  809e4c:	dc000017 	ldw	r16,0(sp)
  809e50:	dec00304 	addi	sp,sp,12
  809e54:	f800283a 	ret
  809e58:	8809883a 	mov	r4,r17
  809e5c:	080a0c40 	call	80a0c4 <_getpid_r>
  809e60:	800d883a 	mov	r6,r16
  809e64:	100b883a 	mov	r5,r2
  809e68:	8809883a 	mov	r4,r17
  809e6c:	dfc00217 	ldw	ra,8(sp)
  809e70:	dc400117 	ldw	r17,4(sp)
  809e74:	dc000017 	ldw	r16,0(sp)
  809e78:	dec00304 	addi	sp,sp,12
  809e7c:	080a0641 	jmpi	80a064 <_kill_r>
  809e80:	00800584 	movi	r2,22
  809e84:	88800015 	stw	r2,0(r17)
  809e88:	00800044 	movi	r2,1
  809e8c:	003fed06 	br	809e44 <raise+0x58>
  809e90:	0005883a 	mov	r2,zero
  809e94:	003feb06 	br	809e44 <raise+0x58>
  809e98:	00800584 	movi	r2,22
  809e9c:	88800015 	stw	r2,0(r17)
  809ea0:	00bfffc4 	movi	r2,-1
  809ea4:	003fe706 	br	809e44 <raise+0x58>

00809ea8 <signal>:
  809ea8:	defffc04 	addi	sp,sp,-16
  809eac:	dc800215 	stw	r18,8(sp)
  809eb0:	00c02074 	movhi	r3,129
  809eb4:	dfc00315 	stw	ra,12(sp)
  809eb8:	dc400115 	stw	r17,4(sp)
  809ebc:	dc000015 	stw	r16,0(sp)
  809ec0:	20800830 	cmpltui	r2,r4,32
  809ec4:	1c884417 	ldw	r18,8464(r3)
  809ec8:	10000e26 	beq	r2,zero,809f04 <signal+0x5c>
  809ecc:	2021883a 	mov	r16,r4
  809ed0:	9100b717 	ldw	r4,732(r18)
  809ed4:	2823883a 	mov	r17,r5
  809ed8:	20000e26 	beq	r4,zero,809f14 <signal+0x6c>
  809edc:	802090ba 	slli	r16,r16,2
  809ee0:	2421883a 	add	r16,r4,r16
  809ee4:	80800017 	ldw	r2,0(r16)
  809ee8:	84400015 	stw	r17,0(r16)
  809eec:	dfc00317 	ldw	ra,12(sp)
  809ef0:	dc800217 	ldw	r18,8(sp)
  809ef4:	dc400117 	ldw	r17,4(sp)
  809ef8:	dc000017 	ldw	r16,0(sp)
  809efc:	dec00404 	addi	sp,sp,16
  809f00:	f800283a 	ret
  809f04:	00800584 	movi	r2,22
  809f08:	90800015 	stw	r2,0(r18)
  809f0c:	00bfffc4 	movi	r2,-1
  809f10:	003ff606 	br	809eec <signal+0x44>
  809f14:	9009883a 	mov	r4,r18
  809f18:	01402004 	movi	r5,128
  809f1c:	080557c0 	call	80557c <_malloc_r>
  809f20:	9080b715 	stw	r2,732(r18)
  809f24:	1009883a 	mov	r4,r2
  809f28:	10000526 	beq	r2,zero,809f40 <signal+0x98>
  809f2c:	01802004 	movi	r6,128
  809f30:	000b883a 	mov	r5,zero
  809f34:	08060580 	call	806058 <memset>
  809f38:	1009883a 	mov	r4,r2
  809f3c:	003fe706 	br	809edc <signal+0x34>
  809f40:	00bfffc4 	movi	r2,-1
  809f44:	003fe906 	br	809eec <signal+0x44>

00809f48 <_init_signal>:
  809f48:	defffe04 	addi	sp,sp,-8
  809f4c:	00802074 	movhi	r2,129
  809f50:	dc000015 	stw	r16,0(sp)
  809f54:	14084417 	ldw	r16,8464(r2)
  809f58:	dfc00115 	stw	ra,4(sp)
  809f5c:	8080b717 	ldw	r2,732(r16)
  809f60:	10000526 	beq	r2,zero,809f78 <_init_signal+0x30>
  809f64:	0005883a 	mov	r2,zero
  809f68:	dfc00117 	ldw	ra,4(sp)
  809f6c:	dc000017 	ldw	r16,0(sp)
  809f70:	dec00204 	addi	sp,sp,8
  809f74:	f800283a 	ret
  809f78:	8009883a 	mov	r4,r16
  809f7c:	01402004 	movi	r5,128
  809f80:	080557c0 	call	80557c <_malloc_r>
  809f84:	8080b715 	stw	r2,732(r16)
  809f88:	1009883a 	mov	r4,r2
  809f8c:	10000426 	beq	r2,zero,809fa0 <_init_signal+0x58>
  809f90:	01802004 	movi	r6,128
  809f94:	000b883a 	mov	r5,zero
  809f98:	08060580 	call	806058 <memset>
  809f9c:	003ff106 	br	809f64 <_init_signal+0x1c>
  809fa0:	00bfffc4 	movi	r2,-1
  809fa4:	003ff006 	br	809f68 <_init_signal+0x20>

00809fa8 <__sigtramp>:
  809fa8:	defffd04 	addi	sp,sp,-12
  809fac:	dc400115 	stw	r17,4(sp)
  809fb0:	00c02074 	movhi	r3,129
  809fb4:	dfc00215 	stw	ra,8(sp)
  809fb8:	dc000015 	stw	r16,0(sp)
  809fbc:	20800830 	cmpltui	r2,r4,32
  809fc0:	1c484417 	ldw	r17,8464(r3)
  809fc4:	10002526 	beq	r2,zero,80a05c <__sigtramp+0xb4>
  809fc8:	88c0b717 	ldw	r3,732(r17)
  809fcc:	2021883a 	mov	r16,r4
  809fd0:	18001326 	beq	r3,zero,80a020 <__sigtramp+0x78>
  809fd4:	800890ba 	slli	r4,r16,2
  809fd8:	1907883a 	add	r3,r3,r4
  809fdc:	18800017 	ldw	r2,0(r3)
  809fe0:	10000d26 	beq	r2,zero,80a018 <__sigtramp+0x70>
  809fe4:	113fffe0 	cmpeqi	r4,r2,-1
  809fe8:	20001a1e 	bne	r4,zero,80a054 <__sigtramp+0xac>
  809fec:	11000060 	cmpeqi	r4,r2,1
  809ff0:	2000161e 	bne	r4,zero,80a04c <__sigtramp+0xa4>
  809ff4:	18000015 	stw	zero,0(r3)
  809ff8:	8009883a 	mov	r4,r16
  809ffc:	103ee83a 	callr	r2
  80a000:	0005883a 	mov	r2,zero
  80a004:	dfc00217 	ldw	ra,8(sp)
  80a008:	dc400117 	ldw	r17,4(sp)
  80a00c:	dc000017 	ldw	r16,0(sp)
  80a010:	dec00304 	addi	sp,sp,12
  80a014:	f800283a 	ret
  80a018:	00800044 	movi	r2,1
  80a01c:	003ff906 	br	80a004 <__sigtramp+0x5c>
  80a020:	01402004 	movi	r5,128
  80a024:	8809883a 	mov	r4,r17
  80a028:	080557c0 	call	80557c <_malloc_r>
  80a02c:	8880b715 	stw	r2,732(r17)
  80a030:	10000a26 	beq	r2,zero,80a05c <__sigtramp+0xb4>
  80a034:	01802004 	movi	r6,128
  80a038:	000b883a 	mov	r5,zero
  80a03c:	1009883a 	mov	r4,r2
  80a040:	08060580 	call	806058 <memset>
  80a044:	1007883a 	mov	r3,r2
  80a048:	003fe206 	br	809fd4 <__sigtramp+0x2c>
  80a04c:	008000c4 	movi	r2,3
  80a050:	003fec06 	br	80a004 <__sigtramp+0x5c>
  80a054:	00800084 	movi	r2,2
  80a058:	003fea06 	br	80a004 <__sigtramp+0x5c>
  80a05c:	00bfffc4 	movi	r2,-1
  80a060:	003fe806 	br	80a004 <__sigtramp+0x5c>

0080a064 <_kill_r>:
  80a064:	2807883a 	mov	r3,r5
  80a068:	defffe04 	addi	sp,sp,-8
  80a06c:	dc000015 	stw	r16,0(sp)
  80a070:	00802074 	movhi	r2,129
  80a074:	300b883a 	mov	r5,r6
  80a078:	2021883a 	mov	r16,r4
  80a07c:	1809883a 	mov	r4,r3
  80a080:	dfc00115 	stw	ra,4(sp)
  80a084:	100f4a15 	stw	zero,15656(r2)
  80a088:	080d9840 	call	80d984 <kill>
  80a08c:	10ffffd8 	cmpnei	r3,r2,-1
  80a090:	18000426 	beq	r3,zero,80a0a4 <_kill_r+0x40>
  80a094:	dfc00117 	ldw	ra,4(sp)
  80a098:	dc000017 	ldw	r16,0(sp)
  80a09c:	dec00204 	addi	sp,sp,8
  80a0a0:	f800283a 	ret
  80a0a4:	00c02074 	movhi	r3,129
  80a0a8:	18cf4a17 	ldw	r3,15656(r3)
  80a0ac:	183ff926 	beq	r3,zero,80a094 <_kill_r+0x30>
  80a0b0:	80c00015 	stw	r3,0(r16)
  80a0b4:	dfc00117 	ldw	ra,4(sp)
  80a0b8:	dc000017 	ldw	r16,0(sp)
  80a0bc:	dec00204 	addi	sp,sp,8
  80a0c0:	f800283a 	ret

0080a0c4 <_getpid_r>:
  80a0c4:	080d83c1 	jmpi	80d83c <getpid>

0080a0c8 <__udivdi3>:
  80a0c8:	defff504 	addi	sp,sp,-44
  80a0cc:	dd000515 	stw	r20,20(sp)
  80a0d0:	dc800315 	stw	r18,12(sp)
  80a0d4:	dfc00a15 	stw	ra,40(sp)
  80a0d8:	df000915 	stw	fp,36(sp)
  80a0dc:	ddc00815 	stw	r23,32(sp)
  80a0e0:	dd800715 	stw	r22,28(sp)
  80a0e4:	dd400615 	stw	r21,24(sp)
  80a0e8:	dcc00415 	stw	r19,16(sp)
  80a0ec:	dc400215 	stw	r17,8(sp)
  80a0f0:	dc000115 	stw	r16,4(sp)
  80a0f4:	2029883a 	mov	r20,r4
  80a0f8:	2825883a 	mov	r18,r5
  80a0fc:	3800461e 	bne	r7,zero,80a218 <__udivdi3+0x150>
  80a100:	3823883a 	mov	r17,r7
  80a104:	3021883a 	mov	r16,r6
  80a108:	2027883a 	mov	r19,r4
  80a10c:	2980622e 	bgeu	r5,r6,80a298 <__udivdi3+0x1d0>
  80a110:	00bfffd4 	movui	r2,65535
  80a114:	282b883a 	mov	r21,r5
  80a118:	1180aa2e 	bgeu	r2,r6,80a3c4 <__udivdi3+0x2fc>
  80a11c:	00804034 	movhi	r2,256
  80a120:	30815a36 	bltu	r6,r2,80a68c <__udivdi3+0x5c4>
  80a124:	3006d63a 	srli	r3,r6,24
  80a128:	04400604 	movi	r17,24
  80a12c:	00802074 	movhi	r2,129
  80a130:	1885883a 	add	r2,r3,r2
  80a134:	10811003 	ldbu	r2,1088(r2)
  80a138:	00c00804 	movi	r3,32
  80a13c:	1463883a 	add	r17,r2,r17
  80a140:	1c45c83a 	sub	r2,r3,r17
  80a144:	1c400526 	beq	r3,r17,80a15c <__udivdi3+0x94>
  80a148:	9086983a 	sll	r3,r18,r2
  80a14c:	a462d83a 	srl	r17,r20,r17
  80a150:	30a0983a 	sll	r16,r6,r2
  80a154:	a0a6983a 	sll	r19,r20,r2
  80a158:	88eab03a 	or	r21,r17,r3
  80a15c:	802cd43a 	srli	r22,r16,16
  80a160:	a809883a 	mov	r4,r21
  80a164:	853fffcc 	andi	r20,r16,65535
  80a168:	b00b883a 	mov	r5,r22
  80a16c:	080ae040 	call	80ae04 <__umodsi3>
  80a170:	a809883a 	mov	r4,r21
  80a174:	b00b883a 	mov	r5,r22
  80a178:	1025883a 	mov	r18,r2
  80a17c:	080ada00 	call	80ada0 <__udivsi3>
  80a180:	a009883a 	mov	r4,r20
  80a184:	100b883a 	mov	r5,r2
  80a188:	102b883a 	mov	r21,r2
  80a18c:	080ae600 	call	80ae60 <__mulsi3>
  80a190:	9024943a 	slli	r18,r18,16
  80a194:	9808d43a 	srli	r4,r19,16
  80a198:	9108b03a 	or	r4,r18,r4
  80a19c:	2080052e 	bgeu	r4,r2,80a1b4 <__udivdi3+0xec>
  80a1a0:	2409883a 	add	r4,r4,r16
  80a1a4:	a8ffffc4 	addi	r3,r21,-1
  80a1a8:	24000136 	bltu	r4,r16,80a1b0 <__udivdi3+0xe8>
  80a1ac:	20814836 	bltu	r4,r2,80a6d0 <__udivdi3+0x608>
  80a1b0:	182b883a 	mov	r21,r3
  80a1b4:	20a3c83a 	sub	r17,r4,r2
  80a1b8:	8809883a 	mov	r4,r17
  80a1bc:	b00b883a 	mov	r5,r22
  80a1c0:	080ae040 	call	80ae04 <__umodsi3>
  80a1c4:	8809883a 	mov	r4,r17
  80a1c8:	1023883a 	mov	r17,r2
  80a1cc:	b00b883a 	mov	r5,r22
  80a1d0:	8822943a 	slli	r17,r17,16
  80a1d4:	080ada00 	call	80ada0 <__udivsi3>
  80a1d8:	100b883a 	mov	r5,r2
  80a1dc:	a009883a 	mov	r4,r20
  80a1e0:	9cffffcc 	andi	r19,r19,65535
  80a1e4:	1025883a 	mov	r18,r2
  80a1e8:	8ce6b03a 	or	r19,r17,r19
  80a1ec:	080ae600 	call	80ae60 <__mulsi3>
  80a1f0:	9880052e 	bgeu	r19,r2,80a208 <__udivdi3+0x140>
  80a1f4:	84e7883a 	add	r19,r16,r19
  80a1f8:	90ffffc4 	addi	r3,r18,-1
  80a1fc:	9c000136 	bltu	r19,r16,80a204 <__udivdi3+0x13c>
  80a200:	98813136 	bltu	r19,r2,80a6c8 <__udivdi3+0x600>
  80a204:	1825883a 	mov	r18,r3
  80a208:	a80c943a 	slli	r6,r21,16
  80a20c:	0007883a 	mov	r3,zero
  80a210:	3484b03a 	or	r2,r6,r18
  80a214:	00000306 	br	80a224 <__udivdi3+0x15c>
  80a218:	29c00e2e 	bgeu	r5,r7,80a254 <__udivdi3+0x18c>
  80a21c:	0007883a 	mov	r3,zero
  80a220:	0005883a 	mov	r2,zero
  80a224:	dfc00a17 	ldw	ra,40(sp)
  80a228:	df000917 	ldw	fp,36(sp)
  80a22c:	ddc00817 	ldw	r23,32(sp)
  80a230:	dd800717 	ldw	r22,28(sp)
  80a234:	dd400617 	ldw	r21,24(sp)
  80a238:	dd000517 	ldw	r20,20(sp)
  80a23c:	dcc00417 	ldw	r19,16(sp)
  80a240:	dc800317 	ldw	r18,12(sp)
  80a244:	dc400217 	ldw	r17,8(sp)
  80a248:	dc000117 	ldw	r16,4(sp)
  80a24c:	dec00b04 	addi	sp,sp,44
  80a250:	f800283a 	ret
  80a254:	00bfffd4 	movui	r2,65535
  80a258:	11c05f2e 	bgeu	r2,r7,80a3d8 <__udivdi3+0x310>
  80a25c:	00804034 	movhi	r2,256
  80a260:	3880fc36 	bltu	r7,r2,80a654 <__udivdi3+0x58c>
  80a264:	3804d63a 	srli	r2,r7,24
  80a268:	01000604 	movi	r4,24
  80a26c:	00c02074 	movhi	r3,129
  80a270:	10c7883a 	add	r3,r2,r3
  80a274:	18811003 	ldbu	r2,1088(r3)
  80a278:	00c00804 	movi	r3,32
  80a27c:	1105883a 	add	r2,r2,r4
  80a280:	18a3c83a 	sub	r17,r3,r2
  80a284:	1880901e 	bne	r3,r2,80a4c8 <__udivdi3+0x400>
  80a288:	3c80f736 	bltu	r7,r18,80a668 <__udivdi3+0x5a0>
  80a28c:	a185403a 	cmpgeu	r2,r20,r6
  80a290:	0007883a 	mov	r3,zero
  80a294:	003fe306 	br	80a224 <__udivdi3+0x15c>
  80a298:	3000041e 	bne	r6,zero,80a2ac <__udivdi3+0x1e4>
  80a29c:	000b883a 	mov	r5,zero
  80a2a0:	01000044 	movi	r4,1
  80a2a4:	080ada00 	call	80ada0 <__udivsi3>
  80a2a8:	1021883a 	mov	r16,r2
  80a2ac:	00bfffd4 	movui	r2,65535
  80a2b0:	14003f2e 	bgeu	r2,r16,80a3b0 <__udivdi3+0x2e8>
  80a2b4:	00804034 	movhi	r2,256
  80a2b8:	8080f136 	bltu	r16,r2,80a680 <__udivdi3+0x5b8>
  80a2bc:	8006d63a 	srli	r3,r16,24
  80a2c0:	04400604 	movi	r17,24
  80a2c4:	00802074 	movhi	r2,129
  80a2c8:	1885883a 	add	r2,r3,r2
  80a2cc:	10811003 	ldbu	r2,1088(r2)
  80a2d0:	00c00804 	movi	r3,32
  80a2d4:	1463883a 	add	r17,r2,r17
  80a2d8:	1c45c83a 	sub	r2,r3,r17
  80a2dc:	1c40431e 	bne	r3,r17,80a3ec <__udivdi3+0x324>
  80a2e0:	802cd43a 	srli	r22,r16,16
  80a2e4:	9423c83a 	sub	r17,r18,r16
  80a2e8:	853fffcc 	andi	r20,r16,65535
  80a2ec:	00c00044 	movi	r3,1
  80a2f0:	b00b883a 	mov	r5,r22
  80a2f4:	8809883a 	mov	r4,r17
  80a2f8:	d8c00015 	stw	r3,0(sp)
  80a2fc:	080ae040 	call	80ae04 <__umodsi3>
  80a300:	b00b883a 	mov	r5,r22
  80a304:	8809883a 	mov	r4,r17
  80a308:	1025883a 	mov	r18,r2
  80a30c:	080ada00 	call	80ada0 <__udivsi3>
  80a310:	1009883a 	mov	r4,r2
  80a314:	a00b883a 	mov	r5,r20
  80a318:	102b883a 	mov	r21,r2
  80a31c:	080ae600 	call	80ae60 <__mulsi3>
  80a320:	9024943a 	slli	r18,r18,16
  80a324:	9808d43a 	srli	r4,r19,16
  80a328:	d8c00017 	ldw	r3,0(sp)
  80a32c:	9108b03a 	or	r4,r18,r4
  80a330:	2080052e 	bgeu	r4,r2,80a348 <__udivdi3+0x280>
  80a334:	2409883a 	add	r4,r4,r16
  80a338:	a97fffc4 	addi	r5,r21,-1
  80a33c:	24000136 	bltu	r4,r16,80a344 <__udivdi3+0x27c>
  80a340:	2080e636 	bltu	r4,r2,80a6dc <__udivdi3+0x614>
  80a344:	282b883a 	mov	r21,r5
  80a348:	20a3c83a 	sub	r17,r4,r2
  80a34c:	8809883a 	mov	r4,r17
  80a350:	b00b883a 	mov	r5,r22
  80a354:	d8c00015 	stw	r3,0(sp)
  80a358:	080ae040 	call	80ae04 <__umodsi3>
  80a35c:	8809883a 	mov	r4,r17
  80a360:	1023883a 	mov	r17,r2
  80a364:	b00b883a 	mov	r5,r22
  80a368:	8822943a 	slli	r17,r17,16
  80a36c:	080ada00 	call	80ada0 <__udivsi3>
  80a370:	a00b883a 	mov	r5,r20
  80a374:	1009883a 	mov	r4,r2
  80a378:	9cffffcc 	andi	r19,r19,65535
  80a37c:	1025883a 	mov	r18,r2
  80a380:	8ce6b03a 	or	r19,r17,r19
  80a384:	080ae600 	call	80ae60 <__mulsi3>
  80a388:	d8c00017 	ldw	r3,0(sp)
  80a38c:	9880052e 	bgeu	r19,r2,80a3a4 <__udivdi3+0x2dc>
  80a390:	84e7883a 	add	r19,r16,r19
  80a394:	913fffc4 	addi	r4,r18,-1
  80a398:	9c000136 	bltu	r19,r16,80a3a0 <__udivdi3+0x2d8>
  80a39c:	9880c836 	bltu	r19,r2,80a6c0 <__udivdi3+0x5f8>
  80a3a0:	2025883a 	mov	r18,r4
  80a3a4:	a80c943a 	slli	r6,r21,16
  80a3a8:	3484b03a 	or	r2,r6,r18
  80a3ac:	003f9d06 	br	80a224 <__udivdi3+0x15c>
  80a3b0:	80804030 	cmpltui	r2,r16,256
  80a3b4:	1000b81e 	bne	r2,zero,80a698 <__udivdi3+0x5d0>
  80a3b8:	8006d23a 	srli	r3,r16,8
  80a3bc:	04400204 	movi	r17,8
  80a3c0:	003fc006 	br	80a2c4 <__udivdi3+0x1fc>
  80a3c4:	30804030 	cmpltui	r2,r6,256
  80a3c8:	1000a51e 	bne	r2,zero,80a660 <__udivdi3+0x598>
  80a3cc:	3006d23a 	srli	r3,r6,8
  80a3d0:	04400204 	movi	r17,8
  80a3d4:	003f5506 	br	80a12c <__udivdi3+0x64>
  80a3d8:	38804030 	cmpltui	r2,r7,256
  80a3dc:	1000a51e 	bne	r2,zero,80a674 <__udivdi3+0x5ac>
  80a3e0:	3804d23a 	srli	r2,r7,8
  80a3e4:	01000204 	movi	r4,8
  80a3e8:	003fa006 	br	80a26c <__udivdi3+0x1a4>
  80a3ec:	80a0983a 	sll	r16,r16,r2
  80a3f0:	946ed83a 	srl	r23,r18,r17
  80a3f4:	9086983a 	sll	r3,r18,r2
  80a3f8:	802cd43a 	srli	r22,r16,16
  80a3fc:	a462d83a 	srl	r17,r20,r17
  80a400:	b809883a 	mov	r4,r23
  80a404:	b00b883a 	mov	r5,r22
  80a408:	88eab03a 	or	r21,r17,r3
  80a40c:	a0a6983a 	sll	r19,r20,r2
  80a410:	080ae040 	call	80ae04 <__umodsi3>
  80a414:	b809883a 	mov	r4,r23
  80a418:	b00b883a 	mov	r5,r22
  80a41c:	1025883a 	mov	r18,r2
  80a420:	853fffcc 	andi	r20,r16,65535
  80a424:	080ada00 	call	80ada0 <__udivsi3>
  80a428:	a009883a 	mov	r4,r20
  80a42c:	100b883a 	mov	r5,r2
  80a430:	102f883a 	mov	r23,r2
  80a434:	080ae600 	call	80ae60 <__mulsi3>
  80a438:	9024943a 	slli	r18,r18,16
  80a43c:	a808d43a 	srli	r4,r21,16
  80a440:	9108b03a 	or	r4,r18,r4
  80a444:	2080062e 	bgeu	r4,r2,80a460 <__udivdi3+0x398>
  80a448:	2409883a 	add	r4,r4,r16
  80a44c:	b8ffffc4 	addi	r3,r23,-1
  80a450:	24009936 	bltu	r4,r16,80a6b8 <__udivdi3+0x5f0>
  80a454:	2080982e 	bgeu	r4,r2,80a6b8 <__udivdi3+0x5f0>
  80a458:	bdffff84 	addi	r23,r23,-2
  80a45c:	2409883a 	add	r4,r4,r16
  80a460:	20a3c83a 	sub	r17,r4,r2
  80a464:	8809883a 	mov	r4,r17
  80a468:	b00b883a 	mov	r5,r22
  80a46c:	080ae040 	call	80ae04 <__umodsi3>
  80a470:	1025883a 	mov	r18,r2
  80a474:	8809883a 	mov	r4,r17
  80a478:	b00b883a 	mov	r5,r22
  80a47c:	9024943a 	slli	r18,r18,16
  80a480:	080ada00 	call	80ada0 <__udivsi3>
  80a484:	100b883a 	mov	r5,r2
  80a488:	a009883a 	mov	r4,r20
  80a48c:	ac7fffcc 	andi	r17,r21,65535
  80a490:	1039883a 	mov	fp,r2
  80a494:	9462b03a 	or	r17,r18,r17
  80a498:	080ae600 	call	80ae60 <__mulsi3>
  80a49c:	8880062e 	bgeu	r17,r2,80a4b8 <__udivdi3+0x3f0>
  80a4a0:	8c23883a 	add	r17,r17,r16
  80a4a4:	e0ffffc4 	addi	r3,fp,-1
  80a4a8:	8c007f36 	bltu	r17,r16,80a6a8 <__udivdi3+0x5e0>
  80a4ac:	88807e2e 	bgeu	r17,r2,80a6a8 <__udivdi3+0x5e0>
  80a4b0:	e73fff84 	addi	fp,fp,-2
  80a4b4:	8c23883a 	add	r17,r17,r16
  80a4b8:	b806943a 	slli	r3,r23,16
  80a4bc:	88a3c83a 	sub	r17,r17,r2
  80a4c0:	1f06b03a 	or	r3,r3,fp
  80a4c4:	003f8a06 	br	80a2f0 <__udivdi3+0x228>
  80a4c8:	30a6d83a 	srl	r19,r6,r2
  80a4cc:	3c4e983a 	sll	r7,r7,r17
  80a4d0:	90a0d83a 	srl	r16,r18,r2
  80a4d4:	9446983a 	sll	r3,r18,r17
  80a4d8:	99e6b03a 	or	r19,r19,r7
  80a4dc:	a084d83a 	srl	r2,r20,r2
  80a4e0:	9838d43a 	srli	fp,r19,16
  80a4e4:	8009883a 	mov	r4,r16
  80a4e8:	10eab03a 	or	r21,r2,r3
  80a4ec:	e00b883a 	mov	r5,fp
  80a4f0:	346c983a 	sll	r22,r6,r17
  80a4f4:	dd400015 	stw	r21,0(sp)
  80a4f8:	080ae040 	call	80ae04 <__umodsi3>
  80a4fc:	8009883a 	mov	r4,r16
  80a500:	e00b883a 	mov	r5,fp
  80a504:	102f883a 	mov	r23,r2
  80a508:	9cbfffcc 	andi	r18,r19,65535
  80a50c:	080ada00 	call	80ada0 <__udivsi3>
  80a510:	9009883a 	mov	r4,r18
  80a514:	100b883a 	mov	r5,r2
  80a518:	1021883a 	mov	r16,r2
  80a51c:	080ae600 	call	80ae60 <__mulsi3>
  80a520:	b82e943a 	slli	r23,r23,16
  80a524:	a808d43a 	srli	r4,r21,16
  80a528:	b908b03a 	or	r4,r23,r4
  80a52c:	2080062e 	bgeu	r4,r2,80a548 <__udivdi3+0x480>
  80a530:	24c9883a 	add	r4,r4,r19
  80a534:	817fffc4 	addi	r5,r16,-1
  80a538:	24c05d36 	bltu	r4,r19,80a6b0 <__udivdi3+0x5e8>
  80a53c:	20805c2e 	bgeu	r4,r2,80a6b0 <__udivdi3+0x5e8>
  80a540:	843fff84 	addi	r16,r16,-2
  80a544:	24c9883a 	add	r4,r4,r19
  80a548:	20abc83a 	sub	r21,r4,r2
  80a54c:	a809883a 	mov	r4,r21
  80a550:	e00b883a 	mov	r5,fp
  80a554:	080ae040 	call	80ae04 <__umodsi3>
  80a558:	a809883a 	mov	r4,r21
  80a55c:	e00b883a 	mov	r5,fp
  80a560:	102b883a 	mov	r21,r2
  80a564:	080ada00 	call	80ada0 <__udivsi3>
  80a568:	9009883a 	mov	r4,r18
  80a56c:	100b883a 	mov	r5,r2
  80a570:	102f883a 	mov	r23,r2
  80a574:	080ae600 	call	80ae60 <__mulsi3>
  80a578:	d8c00017 	ldw	r3,0(sp)
  80a57c:	a82a943a 	slli	r21,r21,16
  80a580:	100d883a 	mov	r6,r2
  80a584:	1cbfffcc 	andi	r18,r3,65535
  80a588:	aca4b03a 	or	r18,r21,r18
  80a58c:	9080062e 	bgeu	r18,r2,80a5a8 <__udivdi3+0x4e0>
  80a590:	94e5883a 	add	r18,r18,r19
  80a594:	b8bfffc4 	addi	r2,r23,-1
  80a598:	94c04136 	bltu	r18,r19,80a6a0 <__udivdi3+0x5d8>
  80a59c:	9180402e 	bgeu	r18,r6,80a6a0 <__udivdi3+0x5d8>
  80a5a0:	bdffff84 	addi	r23,r23,-2
  80a5a4:	94e5883a 	add	r18,r18,r19
  80a5a8:	8004943a 	slli	r2,r16,16
  80a5ac:	bd7fffcc 	andi	r21,r23,65535
  80a5b0:	b73fffcc 	andi	fp,r22,65535
  80a5b4:	15e0b03a 	or	r16,r2,r23
  80a5b8:	8026d43a 	srli	r19,r16,16
  80a5bc:	a809883a 	mov	r4,r21
  80a5c0:	e00b883a 	mov	r5,fp
  80a5c4:	91a5c83a 	sub	r18,r18,r6
  80a5c8:	b02cd43a 	srli	r22,r22,16
  80a5cc:	080ae600 	call	80ae60 <__mulsi3>
  80a5d0:	9809883a 	mov	r4,r19
  80a5d4:	e00b883a 	mov	r5,fp
  80a5d8:	102f883a 	mov	r23,r2
  80a5dc:	080ae600 	call	80ae60 <__mulsi3>
  80a5e0:	9809883a 	mov	r4,r19
  80a5e4:	b00b883a 	mov	r5,r22
  80a5e8:	1027883a 	mov	r19,r2
  80a5ec:	080ae600 	call	80ae60 <__mulsi3>
  80a5f0:	a809883a 	mov	r4,r21
  80a5f4:	b00b883a 	mov	r5,r22
  80a5f8:	102b883a 	mov	r21,r2
  80a5fc:	080ae600 	call	80ae60 <__mulsi3>
  80a600:	b806d43a 	srli	r3,r23,16
  80a604:	14c5883a 	add	r2,r2,r19
  80a608:	1887883a 	add	r3,r3,r2
  80a60c:	1cc0022e 	bgeu	r3,r19,80a618 <__udivdi3+0x550>
  80a610:	00800074 	movhi	r2,1
  80a614:	a8ab883a 	add	r21,r21,r2
  80a618:	1804d43a 	srli	r2,r3,16
  80a61c:	156b883a 	add	r21,r2,r21
  80a620:	95400936 	bltu	r18,r21,80a648 <__udivdi3+0x580>
  80a624:	95400326 	beq	r18,r21,80a634 <__udivdi3+0x56c>
  80a628:	8005883a 	mov	r2,r16
  80a62c:	0007883a 	mov	r3,zero
  80a630:	003efc06 	br	80a224 <__udivdi3+0x15c>
  80a634:	1806943a 	slli	r3,r3,16
  80a638:	a44c983a 	sll	r6,r20,r17
  80a63c:	bdffffcc 	andi	r23,r23,65535
  80a640:	1dc7883a 	add	r3,r3,r23
  80a644:	30fff82e 	bgeu	r6,r3,80a628 <__udivdi3+0x560>
  80a648:	80bfffc4 	addi	r2,r16,-1
  80a64c:	0007883a 	mov	r3,zero
  80a650:	003ef406 	br	80a224 <__udivdi3+0x15c>
  80a654:	3804d43a 	srli	r2,r7,16
  80a658:	01000404 	movi	r4,16
  80a65c:	003f0306 	br	80a26c <__udivdi3+0x1a4>
  80a660:	3007883a 	mov	r3,r6
  80a664:	003eb106 	br	80a12c <__udivdi3+0x64>
  80a668:	0007883a 	mov	r3,zero
  80a66c:	00800044 	movi	r2,1
  80a670:	003eec06 	br	80a224 <__udivdi3+0x15c>
  80a674:	3805883a 	mov	r2,r7
  80a678:	0009883a 	mov	r4,zero
  80a67c:	003efb06 	br	80a26c <__udivdi3+0x1a4>
  80a680:	8006d43a 	srli	r3,r16,16
  80a684:	04400404 	movi	r17,16
  80a688:	003f0e06 	br	80a2c4 <__udivdi3+0x1fc>
  80a68c:	3006d43a 	srli	r3,r6,16
  80a690:	04400404 	movi	r17,16
  80a694:	003ea506 	br	80a12c <__udivdi3+0x64>
  80a698:	8007883a 	mov	r3,r16
  80a69c:	003f0906 	br	80a2c4 <__udivdi3+0x1fc>
  80a6a0:	102f883a 	mov	r23,r2
  80a6a4:	003fc006 	br	80a5a8 <__udivdi3+0x4e0>
  80a6a8:	1839883a 	mov	fp,r3
  80a6ac:	003f8206 	br	80a4b8 <__udivdi3+0x3f0>
  80a6b0:	2821883a 	mov	r16,r5
  80a6b4:	003fa406 	br	80a548 <__udivdi3+0x480>
  80a6b8:	182f883a 	mov	r23,r3
  80a6bc:	003f6806 	br	80a460 <__udivdi3+0x398>
  80a6c0:	94bfff84 	addi	r18,r18,-2
  80a6c4:	003f3706 	br	80a3a4 <__udivdi3+0x2dc>
  80a6c8:	94bfff84 	addi	r18,r18,-2
  80a6cc:	003ece06 	br	80a208 <__udivdi3+0x140>
  80a6d0:	ad7fff84 	addi	r21,r21,-2
  80a6d4:	2409883a 	add	r4,r4,r16
  80a6d8:	003eb606 	br	80a1b4 <__udivdi3+0xec>
  80a6dc:	ad7fff84 	addi	r21,r21,-2
  80a6e0:	2409883a 	add	r4,r4,r16
  80a6e4:	003f1806 	br	80a348 <__udivdi3+0x280>

0080a6e8 <__umoddi3>:
  80a6e8:	defff304 	addi	sp,sp,-52
  80a6ec:	dc400415 	stw	r17,16(sp)
  80a6f0:	dc000315 	stw	r16,12(sp)
  80a6f4:	dfc00c15 	stw	ra,48(sp)
  80a6f8:	df000b15 	stw	fp,44(sp)
  80a6fc:	ddc00a15 	stw	r23,40(sp)
  80a700:	dd800915 	stw	r22,36(sp)
  80a704:	dd400815 	stw	r21,32(sp)
  80a708:	dd000715 	stw	r20,28(sp)
  80a70c:	dcc00615 	stw	r19,24(sp)
  80a710:	dc800515 	stw	r18,20(sp)
  80a714:	2823883a 	mov	r17,r5
  80a718:	2021883a 	mov	r16,r4
  80a71c:	38003b1e 	bne	r7,zero,80a80c <__umoddi3+0x124>
  80a720:	3825883a 	mov	r18,r7
  80a724:	3029883a 	mov	r20,r6
  80a728:	2027883a 	mov	r19,r4
  80a72c:	29805b2e 	bgeu	r5,r6,80a89c <__umoddi3+0x1b4>
  80a730:	00bfffd4 	movui	r2,65535
  80a734:	282d883a 	mov	r22,r5
  80a738:	11809a2e 	bgeu	r2,r6,80a9a4 <__umoddi3+0x2bc>
  80a73c:	00804034 	movhi	r2,256
  80a740:	30814436 	bltu	r6,r2,80ac54 <__umoddi3+0x56c>
  80a744:	3006d63a 	srli	r3,r6,24
  80a748:	04800604 	movi	r18,24
  80a74c:	00802074 	movhi	r2,129
  80a750:	1885883a 	add	r2,r3,r2
  80a754:	10811003 	ldbu	r2,1088(r2)
  80a758:	00c00804 	movi	r3,32
  80a75c:	1485883a 	add	r2,r2,r18
  80a760:	18a5c83a 	sub	r18,r3,r2
  80a764:	18800526 	beq	r3,r2,80a77c <__umoddi3+0x94>
  80a768:	8ca2983a 	sll	r17,r17,r18
  80a76c:	8084d83a 	srl	r2,r16,r2
  80a770:	34a8983a 	sll	r20,r6,r18
  80a774:	84a6983a 	sll	r19,r16,r18
  80a778:	146cb03a 	or	r22,r2,r17
  80a77c:	a02ed43a 	srli	r23,r20,16
  80a780:	b009883a 	mov	r4,r22
  80a784:	a57fffcc 	andi	r21,r20,65535
  80a788:	b80b883a 	mov	r5,r23
  80a78c:	080ae040 	call	80ae04 <__umodsi3>
  80a790:	b80b883a 	mov	r5,r23
  80a794:	b009883a 	mov	r4,r22
  80a798:	1023883a 	mov	r17,r2
  80a79c:	080ada00 	call	80ada0 <__udivsi3>
  80a7a0:	a809883a 	mov	r4,r21
  80a7a4:	100b883a 	mov	r5,r2
  80a7a8:	080ae600 	call	80ae60 <__mulsi3>
  80a7ac:	8822943a 	slli	r17,r17,16
  80a7b0:	9808d43a 	srli	r4,r19,16
  80a7b4:	8908b03a 	or	r4,r17,r4
  80a7b8:	2080042e 	bgeu	r4,r2,80a7cc <__umoddi3+0xe4>
  80a7bc:	2509883a 	add	r4,r4,r20
  80a7c0:	25000236 	bltu	r4,r20,80a7cc <__umoddi3+0xe4>
  80a7c4:	2080012e 	bgeu	r4,r2,80a7cc <__umoddi3+0xe4>
  80a7c8:	2509883a 	add	r4,r4,r20
  80a7cc:	20a1c83a 	sub	r16,r4,r2
  80a7d0:	b80b883a 	mov	r5,r23
  80a7d4:	8009883a 	mov	r4,r16
  80a7d8:	080ae040 	call	80ae04 <__umodsi3>
  80a7dc:	b80b883a 	mov	r5,r23
  80a7e0:	8009883a 	mov	r4,r16
  80a7e4:	1023883a 	mov	r17,r2
  80a7e8:	080ada00 	call	80ada0 <__udivsi3>
  80a7ec:	8822943a 	slli	r17,r17,16
  80a7f0:	100b883a 	mov	r5,r2
  80a7f4:	a809883a 	mov	r4,r21
  80a7f8:	080ae600 	call	80ae60 <__mulsi3>
  80a7fc:	98ffffcc 	andi	r3,r19,65535
  80a800:	88c6b03a 	or	r3,r17,r3
  80a804:	18805e2e 	bgeu	r3,r2,80a980 <__umoddi3+0x298>
  80a808:	00005906 	br	80a970 <__umoddi3+0x288>
  80a80c:	2005883a 	mov	r2,r4
  80a810:	29c00d2e 	bgeu	r5,r7,80a848 <__umoddi3+0x160>
  80a814:	2807883a 	mov	r3,r5
  80a818:	dfc00c17 	ldw	ra,48(sp)
  80a81c:	df000b17 	ldw	fp,44(sp)
  80a820:	ddc00a17 	ldw	r23,40(sp)
  80a824:	dd800917 	ldw	r22,36(sp)
  80a828:	dd400817 	ldw	r21,32(sp)
  80a82c:	dd000717 	ldw	r20,28(sp)
  80a830:	dcc00617 	ldw	r19,24(sp)
  80a834:	dc800517 	ldw	r18,20(sp)
  80a838:	dc400417 	ldw	r17,16(sp)
  80a83c:	dc000317 	ldw	r16,12(sp)
  80a840:	dec00d04 	addi	sp,sp,52
  80a844:	f800283a 	ret
  80a848:	013fffd4 	movui	r4,65535
  80a84c:	2807883a 	mov	r3,r5
  80a850:	21c0592e 	bgeu	r4,r7,80a9b8 <__umoddi3+0x2d0>
  80a854:	01004034 	movhi	r4,256
  80a858:	39010336 	bltu	r7,r4,80ac68 <__umoddi3+0x580>
  80a85c:	3808d63a 	srli	r4,r7,24
  80a860:	02000604 	movi	r8,24
  80a864:	01402074 	movhi	r5,129
  80a868:	214b883a 	add	r5,r4,r5
  80a86c:	2d011003 	ldbu	r20,1088(r5)
  80a870:	01000804 	movi	r4,32
  80a874:	a229883a 	add	r20,r20,r8
  80a878:	252bc83a 	sub	r21,r4,r20
  80a87c:	2500531e 	bne	r4,r20,80a9cc <__umoddi3+0x2e4>
  80a880:	3c400136 	bltu	r7,r17,80a888 <__umoddi3+0x1a0>
  80a884:	81bfe436 	bltu	r16,r6,80a818 <__umoddi3+0x130>
  80a888:	8185c83a 	sub	r2,r16,r6
  80a88c:	89cfc83a 	sub	r7,r17,r7
  80a890:	8087803a 	cmpltu	r3,r16,r2
  80a894:	38c7c83a 	sub	r3,r7,r3
  80a898:	003fdf06 	br	80a818 <__umoddi3+0x130>
  80a89c:	3000041e 	bne	r6,zero,80a8b0 <__umoddi3+0x1c8>
  80a8a0:	000b883a 	mov	r5,zero
  80a8a4:	01000044 	movi	r4,1
  80a8a8:	080ada00 	call	80ada0 <__udivsi3>
  80a8ac:	1029883a 	mov	r20,r2
  80a8b0:	00bfffd4 	movui	r2,65535
  80a8b4:	1500362e 	bgeu	r2,r20,80a990 <__umoddi3+0x2a8>
  80a8b8:	00804034 	movhi	r2,256
  80a8bc:	a080ed36 	bltu	r20,r2,80ac74 <__umoddi3+0x58c>
  80a8c0:	a006d63a 	srli	r3,r20,24
  80a8c4:	04800604 	movi	r18,24
  80a8c8:	00802074 	movhi	r2,129
  80a8cc:	1885883a 	add	r2,r3,r2
  80a8d0:	15811003 	ldbu	r22,1088(r2)
  80a8d4:	00800804 	movi	r2,32
  80a8d8:	b4ad883a 	add	r22,r22,r18
  80a8dc:	15a5c83a 	sub	r18,r2,r22
  80a8e0:	1580a51e 	bne	r2,r22,80ab78 <__umoddi3+0x490>
  80a8e4:	a02ed43a 	srli	r23,r20,16
  80a8e8:	8d23c83a 	sub	r17,r17,r20
  80a8ec:	a57fffcc 	andi	r21,r20,65535
  80a8f0:	8809883a 	mov	r4,r17
  80a8f4:	b80b883a 	mov	r5,r23
  80a8f8:	080ae040 	call	80ae04 <__umodsi3>
  80a8fc:	8809883a 	mov	r4,r17
  80a900:	b80b883a 	mov	r5,r23
  80a904:	1023883a 	mov	r17,r2
  80a908:	080ada00 	call	80ada0 <__udivsi3>
  80a90c:	1009883a 	mov	r4,r2
  80a910:	a80b883a 	mov	r5,r21
  80a914:	080ae600 	call	80ae60 <__mulsi3>
  80a918:	8822943a 	slli	r17,r17,16
  80a91c:	9808d43a 	srli	r4,r19,16
  80a920:	8908b03a 	or	r4,r17,r4
  80a924:	2080032e 	bgeu	r4,r2,80a934 <__umoddi3+0x24c>
  80a928:	2509883a 	add	r4,r4,r20
  80a92c:	25000136 	bltu	r4,r20,80a934 <__umoddi3+0x24c>
  80a930:	2080dc36 	bltu	r4,r2,80aca4 <__umoddi3+0x5bc>
  80a934:	20a1c83a 	sub	r16,r4,r2
  80a938:	b80b883a 	mov	r5,r23
  80a93c:	8009883a 	mov	r4,r16
  80a940:	080ae040 	call	80ae04 <__umodsi3>
  80a944:	b80b883a 	mov	r5,r23
  80a948:	8009883a 	mov	r4,r16
  80a94c:	1023883a 	mov	r17,r2
  80a950:	8822943a 	slli	r17,r17,16
  80a954:	080ada00 	call	80ada0 <__udivsi3>
  80a958:	a80b883a 	mov	r5,r21
  80a95c:	1009883a 	mov	r4,r2
  80a960:	080ae600 	call	80ae60 <__mulsi3>
  80a964:	9cffffcc 	andi	r19,r19,65535
  80a968:	8cc6b03a 	or	r3,r17,r19
  80a96c:	1880042e 	bgeu	r3,r2,80a980 <__umoddi3+0x298>
  80a970:	1d07883a 	add	r3,r3,r20
  80a974:	1d000236 	bltu	r3,r20,80a980 <__umoddi3+0x298>
  80a978:	1880012e 	bgeu	r3,r2,80a980 <__umoddi3+0x298>
  80a97c:	1d07883a 	add	r3,r3,r20
  80a980:	1885c83a 	sub	r2,r3,r2
  80a984:	1484d83a 	srl	r2,r2,r18
  80a988:	0007883a 	mov	r3,zero
  80a98c:	003fa206 	br	80a818 <__umoddi3+0x130>
  80a990:	a0804030 	cmpltui	r2,r20,256
  80a994:	1000ba1e 	bne	r2,zero,80ac80 <__umoddi3+0x598>
  80a998:	a006d23a 	srli	r3,r20,8
  80a99c:	04800204 	movi	r18,8
  80a9a0:	003fc906 	br	80a8c8 <__umoddi3+0x1e0>
  80a9a4:	30804030 	cmpltui	r2,r6,256
  80a9a8:	1000ad1e 	bne	r2,zero,80ac60 <__umoddi3+0x578>
  80a9ac:	3006d23a 	srli	r3,r6,8
  80a9b0:	04800204 	movi	r18,8
  80a9b4:	003f6506 	br	80a74c <__umoddi3+0x64>
  80a9b8:	39004030 	cmpltui	r4,r7,256
  80a9bc:	2000b21e 	bne	r4,zero,80ac88 <__umoddi3+0x5a0>
  80a9c0:	3808d23a 	srli	r4,r7,8
  80a9c4:	02000204 	movi	r8,8
  80a9c8:	003fa606 	br	80a864 <__umoddi3+0x17c>
  80a9cc:	3d4e983a 	sll	r7,r7,r21
  80a9d0:	3508d83a 	srl	r4,r6,r20
  80a9d4:	8d2cd83a 	srl	r22,r17,r20
  80a9d8:	8504d83a 	srl	r2,r16,r20
  80a9dc:	21e4b03a 	or	r18,r4,r7
  80a9e0:	8d62983a 	sll	r17,r17,r21
  80a9e4:	9026d43a 	srli	r19,r18,16
  80a9e8:	354c983a 	sll	r6,r6,r21
  80a9ec:	1444b03a 	or	r2,r2,r17
  80a9f0:	b009883a 	mov	r4,r22
  80a9f4:	980b883a 	mov	r5,r19
  80a9f8:	d9800115 	stw	r6,4(sp)
  80a9fc:	d8800015 	stw	r2,0(sp)
  80aa00:	080ae040 	call	80ae04 <__umodsi3>
  80aa04:	980b883a 	mov	r5,r19
  80aa08:	b009883a 	mov	r4,r22
  80aa0c:	102f883a 	mov	r23,r2
  80aa10:	947fffcc 	andi	r17,r18,65535
  80aa14:	080ada00 	call	80ada0 <__udivsi3>
  80aa18:	8809883a 	mov	r4,r17
  80aa1c:	100b883a 	mov	r5,r2
  80aa20:	1039883a 	mov	fp,r2
  80aa24:	080ae600 	call	80ae60 <__mulsi3>
  80aa28:	d8c00017 	ldw	r3,0(sp)
  80aa2c:	b82e943a 	slli	r23,r23,16
  80aa30:	8560983a 	sll	r16,r16,r21
  80aa34:	1808d43a 	srli	r4,r3,16
  80aa38:	b908b03a 	or	r4,r23,r4
  80aa3c:	2080062e 	bgeu	r4,r2,80aa58 <__umoddi3+0x370>
  80aa40:	2489883a 	add	r4,r4,r18
  80aa44:	e17fffc4 	addi	r5,fp,-1
  80aa48:	24809436 	bltu	r4,r18,80ac9c <__umoddi3+0x5b4>
  80aa4c:	2080932e 	bgeu	r4,r2,80ac9c <__umoddi3+0x5b4>
  80aa50:	e73fff84 	addi	fp,fp,-2
  80aa54:	2489883a 	add	r4,r4,r18
  80aa58:	20adc83a 	sub	r22,r4,r2
  80aa5c:	980b883a 	mov	r5,r19
  80aa60:	b009883a 	mov	r4,r22
  80aa64:	080ae040 	call	80ae04 <__umodsi3>
  80aa68:	980b883a 	mov	r5,r19
  80aa6c:	b009883a 	mov	r4,r22
  80aa70:	102f883a 	mov	r23,r2
  80aa74:	080ada00 	call	80ada0 <__udivsi3>
  80aa78:	100b883a 	mov	r5,r2
  80aa7c:	8809883a 	mov	r4,r17
  80aa80:	d8800215 	stw	r2,8(sp)
  80aa84:	080ae600 	call	80ae60 <__mulsi3>
  80aa88:	d8c00017 	ldw	r3,0(sp)
  80aa8c:	b82e943a 	slli	r23,r23,16
  80aa90:	d9400217 	ldw	r5,8(sp)
  80aa94:	1c7fffcc 	andi	r17,r3,65535
  80aa98:	bc62b03a 	or	r17,r23,r17
  80aa9c:	8880062e 	bgeu	r17,r2,80aab8 <__umoddi3+0x3d0>
  80aaa0:	8ca3883a 	add	r17,r17,r18
  80aaa4:	28ffffc4 	addi	r3,r5,-1
  80aaa8:	8c807a36 	bltu	r17,r18,80ac94 <__umoddi3+0x5ac>
  80aaac:	8880792e 	bgeu	r17,r2,80ac94 <__umoddi3+0x5ac>
  80aab0:	297fff84 	addi	r5,r5,-2
  80aab4:	8ca3883a 	add	r17,r17,r18
  80aab8:	e02c943a 	slli	r22,fp,16
  80aabc:	d9c00117 	ldw	r7,4(sp)
  80aac0:	29bfffcc 	andi	r6,r5,65535
  80aac4:	b16cb03a 	or	r22,r22,r5
  80aac8:	38ffffcc 	andi	r3,r7,65535
  80aacc:	b02cd43a 	srli	r22,r22,16
  80aad0:	180b883a 	mov	r5,r3
  80aad4:	3009883a 	mov	r4,r6
  80aad8:	3838d43a 	srli	fp,r7,16
  80aadc:	182f883a 	mov	r23,r3
  80aae0:	d9800015 	stw	r6,0(sp)
  80aae4:	88a3c83a 	sub	r17,r17,r2
  80aae8:	080ae600 	call	80ae60 <__mulsi3>
  80aaec:	b80b883a 	mov	r5,r23
  80aaf0:	b009883a 	mov	r4,r22
  80aaf4:	102f883a 	mov	r23,r2
  80aaf8:	080ae600 	call	80ae60 <__mulsi3>
  80aafc:	e00b883a 	mov	r5,fp
  80ab00:	b009883a 	mov	r4,r22
  80ab04:	102d883a 	mov	r22,r2
  80ab08:	080ae600 	call	80ae60 <__mulsi3>
  80ab0c:	d9800017 	ldw	r6,0(sp)
  80ab10:	e00b883a 	mov	r5,fp
  80ab14:	1039883a 	mov	fp,r2
  80ab18:	3009883a 	mov	r4,r6
  80ab1c:	080ae600 	call	80ae60 <__mulsi3>
  80ab20:	b808d43a 	srli	r4,r23,16
  80ab24:	1585883a 	add	r2,r2,r22
  80ab28:	2089883a 	add	r4,r4,r2
  80ab2c:	2580022e 	bgeu	r4,r22,80ab38 <__umoddi3+0x450>
  80ab30:	00800074 	movhi	r2,1
  80ab34:	e0b9883a 	add	fp,fp,r2
  80ab38:	2006d43a 	srli	r3,r4,16
  80ab3c:	2008943a 	slli	r4,r4,16
  80ab40:	bdffffcc 	andi	r23,r23,65535
  80ab44:	1f07883a 	add	r3,r3,fp
  80ab48:	25c9883a 	add	r4,r4,r23
  80ab4c:	88c03a36 	bltu	r17,r3,80ac38 <__umoddi3+0x550>
  80ab50:	88c03826 	beq	r17,r3,80ac34 <__umoddi3+0x54c>
  80ab54:	8109c83a 	sub	r4,r16,r4
  80ab58:	8121803a 	cmpltu	r16,r16,r4
  80ab5c:	88c7c83a 	sub	r3,r17,r3
  80ab60:	1c07c83a 	sub	r3,r3,r16
  80ab64:	1d04983a 	sll	r2,r3,r20
  80ab68:	2548d83a 	srl	r4,r4,r21
  80ab6c:	1d46d83a 	srl	r3,r3,r21
  80ab70:	1104b03a 	or	r2,r2,r4
  80ab74:	003f2806 	br	80a818 <__umoddi3+0x130>
  80ab78:	a4a8983a 	sll	r20,r20,r18
  80ab7c:	8da6d83a 	srl	r19,r17,r22
  80ab80:	8ca2983a 	sll	r17,r17,r18
  80ab84:	a02ed43a 	srli	r23,r20,16
  80ab88:	9809883a 	mov	r4,r19
  80ab8c:	85acd83a 	srl	r22,r16,r22
  80ab90:	b80b883a 	mov	r5,r23
  80ab94:	080ae040 	call	80ae04 <__umodsi3>
  80ab98:	9809883a 	mov	r4,r19
  80ab9c:	b80b883a 	mov	r5,r23
  80aba0:	b46cb03a 	or	r22,r22,r17
  80aba4:	a57fffcc 	andi	r21,r20,65535
  80aba8:	1023883a 	mov	r17,r2
  80abac:	080ada00 	call	80ada0 <__udivsi3>
  80abb0:	a809883a 	mov	r4,r21
  80abb4:	100b883a 	mov	r5,r2
  80abb8:	080ae600 	call	80ae60 <__mulsi3>
  80abbc:	8822943a 	slli	r17,r17,16
  80abc0:	b008d43a 	srli	r4,r22,16
  80abc4:	84a6983a 	sll	r19,r16,r18
  80abc8:	8908b03a 	or	r4,r17,r4
  80abcc:	2080042e 	bgeu	r4,r2,80abe0 <__umoddi3+0x4f8>
  80abd0:	2509883a 	add	r4,r4,r20
  80abd4:	25000236 	bltu	r4,r20,80abe0 <__umoddi3+0x4f8>
  80abd8:	2080012e 	bgeu	r4,r2,80abe0 <__umoddi3+0x4f8>
  80abdc:	2509883a 	add	r4,r4,r20
  80abe0:	20a1c83a 	sub	r16,r4,r2
  80abe4:	8009883a 	mov	r4,r16
  80abe8:	b80b883a 	mov	r5,r23
  80abec:	080ae040 	call	80ae04 <__umodsi3>
  80abf0:	8009883a 	mov	r4,r16
  80abf4:	1021883a 	mov	r16,r2
  80abf8:	b80b883a 	mov	r5,r23
  80abfc:	8020943a 	slli	r16,r16,16
  80ac00:	080ada00 	call	80ada0 <__udivsi3>
  80ac04:	100b883a 	mov	r5,r2
  80ac08:	a809883a 	mov	r4,r21
  80ac0c:	b47fffcc 	andi	r17,r22,65535
  80ac10:	080ae600 	call	80ae60 <__mulsi3>
  80ac14:	8462b03a 	or	r17,r16,r17
  80ac18:	8880042e 	bgeu	r17,r2,80ac2c <__umoddi3+0x544>
  80ac1c:	8d23883a 	add	r17,r17,r20
  80ac20:	8d000236 	bltu	r17,r20,80ac2c <__umoddi3+0x544>
  80ac24:	8880012e 	bgeu	r17,r2,80ac2c <__umoddi3+0x544>
  80ac28:	8d23883a 	add	r17,r17,r20
  80ac2c:	88a3c83a 	sub	r17,r17,r2
  80ac30:	003f2f06 	br	80a8f0 <__umoddi3+0x208>
  80ac34:	813fc72e 	bgeu	r16,r4,80ab54 <__umoddi3+0x46c>
  80ac38:	d8800117 	ldw	r2,4(sp)
  80ac3c:	20a7c83a 	sub	r19,r4,r2
  80ac40:	24c9803a 	cmpltu	r4,r4,r19
  80ac44:	2489883a 	add	r4,r4,r18
  80ac48:	1907c83a 	sub	r3,r3,r4
  80ac4c:	9809883a 	mov	r4,r19
  80ac50:	003fc006 	br	80ab54 <__umoddi3+0x46c>
  80ac54:	3006d43a 	srli	r3,r6,16
  80ac58:	04800404 	movi	r18,16
  80ac5c:	003ebb06 	br	80a74c <__umoddi3+0x64>
  80ac60:	3007883a 	mov	r3,r6
  80ac64:	003eb906 	br	80a74c <__umoddi3+0x64>
  80ac68:	3808d43a 	srli	r4,r7,16
  80ac6c:	02000404 	movi	r8,16
  80ac70:	003efc06 	br	80a864 <__umoddi3+0x17c>
  80ac74:	a006d43a 	srli	r3,r20,16
  80ac78:	04800404 	movi	r18,16
  80ac7c:	003f1206 	br	80a8c8 <__umoddi3+0x1e0>
  80ac80:	a007883a 	mov	r3,r20
  80ac84:	003f1006 	br	80a8c8 <__umoddi3+0x1e0>
  80ac88:	3809883a 	mov	r4,r7
  80ac8c:	0011883a 	mov	r8,zero
  80ac90:	003ef406 	br	80a864 <__umoddi3+0x17c>
  80ac94:	180b883a 	mov	r5,r3
  80ac98:	003f8706 	br	80aab8 <__umoddi3+0x3d0>
  80ac9c:	2839883a 	mov	fp,r5
  80aca0:	003f6d06 	br	80aa58 <__umoddi3+0x370>
  80aca4:	2509883a 	add	r4,r4,r20
  80aca8:	003f2206 	br	80a934 <__umoddi3+0x24c>

0080acac <__divsi3>:
  80acac:	20001a16 	blt	r4,zero,80ad18 <__divsi3+0x6c>
  80acb0:	000f883a 	mov	r7,zero
  80acb4:	2800020e 	bge	r5,zero,80acc0 <__divsi3+0x14>
  80acb8:	014bc83a 	sub	r5,zero,r5
  80acbc:	39c0005c 	xori	r7,r7,1
  80acc0:	200d883a 	mov	r6,r4
  80acc4:	00c00044 	movi	r3,1
  80acc8:	2900092e 	bgeu	r5,r4,80acf0 <__divsi3+0x44>
  80accc:	00800804 	movi	r2,32
  80acd0:	00c00044 	movi	r3,1
  80acd4:	00000106 	br	80acdc <__divsi3+0x30>
  80acd8:	10001226 	beq	r2,zero,80ad24 <__divsi3+0x78>
  80acdc:	294b883a 	add	r5,r5,r5
  80ace0:	10bfffc4 	addi	r2,r2,-1
  80ace4:	18c7883a 	add	r3,r3,r3
  80ace8:	293ffb36 	bltu	r5,r4,80acd8 <__divsi3+0x2c>
  80acec:	18000d26 	beq	r3,zero,80ad24 <__divsi3+0x78>
  80acf0:	0005883a 	mov	r2,zero
  80acf4:	31400236 	bltu	r6,r5,80ad00 <__divsi3+0x54>
  80acf8:	314dc83a 	sub	r6,r6,r5
  80acfc:	10c4b03a 	or	r2,r2,r3
  80ad00:	1806d07a 	srli	r3,r3,1
  80ad04:	280ad07a 	srli	r5,r5,1
  80ad08:	183ffa1e 	bne	r3,zero,80acf4 <__divsi3+0x48>
  80ad0c:	38000126 	beq	r7,zero,80ad14 <__divsi3+0x68>
  80ad10:	0085c83a 	sub	r2,zero,r2
  80ad14:	f800283a 	ret
  80ad18:	0109c83a 	sub	r4,zero,r4
  80ad1c:	01c00044 	movi	r7,1
  80ad20:	003fe406 	br	80acb4 <__divsi3+0x8>
  80ad24:	0005883a 	mov	r2,zero
  80ad28:	003ff806 	br	80ad0c <__divsi3+0x60>

0080ad2c <__modsi3>:
  80ad2c:	20001916 	blt	r4,zero,80ad94 <__modsi3+0x68>
  80ad30:	000f883a 	mov	r7,zero
  80ad34:	2005883a 	mov	r2,r4
  80ad38:	2800010e 	bge	r5,zero,80ad40 <__modsi3+0x14>
  80ad3c:	014bc83a 	sub	r5,zero,r5
  80ad40:	00c00044 	movi	r3,1
  80ad44:	2900092e 	bgeu	r5,r4,80ad6c <__modsi3+0x40>
  80ad48:	01800804 	movi	r6,32
  80ad4c:	00c00044 	movi	r3,1
  80ad50:	00000106 	br	80ad58 <__modsi3+0x2c>
  80ad54:	30000d26 	beq	r6,zero,80ad8c <__modsi3+0x60>
  80ad58:	294b883a 	add	r5,r5,r5
  80ad5c:	31bfffc4 	addi	r6,r6,-1
  80ad60:	18c7883a 	add	r3,r3,r3
  80ad64:	293ffb36 	bltu	r5,r4,80ad54 <__modsi3+0x28>
  80ad68:	18000826 	beq	r3,zero,80ad8c <__modsi3+0x60>
  80ad6c:	1806d07a 	srli	r3,r3,1
  80ad70:	11400136 	bltu	r2,r5,80ad78 <__modsi3+0x4c>
  80ad74:	1145c83a 	sub	r2,r2,r5
  80ad78:	280ad07a 	srli	r5,r5,1
  80ad7c:	183ffb1e 	bne	r3,zero,80ad6c <__modsi3+0x40>
  80ad80:	38000126 	beq	r7,zero,80ad88 <__modsi3+0x5c>
  80ad84:	0085c83a 	sub	r2,zero,r2
  80ad88:	f800283a 	ret
  80ad8c:	2005883a 	mov	r2,r4
  80ad90:	003ffb06 	br	80ad80 <__modsi3+0x54>
  80ad94:	0109c83a 	sub	r4,zero,r4
  80ad98:	01c00044 	movi	r7,1
  80ad9c:	003fe506 	br	80ad34 <__modsi3+0x8>

0080ada0 <__udivsi3>:
  80ada0:	200d883a 	mov	r6,r4
  80ada4:	2900152e 	bgeu	r5,r4,80adfc <__udivsi3+0x5c>
  80ada8:	28001416 	blt	r5,zero,80adfc <__udivsi3+0x5c>
  80adac:	00800804 	movi	r2,32
  80adb0:	00c00044 	movi	r3,1
  80adb4:	00000206 	br	80adc0 <__udivsi3+0x20>
  80adb8:	10000e26 	beq	r2,zero,80adf4 <__udivsi3+0x54>
  80adbc:	28000516 	blt	r5,zero,80add4 <__udivsi3+0x34>
  80adc0:	294b883a 	add	r5,r5,r5
  80adc4:	10bfffc4 	addi	r2,r2,-1
  80adc8:	18c7883a 	add	r3,r3,r3
  80adcc:	293ffa36 	bltu	r5,r4,80adb8 <__udivsi3+0x18>
  80add0:	18000826 	beq	r3,zero,80adf4 <__udivsi3+0x54>
  80add4:	0005883a 	mov	r2,zero
  80add8:	31400236 	bltu	r6,r5,80ade4 <__udivsi3+0x44>
  80addc:	314dc83a 	sub	r6,r6,r5
  80ade0:	10c4b03a 	or	r2,r2,r3
  80ade4:	1806d07a 	srli	r3,r3,1
  80ade8:	280ad07a 	srli	r5,r5,1
  80adec:	183ffa1e 	bne	r3,zero,80add8 <__udivsi3+0x38>
  80adf0:	f800283a 	ret
  80adf4:	0005883a 	mov	r2,zero
  80adf8:	f800283a 	ret
  80adfc:	00c00044 	movi	r3,1
  80ae00:	003ff406 	br	80add4 <__udivsi3+0x34>

0080ae04 <__umodsi3>:
  80ae04:	2005883a 	mov	r2,r4
  80ae08:	2900132e 	bgeu	r5,r4,80ae58 <__umodsi3+0x54>
  80ae0c:	28001216 	blt	r5,zero,80ae58 <__umodsi3+0x54>
  80ae10:	01800804 	movi	r6,32
  80ae14:	00c00044 	movi	r3,1
  80ae18:	00000206 	br	80ae24 <__umodsi3+0x20>
  80ae1c:	30000c26 	beq	r6,zero,80ae50 <__umodsi3+0x4c>
  80ae20:	28000516 	blt	r5,zero,80ae38 <__umodsi3+0x34>
  80ae24:	294b883a 	add	r5,r5,r5
  80ae28:	31bfffc4 	addi	r6,r6,-1
  80ae2c:	18c7883a 	add	r3,r3,r3
  80ae30:	293ffa36 	bltu	r5,r4,80ae1c <__umodsi3+0x18>
  80ae34:	18000626 	beq	r3,zero,80ae50 <__umodsi3+0x4c>
  80ae38:	1806d07a 	srli	r3,r3,1
  80ae3c:	11400136 	bltu	r2,r5,80ae44 <__umodsi3+0x40>
  80ae40:	1145c83a 	sub	r2,r2,r5
  80ae44:	280ad07a 	srli	r5,r5,1
  80ae48:	183ffb1e 	bne	r3,zero,80ae38 <__umodsi3+0x34>
  80ae4c:	f800283a 	ret
  80ae50:	2005883a 	mov	r2,r4
  80ae54:	f800283a 	ret
  80ae58:	00c00044 	movi	r3,1
  80ae5c:	003ff606 	br	80ae38 <__umodsi3+0x34>

0080ae60 <__mulsi3>:
  80ae60:	0005883a 	mov	r2,zero
  80ae64:	20000726 	beq	r4,zero,80ae84 <__mulsi3+0x24>
  80ae68:	20c0004c 	andi	r3,r4,1
  80ae6c:	2008d07a 	srli	r4,r4,1
  80ae70:	18000126 	beq	r3,zero,80ae78 <__mulsi3+0x18>
  80ae74:	1145883a 	add	r2,r2,r5
  80ae78:	294b883a 	add	r5,r5,r5
  80ae7c:	203ffa1e 	bne	r4,zero,80ae68 <__mulsi3+0x8>
  80ae80:	f800283a 	ret
  80ae84:	f800283a 	ret

0080ae88 <__adddf3>:
  80ae88:	02000434 	movhi	r8,16
  80ae8c:	423fffc4 	addi	r8,r8,-1
  80ae90:	2806d53a 	srli	r3,r5,20
  80ae94:	3804d53a 	srli	r2,r7,20
  80ae98:	2a14703a 	and	r10,r5,r8
  80ae9c:	3a12703a 	and	r9,r7,r8
  80aea0:	280ad7fa 	srli	r5,r5,31
  80aea4:	501490fa 	slli	r10,r10,3
  80aea8:	2018d77a 	srli	r12,r4,29
  80aeac:	481290fa 	slli	r9,r9,3
  80aeb0:	3016d77a 	srli	r11,r6,29
  80aeb4:	380ed7fa 	srli	r7,r7,31
  80aeb8:	defffb04 	addi	sp,sp,-20
  80aebc:	dc800215 	stw	r18,8(sp)
  80aec0:	dc000015 	stw	r16,0(sp)
  80aec4:	1c81ffcc 	andi	r18,r3,2047
  80aec8:	1081ffcc 	andi	r2,r2,2047
  80aecc:	dfc00415 	stw	ra,16(sp)
  80aed0:	dcc00315 	stw	r19,12(sp)
  80aed4:	dc400115 	stw	r17,4(sp)
  80aed8:	201c90fa 	slli	r14,r4,3
  80aedc:	301a90fa 	slli	r13,r6,3
  80aee0:	2821883a 	mov	r16,r5
  80aee4:	6294b03a 	or	r10,r12,r10
  80aee8:	5a52b03a 	or	r9,r11,r9
  80aeec:	9087c83a 	sub	r3,r18,r2
  80aef0:	29c06126 	beq	r5,r7,80b078 <__adddf3+0x1f0>
  80aef4:	00c0550e 	bge	zero,r3,80b04c <__adddf3+0x1c4>
  80aef8:	10007326 	beq	r2,zero,80b0c8 <__adddf3+0x240>
  80aefc:	9081ffd8 	cmpnei	r2,r18,2047
  80af00:	1000bd26 	beq	r2,zero,80b1f8 <__adddf3+0x370>
  80af04:	4a402034 	orhi	r9,r9,128
  80af08:	18800e48 	cmpgei	r2,r3,57
  80af0c:	1000ef1e 	bne	r2,zero,80b2cc <__adddf3+0x444>
  80af10:	18800808 	cmpgei	r2,r3,32
  80af14:	1001321e 	bne	r2,zero,80b3e0 <__adddf3+0x558>
  80af18:	00800804 	movi	r2,32
  80af1c:	10c5c83a 	sub	r2,r2,r3
  80af20:	68c8d83a 	srl	r4,r13,r3
  80af24:	48a2983a 	sll	r17,r9,r2
  80af28:	689a983a 	sll	r13,r13,r2
  80af2c:	48c6d83a 	srl	r3,r9,r3
  80af30:	8922b03a 	or	r17,r17,r4
  80af34:	681ac03a 	cmpne	r13,r13,zero
  80af38:	8b62b03a 	or	r17,r17,r13
  80af3c:	50d5c83a 	sub	r10,r10,r3
  80af40:	7463c83a 	sub	r17,r14,r17
  80af44:	7451803a 	cmpltu	r8,r14,r17
  80af48:	5211c83a 	sub	r8,r10,r8
  80af4c:	4080202c 	andhi	r2,r8,128
  80af50:	10008d26 	beq	r2,zero,80b188 <__adddf3+0x300>
  80af54:	02402034 	movhi	r9,128
  80af58:	4a7fffc4 	addi	r9,r9,-1
  80af5c:	4266703a 	and	r19,r8,r9
  80af60:	9800b326 	beq	r19,zero,80b230 <__adddf3+0x3a8>
  80af64:	9809883a 	mov	r4,r19
  80af68:	080d5740 	call	80d574 <__clzsi2>
  80af6c:	10fffe04 	addi	r3,r2,-8
  80af70:	02000804 	movi	r8,32
  80af74:	40d1c83a 	sub	r8,r8,r3
  80af78:	8a10d83a 	srl	r8,r17,r8
  80af7c:	98d2983a 	sll	r9,r19,r3
  80af80:	88e2983a 	sll	r17,r17,r3
  80af84:	4250b03a 	or	r8,r8,r9
  80af88:	1c80b216 	blt	r3,r18,80b254 <__adddf3+0x3cc>
  80af8c:	1c87c83a 	sub	r3,r3,r18
  80af90:	19000044 	addi	r4,r3,1
  80af94:	20800808 	cmpgei	r2,r4,32
  80af98:	10006f1e 	bne	r2,zero,80b158 <__adddf3+0x2d0>
  80af9c:	00800804 	movi	r2,32
  80afa0:	1105c83a 	sub	r2,r2,r4
  80afa4:	8906d83a 	srl	r3,r17,r4
  80afa8:	88a2983a 	sll	r17,r17,r2
  80afac:	4084983a 	sll	r2,r8,r2
  80afb0:	4110d83a 	srl	r8,r8,r4
  80afb4:	8822c03a 	cmpne	r17,r17,zero
  80afb8:	10c4b03a 	or	r2,r2,r3
  80afbc:	1462b03a 	or	r17,r2,r17
  80afc0:	0025883a 	mov	r18,zero
  80afc4:	888001cc 	andi	r2,r17,7
  80afc8:	10000726 	beq	r2,zero,80afe8 <__adddf3+0x160>
  80afcc:	888003cc 	andi	r2,r17,15
  80afd0:	10800120 	cmpeqi	r2,r2,4
  80afd4:	1000041e 	bne	r2,zero,80afe8 <__adddf3+0x160>
  80afd8:	88c00104 	addi	r3,r17,4
  80afdc:	1c63803a 	cmpltu	r17,r3,r17
  80afe0:	4451883a 	add	r8,r8,r17
  80afe4:	1823883a 	mov	r17,r3
  80afe8:	4080202c 	andhi	r2,r8,128
  80afec:	10006826 	beq	r2,zero,80b190 <__adddf3+0x308>
  80aff0:	90c00044 	addi	r3,r18,1
  80aff4:	1881ffe0 	cmpeqi	r2,r3,2047
  80aff8:	18c1ffcc 	andi	r3,r3,2047
  80affc:	10007a1e 	bne	r2,zero,80b1e8 <__adddf3+0x360>
  80b000:	00bfe034 	movhi	r2,65408
  80b004:	10bfffc4 	addi	r2,r2,-1
  80b008:	4090703a 	and	r8,r8,r2
  80b00c:	4004977a 	slli	r2,r8,29
  80b010:	4010927a 	slli	r8,r8,9
  80b014:	8822d0fa 	srli	r17,r17,3
  80b018:	4010d33a 	srli	r8,r8,12
  80b01c:	1444b03a 	or	r2,r2,r17
  80b020:	1806953a 	slli	r3,r3,20
  80b024:	802097fa 	slli	r16,r16,31
  80b028:	1a06b03a 	or	r3,r3,r8
  80b02c:	1c06b03a 	or	r3,r3,r16
  80b030:	dfc00417 	ldw	ra,16(sp)
  80b034:	dcc00317 	ldw	r19,12(sp)
  80b038:	dc800217 	ldw	r18,8(sp)
  80b03c:	dc400117 	ldw	r17,4(sp)
  80b040:	dc000017 	ldw	r16,0(sp)
  80b044:	dec00504 	addi	sp,sp,20
  80b048:	f800283a 	ret
  80b04c:	18002626 	beq	r3,zero,80b0e8 <__adddf3+0x260>
  80b050:	1487c83a 	sub	r3,r2,r18
  80b054:	9000ba1e 	bne	r18,zero,80b340 <__adddf3+0x4b8>
  80b058:	5388b03a 	or	r4,r10,r14
  80b05c:	20011826 	beq	r4,zero,80b4c0 <__adddf3+0x638>
  80b060:	193fffc4 	addi	r4,r3,-1
  80b064:	20015726 	beq	r4,zero,80b5c4 <__adddf3+0x73c>
  80b068:	18c1ffd8 	cmpnei	r3,r3,2047
  80b06c:	18013026 	beq	r3,zero,80b530 <__adddf3+0x6a8>
  80b070:	2007883a 	mov	r3,r4
  80b074:	0000b506 	br	80b34c <__adddf3+0x4c4>
  80b078:	00c07b0e 	bge	zero,r3,80b268 <__adddf3+0x3e0>
  80b07c:	10002e26 	beq	r2,zero,80b138 <__adddf3+0x2b0>
  80b080:	9081ffd8 	cmpnei	r2,r18,2047
  80b084:	10005c26 	beq	r2,zero,80b1f8 <__adddf3+0x370>
  80b088:	4a402034 	orhi	r9,r9,128
  80b08c:	18800e48 	cmpgei	r2,r3,57
  80b090:	10004b1e 	bne	r2,zero,80b1c0 <__adddf3+0x338>
  80b094:	18800808 	cmpgei	r2,r3,32
  80b098:	1000ec26 	beq	r2,zero,80b44c <__adddf3+0x5c4>
  80b09c:	1c7ff804 	addi	r17,r3,-32
  80b0a0:	19000820 	cmpeqi	r4,r3,32
  80b0a4:	4c44d83a 	srl	r2,r9,r17
  80b0a8:	2000041e 	bne	r4,zero,80b0bc <__adddf3+0x234>
  80b0ac:	01001004 	movi	r4,64
  80b0b0:	20c7c83a 	sub	r3,r4,r3
  80b0b4:	48d2983a 	sll	r9,r9,r3
  80b0b8:	6a5ab03a 	or	r13,r13,r9
  80b0bc:	6822c03a 	cmpne	r17,r13,zero
  80b0c0:	88a2b03a 	or	r17,r17,r2
  80b0c4:	00004006 	br	80b1c8 <__adddf3+0x340>
  80b0c8:	4b44b03a 	or	r2,r9,r13
  80b0cc:	10008226 	beq	r2,zero,80b2d8 <__adddf3+0x450>
  80b0d0:	18bfffc4 	addi	r2,r3,-1
  80b0d4:	10011026 	beq	r2,zero,80b518 <__adddf3+0x690>
  80b0d8:	18c1ffd8 	cmpnei	r3,r3,2047
  80b0dc:	18004626 	beq	r3,zero,80b1f8 <__adddf3+0x370>
  80b0e0:	1007883a 	mov	r3,r2
  80b0e4:	003f8806 	br	80af08 <__adddf3+0x80>
  80b0e8:	90800044 	addi	r2,r18,1
  80b0ec:	1081ff8c 	andi	r2,r2,2046
  80b0f0:	1000a51e 	bne	r2,zero,80b388 <__adddf3+0x500>
  80b0f4:	538ab03a 	or	r5,r10,r14
  80b0f8:	4b44b03a 	or	r2,r9,r13
  80b0fc:	9000f81e 	bne	r18,zero,80b4e0 <__adddf3+0x658>
  80b100:	28013726 	beq	r5,zero,80b5e0 <__adddf3+0x758>
  80b104:	10011226 	beq	r2,zero,80b550 <__adddf3+0x6c8>
  80b108:	7363c83a 	sub	r17,r14,r13
  80b10c:	7445803a 	cmpltu	r2,r14,r17
  80b110:	5251c83a 	sub	r8,r10,r9
  80b114:	4091c83a 	sub	r8,r8,r2
  80b118:	4080202c 	andhi	r2,r8,128
  80b11c:	10018f26 	beq	r2,zero,80b75c <__adddf3+0x8d4>
  80b120:	6ba3c83a 	sub	r17,r13,r14
  80b124:	4a95c83a 	sub	r10,r9,r10
  80b128:	6c51803a 	cmpltu	r8,r13,r17
  80b12c:	5211c83a 	sub	r8,r10,r8
  80b130:	3821883a 	mov	r16,r7
  80b134:	003fa306 	br	80afc4 <__adddf3+0x13c>
  80b138:	4b44b03a 	or	r2,r9,r13
  80b13c:	10006626 	beq	r2,zero,80b2d8 <__adddf3+0x450>
  80b140:	18bfffc4 	addi	r2,r3,-1
  80b144:	1000ec26 	beq	r2,zero,80b4f8 <__adddf3+0x670>
  80b148:	18c1ffd8 	cmpnei	r3,r3,2047
  80b14c:	18012d26 	beq	r3,zero,80b604 <__adddf3+0x77c>
  80b150:	1007883a 	mov	r3,r2
  80b154:	003fcd06 	br	80b08c <__adddf3+0x204>
  80b158:	18fff844 	addi	r3,r3,-31
  80b15c:	20800820 	cmpeqi	r2,r4,32
  80b160:	40c6d83a 	srl	r3,r8,r3
  80b164:	1000041e 	bne	r2,zero,80b178 <__adddf3+0x2f0>
  80b168:	00801004 	movi	r2,64
  80b16c:	1109c83a 	sub	r4,r2,r4
  80b170:	4110983a 	sll	r8,r8,r4
  80b174:	8a22b03a 	or	r17,r17,r8
  80b178:	8822c03a 	cmpne	r17,r17,zero
  80b17c:	88e2b03a 	or	r17,r17,r3
  80b180:	0011883a 	mov	r8,zero
  80b184:	0025883a 	mov	r18,zero
  80b188:	888001cc 	andi	r2,r17,7
  80b18c:	103f8f1e 	bne	r2,zero,80afcc <__adddf3+0x144>
  80b190:	8822d0fa 	srli	r17,r17,3
  80b194:	4004977a 	slli	r2,r8,29
  80b198:	4014d0fa 	srli	r10,r8,3
  80b19c:	9007883a 	mov	r3,r18
  80b1a0:	8884b03a 	or	r2,r17,r2
  80b1a4:	1901ffe0 	cmpeqi	r4,r3,2047
  80b1a8:	2000191e 	bne	r4,zero,80b210 <__adddf3+0x388>
  80b1ac:	02000434 	movhi	r8,16
  80b1b0:	423fffc4 	addi	r8,r8,-1
  80b1b4:	5210703a 	and	r8,r10,r8
  80b1b8:	18c1ffcc 	andi	r3,r3,2047
  80b1bc:	003f9806 	br	80b020 <__adddf3+0x198>
  80b1c0:	4b62b03a 	or	r17,r9,r13
  80b1c4:	8822c03a 	cmpne	r17,r17,zero
  80b1c8:	8ba3883a 	add	r17,r17,r14
  80b1cc:	8b91803a 	cmpltu	r8,r17,r14
  80b1d0:	4291883a 	add	r8,r8,r10
  80b1d4:	4080202c 	andhi	r2,r8,128
  80b1d8:	103feb26 	beq	r2,zero,80b188 <__adddf3+0x300>
  80b1dc:	94800044 	addi	r18,r18,1
  80b1e0:	9081ffe0 	cmpeqi	r2,r18,2047
  80b1e4:	10007426 	beq	r2,zero,80b3b8 <__adddf3+0x530>
  80b1e8:	00c1ffc4 	movi	r3,2047
  80b1ec:	0011883a 	mov	r8,zero
  80b1f0:	0005883a 	mov	r2,zero
  80b1f4:	003f8a06 	br	80b020 <__adddf3+0x198>
  80b1f8:	500a977a 	slli	r5,r10,29
  80b1fc:	00c80034 	movhi	r3,8192
  80b200:	18ffffc4 	addi	r3,r3,-1
  80b204:	5014d0fa 	srli	r10,r10,3
  80b208:	20c4703a 	and	r2,r4,r3
  80b20c:	1144b03a 	or	r2,r2,r5
  80b210:	1286b03a 	or	r3,r2,r10
  80b214:	18015426 	beq	r3,zero,80b768 <__adddf3+0x8e0>
  80b218:	00c00434 	movhi	r3,16
  80b21c:	18ffffc4 	addi	r3,r3,-1
  80b220:	52000234 	orhi	r8,r10,8
  80b224:	40d0703a 	and	r8,r8,r3
  80b228:	00c1ffc4 	movi	r3,2047
  80b22c:	003f7c06 	br	80b020 <__adddf3+0x198>
  80b230:	8809883a 	mov	r4,r17
  80b234:	080d5740 	call	80d574 <__clzsi2>
  80b238:	10c00604 	addi	r3,r2,24
  80b23c:	19000808 	cmpgei	r4,r3,32
  80b240:	203f4b26 	beq	r4,zero,80af70 <__adddf3+0xe8>
  80b244:	123ffe04 	addi	r8,r2,-8
  80b248:	8a10983a 	sll	r8,r17,r8
  80b24c:	0023883a 	mov	r17,zero
  80b250:	1cbf4e0e 	bge	r3,r18,80af8c <__adddf3+0x104>
  80b254:	00bfe034 	movhi	r2,65408
  80b258:	10bfffc4 	addi	r2,r2,-1
  80b25c:	90e5c83a 	sub	r18,r18,r3
  80b260:	4090703a 	and	r8,r8,r2
  80b264:	003f5706 	br	80afc4 <__adddf3+0x13c>
  80b268:	18002226 	beq	r3,zero,80b2f4 <__adddf3+0x46c>
  80b26c:	1487c83a 	sub	r3,r2,r18
  80b270:	90006e26 	beq	r18,zero,80b42c <__adddf3+0x5a4>
  80b274:	1101ffd8 	cmpnei	r4,r2,2047
  80b278:	2000e926 	beq	r4,zero,80b620 <__adddf3+0x798>
  80b27c:	52802034 	orhi	r10,r10,128
  80b280:	19000e48 	cmpgei	r4,r3,57
  80b284:	2000b91e 	bne	r4,zero,80b56c <__adddf3+0x6e4>
  80b288:	19000808 	cmpgei	r4,r3,32
  80b28c:	2001101e 	bne	r4,zero,80b6d0 <__adddf3+0x848>
  80b290:	01000804 	movi	r4,32
  80b294:	20c9c83a 	sub	r4,r4,r3
  80b298:	5122983a 	sll	r17,r10,r4
  80b29c:	70cad83a 	srl	r5,r14,r3
  80b2a0:	7108983a 	sll	r4,r14,r4
  80b2a4:	50d4d83a 	srl	r10,r10,r3
  80b2a8:	8962b03a 	or	r17,r17,r5
  80b2ac:	2008c03a 	cmpne	r4,r4,zero
  80b2b0:	8922b03a 	or	r17,r17,r4
  80b2b4:	4a93883a 	add	r9,r9,r10
  80b2b8:	8b63883a 	add	r17,r17,r13
  80b2bc:	8b51803a 	cmpltu	r8,r17,r13
  80b2c0:	4251883a 	add	r8,r8,r9
  80b2c4:	1025883a 	mov	r18,r2
  80b2c8:	003fc206 	br	80b1d4 <__adddf3+0x34c>
  80b2cc:	4b62b03a 	or	r17,r9,r13
  80b2d0:	8822c03a 	cmpne	r17,r17,zero
  80b2d4:	003f1a06 	br	80af40 <__adddf3+0xb8>
  80b2d8:	500c977a 	slli	r6,r10,29
  80b2dc:	01480034 	movhi	r5,8192
  80b2e0:	297fffc4 	addi	r5,r5,-1
  80b2e4:	2144703a 	and	r2,r4,r5
  80b2e8:	5014d0fa 	srli	r10,r10,3
  80b2ec:	1184b03a 	or	r2,r2,r6
  80b2f0:	003fac06 	br	80b1a4 <__adddf3+0x31c>
  80b2f4:	90800044 	addi	r2,r18,1
  80b2f8:	1141ff8c 	andi	r5,r2,2046
  80b2fc:	28005e1e 	bne	r5,zero,80b478 <__adddf3+0x5f0>
  80b300:	5384b03a 	or	r2,r10,r14
  80b304:	9000a71e 	bne	r18,zero,80b5a4 <__adddf3+0x71c>
  80b308:	1000e526 	beq	r2,zero,80b6a0 <__adddf3+0x818>
  80b30c:	4b44b03a 	or	r2,r9,r13
  80b310:	10008f26 	beq	r2,zero,80b550 <__adddf3+0x6c8>
  80b314:	7363883a 	add	r17,r14,r13
  80b318:	5255883a 	add	r10,r10,r9
  80b31c:	8b91803a 	cmpltu	r8,r17,r14
  80b320:	5211883a 	add	r8,r10,r8
  80b324:	4080202c 	andhi	r2,r8,128
  80b328:	103f9726 	beq	r2,zero,80b188 <__adddf3+0x300>
  80b32c:	00bfe034 	movhi	r2,65408
  80b330:	10bfffc4 	addi	r2,r2,-1
  80b334:	4090703a 	and	r8,r8,r2
  80b338:	04800044 	movi	r18,1
  80b33c:	003f9206 	br	80b188 <__adddf3+0x300>
  80b340:	1101ffd8 	cmpnei	r4,r2,2047
  80b344:	20007a26 	beq	r4,zero,80b530 <__adddf3+0x6a8>
  80b348:	52802034 	orhi	r10,r10,128
  80b34c:	19000e48 	cmpgei	r4,r3,57
  80b350:	20002e1e 	bne	r4,zero,80b40c <__adddf3+0x584>
  80b354:	19000808 	cmpgei	r4,r3,32
  80b358:	2000871e 	bne	r4,zero,80b578 <__adddf3+0x6f0>
  80b35c:	01000804 	movi	r4,32
  80b360:	20c9c83a 	sub	r4,r4,r3
  80b364:	5122983a 	sll	r17,r10,r4
  80b368:	70cad83a 	srl	r5,r14,r3
  80b36c:	711c983a 	sll	r14,r14,r4
  80b370:	50d4d83a 	srl	r10,r10,r3
  80b374:	8962b03a 	or	r17,r17,r5
  80b378:	701cc03a 	cmpne	r14,r14,zero
  80b37c:	8ba2b03a 	or	r17,r17,r14
  80b380:	4a93c83a 	sub	r9,r9,r10
  80b384:	00002306 	br	80b414 <__adddf3+0x58c>
  80b388:	7363c83a 	sub	r17,r14,r13
  80b38c:	5267c83a 	sub	r19,r10,r9
  80b390:	7451803a 	cmpltu	r8,r14,r17
  80b394:	9a27c83a 	sub	r19,r19,r8
  80b398:	9880202c 	andhi	r2,r19,128
  80b39c:	1000421e 	bne	r2,zero,80b4a8 <__adddf3+0x620>
  80b3a0:	8cc4b03a 	or	r2,r17,r19
  80b3a4:	103eee1e 	bne	r2,zero,80af60 <__adddf3+0xd8>
  80b3a8:	0015883a 	mov	r10,zero
  80b3ac:	0021883a 	mov	r16,zero
  80b3b0:	003f7e06 	br	80b1ac <__adddf3+0x324>
  80b3b4:	04800084 	movi	r18,2
  80b3b8:	00bfe034 	movhi	r2,65408
  80b3bc:	10bfffc4 	addi	r2,r2,-1
  80b3c0:	8806d07a 	srli	r3,r17,1
  80b3c4:	4090703a 	and	r8,r8,r2
  80b3c8:	400497fa 	slli	r2,r8,31
  80b3cc:	8c40004c 	andi	r17,r17,1
  80b3d0:	1c62b03a 	or	r17,r3,r17
  80b3d4:	4010d07a 	srli	r8,r8,1
  80b3d8:	1462b03a 	or	r17,r2,r17
  80b3dc:	003ef906 	br	80afc4 <__adddf3+0x13c>
  80b3e0:	1c7ff804 	addi	r17,r3,-32
  80b3e4:	19000820 	cmpeqi	r4,r3,32
  80b3e8:	4c44d83a 	srl	r2,r9,r17
  80b3ec:	2000041e 	bne	r4,zero,80b400 <__adddf3+0x578>
  80b3f0:	01001004 	movi	r4,64
  80b3f4:	20c7c83a 	sub	r3,r4,r3
  80b3f8:	48d2983a 	sll	r9,r9,r3
  80b3fc:	6a5ab03a 	or	r13,r13,r9
  80b400:	6822c03a 	cmpne	r17,r13,zero
  80b404:	88a2b03a 	or	r17,r17,r2
  80b408:	003ecd06 	br	80af40 <__adddf3+0xb8>
  80b40c:	5394b03a 	or	r10,r10,r14
  80b410:	5022c03a 	cmpne	r17,r10,zero
  80b414:	6c63c83a 	sub	r17,r13,r17
  80b418:	6c51803a 	cmpltu	r8,r13,r17
  80b41c:	4a11c83a 	sub	r8,r9,r8
  80b420:	3821883a 	mov	r16,r7
  80b424:	1025883a 	mov	r18,r2
  80b428:	003ec806 	br	80af4c <__adddf3+0xc4>
  80b42c:	5388b03a 	or	r4,r10,r14
  80b430:	20008226 	beq	r4,zero,80b63c <__adddf3+0x7b4>
  80b434:	193fffc4 	addi	r4,r3,-1
  80b438:	2000b026 	beq	r4,zero,80b6fc <__adddf3+0x874>
  80b43c:	18c1ffd8 	cmpnei	r3,r3,2047
  80b440:	18007726 	beq	r3,zero,80b620 <__adddf3+0x798>
  80b444:	2007883a 	mov	r3,r4
  80b448:	003f8d06 	br	80b280 <__adddf3+0x3f8>
  80b44c:	00800804 	movi	r2,32
  80b450:	10c5c83a 	sub	r2,r2,r3
  80b454:	68c8d83a 	srl	r4,r13,r3
  80b458:	48a2983a 	sll	r17,r9,r2
  80b45c:	689a983a 	sll	r13,r13,r2
  80b460:	48c6d83a 	srl	r3,r9,r3
  80b464:	8922b03a 	or	r17,r17,r4
  80b468:	681ac03a 	cmpne	r13,r13,zero
  80b46c:	8b62b03a 	or	r17,r17,r13
  80b470:	50d5883a 	add	r10,r10,r3
  80b474:	003f5406 	br	80b1c8 <__adddf3+0x340>
  80b478:	10c1ffe0 	cmpeqi	r3,r2,2047
  80b47c:	183f5a1e 	bne	r3,zero,80b1e8 <__adddf3+0x360>
  80b480:	7351883a 	add	r8,r14,r13
  80b484:	4387803a 	cmpltu	r3,r8,r14
  80b488:	5255883a 	add	r10,r10,r9
  80b48c:	50c7883a 	add	r3,r10,r3
  80b490:	401ad07a 	srli	r13,r8,1
  80b494:	182297fa 	slli	r17,r3,31
  80b498:	1810d07a 	srli	r8,r3,1
  80b49c:	1025883a 	mov	r18,r2
  80b4a0:	8b62b03a 	or	r17,r17,r13
  80b4a4:	003f3806 	br	80b188 <__adddf3+0x300>
  80b4a8:	6ba3c83a 	sub	r17,r13,r14
  80b4ac:	4a93c83a 	sub	r9,r9,r10
  80b4b0:	6c51803a 	cmpltu	r8,r13,r17
  80b4b4:	4a27c83a 	sub	r19,r9,r8
  80b4b8:	3821883a 	mov	r16,r7
  80b4bc:	003ea806 	br	80af60 <__adddf3+0xd8>
  80b4c0:	480a977a 	slli	r5,r9,29
  80b4c4:	01080034 	movhi	r4,8192
  80b4c8:	213fffc4 	addi	r4,r4,-1
  80b4cc:	3104703a 	and	r2,r6,r4
  80b4d0:	4814d0fa 	srli	r10,r9,3
  80b4d4:	1144b03a 	or	r2,r2,r5
  80b4d8:	3821883a 	mov	r16,r7
  80b4dc:	003f3106 	br	80b1a4 <__adddf3+0x31c>
  80b4e0:	28005d1e 	bne	r5,zero,80b658 <__adddf3+0x7d0>
  80b4e4:	1000121e 	bne	r2,zero,80b530 <__adddf3+0x6a8>
  80b4e8:	0021883a 	mov	r16,zero
  80b4ec:	4015883a 	mov	r10,r8
  80b4f0:	00bfffc4 	movi	r2,-1
  80b4f4:	003f4806 	br	80b218 <__adddf3+0x390>
  80b4f8:	7363883a 	add	r17,r14,r13
  80b4fc:	5255883a 	add	r10,r10,r9
  80b500:	8b91803a 	cmpltu	r8,r17,r14
  80b504:	5211883a 	add	r8,r10,r8
  80b508:	4080202c 	andhi	r2,r8,128
  80b50c:	103fa91e 	bne	r2,zero,80b3b4 <__adddf3+0x52c>
  80b510:	04800044 	movi	r18,1
  80b514:	003f1c06 	br	80b188 <__adddf3+0x300>
  80b518:	7363c83a 	sub	r17,r14,r13
  80b51c:	5255c83a 	sub	r10,r10,r9
  80b520:	7451803a 	cmpltu	r8,r14,r17
  80b524:	5211c83a 	sub	r8,r10,r8
  80b528:	04800044 	movi	r18,1
  80b52c:	003e8706 	br	80af4c <__adddf3+0xc4>
  80b530:	4806977a 	slli	r3,r9,29
  80b534:	00880034 	movhi	r2,8192
  80b538:	10bfffc4 	addi	r2,r2,-1
  80b53c:	3084703a 	and	r2,r6,r2
  80b540:	4814d0fa 	srli	r10,r9,3
  80b544:	10c4b03a 	or	r2,r2,r3
  80b548:	3821883a 	mov	r16,r7
  80b54c:	003f3006 	br	80b210 <__adddf3+0x388>
  80b550:	500a977a 	slli	r5,r10,29
  80b554:	00880034 	movhi	r2,8192
  80b558:	10bfffc4 	addi	r2,r2,-1
  80b55c:	2084703a 	and	r2,r4,r2
  80b560:	5014d0fa 	srli	r10,r10,3
  80b564:	1144b03a 	or	r2,r2,r5
  80b568:	003f1006 	br	80b1ac <__adddf3+0x324>
  80b56c:	5394b03a 	or	r10,r10,r14
  80b570:	5022c03a 	cmpne	r17,r10,zero
  80b574:	003f5006 	br	80b2b8 <__adddf3+0x430>
  80b578:	1c7ff804 	addi	r17,r3,-32
  80b57c:	19400820 	cmpeqi	r5,r3,32
  80b580:	5448d83a 	srl	r4,r10,r17
  80b584:	2800041e 	bne	r5,zero,80b598 <__adddf3+0x710>
  80b588:	01401004 	movi	r5,64
  80b58c:	28c7c83a 	sub	r3,r5,r3
  80b590:	50d4983a 	sll	r10,r10,r3
  80b594:	729cb03a 	or	r14,r14,r10
  80b598:	7022c03a 	cmpne	r17,r14,zero
  80b59c:	8922b03a 	or	r17,r17,r4
  80b5a0:	003f9c06 	br	80b414 <__adddf3+0x58c>
  80b5a4:	10005a1e 	bne	r2,zero,80b710 <__adddf3+0x888>
  80b5a8:	4804977a 	slli	r2,r9,29
  80b5ac:	00c80034 	movhi	r3,8192
  80b5b0:	18ffffc4 	addi	r3,r3,-1
  80b5b4:	30cc703a 	and	r6,r6,r3
  80b5b8:	4814d0fa 	srli	r10,r9,3
  80b5bc:	1184b03a 	or	r2,r2,r6
  80b5c0:	003f1306 	br	80b210 <__adddf3+0x388>
  80b5c4:	6ba3c83a 	sub	r17,r13,r14
  80b5c8:	4a95c83a 	sub	r10,r9,r10
  80b5cc:	6c51803a 	cmpltu	r8,r13,r17
  80b5d0:	5211c83a 	sub	r8,r10,r8
  80b5d4:	3821883a 	mov	r16,r7
  80b5d8:	04800044 	movi	r18,1
  80b5dc:	003e5b06 	br	80af4c <__adddf3+0xc4>
  80b5e0:	103f7126 	beq	r2,zero,80b3a8 <__adddf3+0x520>
  80b5e4:	4808977a 	slli	r4,r9,29
  80b5e8:	00880034 	movhi	r2,8192
  80b5ec:	10bfffc4 	addi	r2,r2,-1
  80b5f0:	3084703a 	and	r2,r6,r2
  80b5f4:	4814d0fa 	srli	r10,r9,3
  80b5f8:	1104b03a 	or	r2,r2,r4
  80b5fc:	3821883a 	mov	r16,r7
  80b600:	003eea06 	br	80b1ac <__adddf3+0x324>
  80b604:	5006977a 	slli	r3,r10,29
  80b608:	00880034 	movhi	r2,8192
  80b60c:	10bfffc4 	addi	r2,r2,-1
  80b610:	2084703a 	and	r2,r4,r2
  80b614:	5014d0fa 	srli	r10,r10,3
  80b618:	10c4b03a 	or	r2,r2,r3
  80b61c:	003efc06 	br	80b210 <__adddf3+0x388>
  80b620:	4806977a 	slli	r3,r9,29
  80b624:	00880034 	movhi	r2,8192
  80b628:	10bfffc4 	addi	r2,r2,-1
  80b62c:	3084703a 	and	r2,r6,r2
  80b630:	4814d0fa 	srli	r10,r9,3
  80b634:	10c4b03a 	or	r2,r2,r3
  80b638:	003ef506 	br	80b210 <__adddf3+0x388>
  80b63c:	4808977a 	slli	r4,r9,29
  80b640:	00880034 	movhi	r2,8192
  80b644:	10bfffc4 	addi	r2,r2,-1
  80b648:	3084703a 	and	r2,r6,r2
  80b64c:	4814d0fa 	srli	r10,r9,3
  80b650:	1104b03a 	or	r2,r2,r4
  80b654:	003ed306 	br	80b1a4 <__adddf3+0x31c>
  80b658:	500a977a 	slli	r5,r10,29
  80b65c:	5014d0fa 	srli	r10,r10,3
  80b660:	10001626 	beq	r2,zero,80b6bc <__adddf3+0x834>
  80b664:	00c80034 	movhi	r3,8192
  80b668:	18ffffc4 	addi	r3,r3,-1
  80b66c:	20c4703a 	and	r2,r4,r3
  80b670:	5100022c 	andhi	r4,r10,8
  80b674:	1144b03a 	or	r2,r2,r5
  80b678:	203ee526 	beq	r4,zero,80b210 <__adddf3+0x388>
  80b67c:	4808d0fa 	srli	r4,r9,3
  80b680:	2140022c 	andhi	r5,r4,8
  80b684:	283ee21e 	bne	r5,zero,80b210 <__adddf3+0x388>
  80b688:	4812977a 	slli	r9,r9,29
  80b68c:	30c4703a 	and	r2,r6,r3
  80b690:	3821883a 	mov	r16,r7
  80b694:	1244b03a 	or	r2,r2,r9
  80b698:	2015883a 	mov	r10,r4
  80b69c:	003edc06 	br	80b210 <__adddf3+0x388>
  80b6a0:	4804977a 	slli	r2,r9,29
  80b6a4:	01080034 	movhi	r4,8192
  80b6a8:	213fffc4 	addi	r4,r4,-1
  80b6ac:	310c703a 	and	r6,r6,r4
  80b6b0:	4814d0fa 	srli	r10,r9,3
  80b6b4:	1184b03a 	or	r2,r2,r6
  80b6b8:	003ebc06 	br	80b1ac <__adddf3+0x324>
  80b6bc:	00880034 	movhi	r2,8192
  80b6c0:	10bfffc4 	addi	r2,r2,-1
  80b6c4:	2084703a 	and	r2,r4,r2
  80b6c8:	1144b03a 	or	r2,r2,r5
  80b6cc:	003ed006 	br	80b210 <__adddf3+0x388>
  80b6d0:	193ff804 	addi	r4,r3,-32
  80b6d4:	19400820 	cmpeqi	r5,r3,32
  80b6d8:	5108d83a 	srl	r4,r10,r4
  80b6dc:	2800041e 	bne	r5,zero,80b6f0 <__adddf3+0x868>
  80b6e0:	01401004 	movi	r5,64
  80b6e4:	28c7c83a 	sub	r3,r5,r3
  80b6e8:	50d4983a 	sll	r10,r10,r3
  80b6ec:	729cb03a 	or	r14,r14,r10
  80b6f0:	7022c03a 	cmpne	r17,r14,zero
  80b6f4:	8922b03a 	or	r17,r17,r4
  80b6f8:	003eef06 	br	80b2b8 <__adddf3+0x430>
  80b6fc:	7363883a 	add	r17,r14,r13
  80b700:	5255883a 	add	r10,r10,r9
  80b704:	8b51803a 	cmpltu	r8,r17,r13
  80b708:	5211883a 	add	r8,r10,r8
  80b70c:	003f7e06 	br	80b508 <__adddf3+0x680>
  80b710:	4b50b03a 	or	r8,r9,r13
  80b714:	500a977a 	slli	r5,r10,29
  80b718:	5014d0fa 	srli	r10,r10,3
  80b71c:	403fe726 	beq	r8,zero,80b6bc <__adddf3+0x834>
  80b720:	00c80034 	movhi	r3,8192
  80b724:	18ffffc4 	addi	r3,r3,-1
  80b728:	20c4703a 	and	r2,r4,r3
  80b72c:	5100022c 	andhi	r4,r10,8
  80b730:	1144b03a 	or	r2,r2,r5
  80b734:	203eb626 	beq	r4,zero,80b210 <__adddf3+0x388>
  80b738:	4808d0fa 	srli	r4,r9,3
  80b73c:	2140022c 	andhi	r5,r4,8
  80b740:	283eb31e 	bne	r5,zero,80b210 <__adddf3+0x388>
  80b744:	4804977a 	slli	r2,r9,29
  80b748:	30cc703a 	and	r6,r6,r3
  80b74c:	3821883a 	mov	r16,r7
  80b750:	3084b03a 	or	r2,r6,r2
  80b754:	2015883a 	mov	r10,r4
  80b758:	003ead06 	br	80b210 <__adddf3+0x388>
  80b75c:	8a04b03a 	or	r2,r17,r8
  80b760:	103f1126 	beq	r2,zero,80b3a8 <__adddf3+0x520>
  80b764:	003e8806 	br	80b188 <__adddf3+0x300>
  80b768:	0005883a 	mov	r2,zero
  80b76c:	00c1ffc4 	movi	r3,2047
  80b770:	0011883a 	mov	r8,zero
  80b774:	003e2a06 	br	80b020 <__adddf3+0x198>

0080b778 <__divdf3>:
  80b778:	2810d53a 	srli	r8,r5,20
  80b77c:	defff004 	addi	sp,sp,-64
  80b780:	dc000615 	stw	r16,24(sp)
  80b784:	04000434 	movhi	r16,16
  80b788:	df000e15 	stw	fp,56(sp)
  80b78c:	ddc00d15 	stw	r23,52(sp)
  80b790:	dd800c15 	stw	r22,48(sp)
  80b794:	dd000a15 	stw	r20,40(sp)
  80b798:	843fffc4 	addi	r16,r16,-1
  80b79c:	dfc00f15 	stw	ra,60(sp)
  80b7a0:	dd400b15 	stw	r21,44(sp)
  80b7a4:	dcc00915 	stw	r19,36(sp)
  80b7a8:	dc800815 	stw	r18,32(sp)
  80b7ac:	dc400715 	stw	r17,28(sp)
  80b7b0:	4201ffcc 	andi	r8,r8,2047
  80b7b4:	282ed7fa 	srli	r23,r5,31
  80b7b8:	3039883a 	mov	fp,r6
  80b7bc:	382d883a 	mov	r22,r7
  80b7c0:	2029883a 	mov	r20,r4
  80b7c4:	2c20703a 	and	r16,r5,r16
  80b7c8:	40006826 	beq	r8,zero,80b96c <__divdf3+0x1f4>
  80b7cc:	4081ffe0 	cmpeqi	r2,r8,2047
  80b7d0:	1000791e 	bne	r2,zero,80b9b8 <__divdf3+0x240>
  80b7d4:	2026d77a 	srli	r19,r4,29
  80b7d8:	800a90fa 	slli	r5,r16,3
  80b7dc:	202890fa 	slli	r20,r4,3
  80b7e0:	44bf0044 	addi	r18,r8,-1023
  80b7e4:	994ab03a 	or	r5,r19,r5
  80b7e8:	2cc02034 	orhi	r19,r5,128
  80b7ec:	0021883a 	mov	r16,zero
  80b7f0:	0023883a 	mov	r17,zero
  80b7f4:	b010d53a 	srli	r8,r22,20
  80b7f8:	00c00434 	movhi	r3,16
  80b7fc:	18ffffc4 	addi	r3,r3,-1
  80b800:	4201ffcc 	andi	r8,r8,2047
  80b804:	b02ad7fa 	srli	r21,r22,31
  80b808:	b0ec703a 	and	r22,r22,r3
  80b80c:	40004626 	beq	r8,zero,80b928 <__divdf3+0x1b0>
  80b810:	4081ffe0 	cmpeqi	r2,r8,2047
  80b814:	10006f1e 	bne	r2,zero,80b9d4 <__divdf3+0x25c>
  80b818:	b00690fa 	slli	r3,r22,3
  80b81c:	e004d77a 	srli	r2,fp,29
  80b820:	e01290fa 	slli	r9,fp,3
  80b824:	423f0044 	addi	r8,r8,-1023
  80b828:	10c6b03a 	or	r3,r2,r3
  80b82c:	1d802034 	orhi	r22,r3,128
  80b830:	9225c83a 	sub	r18,r18,r8
  80b834:	0007883a 	mov	r3,zero
  80b838:	80800428 	cmpgeui	r2,r16,16
  80b83c:	bd4ef03a 	xor	r7,r23,r21
  80b840:	1000a71e 	bne	r2,zero,80bae0 <__divdf3+0x368>
  80b844:	800c90ba 	slli	r6,r16,2
  80b848:	00802074 	movhi	r2,129
  80b84c:	3085883a 	add	r2,r6,r2
  80b850:	10ae1617 	ldw	r2,-18344(r2)
  80b854:	1000683a 	jmp	r2
  80b858:	0080bae0 	cmpeqi	r2,zero,747
  80b85c:	0080b904 	movi	r2,740
  80b860:	0080b8b4 	movhi	r2,738
  80b864:	0080b914 	movui	r2,740
  80b868:	0080b8b4 	movhi	r2,738
  80b86c:	0080ba84 	movi	r2,746
  80b870:	0080b8b4 	movhi	r2,738
  80b874:	0080b914 	movui	r2,740
  80b878:	0080b904 	movi	r2,740
  80b87c:	0080b904 	movi	r2,740
  80b880:	0080ba84 	movi	r2,746
  80b884:	0080b914 	movui	r2,740
  80b888:	0080b898 	cmpnei	r2,zero,738
  80b88c:	0080b898 	cmpnei	r2,zero,738
  80b890:	0080b898 	cmpnei	r2,zero,738
  80b894:	0080ba9c 	xori	r2,zero,746
  80b898:	b80f883a 	mov	r7,r23
  80b89c:	888000a0 	cmpeqi	r2,r17,2
  80b8a0:	1000181e 	bne	r2,zero,80b904 <__divdf3+0x18c>
  80b8a4:	888000e0 	cmpeqi	r2,r17,3
  80b8a8:	1001f61e 	bne	r2,zero,80c084 <__divdf3+0x90c>
  80b8ac:	88800060 	cmpeqi	r2,r17,1
  80b8b0:	10006126 	beq	r2,zero,80ba38 <__divdf3+0x2c0>
  80b8b4:	0007883a 	mov	r3,zero
  80b8b8:	000b883a 	mov	r5,zero
  80b8bc:	0029883a 	mov	r20,zero
  80b8c0:	1806953a 	slli	r3,r3,20
  80b8c4:	380e97fa 	slli	r7,r7,31
  80b8c8:	a005883a 	mov	r2,r20
  80b8cc:	1946b03a 	or	r3,r3,r5
  80b8d0:	19c6b03a 	or	r3,r3,r7
  80b8d4:	dfc00f17 	ldw	ra,60(sp)
  80b8d8:	df000e17 	ldw	fp,56(sp)
  80b8dc:	ddc00d17 	ldw	r23,52(sp)
  80b8e0:	dd800c17 	ldw	r22,48(sp)
  80b8e4:	dd400b17 	ldw	r21,44(sp)
  80b8e8:	dd000a17 	ldw	r20,40(sp)
  80b8ec:	dcc00917 	ldw	r19,36(sp)
  80b8f0:	dc800817 	ldw	r18,32(sp)
  80b8f4:	dc400717 	ldw	r17,28(sp)
  80b8f8:	dc000617 	ldw	r16,24(sp)
  80b8fc:	dec01004 	addi	sp,sp,64
  80b900:	f800283a 	ret
  80b904:	00c1ffc4 	movi	r3,2047
  80b908:	000b883a 	mov	r5,zero
  80b90c:	0029883a 	mov	r20,zero
  80b910:	003feb06 	br	80b8c0 <__divdf3+0x148>
  80b914:	a80f883a 	mov	r7,r21
  80b918:	b027883a 	mov	r19,r22
  80b91c:	4829883a 	mov	r20,r9
  80b920:	1823883a 	mov	r17,r3
  80b924:	003fdd06 	br	80b89c <__divdf3+0x124>
  80b928:	b712b03a 	or	r9,r22,fp
  80b92c:	48003e26 	beq	r9,zero,80ba28 <__divdf3+0x2b0>
  80b930:	b0017726 	beq	r22,zero,80bf10 <__divdf3+0x798>
  80b934:	b009883a 	mov	r4,r22
  80b938:	080d5740 	call	80d574 <__clzsi2>
  80b93c:	117ffd44 	addi	r5,r2,-11
  80b940:	01000744 	movi	r4,29
  80b944:	127ffe04 	addi	r9,r2,-8
  80b948:	2149c83a 	sub	r4,r4,r5
  80b94c:	b246983a 	sll	r3,r22,r9
  80b950:	e108d83a 	srl	r4,fp,r4
  80b954:	e252983a 	sll	r9,fp,r9
  80b958:	20ecb03a 	or	r22,r4,r3
  80b95c:	1491883a 	add	r8,r2,r18
  80b960:	4480fcc4 	addi	r18,r8,1011
  80b964:	0007883a 	mov	r3,zero
  80b968:	003fb306 	br	80b838 <__divdf3+0xc0>
  80b96c:	8126b03a 	or	r19,r16,r4
  80b970:	2023883a 	mov	r17,r4
  80b974:	98002726 	beq	r19,zero,80ba14 <__divdf3+0x29c>
  80b978:	80017026 	beq	r16,zero,80bf3c <__divdf3+0x7c4>
  80b97c:	8009883a 	mov	r4,r16
  80b980:	080d5740 	call	80d574 <__clzsi2>
  80b984:	113ffd44 	addi	r4,r2,-11
  80b988:	00c00744 	movi	r3,29
  80b98c:	14fffe04 	addi	r19,r2,-8
  80b990:	1907c83a 	sub	r3,r3,r4
  80b994:	84ca983a 	sll	r5,r16,r19
  80b998:	88c6d83a 	srl	r3,r17,r3
  80b99c:	8ce8983a 	sll	r20,r17,r19
  80b9a0:	1966b03a 	or	r19,r3,r5
  80b9a4:	023f0344 	movi	r8,-1011
  80b9a8:	40a5c83a 	sub	r18,r8,r2
  80b9ac:	0021883a 	mov	r16,zero
  80b9b0:	0023883a 	mov	r17,zero
  80b9b4:	003f8f06 	br	80b7f4 <__divdf3+0x7c>
  80b9b8:	8126b03a 	or	r19,r16,r4
  80b9bc:	9800101e 	bne	r19,zero,80ba00 <__divdf3+0x288>
  80b9c0:	0029883a 	mov	r20,zero
  80b9c4:	04000204 	movi	r16,8
  80b9c8:	0481ffc4 	movi	r18,2047
  80b9cc:	04400084 	movi	r17,2
  80b9d0:	003f8806 	br	80b7f4 <__divdf3+0x7c>
  80b9d4:	b712b03a 	or	r9,r22,fp
  80b9d8:	94be0044 	addi	r18,r18,-2047
  80b9dc:	4800041e 	bne	r9,zero,80b9f0 <__divdf3+0x278>
  80b9e0:	84000094 	ori	r16,r16,2
  80b9e4:	002d883a 	mov	r22,zero
  80b9e8:	00c00084 	movi	r3,2
  80b9ec:	003f9206 	br	80b838 <__divdf3+0xc0>
  80b9f0:	840000d4 	ori	r16,r16,3
  80b9f4:	e013883a 	mov	r9,fp
  80b9f8:	00c000c4 	movi	r3,3
  80b9fc:	003f8e06 	br	80b838 <__divdf3+0xc0>
  80ba00:	8027883a 	mov	r19,r16
  80ba04:	0481ffc4 	movi	r18,2047
  80ba08:	04000304 	movi	r16,12
  80ba0c:	044000c4 	movi	r17,3
  80ba10:	003f7806 	br	80b7f4 <__divdf3+0x7c>
  80ba14:	0029883a 	mov	r20,zero
  80ba18:	04000104 	movi	r16,4
  80ba1c:	0025883a 	mov	r18,zero
  80ba20:	04400044 	movi	r17,1
  80ba24:	003f7306 	br	80b7f4 <__divdf3+0x7c>
  80ba28:	84000054 	ori	r16,r16,1
  80ba2c:	002d883a 	mov	r22,zero
  80ba30:	00c00044 	movi	r3,1
  80ba34:	003f8006 	br	80b838 <__divdf3+0xc0>
  80ba38:	9440ffc4 	addi	r17,r18,1023
  80ba3c:	0441050e 	bge	zero,r17,80be54 <__divdf3+0x6dc>
  80ba40:	a08001cc 	andi	r2,r20,7
  80ba44:	10016c1e 	bne	r2,zero,80bff8 <__divdf3+0x880>
  80ba48:	a008d0fa 	srli	r4,r20,3
  80ba4c:	9880402c 	andhi	r2,r19,256
  80ba50:	10000426 	beq	r2,zero,80ba64 <__divdf3+0x2ec>
  80ba54:	00bfc034 	movhi	r2,65280
  80ba58:	10bfffc4 	addi	r2,r2,-1
  80ba5c:	98a6703a 	and	r19,r19,r2
  80ba60:	94410004 	addi	r17,r18,1024
  80ba64:	8881ffc8 	cmpgei	r2,r17,2047
  80ba68:	103fa61e 	bne	r2,zero,80b904 <__divdf3+0x18c>
  80ba6c:	9828977a 	slli	r20,r19,29
  80ba70:	980a927a 	slli	r5,r19,9
  80ba74:	88c1ffcc 	andi	r3,r17,2047
  80ba78:	a128b03a 	or	r20,r20,r4
  80ba7c:	280ad33a 	srli	r5,r5,12
  80ba80:	003f8f06 	br	80b8c0 <__divdf3+0x148>
  80ba84:	01400434 	movhi	r5,16
  80ba88:	000f883a 	mov	r7,zero
  80ba8c:	297fffc4 	addi	r5,r5,-1
  80ba90:	053fffc4 	movi	r20,-1
  80ba94:	00c1ffc4 	movi	r3,2047
  80ba98:	003f8906 	br	80b8c0 <__divdf3+0x148>
  80ba9c:	9880022c 	andhi	r2,r19,8
  80baa0:	10000926 	beq	r2,zero,80bac8 <__divdf3+0x350>
  80baa4:	b080022c 	andhi	r2,r22,8
  80baa8:	1000071e 	bne	r2,zero,80bac8 <__divdf3+0x350>
  80baac:	00800434 	movhi	r2,16
  80bab0:	b1400234 	orhi	r5,r22,8
  80bab4:	10bfffc4 	addi	r2,r2,-1
  80bab8:	288a703a 	and	r5,r5,r2
  80babc:	a80f883a 	mov	r7,r21
  80bac0:	4829883a 	mov	r20,r9
  80bac4:	003ff306 	br	80ba94 <__divdf3+0x31c>
  80bac8:	00800434 	movhi	r2,16
  80bacc:	99400234 	orhi	r5,r19,8
  80bad0:	10bfffc4 	addi	r2,r2,-1
  80bad4:	288a703a 	and	r5,r5,r2
  80bad8:	b80f883a 	mov	r7,r23
  80badc:	003fed06 	br	80ba94 <__divdf3+0x31c>
  80bae0:	b4c10536 	bltu	r22,r19,80bef8 <__divdf3+0x780>
  80bae4:	b4c10326 	beq	r22,r19,80bef4 <__divdf3+0x77c>
  80bae8:	94bfffc4 	addi	r18,r18,-1
  80baec:	a039883a 	mov	fp,r20
  80baf0:	9821883a 	mov	r16,r19
  80baf4:	0023883a 	mov	r17,zero
  80baf8:	b006923a 	slli	r3,r22,8
  80bafc:	482cd63a 	srli	r22,r9,24
  80bb00:	8009883a 	mov	r4,r16
  80bb04:	182ed43a 	srli	r23,r3,16
  80bb08:	b0ecb03a 	or	r22,r22,r3
  80bb0c:	d9c00015 	stw	r7,0(sp)
  80bb10:	b80b883a 	mov	r5,r23
  80bb14:	482a923a 	slli	r21,r9,8
  80bb18:	b53fffcc 	andi	r20,r22,65535
  80bb1c:	080ada00 	call	80ada0 <__udivsi3>
  80bb20:	100b883a 	mov	r5,r2
  80bb24:	a009883a 	mov	r4,r20
  80bb28:	1027883a 	mov	r19,r2
  80bb2c:	080ae600 	call	80ae60 <__mulsi3>
  80bb30:	8009883a 	mov	r4,r16
  80bb34:	b80b883a 	mov	r5,r23
  80bb38:	1021883a 	mov	r16,r2
  80bb3c:	080ae040 	call	80ae04 <__umodsi3>
  80bb40:	1004943a 	slli	r2,r2,16
  80bb44:	e008d43a 	srli	r4,fp,16
  80bb48:	d9c00017 	ldw	r7,0(sp)
  80bb4c:	2088b03a 	or	r4,r4,r2
  80bb50:	2400042e 	bgeu	r4,r16,80bb64 <__divdf3+0x3ec>
  80bb54:	2589883a 	add	r4,r4,r22
  80bb58:	98bfffc4 	addi	r2,r19,-1
  80bb5c:	2581082e 	bgeu	r4,r22,80bf80 <__divdf3+0x808>
  80bb60:	1027883a 	mov	r19,r2
  80bb64:	2421c83a 	sub	r16,r4,r16
  80bb68:	b80b883a 	mov	r5,r23
  80bb6c:	8009883a 	mov	r4,r16
  80bb70:	d9c00215 	stw	r7,8(sp)
  80bb74:	080ada00 	call	80ada0 <__udivsi3>
  80bb78:	100b883a 	mov	r5,r2
  80bb7c:	a009883a 	mov	r4,r20
  80bb80:	d8800115 	stw	r2,4(sp)
  80bb84:	080ae600 	call	80ae60 <__mulsi3>
  80bb88:	b80b883a 	mov	r5,r23
  80bb8c:	8009883a 	mov	r4,r16
  80bb90:	d8800015 	stw	r2,0(sp)
  80bb94:	080ae040 	call	80ae04 <__umodsi3>
  80bb98:	100c943a 	slli	r6,r2,16
  80bb9c:	d8c00017 	ldw	r3,0(sp)
  80bba0:	e73fffcc 	andi	fp,fp,65535
  80bba4:	e18cb03a 	or	r6,fp,r6
  80bba8:	da000117 	ldw	r8,4(sp)
  80bbac:	d9c00217 	ldw	r7,8(sp)
  80bbb0:	30c0042e 	bgeu	r6,r3,80bbc4 <__divdf3+0x44c>
  80bbb4:	358d883a 	add	r6,r6,r22
  80bbb8:	40bfffc4 	addi	r2,r8,-1
  80bbbc:	3580ec2e 	bgeu	r6,r22,80bf70 <__divdf3+0x7f8>
  80bbc0:	1011883a 	mov	r8,r2
  80bbc4:	9826943a 	slli	r19,r19,16
  80bbc8:	af3fffcc 	andi	fp,r21,65535
  80bbcc:	30c7c83a 	sub	r3,r6,r3
  80bbd0:	9a26b03a 	or	r19,r19,r8
  80bbd4:	9810d43a 	srli	r8,r19,16
  80bbd8:	9abfffcc 	andi	r10,r19,65535
  80bbdc:	5009883a 	mov	r4,r10
  80bbe0:	e00b883a 	mov	r5,fp
  80bbe4:	d9c00515 	stw	r7,20(sp)
  80bbe8:	d8c00315 	stw	r3,12(sp)
  80bbec:	da800415 	stw	r10,16(sp)
  80bbf0:	da000015 	stw	r8,0(sp)
  80bbf4:	080ae600 	call	80ae60 <__mulsi3>
  80bbf8:	da000017 	ldw	r8,0(sp)
  80bbfc:	e00b883a 	mov	r5,fp
  80bc00:	d8800215 	stw	r2,8(sp)
  80bc04:	4009883a 	mov	r4,r8
  80bc08:	080ae600 	call	80ae60 <__mulsi3>
  80bc0c:	da000017 	ldw	r8,0(sp)
  80bc10:	a820d43a 	srli	r16,r21,16
  80bc14:	d8800115 	stw	r2,4(sp)
  80bc18:	4009883a 	mov	r4,r8
  80bc1c:	800b883a 	mov	r5,r16
  80bc20:	080ae600 	call	80ae60 <__mulsi3>
  80bc24:	da800417 	ldw	r10,16(sp)
  80bc28:	8009883a 	mov	r4,r16
  80bc2c:	d8800015 	stw	r2,0(sp)
  80bc30:	500b883a 	mov	r5,r10
  80bc34:	080ae600 	call	80ae60 <__mulsi3>
  80bc38:	d9800217 	ldw	r6,8(sp)
  80bc3c:	da000117 	ldw	r8,4(sp)
  80bc40:	da400017 	ldw	r9,0(sp)
  80bc44:	3008d43a 	srli	r4,r6,16
  80bc48:	1205883a 	add	r2,r2,r8
  80bc4c:	d8c00317 	ldw	r3,12(sp)
  80bc50:	2089883a 	add	r4,r4,r2
  80bc54:	d9c00517 	ldw	r7,20(sp)
  80bc58:	2200022e 	bgeu	r4,r8,80bc64 <__divdf3+0x4ec>
  80bc5c:	00800074 	movhi	r2,1
  80bc60:	4893883a 	add	r9,r9,r2
  80bc64:	200ad43a 	srli	r5,r4,16
  80bc68:	2008943a 	slli	r4,r4,16
  80bc6c:	31bfffcc 	andi	r6,r6,65535
  80bc70:	2a4b883a 	add	r5,r5,r9
  80bc74:	218d883a 	add	r6,r4,r6
  80bc78:	19409436 	bltu	r3,r5,80becc <__divdf3+0x754>
  80bc7c:	19409226 	beq	r3,r5,80bec8 <__divdf3+0x750>
  80bc80:	898dc83a 	sub	r6,r17,r6
  80bc84:	89a3803a 	cmpltu	r17,r17,r6
  80bc88:	1947c83a 	sub	r3,r3,r5
  80bc8c:	1c47c83a 	sub	r3,r3,r17
  80bc90:	9440ffc4 	addi	r17,r18,1023
  80bc94:	b0c0d326 	beq	r22,r3,80bfe4 <__divdf3+0x86c>
  80bc98:	1809883a 	mov	r4,r3
  80bc9c:	b80b883a 	mov	r5,r23
  80bca0:	d9800315 	stw	r6,12(sp)
  80bca4:	d9c00215 	stw	r7,8(sp)
  80bca8:	d8c00015 	stw	r3,0(sp)
  80bcac:	080ada00 	call	80ada0 <__udivsi3>
  80bcb0:	100b883a 	mov	r5,r2
  80bcb4:	a009883a 	mov	r4,r20
  80bcb8:	d8800115 	stw	r2,4(sp)
  80bcbc:	080ae600 	call	80ae60 <__mulsi3>
  80bcc0:	d8c00017 	ldw	r3,0(sp)
  80bcc4:	b80b883a 	mov	r5,r23
  80bcc8:	d8800015 	stw	r2,0(sp)
  80bccc:	1809883a 	mov	r4,r3
  80bcd0:	080ae040 	call	80ae04 <__umodsi3>
  80bcd4:	d9800317 	ldw	r6,12(sp)
  80bcd8:	1006943a 	slli	r3,r2,16
  80bcdc:	da400017 	ldw	r9,0(sp)
  80bce0:	3008d43a 	srli	r4,r6,16
  80bce4:	da000117 	ldw	r8,4(sp)
  80bce8:	d9c00217 	ldw	r7,8(sp)
  80bcec:	20c6b03a 	or	r3,r4,r3
  80bcf0:	1a40062e 	bgeu	r3,r9,80bd0c <__divdf3+0x594>
  80bcf4:	1d87883a 	add	r3,r3,r22
  80bcf8:	40bfffc4 	addi	r2,r8,-1
  80bcfc:	1d80c836 	bltu	r3,r22,80c020 <__divdf3+0x8a8>
  80bd00:	1a40c72e 	bgeu	r3,r9,80c020 <__divdf3+0x8a8>
  80bd04:	423fff84 	addi	r8,r8,-2
  80bd08:	1d87883a 	add	r3,r3,r22
  80bd0c:	1a47c83a 	sub	r3,r3,r9
  80bd10:	1809883a 	mov	r4,r3
  80bd14:	b80b883a 	mov	r5,r23
  80bd18:	d9800415 	stw	r6,16(sp)
  80bd1c:	d9c00315 	stw	r7,12(sp)
  80bd20:	da000215 	stw	r8,8(sp)
  80bd24:	d8c00115 	stw	r3,4(sp)
  80bd28:	080ada00 	call	80ada0 <__udivsi3>
  80bd2c:	100b883a 	mov	r5,r2
  80bd30:	a009883a 	mov	r4,r20
  80bd34:	d8800015 	stw	r2,0(sp)
  80bd38:	080ae600 	call	80ae60 <__mulsi3>
  80bd3c:	d8c00117 	ldw	r3,4(sp)
  80bd40:	b80b883a 	mov	r5,r23
  80bd44:	102f883a 	mov	r23,r2
  80bd48:	1809883a 	mov	r4,r3
  80bd4c:	080ae040 	call	80ae04 <__umodsi3>
  80bd50:	d9800417 	ldw	r6,16(sp)
  80bd54:	1004943a 	slli	r2,r2,16
  80bd58:	da400017 	ldw	r9,0(sp)
  80bd5c:	31bfffcc 	andi	r6,r6,65535
  80bd60:	308cb03a 	or	r6,r6,r2
  80bd64:	da000217 	ldw	r8,8(sp)
  80bd68:	d9c00317 	ldw	r7,12(sp)
  80bd6c:	35c0062e 	bgeu	r6,r23,80bd88 <__divdf3+0x610>
  80bd70:	358d883a 	add	r6,r6,r22
  80bd74:	48bfffc4 	addi	r2,r9,-1
  80bd78:	3580a736 	bltu	r6,r22,80c018 <__divdf3+0x8a0>
  80bd7c:	35c0a62e 	bgeu	r6,r23,80c018 <__divdf3+0x8a0>
  80bd80:	4a7fff84 	addi	r9,r9,-2
  80bd84:	358d883a 	add	r6,r6,r22
  80bd88:	4028943a 	slli	r20,r8,16
  80bd8c:	35d5c83a 	sub	r10,r6,r23
  80bd90:	e009883a 	mov	r4,fp
  80bd94:	a268b03a 	or	r20,r20,r9
  80bd98:	a23fffcc 	andi	r8,r20,65535
  80bd9c:	a02ed43a 	srli	r23,r20,16
  80bda0:	400b883a 	mov	r5,r8
  80bda4:	d9c00315 	stw	r7,12(sp)
  80bda8:	da800215 	stw	r10,8(sp)
  80bdac:	da000115 	stw	r8,4(sp)
  80bdb0:	080ae600 	call	80ae60 <__mulsi3>
  80bdb4:	e00b883a 	mov	r5,fp
  80bdb8:	b809883a 	mov	r4,r23
  80bdbc:	1039883a 	mov	fp,r2
  80bdc0:	080ae600 	call	80ae60 <__mulsi3>
  80bdc4:	8009883a 	mov	r4,r16
  80bdc8:	b80b883a 	mov	r5,r23
  80bdcc:	d8800015 	stw	r2,0(sp)
  80bdd0:	080ae600 	call	80ae60 <__mulsi3>
  80bdd4:	da000117 	ldw	r8,4(sp)
  80bdd8:	8009883a 	mov	r4,r16
  80bddc:	1021883a 	mov	r16,r2
  80bde0:	400b883a 	mov	r5,r8
  80bde4:	080ae600 	call	80ae60 <__mulsi3>
  80bde8:	d9800017 	ldw	r6,0(sp)
  80bdec:	e006d43a 	srli	r3,fp,16
  80bdf0:	da800217 	ldw	r10,8(sp)
  80bdf4:	1185883a 	add	r2,r2,r6
  80bdf8:	1887883a 	add	r3,r3,r2
  80bdfc:	d9c00317 	ldw	r7,12(sp)
  80be00:	1980022e 	bgeu	r3,r6,80be0c <__divdf3+0x694>
  80be04:	00800074 	movhi	r2,1
  80be08:	80a1883a 	add	r16,r16,r2
  80be0c:	1808d43a 	srli	r4,r3,16
  80be10:	1806943a 	slli	r3,r3,16
  80be14:	e73fffcc 	andi	fp,fp,65535
  80be18:	2409883a 	add	r4,r4,r16
  80be1c:	1f07883a 	add	r3,r3,fp
  80be20:	51000436 	bltu	r10,r4,80be34 <__divdf3+0x6bc>
  80be24:	51000226 	beq	r10,r4,80be30 <__divdf3+0x6b8>
  80be28:	a5000054 	ori	r20,r20,1
  80be2c:	003f0306 	br	80ba3c <__divdf3+0x2c4>
  80be30:	183f0226 	beq	r3,zero,80ba3c <__divdf3+0x2c4>
  80be34:	b28d883a 	add	r6,r22,r10
  80be38:	a0bfffc4 	addi	r2,r20,-1
  80be3c:	35806536 	bltu	r6,r22,80bfd4 <__divdf3+0x85c>
  80be40:	31008036 	bltu	r6,r4,80c044 <__divdf3+0x8cc>
  80be44:	31009426 	beq	r6,r4,80c098 <__divdf3+0x920>
  80be48:	1029883a 	mov	r20,r2
  80be4c:	003ff606 	br	80be28 <__divdf3+0x6b0>
  80be50:	053fffc4 	movi	r20,-1
  80be54:	01400044 	movi	r5,1
  80be58:	2c4bc83a 	sub	r5,r5,r17
  80be5c:	28800e48 	cmpgei	r2,r5,57
  80be60:	103e941e 	bne	r2,zero,80b8b4 <__divdf3+0x13c>
  80be64:	28800808 	cmpgei	r2,r5,32
  80be68:	1000491e 	bne	r2,zero,80bf90 <__divdf3+0x818>
  80be6c:	92010784 	addi	r8,r18,1054
  80be70:	9a04983a 	sll	r2,r19,r8
  80be74:	a146d83a 	srl	r3,r20,r5
  80be78:	a210983a 	sll	r8,r20,r8
  80be7c:	994ad83a 	srl	r5,r19,r5
  80be80:	10e8b03a 	or	r20,r2,r3
  80be84:	4010c03a 	cmpne	r8,r8,zero
  80be88:	a228b03a 	or	r20,r20,r8
  80be8c:	a08001cc 	andi	r2,r20,7
  80be90:	10000726 	beq	r2,zero,80beb0 <__divdf3+0x738>
  80be94:	a08003cc 	andi	r2,r20,15
  80be98:	10800120 	cmpeqi	r2,r2,4
  80be9c:	1000041e 	bne	r2,zero,80beb0 <__divdf3+0x738>
  80bea0:	a0800104 	addi	r2,r20,4
  80bea4:	1529803a 	cmpltu	r20,r2,r20
  80bea8:	2d0b883a 	add	r5,r5,r20
  80beac:	1029883a 	mov	r20,r2
  80beb0:	2880202c 	andhi	r2,r5,128
  80beb4:	10006f26 	beq	r2,zero,80c074 <__divdf3+0x8fc>
  80beb8:	00c00044 	movi	r3,1
  80bebc:	000b883a 	mov	r5,zero
  80bec0:	0029883a 	mov	r20,zero
  80bec4:	003e7e06 	br	80b8c0 <__divdf3+0x148>
  80bec8:	89bf6d2e 	bgeu	r17,r6,80bc80 <__divdf3+0x508>
  80becc:	8d63883a 	add	r17,r17,r21
  80bed0:	8d45803a 	cmpltu	r2,r17,r21
  80bed4:	1585883a 	add	r2,r2,r22
  80bed8:	1887883a 	add	r3,r3,r2
  80bedc:	98bfffc4 	addi	r2,r19,-1
  80bee0:	b0c0202e 	bgeu	r22,r3,80bf64 <__divdf3+0x7ec>
  80bee4:	19405136 	bltu	r3,r5,80c02c <__divdf3+0x8b4>
  80bee8:	28c04f26 	beq	r5,r3,80c028 <__divdf3+0x8b0>
  80beec:	1027883a 	mov	r19,r2
  80bef0:	003f6306 	br	80bc80 <__divdf3+0x508>
  80bef4:	a27efc36 	bltu	r20,r9,80bae8 <__divdf3+0x370>
  80bef8:	983897fa 	slli	fp,r19,31
  80befc:	a004d07a 	srli	r2,r20,1
  80bf00:	9820d07a 	srli	r16,r19,1
  80bf04:	a02297fa 	slli	r17,r20,31
  80bf08:	e0b8b03a 	or	fp,fp,r2
  80bf0c:	003efa06 	br	80baf8 <__divdf3+0x380>
  80bf10:	e009883a 	mov	r4,fp
  80bf14:	080d5740 	call	80d574 <__clzsi2>
  80bf18:	11400544 	addi	r5,r2,21
  80bf1c:	29000748 	cmpgei	r4,r5,29
  80bf20:	1007883a 	mov	r3,r2
  80bf24:	10800804 	addi	r2,r2,32
  80bf28:	203e8526 	beq	r4,zero,80b940 <__divdf3+0x1c8>
  80bf2c:	18fffe04 	addi	r3,r3,-8
  80bf30:	e0ec983a 	sll	r22,fp,r3
  80bf34:	0013883a 	mov	r9,zero
  80bf38:	003e8806 	br	80b95c <__divdf3+0x1e4>
  80bf3c:	080d5740 	call	80d574 <__clzsi2>
  80bf40:	11000544 	addi	r4,r2,21
  80bf44:	20c00748 	cmpgei	r3,r4,29
  80bf48:	100b883a 	mov	r5,r2
  80bf4c:	10800804 	addi	r2,r2,32
  80bf50:	183e8d26 	beq	r3,zero,80b988 <__divdf3+0x210>
  80bf54:	297ffe04 	addi	r5,r5,-8
  80bf58:	a166983a 	sll	r19,r20,r5
  80bf5c:	0029883a 	mov	r20,zero
  80bf60:	003e9006 	br	80b9a4 <__divdf3+0x22c>
  80bf64:	b0ffe11e 	bne	r22,r3,80beec <__divdf3+0x774>
  80bf68:	8d7fe036 	bltu	r17,r21,80beec <__divdf3+0x774>
  80bf6c:	003fdd06 	br	80bee4 <__divdf3+0x76c>
  80bf70:	30ff132e 	bgeu	r6,r3,80bbc0 <__divdf3+0x448>
  80bf74:	423fff84 	addi	r8,r8,-2
  80bf78:	358d883a 	add	r6,r6,r22
  80bf7c:	003f1106 	br	80bbc4 <__divdf3+0x44c>
  80bf80:	243ef72e 	bgeu	r4,r16,80bb60 <__divdf3+0x3e8>
  80bf84:	9cffff84 	addi	r19,r19,-2
  80bf88:	2589883a 	add	r4,r4,r22
  80bf8c:	003ef506 	br	80bb64 <__divdf3+0x3ec>
  80bf90:	00fff844 	movi	r3,-31
  80bf94:	1c47c83a 	sub	r3,r3,r17
  80bf98:	29400820 	cmpeqi	r5,r5,32
  80bf9c:	98c6d83a 	srl	r3,r19,r3
  80bfa0:	2800031e 	bne	r5,zero,80bfb0 <__divdf3+0x838>
  80bfa4:	91410f84 	addi	r5,r18,1086
  80bfa8:	994a983a 	sll	r5,r19,r5
  80bfac:	a168b03a 	or	r20,r20,r5
  80bfb0:	a028c03a 	cmpne	r20,r20,zero
  80bfb4:	a0e8b03a 	or	r20,r20,r3
  80bfb8:	a4c001cc 	andi	r19,r20,7
  80bfbc:	9800291e 	bne	r19,zero,80c064 <__divdf3+0x8ec>
  80bfc0:	000b883a 	mov	r5,zero
  80bfc4:	a028d0fa 	srli	r20,r20,3
  80bfc8:	0007883a 	mov	r3,zero
  80bfcc:	a4e8b03a 	or	r20,r20,r19
  80bfd0:	003e3b06 	br	80b8c0 <__divdf3+0x148>
  80bfd4:	1029883a 	mov	r20,r2
  80bfd8:	313f931e 	bne	r6,r4,80be28 <__divdf3+0x6b0>
  80bfdc:	1d7f921e 	bne	r3,r21,80be28 <__divdf3+0x6b0>
  80bfe0:	003e9606 	br	80ba3c <__divdf3+0x2c4>
  80bfe4:	047f9a0e 	bge	zero,r17,80be50 <__divdf3+0x6d8>
  80bfe8:	0009883a 	mov	r4,zero
  80bfec:	05000044 	movi	r20,1
  80bff0:	9d27883a 	add	r19,r19,r20
  80bff4:	003e9506 	br	80ba4c <__divdf3+0x2d4>
  80bff8:	a08003cc 	andi	r2,r20,15
  80bffc:	10800118 	cmpnei	r2,r2,4
  80c000:	103e9126 	beq	r2,zero,80ba48 <__divdf3+0x2d0>
  80c004:	a1000104 	addi	r4,r20,4
  80c008:	00bffec4 	movi	r2,-5
  80c00c:	2008d0fa 	srli	r4,r4,3
  80c010:	1529803a 	cmpltu	r20,r2,r20
  80c014:	003ff606 	br	80bff0 <__divdf3+0x878>
  80c018:	1013883a 	mov	r9,r2
  80c01c:	003f5a06 	br	80bd88 <__divdf3+0x610>
  80c020:	1011883a 	mov	r8,r2
  80c024:	003f3906 	br	80bd0c <__divdf3+0x594>
  80c028:	89bfb02e 	bgeu	r17,r6,80beec <__divdf3+0x774>
  80c02c:	8d63883a 	add	r17,r17,r21
  80c030:	8d45803a 	cmpltu	r2,r17,r21
  80c034:	1585883a 	add	r2,r2,r22
  80c038:	9cffff84 	addi	r19,r19,-2
  80c03c:	1887883a 	add	r3,r3,r2
  80c040:	003f0f06 	br	80bc80 <__divdf3+0x508>
  80c044:	ad45883a 	add	r2,r21,r21
  80c048:	156b803a 	cmpltu	r21,r2,r21
  80c04c:	adad883a 	add	r22,r21,r22
  80c050:	358d883a 	add	r6,r6,r22
  80c054:	a53fff84 	addi	r20,r20,-2
  80c058:	102b883a 	mov	r21,r2
  80c05c:	313fdf26 	beq	r6,r4,80bfdc <__divdf3+0x864>
  80c060:	003f7106 	br	80be28 <__divdf3+0x6b0>
  80c064:	a08003cc 	andi	r2,r20,15
  80c068:	10800118 	cmpnei	r2,r2,4
  80c06c:	000b883a 	mov	r5,zero
  80c070:	103f8b1e 	bne	r2,zero,80bea0 <__divdf3+0x728>
  80c074:	2804927a 	slli	r2,r5,9
  80c078:	2826977a 	slli	r19,r5,29
  80c07c:	100ad33a 	srli	r5,r2,12
  80c080:	003fd006 	br	80bfc4 <__divdf3+0x84c>
  80c084:	00800434 	movhi	r2,16
  80c088:	99400234 	orhi	r5,r19,8
  80c08c:	10bfffc4 	addi	r2,r2,-1
  80c090:	288a703a 	and	r5,r5,r2
  80c094:	003e7f06 	br	80ba94 <__divdf3+0x31c>
  80c098:	a8ffea36 	bltu	r21,r3,80c044 <__divdf3+0x8cc>
  80c09c:	1029883a 	mov	r20,r2
  80c0a0:	1d7f611e 	bne	r3,r21,80be28 <__divdf3+0x6b0>
  80c0a4:	003e6506 	br	80ba3c <__divdf3+0x2c4>

0080c0a8 <__eqdf2>:
  80c0a8:	2810d53a 	srli	r8,r5,20
  80c0ac:	3806d53a 	srli	r3,r7,20
  80c0b0:	00800434 	movhi	r2,16
  80c0b4:	4201ffcc 	andi	r8,r8,2047
  80c0b8:	10bfffc4 	addi	r2,r2,-1
  80c0bc:	4241ffd8 	cmpnei	r9,r8,2047
  80c0c0:	2814d7fa 	srli	r10,r5,31
  80c0c4:	3816d7fa 	srli	r11,r7,31
  80c0c8:	288a703a 	and	r5,r5,r2
  80c0cc:	388e703a 	and	r7,r7,r2
  80c0d0:	1881ffcc 	andi	r2,r3,2047
  80c0d4:	48000626 	beq	r9,zero,80c0f0 <__eqdf2+0x48>
  80c0d8:	10c1ffe0 	cmpeqi	r3,r2,2047
  80c0dc:	1800021e 	bne	r3,zero,80c0e8 <__eqdf2+0x40>
  80c0e0:	4080011e 	bne	r8,r2,80c0e8 <__eqdf2+0x40>
  80c0e4:	29c00826 	beq	r5,r7,80c108 <__eqdf2+0x60>
  80c0e8:	00800044 	movi	r2,1
  80c0ec:	f800283a 	ret
  80c0f0:	2906b03a 	or	r3,r5,r4
  80c0f4:	183ffc1e 	bne	r3,zero,80c0e8 <__eqdf2+0x40>
  80c0f8:	1081ffd8 	cmpnei	r2,r2,2047
  80c0fc:	103ffa1e 	bne	r2,zero,80c0e8 <__eqdf2+0x40>
  80c100:	398eb03a 	or	r7,r7,r6
  80c104:	383ff81e 	bne	r7,zero,80c0e8 <__eqdf2+0x40>
  80c108:	21bff71e 	bne	r4,r6,80c0e8 <__eqdf2+0x40>
  80c10c:	52c00426 	beq	r10,r11,80c120 <__eqdf2+0x78>
  80c110:	403ff51e 	bne	r8,zero,80c0e8 <__eqdf2+0x40>
  80c114:	290ab03a 	or	r5,r5,r4
  80c118:	2804c03a 	cmpne	r2,r5,zero
  80c11c:	f800283a 	ret
  80c120:	0005883a 	mov	r2,zero
  80c124:	f800283a 	ret

0080c128 <__gedf2>:
  80c128:	2810d53a 	srli	r8,r5,20
  80c12c:	3812d53a 	srli	r9,r7,20
  80c130:	00c00434 	movhi	r3,16
  80c134:	4201ffcc 	andi	r8,r8,2047
  80c138:	18ffffc4 	addi	r3,r3,-1
  80c13c:	4281ffd8 	cmpnei	r10,r8,2047
  80c140:	2816d7fa 	srli	r11,r5,31
  80c144:	3804d7fa 	srli	r2,r7,31
  80c148:	28ca703a 	and	r5,r5,r3
  80c14c:	38ce703a 	and	r7,r7,r3
  80c150:	48c1ffcc 	andi	r3,r9,2047
  80c154:	50000a26 	beq	r10,zero,80c180 <__gedf2+0x58>
  80c158:	1a41ffd8 	cmpnei	r9,r3,2047
  80c15c:	48000c26 	beq	r9,zero,80c190 <__gedf2+0x68>
  80c160:	4000171e 	bne	r8,zero,80c1c0 <__gedf2+0x98>
  80c164:	2912b03a 	or	r9,r5,r4
  80c168:	1800121e 	bne	r3,zero,80c1b4 <__gedf2+0x8c>
  80c16c:	3994b03a 	or	r10,r7,r6
  80c170:	5000101e 	bne	r10,zero,80c1b4 <__gedf2+0x8c>
  80c174:	48000a1e 	bne	r9,zero,80c1a0 <__gedf2+0x78>
  80c178:	0005883a 	mov	r2,zero
  80c17c:	f800283a 	ret
  80c180:	2912b03a 	or	r9,r5,r4
  80c184:	48001d1e 	bne	r9,zero,80c1fc <__gedf2+0xd4>
  80c188:	1a41ffe0 	cmpeqi	r9,r3,2047
  80c18c:	48000c26 	beq	r9,zero,80c1c0 <__gedf2+0x98>
  80c190:	3992b03a 	or	r9,r7,r6
  80c194:	4800191e 	bne	r9,zero,80c1fc <__gedf2+0xd4>
  80c198:	40000526 	beq	r8,zero,80c1b0 <__gedf2+0x88>
  80c19c:	58800c26 	beq	r11,r2,80c1d0 <__gedf2+0xa8>
  80c1a0:	00800044 	movi	r2,1
  80c1a4:	58000526 	beq	r11,zero,80c1bc <__gedf2+0x94>
  80c1a8:	00bfffc4 	movi	r2,-1
  80c1ac:	f800283a 	ret
  80c1b0:	2912b03a 	or	r9,r5,r4
  80c1b4:	483ff91e 	bne	r9,zero,80c19c <__gedf2+0x74>
  80c1b8:	103ffb26 	beq	r2,zero,80c1a8 <__gedf2+0x80>
  80c1bc:	f800283a 	ret
  80c1c0:	183ff61e 	bne	r3,zero,80c19c <__gedf2+0x74>
  80c1c4:	3992b03a 	or	r9,r7,r6
  80c1c8:	483ff41e 	bne	r9,zero,80c19c <__gedf2+0x74>
  80c1cc:	003ff406 	br	80c1a0 <__gedf2+0x78>
  80c1d0:	1a000716 	blt	r3,r8,80c1f0 <__gedf2+0xc8>
  80c1d4:	40fff816 	blt	r8,r3,80c1b8 <__gedf2+0x90>
  80c1d8:	397ff136 	bltu	r7,r5,80c1a0 <__gedf2+0x78>
  80c1dc:	29c00926 	beq	r5,r7,80c204 <__gedf2+0xdc>
  80c1e0:	29ffe52e 	bgeu	r5,r7,80c178 <__gedf2+0x50>
  80c1e4:	583ff026 	beq	r11,zero,80c1a8 <__gedf2+0x80>
  80c1e8:	5805883a 	mov	r2,r11
  80c1ec:	f800283a 	ret
  80c1f0:	103fed1e 	bne	r2,zero,80c1a8 <__gedf2+0x80>
  80c1f4:	00800044 	movi	r2,1
  80c1f8:	f800283a 	ret
  80c1fc:	00bfff84 	movi	r2,-2
  80c200:	f800283a 	ret
  80c204:	313fe636 	bltu	r6,r4,80c1a0 <__gedf2+0x78>
  80c208:	21bfdb2e 	bgeu	r4,r6,80c178 <__gedf2+0x50>
  80c20c:	003ff506 	br	80c1e4 <__gedf2+0xbc>

0080c210 <__ledf2>:
  80c210:	2810d53a 	srli	r8,r5,20
  80c214:	3812d53a 	srli	r9,r7,20
  80c218:	00c00434 	movhi	r3,16
  80c21c:	4201ffcc 	andi	r8,r8,2047
  80c220:	18ffffc4 	addi	r3,r3,-1
  80c224:	4281ffd8 	cmpnei	r10,r8,2047
  80c228:	2816d7fa 	srli	r11,r5,31
  80c22c:	3804d7fa 	srli	r2,r7,31
  80c230:	28ca703a 	and	r5,r5,r3
  80c234:	38ce703a 	and	r7,r7,r3
  80c238:	48c1ffcc 	andi	r3,r9,2047
  80c23c:	50000a26 	beq	r10,zero,80c268 <__ledf2+0x58>
  80c240:	1a41ffd8 	cmpnei	r9,r3,2047
  80c244:	48000c26 	beq	r9,zero,80c278 <__ledf2+0x68>
  80c248:	4000191e 	bne	r8,zero,80c2b0 <__ledf2+0xa0>
  80c24c:	2912b03a 	or	r9,r5,r4
  80c250:	18000d1e 	bne	r3,zero,80c288 <__ledf2+0x78>
  80c254:	3994b03a 	or	r10,r7,r6
  80c258:	50000b1e 	bne	r10,zero,80c288 <__ledf2+0x78>
  80c25c:	48000c1e 	bne	r9,zero,80c290 <__ledf2+0x80>
  80c260:	0005883a 	mov	r2,zero
  80c264:	f800283a 	ret
  80c268:	2912b03a 	or	r9,r5,r4
  80c26c:	48000c1e 	bne	r9,zero,80c2a0 <__ledf2+0x90>
  80c270:	1a41ffe0 	cmpeqi	r9,r3,2047
  80c274:	48000e26 	beq	r9,zero,80c2b0 <__ledf2+0xa0>
  80c278:	3992b03a 	or	r9,r7,r6
  80c27c:	4800081e 	bne	r9,zero,80c2a0 <__ledf2+0x90>
  80c280:	4000021e 	bne	r8,zero,80c28c <__ledf2+0x7c>
  80c284:	2912b03a 	or	r9,r5,r4
  80c288:	48000726 	beq	r9,zero,80c2a8 <__ledf2+0x98>
  80c28c:	58800c26 	beq	r11,r2,80c2c0 <__ledf2+0xb0>
  80c290:	00800044 	movi	r2,1
  80c294:	58000526 	beq	r11,zero,80c2ac <__ledf2+0x9c>
  80c298:	00bfffc4 	movi	r2,-1
  80c29c:	f800283a 	ret
  80c2a0:	00800084 	movi	r2,2
  80c2a4:	f800283a 	ret
  80c2a8:	103ffb26 	beq	r2,zero,80c298 <__ledf2+0x88>
  80c2ac:	f800283a 	ret
  80c2b0:	183ff61e 	bne	r3,zero,80c28c <__ledf2+0x7c>
  80c2b4:	3992b03a 	or	r9,r7,r6
  80c2b8:	483ff41e 	bne	r9,zero,80c28c <__ledf2+0x7c>
  80c2bc:	003ff406 	br	80c290 <__ledf2+0x80>
  80c2c0:	1a00030e 	bge	r3,r8,80c2d0 <__ledf2+0xc0>
  80c2c4:	103ff41e 	bne	r2,zero,80c298 <__ledf2+0x88>
  80c2c8:	00800044 	movi	r2,1
  80c2cc:	f800283a 	ret
  80c2d0:	40fff516 	blt	r8,r3,80c2a8 <__ledf2+0x98>
  80c2d4:	397fee36 	bltu	r7,r5,80c290 <__ledf2+0x80>
  80c2d8:	29c00426 	beq	r5,r7,80c2ec <__ledf2+0xdc>
  80c2dc:	29ffe02e 	bgeu	r5,r7,80c260 <__ledf2+0x50>
  80c2e0:	583fed26 	beq	r11,zero,80c298 <__ledf2+0x88>
  80c2e4:	5805883a 	mov	r2,r11
  80c2e8:	f800283a 	ret
  80c2ec:	313fe836 	bltu	r6,r4,80c290 <__ledf2+0x80>
  80c2f0:	21bfdb2e 	bgeu	r4,r6,80c260 <__ledf2+0x50>
  80c2f4:	003ffa06 	br	80c2e0 <__ledf2+0xd0>

0080c2f8 <__muldf3>:
  80c2f8:	2810d53a 	srli	r8,r5,20
  80c2fc:	defff004 	addi	sp,sp,-64
  80c300:	00800434 	movhi	r2,16
  80c304:	df000e15 	stw	fp,56(sp)
  80c308:	dd000a15 	stw	r20,40(sp)
  80c30c:	dcc00915 	stw	r19,36(sp)
  80c310:	dc400715 	stw	r17,28(sp)
  80c314:	10bfffc4 	addi	r2,r2,-1
  80c318:	dfc00f15 	stw	ra,60(sp)
  80c31c:	ddc00d15 	stw	r23,52(sp)
  80c320:	dd800c15 	stw	r22,48(sp)
  80c324:	dd400b15 	stw	r21,44(sp)
  80c328:	dc800815 	stw	r18,32(sp)
  80c32c:	dc000615 	stw	r16,24(sp)
  80c330:	4201ffcc 	andi	r8,r8,2047
  80c334:	2828d7fa 	srli	r20,r5,31
  80c338:	2023883a 	mov	r17,r4
  80c33c:	3039883a 	mov	fp,r6
  80c340:	28a6703a 	and	r19,r5,r2
  80c344:	40013426 	beq	r8,zero,80c818 <__muldf3+0x520>
  80c348:	4081ffe0 	cmpeqi	r2,r8,2047
  80c34c:	1001461e 	bne	r2,zero,80c868 <__muldf3+0x570>
  80c350:	980a90fa 	slli	r5,r19,3
  80c354:	2026d77a 	srli	r19,r4,29
  80c358:	202490fa 	slli	r18,r4,3
  80c35c:	423f0044 	addi	r8,r8,-1023
  80c360:	9966b03a 	or	r19,r19,r5
  80c364:	9cc02034 	orhi	r19,r19,128
  80c368:	002b883a 	mov	r21,zero
  80c36c:	002d883a 	mov	r22,zero
  80c370:	3804d53a 	srli	r2,r7,20
  80c374:	00c00434 	movhi	r3,16
  80c378:	18ffffc4 	addi	r3,r3,-1
  80c37c:	1081ffcc 	andi	r2,r2,2047
  80c380:	382ed7fa 	srli	r23,r7,31
  80c384:	38e0703a 	and	r16,r7,r3
  80c388:	10011026 	beq	r2,zero,80c7cc <__muldf3+0x4d4>
  80c38c:	10c1ffe0 	cmpeqi	r3,r2,2047
  80c390:	18013c1e 	bne	r3,zero,80c884 <__muldf3+0x58c>
  80c394:	e008d77a 	srli	r4,fp,29
  80c398:	802090fa 	slli	r16,r16,3
  80c39c:	e02290fa 	slli	r17,fp,3
  80c3a0:	10bf0044 	addi	r2,r2,-1023
  80c3a4:	2420b03a 	or	r16,r4,r16
  80c3a8:	84002034 	orhi	r16,r16,128
  80c3ac:	4091883a 	add	r8,r8,r2
  80c3b0:	0009883a 	mov	r4,zero
  80c3b4:	a8800428 	cmpgeui	r2,r21,16
  80c3b8:	a5ccf03a 	xor	r6,r20,r23
  80c3bc:	41c00044 	addi	r7,r8,1
  80c3c0:	1000371e 	bne	r2,zero,80c4a0 <__muldf3+0x1a8>
  80c3c4:	a80490ba 	slli	r2,r21,2
  80c3c8:	00c02074 	movhi	r3,129
  80c3cc:	10c7883a 	add	r3,r2,r3
  80c3d0:	18b0f617 	ldw	r2,-15400(r3)
  80c3d4:	1000683a 	jmp	r2
  80c3d8:	0080c4a0 	cmpeqi	r2,zero,786
  80c3dc:	0080c41c 	xori	r2,zero,784
  80c3e0:	0080c41c 	xori	r2,zero,784
  80c3e4:	0080c418 	cmpnei	r2,zero,784
  80c3e8:	0080c428 	cmpgeui	r2,zero,784
  80c3ec:	0080c428 	cmpgeui	r2,zero,784
  80c3f0:	0080c8f8 	rdprs	r2,zero,803
  80c3f4:	0080c418 	cmpnei	r2,zero,784
  80c3f8:	0080c428 	cmpgeui	r2,zero,784
  80c3fc:	0080c8f8 	rdprs	r2,zero,803
  80c400:	0080c428 	cmpgeui	r2,zero,784
  80c404:	0080c418 	cmpnei	r2,zero,784
  80c408:	0080c8a0 	cmpeqi	r2,zero,802
  80c40c:	0080c8a0 	cmpeqi	r2,zero,802
  80c410:	0080c8a0 	cmpeqi	r2,zero,802
  80c414:	0080c984 	movi	r2,806
  80c418:	b80d883a 	mov	r6,r23
  80c41c:	8027883a 	mov	r19,r16
  80c420:	8825883a 	mov	r18,r17
  80c424:	202d883a 	mov	r22,r4
  80c428:	b08000a0 	cmpeqi	r2,r22,2
  80c42c:	1000181e 	bne	r2,zero,80c490 <__muldf3+0x198>
  80c430:	b08000e0 	cmpeqi	r2,r22,3
  80c434:	1001961e 	bne	r2,zero,80ca90 <__muldf3+0x798>
  80c438:	b0800060 	cmpeqi	r2,r22,1
  80c43c:	1000c926 	beq	r2,zero,80c764 <__muldf3+0x46c>
  80c440:	0007883a 	mov	r3,zero
  80c444:	0027883a 	mov	r19,zero
  80c448:	0025883a 	mov	r18,zero
  80c44c:	1806953a 	slli	r3,r3,20
  80c450:	300c97fa 	slli	r6,r6,31
  80c454:	9005883a 	mov	r2,r18
  80c458:	1cc6b03a 	or	r3,r3,r19
  80c45c:	1986b03a 	or	r3,r3,r6
  80c460:	dfc00f17 	ldw	ra,60(sp)
  80c464:	df000e17 	ldw	fp,56(sp)
  80c468:	ddc00d17 	ldw	r23,52(sp)
  80c46c:	dd800c17 	ldw	r22,48(sp)
  80c470:	dd400b17 	ldw	r21,44(sp)
  80c474:	dd000a17 	ldw	r20,40(sp)
  80c478:	dcc00917 	ldw	r19,36(sp)
  80c47c:	dc800817 	ldw	r18,32(sp)
  80c480:	dc400717 	ldw	r17,28(sp)
  80c484:	dc000617 	ldw	r16,24(sp)
  80c488:	dec01004 	addi	sp,sp,64
  80c48c:	f800283a 	ret
  80c490:	00c1ffc4 	movi	r3,2047
  80c494:	0027883a 	mov	r19,zero
  80c498:	0025883a 	mov	r18,zero
  80c49c:	003feb06 	br	80c44c <__muldf3+0x154>
  80c4a0:	9028d43a 	srli	r20,r18,16
  80c4a4:	8f3fffcc 	andi	fp,r17,65535
  80c4a8:	957fffcc 	andi	r21,r18,65535
  80c4ac:	a80b883a 	mov	r5,r21
  80c4b0:	e009883a 	mov	r4,fp
  80c4b4:	d9800315 	stw	r6,12(sp)
  80c4b8:	da000215 	stw	r8,8(sp)
  80c4bc:	d9c00115 	stw	r7,4(sp)
  80c4c0:	8822d43a 	srli	r17,r17,16
  80c4c4:	080ae600 	call	80ae60 <__mulsi3>
  80c4c8:	e00b883a 	mov	r5,fp
  80c4cc:	a009883a 	mov	r4,r20
  80c4d0:	102d883a 	mov	r22,r2
  80c4d4:	080ae600 	call	80ae60 <__mulsi3>
  80c4d8:	880b883a 	mov	r5,r17
  80c4dc:	a009883a 	mov	r4,r20
  80c4e0:	102f883a 	mov	r23,r2
  80c4e4:	080ae600 	call	80ae60 <__mulsi3>
  80c4e8:	a80b883a 	mov	r5,r21
  80c4ec:	8809883a 	mov	r4,r17
  80c4f0:	d8800015 	stw	r2,0(sp)
  80c4f4:	080ae600 	call	80ae60 <__mulsi3>
  80c4f8:	b006d43a 	srli	r3,r22,16
  80c4fc:	15e5883a 	add	r18,r2,r23
  80c500:	d9c00117 	ldw	r7,4(sp)
  80c504:	1c87883a 	add	r3,r3,r18
  80c508:	da000217 	ldw	r8,8(sp)
  80c50c:	d9800317 	ldw	r6,12(sp)
  80c510:	1dc0042e 	bgeu	r3,r23,80c524 <__muldf3+0x22c>
  80c514:	d9000017 	ldw	r4,0(sp)
  80c518:	00800074 	movhi	r2,1
  80c51c:	2085883a 	add	r2,r4,r2
  80c520:	d8800015 	stw	r2,0(sp)
  80c524:	1804943a 	slli	r2,r3,16
  80c528:	85ffffcc 	andi	r23,r16,65535
  80c52c:	b5bfffcc 	andi	r22,r22,65535
  80c530:	1585883a 	add	r2,r2,r22
  80c534:	a80b883a 	mov	r5,r21
  80c538:	b809883a 	mov	r4,r23
  80c53c:	1824d43a 	srli	r18,r3,16
  80c540:	d9800515 	stw	r6,20(sp)
  80c544:	da000415 	stw	r8,16(sp)
  80c548:	d9c00315 	stw	r7,12(sp)
  80c54c:	8020d43a 	srli	r16,r16,16
  80c550:	d8800115 	stw	r2,4(sp)
  80c554:	080ae600 	call	80ae60 <__mulsi3>
  80c558:	a009883a 	mov	r4,r20
  80c55c:	b80b883a 	mov	r5,r23
  80c560:	d8800215 	stw	r2,8(sp)
  80c564:	080ae600 	call	80ae60 <__mulsi3>
  80c568:	a009883a 	mov	r4,r20
  80c56c:	800b883a 	mov	r5,r16
  80c570:	102d883a 	mov	r22,r2
  80c574:	080ae600 	call	80ae60 <__mulsi3>
  80c578:	a80b883a 	mov	r5,r21
  80c57c:	8009883a 	mov	r4,r16
  80c580:	1029883a 	mov	r20,r2
  80c584:	080ae600 	call	80ae60 <__mulsi3>
  80c588:	da800217 	ldw	r10,8(sp)
  80c58c:	1585883a 	add	r2,r2,r22
  80c590:	d9c00317 	ldw	r7,12(sp)
  80c594:	5006d43a 	srli	r3,r10,16
  80c598:	da000417 	ldw	r8,16(sp)
  80c59c:	d9800517 	ldw	r6,20(sp)
  80c5a0:	1887883a 	add	r3,r3,r2
  80c5a4:	1d80022e 	bgeu	r3,r22,80c5b0 <__muldf3+0x2b8>
  80c5a8:	00800074 	movhi	r2,1
  80c5ac:	a0a9883a 	add	r20,r20,r2
  80c5b0:	1804d43a 	srli	r2,r3,16
  80c5b4:	1806943a 	slli	r3,r3,16
  80c5b8:	982cd43a 	srli	r22,r19,16
  80c5bc:	9d7fffcc 	andi	r21,r19,65535
  80c5c0:	e009883a 	mov	r4,fp
  80c5c4:	54ffffcc 	andi	r19,r10,65535
  80c5c8:	a80b883a 	mov	r5,r21
  80c5cc:	1ce7883a 	add	r19,r3,r19
  80c5d0:	d9800515 	stw	r6,20(sp)
  80c5d4:	da000415 	stw	r8,16(sp)
  80c5d8:	d9c00315 	stw	r7,12(sp)
  80c5dc:	1529883a 	add	r20,r2,r20
  80c5e0:	080ae600 	call	80ae60 <__mulsi3>
  80c5e4:	e00b883a 	mov	r5,fp
  80c5e8:	b009883a 	mov	r4,r22
  80c5ec:	d8800215 	stw	r2,8(sp)
  80c5f0:	080ae600 	call	80ae60 <__mulsi3>
  80c5f4:	8809883a 	mov	r4,r17
  80c5f8:	b00b883a 	mov	r5,r22
  80c5fc:	1039883a 	mov	fp,r2
  80c600:	080ae600 	call	80ae60 <__mulsi3>
  80c604:	8809883a 	mov	r4,r17
  80c608:	a80b883a 	mov	r5,r21
  80c60c:	1023883a 	mov	r17,r2
  80c610:	080ae600 	call	80ae60 <__mulsi3>
  80c614:	d8c00217 	ldw	r3,8(sp)
  80c618:	1705883a 	add	r2,r2,fp
  80c61c:	d9c00317 	ldw	r7,12(sp)
  80c620:	1808d43a 	srli	r4,r3,16
  80c624:	da000417 	ldw	r8,16(sp)
  80c628:	d9800517 	ldw	r6,20(sp)
  80c62c:	2089883a 	add	r4,r4,r2
  80c630:	94e5883a 	add	r18,r18,r19
  80c634:	2700022e 	bgeu	r4,fp,80c640 <__muldf3+0x348>
  80c638:	00800074 	movhi	r2,1
  80c63c:	88a3883a 	add	r17,r17,r2
  80c640:	2004d43a 	srli	r2,r4,16
  80c644:	2038943a 	slli	fp,r4,16
  80c648:	18ffffcc 	andi	r3,r3,65535
  80c64c:	b809883a 	mov	r4,r23
  80c650:	a80b883a 	mov	r5,r21
  80c654:	d9800415 	stw	r6,16(sp)
  80c658:	da000315 	stw	r8,12(sp)
  80c65c:	d9c00215 	stw	r7,8(sp)
  80c660:	e0f9883a 	add	fp,fp,r3
  80c664:	1463883a 	add	r17,r2,r17
  80c668:	080ae600 	call	80ae60 <__mulsi3>
  80c66c:	b80b883a 	mov	r5,r23
  80c670:	b009883a 	mov	r4,r22
  80c674:	102f883a 	mov	r23,r2
  80c678:	080ae600 	call	80ae60 <__mulsi3>
  80c67c:	b00b883a 	mov	r5,r22
  80c680:	8009883a 	mov	r4,r16
  80c684:	102d883a 	mov	r22,r2
  80c688:	080ae600 	call	80ae60 <__mulsi3>
  80c68c:	a80b883a 	mov	r5,r21
  80c690:	8009883a 	mov	r4,r16
  80c694:	1021883a 	mov	r16,r2
  80c698:	080ae600 	call	80ae60 <__mulsi3>
  80c69c:	b80ad43a 	srli	r5,r23,16
  80c6a0:	1585883a 	add	r2,r2,r22
  80c6a4:	d9c00217 	ldw	r7,8(sp)
  80c6a8:	288b883a 	add	r5,r5,r2
  80c6ac:	da000317 	ldw	r8,12(sp)
  80c6b0:	d9800417 	ldw	r6,16(sp)
  80c6b4:	2d80022e 	bgeu	r5,r22,80c6c0 <__muldf3+0x3c8>
  80c6b8:	00800074 	movhi	r2,1
  80c6bc:	80a1883a 	add	r16,r16,r2
  80c6c0:	2806943a 	slli	r3,r5,16
  80c6c4:	d8800017 	ldw	r2,0(sp)
  80c6c8:	bdffffcc 	andi	r23,r23,65535
  80c6cc:	1dc7883a 	add	r3,r3,r23
  80c6d0:	90ab883a 	add	r21,r18,r2
  80c6d4:	acd5803a 	cmpltu	r10,r21,r19
  80c6d8:	1d07883a 	add	r3,r3,r20
  80c6dc:	af2b883a 	add	r21,r21,fp
  80c6e0:	1a97883a 	add	r11,r3,r10
  80c6e4:	af09803a 	cmpltu	r4,r21,fp
  80c6e8:	2826d43a 	srli	r19,r5,16
  80c6ec:	5c53883a 	add	r9,r11,r17
  80c6f0:	4905883a 	add	r2,r9,r4
  80c6f4:	1d07803a 	cmpltu	r3,r3,r20
  80c6f8:	5a95803a 	cmpltu	r10,r11,r10
  80c6fc:	1a86b03a 	or	r3,r3,r10
  80c700:	1109803a 	cmpltu	r4,r2,r4
  80c704:	4c53803a 	cmpltu	r9,r9,r17
  80c708:	1ce7883a 	add	r19,r3,r19
  80c70c:	4908b03a 	or	r4,r9,r4
  80c710:	a824927a 	slli	r18,r21,9
  80c714:	d8c00117 	ldw	r3,4(sp)
  80c718:	9927883a 	add	r19,r19,r4
  80c71c:	9c27883a 	add	r19,r19,r16
  80c720:	9826927a 	slli	r19,r19,9
  80c724:	a82ad5fa 	srli	r21,r21,23
  80c728:	100ad5fa 	srli	r5,r2,23
  80c72c:	90e4b03a 	or	r18,r18,r3
  80c730:	1004927a 	slli	r2,r2,9
  80c734:	9024c03a 	cmpne	r18,r18,zero
  80c738:	9564b03a 	or	r18,r18,r21
  80c73c:	98c0402c 	andhi	r3,r19,256
  80c740:	90a4b03a 	or	r18,r18,r2
  80c744:	9966b03a 	or	r19,r19,r5
  80c748:	1800b626 	beq	r3,zero,80ca24 <__muldf3+0x72c>
  80c74c:	9006d07a 	srli	r3,r18,1
  80c750:	980497fa 	slli	r2,r19,31
  80c754:	9480004c 	andi	r18,r18,1
  80c758:	9826d07a 	srli	r19,r19,1
  80c75c:	1c86b03a 	or	r3,r3,r18
  80c760:	18a4b03a 	or	r18,r3,r2
  80c764:	3900ffc4 	addi	r4,r7,1023
  80c768:	0100690e 	bge	zero,r4,80c910 <__muldf3+0x618>
  80c76c:	908001cc 	andi	r2,r18,7
  80c770:	10000726 	beq	r2,zero,80c790 <__muldf3+0x498>
  80c774:	908003cc 	andi	r2,r18,15
  80c778:	10800120 	cmpeqi	r2,r2,4
  80c77c:	1000041e 	bne	r2,zero,80c790 <__muldf3+0x498>
  80c780:	90800104 	addi	r2,r18,4
  80c784:	14a5803a 	cmpltu	r18,r2,r18
  80c788:	9ca7883a 	add	r19,r19,r18
  80c78c:	1025883a 	mov	r18,r2
  80c790:	9880402c 	andhi	r2,r19,256
  80c794:	10000426 	beq	r2,zero,80c7a8 <__muldf3+0x4b0>
  80c798:	00bfc034 	movhi	r2,65280
  80c79c:	10bfffc4 	addi	r2,r2,-1
  80c7a0:	98a6703a 	and	r19,r19,r2
  80c7a4:	39010004 	addi	r4,r7,1024
  80c7a8:	2081ffc8 	cmpgei	r2,r4,2047
  80c7ac:	103f381e 	bne	r2,zero,80c490 <__muldf3+0x198>
  80c7b0:	9804977a 	slli	r2,r19,29
  80c7b4:	9024d0fa 	srli	r18,r18,3
  80c7b8:	9826927a 	slli	r19,r19,9
  80c7bc:	20c1ffcc 	andi	r3,r4,2047
  80c7c0:	14a4b03a 	or	r18,r2,r18
  80c7c4:	9826d33a 	srli	r19,r19,12
  80c7c8:	003f2006 	br	80c44c <__muldf3+0x154>
  80c7cc:	8722b03a 	or	r17,r16,fp
  80c7d0:	88004526 	beq	r17,zero,80c8e8 <__muldf3+0x5f0>
  80c7d4:	da000015 	stw	r8,0(sp)
  80c7d8:	80008626 	beq	r16,zero,80c9f4 <__muldf3+0x6fc>
  80c7dc:	8009883a 	mov	r4,r16
  80c7e0:	080d5740 	call	80d574 <__clzsi2>
  80c7e4:	da000017 	ldw	r8,0(sp)
  80c7e8:	117ffd44 	addi	r5,r2,-11
  80c7ec:	01000744 	movi	r4,29
  80c7f0:	147ffe04 	addi	r17,r2,-8
  80c7f4:	2149c83a 	sub	r4,r4,r5
  80c7f8:	8460983a 	sll	r16,r16,r17
  80c7fc:	e108d83a 	srl	r4,fp,r4
  80c800:	e462983a 	sll	r17,fp,r17
  80c804:	2420b03a 	or	r16,r4,r16
  80c808:	4091c83a 	sub	r8,r8,r2
  80c80c:	423f0344 	addi	r8,r8,-1011
  80c810:	0009883a 	mov	r4,zero
  80c814:	003ee706 	br	80c3b4 <__muldf3+0xbc>
  80c818:	9924b03a 	or	r18,r19,r4
  80c81c:	90002d26 	beq	r18,zero,80c8d4 <__muldf3+0x5dc>
  80c820:	d9c00015 	stw	r7,0(sp)
  80c824:	98006826 	beq	r19,zero,80c9c8 <__muldf3+0x6d0>
  80c828:	9809883a 	mov	r4,r19
  80c82c:	080d5740 	call	80d574 <__clzsi2>
  80c830:	d9c00017 	ldw	r7,0(sp)
  80c834:	113ffd44 	addi	r4,r2,-11
  80c838:	00c00744 	movi	r3,29
  80c83c:	14bffe04 	addi	r18,r2,-8
  80c840:	1907c83a 	sub	r3,r3,r4
  80c844:	9ca6983a 	sll	r19,r19,r18
  80c848:	88c6d83a 	srl	r3,r17,r3
  80c84c:	8ca4983a 	sll	r18,r17,r18
  80c850:	1ce6b03a 	or	r19,r3,r19
  80c854:	023f0344 	movi	r8,-1011
  80c858:	4091c83a 	sub	r8,r8,r2
  80c85c:	002b883a 	mov	r21,zero
  80c860:	002d883a 	mov	r22,zero
  80c864:	003ec206 	br	80c370 <__muldf3+0x78>
  80c868:	9924b03a 	or	r18,r19,r4
  80c86c:	9000141e 	bne	r18,zero,80c8c0 <__muldf3+0x5c8>
  80c870:	0027883a 	mov	r19,zero
  80c874:	05400204 	movi	r21,8
  80c878:	0201ffc4 	movi	r8,2047
  80c87c:	05800084 	movi	r22,2
  80c880:	003ebb06 	br	80c370 <__muldf3+0x78>
  80c884:	8722b03a 	or	r17,r16,fp
  80c888:	4201ffc4 	addi	r8,r8,2047
  80c88c:	8800081e 	bne	r17,zero,80c8b0 <__muldf3+0x5b8>
  80c890:	ad400094 	ori	r21,r21,2
  80c894:	0021883a 	mov	r16,zero
  80c898:	01000084 	movi	r4,2
  80c89c:	003ec506 	br	80c3b4 <__muldf3+0xbc>
  80c8a0:	b08000a0 	cmpeqi	r2,r22,2
  80c8a4:	a00d883a 	mov	r6,r20
  80c8a8:	103ee126 	beq	r2,zero,80c430 <__muldf3+0x138>
  80c8ac:	003ef806 	br	80c490 <__muldf3+0x198>
  80c8b0:	ad4000d4 	ori	r21,r21,3
  80c8b4:	e023883a 	mov	r17,fp
  80c8b8:	010000c4 	movi	r4,3
  80c8bc:	003ebd06 	br	80c3b4 <__muldf3+0xbc>
  80c8c0:	2025883a 	mov	r18,r4
  80c8c4:	05400304 	movi	r21,12
  80c8c8:	0201ffc4 	movi	r8,2047
  80c8cc:	058000c4 	movi	r22,3
  80c8d0:	003ea706 	br	80c370 <__muldf3+0x78>
  80c8d4:	0027883a 	mov	r19,zero
  80c8d8:	05400104 	movi	r21,4
  80c8dc:	0011883a 	mov	r8,zero
  80c8e0:	05800044 	movi	r22,1
  80c8e4:	003ea206 	br	80c370 <__muldf3+0x78>
  80c8e8:	ad400054 	ori	r21,r21,1
  80c8ec:	0021883a 	mov	r16,zero
  80c8f0:	01000044 	movi	r4,1
  80c8f4:	003eaf06 	br	80c3b4 <__muldf3+0xbc>
  80c8f8:	04c00434 	movhi	r19,16
  80c8fc:	000d883a 	mov	r6,zero
  80c900:	9cffffc4 	addi	r19,r19,-1
  80c904:	04bfffc4 	movi	r18,-1
  80c908:	00c1ffc4 	movi	r3,2047
  80c90c:	003ecf06 	br	80c44c <__muldf3+0x154>
  80c910:	00800044 	movi	r2,1
  80c914:	1105c83a 	sub	r2,r2,r4
  80c918:	10c00e48 	cmpgei	r3,r2,57
  80c91c:	183ec81e 	bne	r3,zero,80c440 <__muldf3+0x148>
  80c920:	10c00808 	cmpgei	r3,r2,32
  80c924:	1800411e 	bne	r3,zero,80ca2c <__muldf3+0x734>
  80c928:	39c10784 	addi	r7,r7,1054
  80c92c:	99c6983a 	sll	r3,r19,r7
  80c930:	9088d83a 	srl	r4,r18,r2
  80c934:	91ce983a 	sll	r7,r18,r7
  80c938:	98a6d83a 	srl	r19,r19,r2
  80c93c:	1904b03a 	or	r2,r3,r4
  80c940:	3824c03a 	cmpne	r18,r7,zero
  80c944:	1484b03a 	or	r2,r2,r18
  80c948:	10c001cc 	andi	r3,r2,7
  80c94c:	18000726 	beq	r3,zero,80c96c <__muldf3+0x674>
  80c950:	10c003cc 	andi	r3,r2,15
  80c954:	18c00120 	cmpeqi	r3,r3,4
  80c958:	1800041e 	bne	r3,zero,80c96c <__muldf3+0x674>
  80c95c:	10c00104 	addi	r3,r2,4
  80c960:	1885803a 	cmpltu	r2,r3,r2
  80c964:	98a7883a 	add	r19,r19,r2
  80c968:	1805883a 	mov	r2,r3
  80c96c:	98c0202c 	andhi	r3,r19,128
  80c970:	18004326 	beq	r3,zero,80ca80 <__muldf3+0x788>
  80c974:	00c00044 	movi	r3,1
  80c978:	0027883a 	mov	r19,zero
  80c97c:	0025883a 	mov	r18,zero
  80c980:	003eb206 	br	80c44c <__muldf3+0x154>
  80c984:	9880022c 	andhi	r2,r19,8
  80c988:	10000926 	beq	r2,zero,80c9b0 <__muldf3+0x6b8>
  80c98c:	8080022c 	andhi	r2,r16,8
  80c990:	1000071e 	bne	r2,zero,80c9b0 <__muldf3+0x6b8>
  80c994:	00800434 	movhi	r2,16
  80c998:	84c00234 	orhi	r19,r16,8
  80c99c:	10bfffc4 	addi	r2,r2,-1
  80c9a0:	98a6703a 	and	r19,r19,r2
  80c9a4:	b80d883a 	mov	r6,r23
  80c9a8:	8825883a 	mov	r18,r17
  80c9ac:	003fd606 	br	80c908 <__muldf3+0x610>
  80c9b0:	00800434 	movhi	r2,16
  80c9b4:	9cc00234 	orhi	r19,r19,8
  80c9b8:	10bfffc4 	addi	r2,r2,-1
  80c9bc:	98a6703a 	and	r19,r19,r2
  80c9c0:	a00d883a 	mov	r6,r20
  80c9c4:	003fd006 	br	80c908 <__muldf3+0x610>
  80c9c8:	080d5740 	call	80d574 <__clzsi2>
  80c9cc:	11000544 	addi	r4,r2,21
  80c9d0:	21400748 	cmpgei	r5,r4,29
  80c9d4:	1007883a 	mov	r3,r2
  80c9d8:	d9c00017 	ldw	r7,0(sp)
  80c9dc:	10800804 	addi	r2,r2,32
  80c9e0:	283f9526 	beq	r5,zero,80c838 <__muldf3+0x540>
  80c9e4:	18fffe04 	addi	r3,r3,-8
  80c9e8:	88e6983a 	sll	r19,r17,r3
  80c9ec:	0025883a 	mov	r18,zero
  80c9f0:	003f9806 	br	80c854 <__muldf3+0x55c>
  80c9f4:	e009883a 	mov	r4,fp
  80c9f8:	080d5740 	call	80d574 <__clzsi2>
  80c9fc:	11400544 	addi	r5,r2,21
  80ca00:	29000748 	cmpgei	r4,r5,29
  80ca04:	1007883a 	mov	r3,r2
  80ca08:	da000017 	ldw	r8,0(sp)
  80ca0c:	10800804 	addi	r2,r2,32
  80ca10:	203f7626 	beq	r4,zero,80c7ec <__muldf3+0x4f4>
  80ca14:	1c3ffe04 	addi	r16,r3,-8
  80ca18:	e420983a 	sll	r16,fp,r16
  80ca1c:	0023883a 	mov	r17,zero
  80ca20:	003f7906 	br	80c808 <__muldf3+0x510>
  80ca24:	400f883a 	mov	r7,r8
  80ca28:	003f4e06 	br	80c764 <__muldf3+0x46c>
  80ca2c:	00fff844 	movi	r3,-31
  80ca30:	1907c83a 	sub	r3,r3,r4
  80ca34:	10800820 	cmpeqi	r2,r2,32
  80ca38:	98c6d83a 	srl	r3,r19,r3
  80ca3c:	1000031e 	bne	r2,zero,80ca4c <__muldf3+0x754>
  80ca40:	39c10f84 	addi	r7,r7,1086
  80ca44:	99e6983a 	sll	r19,r19,r7
  80ca48:	94e4b03a 	or	r18,r18,r19
  80ca4c:	9024c03a 	cmpne	r18,r18,zero
  80ca50:	90c4b03a 	or	r2,r18,r3
  80ca54:	148001cc 	andi	r18,r2,7
  80ca58:	9000051e 	bne	r18,zero,80ca70 <__muldf3+0x778>
  80ca5c:	0027883a 	mov	r19,zero
  80ca60:	1004d0fa 	srli	r2,r2,3
  80ca64:	0007883a 	mov	r3,zero
  80ca68:	14a4b03a 	or	r18,r2,r18
  80ca6c:	003e7706 	br	80c44c <__muldf3+0x154>
  80ca70:	10c003cc 	andi	r3,r2,15
  80ca74:	18c00118 	cmpnei	r3,r3,4
  80ca78:	0027883a 	mov	r19,zero
  80ca7c:	183fb71e 	bne	r3,zero,80c95c <__muldf3+0x664>
  80ca80:	9806927a 	slli	r3,r19,9
  80ca84:	9824977a 	slli	r18,r19,29
  80ca88:	1826d33a 	srli	r19,r3,12
  80ca8c:	003ff406 	br	80ca60 <__muldf3+0x768>
  80ca90:	00800434 	movhi	r2,16
  80ca94:	9cc00234 	orhi	r19,r19,8
  80ca98:	10bfffc4 	addi	r2,r2,-1
  80ca9c:	98a6703a 	and	r19,r19,r2
  80caa0:	003f9906 	br	80c908 <__muldf3+0x610>

0080caa4 <__subdf3>:
  80caa4:	00800434 	movhi	r2,16
  80caa8:	3810d53a 	srli	r8,r7,20
  80caac:	10bfffc4 	addi	r2,r2,-1
  80cab0:	2806d53a 	srli	r3,r5,20
  80cab4:	2892703a 	and	r9,r5,r2
  80cab8:	3884703a 	and	r2,r7,r2
  80cabc:	280ad7fa 	srli	r5,r5,31
  80cac0:	481290fa 	slli	r9,r9,3
  80cac4:	2018d77a 	srli	r12,r4,29
  80cac8:	100490fa 	slli	r2,r2,3
  80cacc:	3016d77a 	srli	r11,r6,29
  80cad0:	defffb04 	addi	sp,sp,-20
  80cad4:	4201ffcc 	andi	r8,r8,2047
  80cad8:	dc800215 	stw	r18,8(sp)
  80cadc:	dc400115 	stw	r17,4(sp)
  80cae0:	1c81ffcc 	andi	r18,r3,2047
  80cae4:	dfc00415 	stw	ra,16(sp)
  80cae8:	dcc00315 	stw	r19,12(sp)
  80caec:	dc000015 	stw	r16,0(sp)
  80caf0:	4281ffd8 	cmpnei	r10,r8,2047
  80caf4:	2823883a 	mov	r17,r5
  80caf8:	201c90fa 	slli	r14,r4,3
  80cafc:	380ed7fa 	srli	r7,r7,31
  80cb00:	301a90fa 	slli	r13,r6,3
  80cb04:	29403fcc 	andi	r5,r5,255
  80cb08:	6252b03a 	or	r9,r12,r9
  80cb0c:	589eb03a 	or	r15,r11,r2
  80cb10:	9207c83a 	sub	r3,r18,r8
  80cb14:	50006826 	beq	r10,zero,80ccb8 <__subdf3+0x214>
  80cb18:	3ac0005c 	xori	r11,r7,1
  80cb1c:	2ac07326 	beq	r5,r11,80ccec <__subdf3+0x248>
  80cb20:	00c0590e 	bge	zero,r3,80cc88 <__subdf3+0x1e4>
  80cb24:	4000691e 	bne	r8,zero,80cccc <__subdf3+0x228>
  80cb28:	7b44b03a 	or	r2,r15,r13
  80cb2c:	1000fb26 	beq	r2,zero,80cf1c <__subdf3+0x478>
  80cb30:	18bfffc4 	addi	r2,r3,-1
  80cb34:	10019126 	beq	r2,zero,80d17c <__subdf3+0x6d8>
  80cb38:	18c1ffd8 	cmpnei	r3,r3,2047
  80cb3c:	1800c326 	beq	r3,zero,80ce4c <__subdf3+0x3a8>
  80cb40:	1007883a 	mov	r3,r2
  80cb44:	18800e48 	cmpgei	r2,r3,57
  80cb48:	1000651e 	bne	r2,zero,80cce0 <__subdf3+0x23c>
  80cb4c:	18800808 	cmpgei	r2,r3,32
  80cb50:	1001331e 	bne	r2,zero,80d020 <__subdf3+0x57c>
  80cb54:	00800804 	movi	r2,32
  80cb58:	10c5c83a 	sub	r2,r2,r3
  80cb5c:	78a0983a 	sll	r16,r15,r2
  80cb60:	68c8d83a 	srl	r4,r13,r3
  80cb64:	689a983a 	sll	r13,r13,r2
  80cb68:	78c4d83a 	srl	r2,r15,r3
  80cb6c:	8120b03a 	or	r16,r16,r4
  80cb70:	681ac03a 	cmpne	r13,r13,zero
  80cb74:	8360b03a 	or	r16,r16,r13
  80cb78:	4893c83a 	sub	r9,r9,r2
  80cb7c:	7421c83a 	sub	r16,r14,r16
  80cb80:	7409803a 	cmpltu	r4,r14,r16
  80cb84:	4909c83a 	sub	r4,r9,r4
  80cb88:	2080202c 	andhi	r2,r4,128
  80cb8c:	10009326 	beq	r2,zero,80cddc <__subdf3+0x338>
  80cb90:	04c02034 	movhi	r19,128
  80cb94:	9cffffc4 	addi	r19,r19,-1
  80cb98:	24e6703a 	and	r19,r4,r19
  80cb9c:	9800b926 	beq	r19,zero,80ce84 <__subdf3+0x3e0>
  80cba0:	9809883a 	mov	r4,r19
  80cba4:	080d5740 	call	80d574 <__clzsi2>
  80cba8:	10fffe04 	addi	r3,r2,-8
  80cbac:	01000804 	movi	r4,32
  80cbb0:	20c9c83a 	sub	r4,r4,r3
  80cbb4:	8108d83a 	srl	r4,r16,r4
  80cbb8:	98e6983a 	sll	r19,r19,r3
  80cbbc:	80e0983a 	sll	r16,r16,r3
  80cbc0:	24c8b03a 	or	r4,r4,r19
  80cbc4:	1c80b816 	blt	r3,r18,80cea8 <__subdf3+0x404>
  80cbc8:	1c87c83a 	sub	r3,r3,r18
  80cbcc:	19400044 	addi	r5,r3,1
  80cbd0:	28800808 	cmpgei	r2,r5,32
  80cbd4:	1000751e 	bne	r2,zero,80cdac <__subdf3+0x308>
  80cbd8:	00800804 	movi	r2,32
  80cbdc:	1145c83a 	sub	r2,r2,r5
  80cbe0:	8146d83a 	srl	r3,r16,r5
  80cbe4:	80a0983a 	sll	r16,r16,r2
  80cbe8:	2084983a 	sll	r2,r4,r2
  80cbec:	2148d83a 	srl	r4,r4,r5
  80cbf0:	8020c03a 	cmpne	r16,r16,zero
  80cbf4:	10c4b03a 	or	r2,r2,r3
  80cbf8:	1420b03a 	or	r16,r2,r16
  80cbfc:	0025883a 	mov	r18,zero
  80cc00:	808001cc 	andi	r2,r16,7
  80cc04:	10000726 	beq	r2,zero,80cc24 <__subdf3+0x180>
  80cc08:	808003cc 	andi	r2,r16,15
  80cc0c:	10800120 	cmpeqi	r2,r2,4
  80cc10:	1000041e 	bne	r2,zero,80cc24 <__subdf3+0x180>
  80cc14:	80800104 	addi	r2,r16,4
  80cc18:	1421803a 	cmpltu	r16,r2,r16
  80cc1c:	2409883a 	add	r4,r4,r16
  80cc20:	1021883a 	mov	r16,r2
  80cc24:	2080202c 	andhi	r2,r4,128
  80cc28:	10006e26 	beq	r2,zero,80cde4 <__subdf3+0x340>
  80cc2c:	90c00044 	addi	r3,r18,1
  80cc30:	1881ffe0 	cmpeqi	r2,r3,2047
  80cc34:	18c1ffcc 	andi	r3,r3,2047
  80cc38:	1000801e 	bne	r2,zero,80ce3c <__subdf3+0x398>
  80cc3c:	00bfe034 	movhi	r2,65408
  80cc40:	10bfffc4 	addi	r2,r2,-1
  80cc44:	2088703a 	and	r4,r4,r2
  80cc48:	2004977a 	slli	r2,r4,29
  80cc4c:	2008927a 	slli	r4,r4,9
  80cc50:	8020d0fa 	srli	r16,r16,3
  80cc54:	2008d33a 	srli	r4,r4,12
  80cc58:	1404b03a 	or	r2,r2,r16
  80cc5c:	1806953a 	slli	r3,r3,20
  80cc60:	882297fa 	slli	r17,r17,31
  80cc64:	1906b03a 	or	r3,r3,r4
  80cc68:	1c46b03a 	or	r3,r3,r17
  80cc6c:	dfc00417 	ldw	ra,16(sp)
  80cc70:	dcc00317 	ldw	r19,12(sp)
  80cc74:	dc800217 	ldw	r18,8(sp)
  80cc78:	dc400117 	ldw	r17,4(sp)
  80cc7c:	dc000017 	ldw	r16,0(sp)
  80cc80:	dec00504 	addi	sp,sp,20
  80cc84:	f800283a 	ret
  80cc88:	18002c26 	beq	r3,zero,80cd3c <__subdf3+0x298>
  80cc8c:	4487c83a 	sub	r3,r8,r18
  80cc90:	5823883a 	mov	r17,r11
  80cc94:	9000bb1e 	bne	r18,zero,80cf84 <__subdf3+0x4e0>
  80cc98:	4b84b03a 	or	r2,r9,r14
  80cc9c:	10011726 	beq	r2,zero,80d0fc <__subdf3+0x658>
  80cca0:	18bfffc4 	addi	r2,r3,-1
  80cca4:	10016326 	beq	r2,zero,80d234 <__subdf3+0x790>
  80cca8:	18c1ffd8 	cmpnei	r3,r3,2047
  80ccac:	18012c26 	beq	r3,zero,80d160 <__subdf3+0x6bc>
  80ccb0:	1007883a 	mov	r3,r2
  80ccb4:	0000b506 	br	80cf8c <__subdf3+0x4e8>
  80ccb8:	7b44b03a 	or	r2,r15,r13
  80ccbc:	103f9626 	beq	r2,zero,80cb18 <__subdf3+0x74>
  80ccc0:	3ac03fcc 	andi	r11,r7,255
  80ccc4:	29c07d26 	beq	r5,r7,80cebc <__subdf3+0x418>
  80ccc8:	00ffef0e 	bge	zero,r3,80cc88 <__subdf3+0x1e4>
  80cccc:	9081ffd8 	cmpnei	r2,r18,2047
  80ccd0:	10005e26 	beq	r2,zero,80ce4c <__subdf3+0x3a8>
  80ccd4:	18800e48 	cmpgei	r2,r3,57
  80ccd8:	7bc02034 	orhi	r15,r15,128
  80ccdc:	103f9b26 	beq	r2,zero,80cb4c <__subdf3+0xa8>
  80cce0:	7b60b03a 	or	r16,r15,r13
  80cce4:	8020c03a 	cmpne	r16,r16,zero
  80cce8:	003fa406 	br	80cb7c <__subdf3+0xd8>
  80ccec:	00c0730e 	bge	zero,r3,80cebc <__subdf3+0x418>
  80ccf0:	40002626 	beq	r8,zero,80cd8c <__subdf3+0x2e8>
  80ccf4:	9081ffd8 	cmpnei	r2,r18,2047
  80ccf8:	10005426 	beq	r2,zero,80ce4c <__subdf3+0x3a8>
  80ccfc:	7bc02034 	orhi	r15,r15,128
  80cd00:	18800e48 	cmpgei	r2,r3,57
  80cd04:	1000431e 	bne	r2,zero,80ce14 <__subdf3+0x370>
  80cd08:	18800808 	cmpgei	r2,r3,32
  80cd0c:	1000de26 	beq	r2,zero,80d088 <__subdf3+0x5e4>
  80cd10:	1c3ff804 	addi	r16,r3,-32
  80cd14:	18800820 	cmpeqi	r2,r3,32
  80cd18:	7c0ad83a 	srl	r5,r15,r16
  80cd1c:	1000041e 	bne	r2,zero,80cd30 <__subdf3+0x28c>
  80cd20:	00801004 	movi	r2,64
  80cd24:	10c5c83a 	sub	r2,r2,r3
  80cd28:	7884983a 	sll	r2,r15,r2
  80cd2c:	689ab03a 	or	r13,r13,r2
  80cd30:	6820c03a 	cmpne	r16,r13,zero
  80cd34:	8160b03a 	or	r16,r16,r5
  80cd38:	00003806 	br	80ce1c <__subdf3+0x378>
  80cd3c:	90800044 	addi	r2,r18,1
  80cd40:	1081ff8c 	andi	r2,r2,2046
  80cd44:	1000a01e 	bne	r2,zero,80cfc8 <__subdf3+0x524>
  80cd48:	4b8ab03a 	or	r5,r9,r14
  80cd4c:	7b44b03a 	or	r2,r15,r13
  80cd50:	9000f11e 	bne	r18,zero,80d118 <__subdf3+0x674>
  80cd54:	28012e26 	beq	r5,zero,80d210 <__subdf3+0x76c>
  80cd58:	10010e26 	beq	r2,zero,80d194 <__subdf3+0x6f0>
  80cd5c:	7361c83a 	sub	r16,r14,r13
  80cd60:	7405803a 	cmpltu	r2,r14,r16
  80cd64:	4bc9c83a 	sub	r4,r9,r15
  80cd68:	2089c83a 	sub	r4,r4,r2
  80cd6c:	2080202c 	andhi	r2,r4,128
  80cd70:	10016d26 	beq	r2,zero,80d328 <__subdf3+0x884>
  80cd74:	6ba1c83a 	sub	r16,r13,r14
  80cd78:	7a49c83a 	sub	r4,r15,r9
  80cd7c:	6c1b803a 	cmpltu	r13,r13,r16
  80cd80:	2349c83a 	sub	r4,r4,r13
  80cd84:	5823883a 	mov	r17,r11
  80cd88:	003f9d06 	br	80cc00 <__subdf3+0x15c>
  80cd8c:	7b44b03a 	or	r2,r15,r13
  80cd90:	10006226 	beq	r2,zero,80cf1c <__subdf3+0x478>
  80cd94:	18bfffc4 	addi	r2,r3,-1
  80cd98:	1000e926 	beq	r2,zero,80d140 <__subdf3+0x69c>
  80cd9c:	18c1ffd8 	cmpnei	r3,r3,2047
  80cda0:	18012a26 	beq	r3,zero,80d24c <__subdf3+0x7a8>
  80cda4:	1007883a 	mov	r3,r2
  80cda8:	003fd506 	br	80cd00 <__subdf3+0x25c>
  80cdac:	18fff844 	addi	r3,r3,-31
  80cdb0:	28800820 	cmpeqi	r2,r5,32
  80cdb4:	20c6d83a 	srl	r3,r4,r3
  80cdb8:	1000041e 	bne	r2,zero,80cdcc <__subdf3+0x328>
  80cdbc:	00801004 	movi	r2,64
  80cdc0:	114bc83a 	sub	r5,r2,r5
  80cdc4:	2148983a 	sll	r4,r4,r5
  80cdc8:	8120b03a 	or	r16,r16,r4
  80cdcc:	8020c03a 	cmpne	r16,r16,zero
  80cdd0:	80e0b03a 	or	r16,r16,r3
  80cdd4:	0009883a 	mov	r4,zero
  80cdd8:	0025883a 	mov	r18,zero
  80cddc:	808001cc 	andi	r2,r16,7
  80cde0:	103f891e 	bne	r2,zero,80cc08 <__subdf3+0x164>
  80cde4:	8020d0fa 	srli	r16,r16,3
  80cde8:	2004977a 	slli	r2,r4,29
  80cdec:	2012d0fa 	srli	r9,r4,3
  80cdf0:	9007883a 	mov	r3,r18
  80cdf4:	8084b03a 	or	r2,r16,r2
  80cdf8:	1901ffe0 	cmpeqi	r4,r3,2047
  80cdfc:	2000191e 	bne	r4,zero,80ce64 <__subdf3+0x3c0>
  80ce00:	01000434 	movhi	r4,16
  80ce04:	213fffc4 	addi	r4,r4,-1
  80ce08:	4908703a 	and	r4,r9,r4
  80ce0c:	18c1ffcc 	andi	r3,r3,2047
  80ce10:	003f9206 	br	80cc5c <__subdf3+0x1b8>
  80ce14:	7b60b03a 	or	r16,r15,r13
  80ce18:	8020c03a 	cmpne	r16,r16,zero
  80ce1c:	83a1883a 	add	r16,r16,r14
  80ce20:	8389803a 	cmpltu	r4,r16,r14
  80ce24:	2249883a 	add	r4,r4,r9
  80ce28:	2080202c 	andhi	r2,r4,128
  80ce2c:	103feb26 	beq	r2,zero,80cddc <__subdf3+0x338>
  80ce30:	94800044 	addi	r18,r18,1
  80ce34:	9081ffe0 	cmpeqi	r2,r18,2047
  80ce38:	10006f26 	beq	r2,zero,80cff8 <__subdf3+0x554>
  80ce3c:	00c1ffc4 	movi	r3,2047
  80ce40:	0009883a 	mov	r4,zero
  80ce44:	0005883a 	mov	r2,zero
  80ce48:	003f8406 	br	80cc5c <__subdf3+0x1b8>
  80ce4c:	4806977a 	slli	r3,r9,29
  80ce50:	00880034 	movhi	r2,8192
  80ce54:	10bfffc4 	addi	r2,r2,-1
  80ce58:	4812d0fa 	srli	r9,r9,3
  80ce5c:	2088703a 	and	r4,r4,r2
  80ce60:	20c4b03a 	or	r2,r4,r3
  80ce64:	4886b03a 	or	r3,r9,r2
  80ce68:	18013726 	beq	r3,zero,80d348 <__subdf3+0x8a4>
  80ce6c:	00c00434 	movhi	r3,16
  80ce70:	18ffffc4 	addi	r3,r3,-1
  80ce74:	49000234 	orhi	r4,r9,8
  80ce78:	20c8703a 	and	r4,r4,r3
  80ce7c:	00c1ffc4 	movi	r3,2047
  80ce80:	003f7606 	br	80cc5c <__subdf3+0x1b8>
  80ce84:	8009883a 	mov	r4,r16
  80ce88:	080d5740 	call	80d574 <__clzsi2>
  80ce8c:	10c00604 	addi	r3,r2,24
  80ce90:	19000808 	cmpgei	r4,r3,32
  80ce94:	203f4526 	beq	r4,zero,80cbac <__subdf3+0x108>
  80ce98:	113ffe04 	addi	r4,r2,-8
  80ce9c:	8108983a 	sll	r4,r16,r4
  80cea0:	0021883a 	mov	r16,zero
  80cea4:	1cbf480e 	bge	r3,r18,80cbc8 <__subdf3+0x124>
  80cea8:	00bfe034 	movhi	r2,65408
  80ceac:	10bfffc4 	addi	r2,r2,-1
  80ceb0:	90e5c83a 	sub	r18,r18,r3
  80ceb4:	2088703a 	and	r4,r4,r2
  80ceb8:	003f5106 	br	80cc00 <__subdf3+0x15c>
  80cebc:	18001e26 	beq	r3,zero,80cf38 <__subdf3+0x494>
  80cec0:	4487c83a 	sub	r3,r8,r18
  80cec4:	90006826 	beq	r18,zero,80d068 <__subdf3+0x5c4>
  80cec8:	5000a526 	beq	r10,zero,80d160 <__subdf3+0x6bc>
  80cecc:	4a402034 	orhi	r9,r9,128
  80ced0:	18800e48 	cmpgei	r2,r3,57
  80ced4:	1000b61e 	bne	r2,zero,80d1b0 <__subdf3+0x70c>
  80ced8:	18800808 	cmpgei	r2,r3,32
  80cedc:	1001021e 	bne	r2,zero,80d2e8 <__subdf3+0x844>
  80cee0:	00800804 	movi	r2,32
  80cee4:	10c5c83a 	sub	r2,r2,r3
  80cee8:	48a0983a 	sll	r16,r9,r2
  80ceec:	70c8d83a 	srl	r4,r14,r3
  80cef0:	7084983a 	sll	r2,r14,r2
  80cef4:	48d2d83a 	srl	r9,r9,r3
  80cef8:	8120b03a 	or	r16,r16,r4
  80cefc:	1004c03a 	cmpne	r2,r2,zero
  80cf00:	80a0b03a 	or	r16,r16,r2
  80cf04:	7a5f883a 	add	r15,r15,r9
  80cf08:	8361883a 	add	r16,r16,r13
  80cf0c:	8349803a 	cmpltu	r4,r16,r13
  80cf10:	23c9883a 	add	r4,r4,r15
  80cf14:	4025883a 	mov	r18,r8
  80cf18:	003fc306 	br	80ce28 <__subdf3+0x384>
  80cf1c:	480a977a 	slli	r5,r9,29
  80cf20:	00880034 	movhi	r2,8192
  80cf24:	10bfffc4 	addi	r2,r2,-1
  80cf28:	2088703a 	and	r4,r4,r2
  80cf2c:	4812d0fa 	srli	r9,r9,3
  80cf30:	2144b03a 	or	r2,r4,r5
  80cf34:	003fb006 	br	80cdf8 <__subdf3+0x354>
  80cf38:	90800044 	addi	r2,r18,1
  80cf3c:	1141ff8c 	andi	r5,r2,2046
  80cf40:	28005c1e 	bne	r5,zero,80d0b4 <__subdf3+0x610>
  80cf44:	4b84b03a 	or	r2,r9,r14
  80cf48:	9000a71e 	bne	r18,zero,80d1e8 <__subdf3+0x744>
  80cf4c:	1000df26 	beq	r2,zero,80d2cc <__subdf3+0x828>
  80cf50:	7b44b03a 	or	r2,r15,r13
  80cf54:	10008f26 	beq	r2,zero,80d194 <__subdf3+0x6f0>
  80cf58:	7361883a 	add	r16,r14,r13
  80cf5c:	4bc9883a 	add	r4,r9,r15
  80cf60:	839d803a 	cmpltu	r14,r16,r14
  80cf64:	2389883a 	add	r4,r4,r14
  80cf68:	2080202c 	andhi	r2,r4,128
  80cf6c:	103f9b26 	beq	r2,zero,80cddc <__subdf3+0x338>
  80cf70:	00bfe034 	movhi	r2,65408
  80cf74:	10bfffc4 	addi	r2,r2,-1
  80cf78:	2088703a 	and	r4,r4,r2
  80cf7c:	04800044 	movi	r18,1
  80cf80:	003f9606 	br	80cddc <__subdf3+0x338>
  80cf84:	50007626 	beq	r10,zero,80d160 <__subdf3+0x6bc>
  80cf88:	4a402034 	orhi	r9,r9,128
  80cf8c:	18800e48 	cmpgei	r2,r3,57
  80cf90:	10002e1e 	bne	r2,zero,80d04c <__subdf3+0x5a8>
  80cf94:	18800808 	cmpgei	r2,r3,32
  80cf98:	1000881e 	bne	r2,zero,80d1bc <__subdf3+0x718>
  80cf9c:	00800804 	movi	r2,32
  80cfa0:	10c5c83a 	sub	r2,r2,r3
  80cfa4:	48a0983a 	sll	r16,r9,r2
  80cfa8:	70c8d83a 	srl	r4,r14,r3
  80cfac:	709c983a 	sll	r14,r14,r2
  80cfb0:	48d2d83a 	srl	r9,r9,r3
  80cfb4:	8120b03a 	or	r16,r16,r4
  80cfb8:	701cc03a 	cmpne	r14,r14,zero
  80cfbc:	83a0b03a 	or	r16,r16,r14
  80cfc0:	7a5fc83a 	sub	r15,r15,r9
  80cfc4:	00002306 	br	80d054 <__subdf3+0x5b0>
  80cfc8:	7361c83a 	sub	r16,r14,r13
  80cfcc:	4be7c83a 	sub	r19,r9,r15
  80cfd0:	7409803a 	cmpltu	r4,r14,r16
  80cfd4:	9927c83a 	sub	r19,r19,r4
  80cfd8:	9880202c 	andhi	r2,r19,128
  80cfdc:	1000411e 	bne	r2,zero,80d0e4 <__subdf3+0x640>
  80cfe0:	84c4b03a 	or	r2,r16,r19
  80cfe4:	103eed1e 	bne	r2,zero,80cb9c <__subdf3+0xf8>
  80cfe8:	0013883a 	mov	r9,zero
  80cfec:	0023883a 	mov	r17,zero
  80cff0:	003f8306 	br	80ce00 <__subdf3+0x35c>
  80cff4:	04800084 	movi	r18,2
  80cff8:	00bfe034 	movhi	r2,65408
  80cffc:	10bfffc4 	addi	r2,r2,-1
  80d000:	8006d07a 	srli	r3,r16,1
  80d004:	2088703a 	and	r4,r4,r2
  80d008:	200497fa 	slli	r2,r4,31
  80d00c:	8400004c 	andi	r16,r16,1
  80d010:	1c20b03a 	or	r16,r3,r16
  80d014:	2008d07a 	srli	r4,r4,1
  80d018:	1420b03a 	or	r16,r2,r16
  80d01c:	003ef806 	br	80cc00 <__subdf3+0x15c>
  80d020:	1c3ff804 	addi	r16,r3,-32
  80d024:	18800820 	cmpeqi	r2,r3,32
  80d028:	7c0ad83a 	srl	r5,r15,r16
  80d02c:	1000041e 	bne	r2,zero,80d040 <__subdf3+0x59c>
  80d030:	00801004 	movi	r2,64
  80d034:	10c5c83a 	sub	r2,r2,r3
  80d038:	7884983a 	sll	r2,r15,r2
  80d03c:	689ab03a 	or	r13,r13,r2
  80d040:	6820c03a 	cmpne	r16,r13,zero
  80d044:	8160b03a 	or	r16,r16,r5
  80d048:	003ecc06 	br	80cb7c <__subdf3+0xd8>
  80d04c:	4b92b03a 	or	r9,r9,r14
  80d050:	4820c03a 	cmpne	r16,r9,zero
  80d054:	6c21c83a 	sub	r16,r13,r16
  80d058:	6c09803a 	cmpltu	r4,r13,r16
  80d05c:	7909c83a 	sub	r4,r15,r4
  80d060:	4025883a 	mov	r18,r8
  80d064:	003ec806 	br	80cb88 <__subdf3+0xe4>
  80d068:	4b84b03a 	or	r2,r9,r14
  80d06c:	10007e26 	beq	r2,zero,80d268 <__subdf3+0x7c4>
  80d070:	18bfffc4 	addi	r2,r3,-1
  80d074:	1000a726 	beq	r2,zero,80d314 <__subdf3+0x870>
  80d078:	18c1ffd8 	cmpnei	r3,r3,2047
  80d07c:	18003826 	beq	r3,zero,80d160 <__subdf3+0x6bc>
  80d080:	1007883a 	mov	r3,r2
  80d084:	003f9206 	br	80ced0 <__subdf3+0x42c>
  80d088:	00800804 	movi	r2,32
  80d08c:	10c5c83a 	sub	r2,r2,r3
  80d090:	78a0983a 	sll	r16,r15,r2
  80d094:	68c8d83a 	srl	r4,r13,r3
  80d098:	689a983a 	sll	r13,r13,r2
  80d09c:	78c4d83a 	srl	r2,r15,r3
  80d0a0:	8120b03a 	or	r16,r16,r4
  80d0a4:	681ac03a 	cmpne	r13,r13,zero
  80d0a8:	8360b03a 	or	r16,r16,r13
  80d0ac:	4893883a 	add	r9,r9,r2
  80d0b0:	003f5a06 	br	80ce1c <__subdf3+0x378>
  80d0b4:	10c1ffe0 	cmpeqi	r3,r2,2047
  80d0b8:	183f601e 	bne	r3,zero,80ce3c <__subdf3+0x398>
  80d0bc:	735b883a 	add	r13,r14,r13
  80d0c0:	6b9d803a 	cmpltu	r14,r13,r14
  80d0c4:	4bc9883a 	add	r4,r9,r15
  80d0c8:	2389883a 	add	r4,r4,r14
  80d0cc:	202097fa 	slli	r16,r4,31
  80d0d0:	681ad07a 	srli	r13,r13,1
  80d0d4:	2008d07a 	srli	r4,r4,1
  80d0d8:	1025883a 	mov	r18,r2
  80d0dc:	8360b03a 	or	r16,r16,r13
  80d0e0:	003f3e06 	br	80cddc <__subdf3+0x338>
  80d0e4:	6ba1c83a 	sub	r16,r13,r14
  80d0e8:	7a49c83a 	sub	r4,r15,r9
  80d0ec:	6c1b803a 	cmpltu	r13,r13,r16
  80d0f0:	2367c83a 	sub	r19,r4,r13
  80d0f4:	5823883a 	mov	r17,r11
  80d0f8:	003ea806 	br	80cb9c <__subdf3+0xf8>
  80d0fc:	7808977a 	slli	r4,r15,29
  80d100:	00880034 	movhi	r2,8192
  80d104:	10bfffc4 	addi	r2,r2,-1
  80d108:	308c703a 	and	r6,r6,r2
  80d10c:	7812d0fa 	srli	r9,r15,3
  80d110:	3104b03a 	or	r2,r6,r4
  80d114:	003f3806 	br	80cdf8 <__subdf3+0x354>
  80d118:	28005a1e 	bne	r5,zero,80d284 <__subdf3+0x7e0>
  80d11c:	10008526 	beq	r2,zero,80d334 <__subdf3+0x890>
  80d120:	7806977a 	slli	r3,r15,29
  80d124:	00880034 	movhi	r2,8192
  80d128:	10bfffc4 	addi	r2,r2,-1
  80d12c:	3084703a 	and	r2,r6,r2
  80d130:	7812d0fa 	srli	r9,r15,3
  80d134:	10c4b03a 	or	r2,r2,r3
  80d138:	5823883a 	mov	r17,r11
  80d13c:	003f4906 	br	80ce64 <__subdf3+0x3c0>
  80d140:	7361883a 	add	r16,r14,r13
  80d144:	4bc9883a 	add	r4,r9,r15
  80d148:	839d803a 	cmpltu	r14,r16,r14
  80d14c:	2389883a 	add	r4,r4,r14
  80d150:	2080202c 	andhi	r2,r4,128
  80d154:	103fa71e 	bne	r2,zero,80cff4 <__subdf3+0x550>
  80d158:	04800044 	movi	r18,1
  80d15c:	003f1f06 	br	80cddc <__subdf3+0x338>
  80d160:	7806977a 	slli	r3,r15,29
  80d164:	00880034 	movhi	r2,8192
  80d168:	10bfffc4 	addi	r2,r2,-1
  80d16c:	3084703a 	and	r2,r6,r2
  80d170:	7812d0fa 	srli	r9,r15,3
  80d174:	10c4b03a 	or	r2,r2,r3
  80d178:	003f3a06 	br	80ce64 <__subdf3+0x3c0>
  80d17c:	7361c83a 	sub	r16,r14,r13
  80d180:	4bc9c83a 	sub	r4,r9,r15
  80d184:	741d803a 	cmpltu	r14,r14,r16
  80d188:	2389c83a 	sub	r4,r4,r14
  80d18c:	04800044 	movi	r18,1
  80d190:	003e7d06 	br	80cb88 <__subdf3+0xe4>
  80d194:	480a977a 	slli	r5,r9,29
  80d198:	00880034 	movhi	r2,8192
  80d19c:	10bfffc4 	addi	r2,r2,-1
  80d1a0:	2084703a 	and	r2,r4,r2
  80d1a4:	4812d0fa 	srli	r9,r9,3
  80d1a8:	1144b03a 	or	r2,r2,r5
  80d1ac:	003f1406 	br	80ce00 <__subdf3+0x35c>
  80d1b0:	4b92b03a 	or	r9,r9,r14
  80d1b4:	4820c03a 	cmpne	r16,r9,zero
  80d1b8:	003f5306 	br	80cf08 <__subdf3+0x464>
  80d1bc:	1c3ff804 	addi	r16,r3,-32
  80d1c0:	19000820 	cmpeqi	r4,r3,32
  80d1c4:	4c04d83a 	srl	r2,r9,r16
  80d1c8:	2000041e 	bne	r4,zero,80d1dc <__subdf3+0x738>
  80d1cc:	01001004 	movi	r4,64
  80d1d0:	20c7c83a 	sub	r3,r4,r3
  80d1d4:	48d2983a 	sll	r9,r9,r3
  80d1d8:	725cb03a 	or	r14,r14,r9
  80d1dc:	7020c03a 	cmpne	r16,r14,zero
  80d1e0:	80a0b03a 	or	r16,r16,r2
  80d1e4:	003f9b06 	br	80d054 <__subdf3+0x5b0>
  80d1e8:	103fdd26 	beq	r2,zero,80d160 <__subdf3+0x6bc>
  80d1ec:	7b5ab03a 	or	r13,r15,r13
  80d1f0:	480a977a 	slli	r5,r9,29
  80d1f4:	4812d0fa 	srli	r9,r9,3
  80d1f8:	6800251e 	bne	r13,zero,80d290 <__subdf3+0x7ec>
  80d1fc:	00880034 	movhi	r2,8192
  80d200:	10bfffc4 	addi	r2,r2,-1
  80d204:	2084703a 	and	r2,r4,r2
  80d208:	1144b03a 	or	r2,r2,r5
  80d20c:	003f1506 	br	80ce64 <__subdf3+0x3c0>
  80d210:	103f7526 	beq	r2,zero,80cfe8 <__subdf3+0x544>
  80d214:	7808977a 	slli	r4,r15,29
  80d218:	00880034 	movhi	r2,8192
  80d21c:	10bfffc4 	addi	r2,r2,-1
  80d220:	3084703a 	and	r2,r6,r2
  80d224:	7812d0fa 	srli	r9,r15,3
  80d228:	1104b03a 	or	r2,r2,r4
  80d22c:	5823883a 	mov	r17,r11
  80d230:	003ef306 	br	80ce00 <__subdf3+0x35c>
  80d234:	6ba1c83a 	sub	r16,r13,r14
  80d238:	7a49c83a 	sub	r4,r15,r9
  80d23c:	6c1b803a 	cmpltu	r13,r13,r16
  80d240:	2349c83a 	sub	r4,r4,r13
  80d244:	04800044 	movi	r18,1
  80d248:	003e4f06 	br	80cb88 <__subdf3+0xe4>
  80d24c:	4806977a 	slli	r3,r9,29
  80d250:	00880034 	movhi	r2,8192
  80d254:	10bfffc4 	addi	r2,r2,-1
  80d258:	2084703a 	and	r2,r4,r2
  80d25c:	4812d0fa 	srli	r9,r9,3
  80d260:	10c4b03a 	or	r2,r2,r3
  80d264:	003eff06 	br	80ce64 <__subdf3+0x3c0>
  80d268:	7808977a 	slli	r4,r15,29
  80d26c:	00880034 	movhi	r2,8192
  80d270:	10bfffc4 	addi	r2,r2,-1
  80d274:	3084703a 	and	r2,r6,r2
  80d278:	7812d0fa 	srli	r9,r15,3
  80d27c:	1104b03a 	or	r2,r2,r4
  80d280:	003edd06 	br	80cdf8 <__subdf3+0x354>
  80d284:	480a977a 	slli	r5,r9,29
  80d288:	4812d0fa 	srli	r9,r9,3
  80d28c:	103fdb26 	beq	r2,zero,80d1fc <__subdf3+0x758>
  80d290:	00c80034 	movhi	r3,8192
  80d294:	18ffffc4 	addi	r3,r3,-1
  80d298:	20c4703a 	and	r2,r4,r3
  80d29c:	4900022c 	andhi	r4,r9,8
  80d2a0:	1144b03a 	or	r2,r2,r5
  80d2a4:	203eef26 	beq	r4,zero,80ce64 <__subdf3+0x3c0>
  80d2a8:	7808d0fa 	srli	r4,r15,3
  80d2ac:	2140022c 	andhi	r5,r4,8
  80d2b0:	283eec1e 	bne	r5,zero,80ce64 <__subdf3+0x3c0>
  80d2b4:	7804977a 	slli	r2,r15,29
  80d2b8:	30cc703a 	and	r6,r6,r3
  80d2bc:	5823883a 	mov	r17,r11
  80d2c0:	3084b03a 	or	r2,r6,r2
  80d2c4:	2013883a 	mov	r9,r4
  80d2c8:	003ee606 	br	80ce64 <__subdf3+0x3c0>
  80d2cc:	7808977a 	slli	r4,r15,29
  80d2d0:	00880034 	movhi	r2,8192
  80d2d4:	10bfffc4 	addi	r2,r2,-1
  80d2d8:	3084703a 	and	r2,r6,r2
  80d2dc:	7812d0fa 	srli	r9,r15,3
  80d2e0:	1104b03a 	or	r2,r2,r4
  80d2e4:	003ec606 	br	80ce00 <__subdf3+0x35c>
  80d2e8:	18bff804 	addi	r2,r3,-32
  80d2ec:	19000820 	cmpeqi	r4,r3,32
  80d2f0:	4884d83a 	srl	r2,r9,r2
  80d2f4:	2000041e 	bne	r4,zero,80d308 <__subdf3+0x864>
  80d2f8:	01001004 	movi	r4,64
  80d2fc:	20c7c83a 	sub	r3,r4,r3
  80d300:	48d2983a 	sll	r9,r9,r3
  80d304:	725cb03a 	or	r14,r14,r9
  80d308:	7020c03a 	cmpne	r16,r14,zero
  80d30c:	80a0b03a 	or	r16,r16,r2
  80d310:	003efd06 	br	80cf08 <__subdf3+0x464>
  80d314:	7361883a 	add	r16,r14,r13
  80d318:	4bc9883a 	add	r4,r9,r15
  80d31c:	835b803a 	cmpltu	r13,r16,r13
  80d320:	2349883a 	add	r4,r4,r13
  80d324:	003f8a06 	br	80d150 <__subdf3+0x6ac>
  80d328:	8104b03a 	or	r2,r16,r4
  80d32c:	103f2e26 	beq	r2,zero,80cfe8 <__subdf3+0x544>
  80d330:	003eaa06 	br	80cddc <__subdf3+0x338>
  80d334:	02400434 	movhi	r9,16
  80d338:	0023883a 	mov	r17,zero
  80d33c:	00bfffc4 	movi	r2,-1
  80d340:	4a7fffc4 	addi	r9,r9,-1
  80d344:	003ec906 	br	80ce6c <__subdf3+0x3c8>
  80d348:	0005883a 	mov	r2,zero
  80d34c:	00c1ffc4 	movi	r3,2047
  80d350:	0009883a 	mov	r4,zero
  80d354:	003e4106 	br	80cc5c <__subdf3+0x1b8>

0080d358 <__unorddf2>:
  80d358:	2806d53a 	srli	r3,r5,20
  80d35c:	3810d53a 	srli	r8,r7,20
  80d360:	02400434 	movhi	r9,16
  80d364:	18c1ffcc 	andi	r3,r3,2047
  80d368:	4a7fffc4 	addi	r9,r9,-1
  80d36c:	18c1ffd8 	cmpnei	r3,r3,2047
  80d370:	2a4a703a 	and	r5,r5,r9
  80d374:	3a4e703a 	and	r7,r7,r9
  80d378:	4201ffcc 	andi	r8,r8,2047
  80d37c:	18000426 	beq	r3,zero,80d390 <__unorddf2+0x38>
  80d380:	4201ffd8 	cmpnei	r8,r8,2047
  80d384:	40000626 	beq	r8,zero,80d3a0 <__unorddf2+0x48>
  80d388:	0005883a 	mov	r2,zero
  80d38c:	f800283a 	ret
  80d390:	290ab03a 	or	r5,r5,r4
  80d394:	283ffa26 	beq	r5,zero,80d380 <__unorddf2+0x28>
  80d398:	00800044 	movi	r2,1
  80d39c:	f800283a 	ret
  80d3a0:	398eb03a 	or	r7,r7,r6
  80d3a4:	3804c03a 	cmpne	r2,r7,zero
  80d3a8:	f800283a 	ret

0080d3ac <__fixdfsi>:
  80d3ac:	2806d53a 	srli	r3,r5,20
  80d3b0:	01800434 	movhi	r6,16
  80d3b4:	31bfffc4 	addi	r6,r6,-1
  80d3b8:	18c1ffcc 	andi	r3,r3,2047
  80d3bc:	19c0ffd0 	cmplti	r7,r3,1023
  80d3c0:	2810d7fa 	srli	r8,r5,31
  80d3c4:	298a703a 	and	r5,r5,r6
  80d3c8:	3800061e 	bne	r7,zero,80d3e4 <__fixdfsi+0x38>
  80d3cc:	18810790 	cmplti	r2,r3,1054
  80d3d0:	1000061e 	bne	r2,zero,80d3ec <__fixdfsi+0x40>
  80d3d4:	00a00034 	movhi	r2,32768
  80d3d8:	10bfffc4 	addi	r2,r2,-1
  80d3dc:	4085883a 	add	r2,r8,r2
  80d3e0:	f800283a 	ret
  80d3e4:	0005883a 	mov	r2,zero
  80d3e8:	f800283a 	ret
  80d3ec:	01810cc4 	movi	r6,1075
  80d3f0:	30cdc83a 	sub	r6,r6,r3
  80d3f4:	30800808 	cmpgei	r2,r6,32
  80d3f8:	29400434 	orhi	r5,r5,16
  80d3fc:	1000071e 	bne	r2,zero,80d41c <__fixdfsi+0x70>
  80d400:	18befb44 	addi	r2,r3,-1043
  80d404:	2884983a 	sll	r2,r5,r2
  80d408:	2188d83a 	srl	r4,r4,r6
  80d40c:	1104b03a 	or	r2,r2,r4
  80d410:	403ff526 	beq	r8,zero,80d3e8 <__fixdfsi+0x3c>
  80d414:	0085c83a 	sub	r2,zero,r2
  80d418:	f800283a 	ret
  80d41c:	008104c4 	movi	r2,1043
  80d420:	10c5c83a 	sub	r2,r2,r3
  80d424:	2884d83a 	srl	r2,r5,r2
  80d428:	003ff906 	br	80d410 <__fixdfsi+0x64>

0080d42c <__floatsidf>:
  80d42c:	defffd04 	addi	sp,sp,-12
  80d430:	dfc00215 	stw	ra,8(sp)
  80d434:	dc400115 	stw	r17,4(sp)
  80d438:	dc000015 	stw	r16,0(sp)
  80d43c:	20001326 	beq	r4,zero,80d48c <__floatsidf+0x60>
  80d440:	2022d7fa 	srli	r17,r4,31
  80d444:	2021883a 	mov	r16,r4
  80d448:	20002416 	blt	r4,zero,80d4dc <__floatsidf+0xb0>
  80d44c:	8009883a 	mov	r4,r16
  80d450:	080d5740 	call	80d574 <__clzsi2>
  80d454:	01010784 	movi	r4,1054
  80d458:	2089c83a 	sub	r4,r4,r2
  80d45c:	114002c8 	cmpgei	r5,r2,11
  80d460:	20c1ffcc 	andi	r3,r4,2047
  80d464:	2800161e 	bne	r5,zero,80d4c0 <__floatsidf+0x94>
  80d468:	010002c4 	movi	r4,11
  80d46c:	2089c83a 	sub	r4,r4,r2
  80d470:	810ad83a 	srl	r5,r16,r4
  80d474:	01000434 	movhi	r4,16
  80d478:	10800544 	addi	r2,r2,21
  80d47c:	213fffc4 	addi	r4,r4,-1
  80d480:	8084983a 	sll	r2,r16,r2
  80d484:	290a703a 	and	r5,r5,r4
  80d488:	00000406 	br	80d49c <__floatsidf+0x70>
  80d48c:	0023883a 	mov	r17,zero
  80d490:	0007883a 	mov	r3,zero
  80d494:	000b883a 	mov	r5,zero
  80d498:	0005883a 	mov	r2,zero
  80d49c:	1808953a 	slli	r4,r3,20
  80d4a0:	880697fa 	slli	r3,r17,31
  80d4a4:	2148b03a 	or	r4,r4,r5
  80d4a8:	20c6b03a 	or	r3,r4,r3
  80d4ac:	dfc00217 	ldw	ra,8(sp)
  80d4b0:	dc400117 	ldw	r17,4(sp)
  80d4b4:	dc000017 	ldw	r16,0(sp)
  80d4b8:	dec00304 	addi	sp,sp,12
  80d4bc:	f800283a 	ret
  80d4c0:	10bffd44 	addi	r2,r2,-11
  80d4c4:	808a983a 	sll	r5,r16,r2
  80d4c8:	00800434 	movhi	r2,16
  80d4cc:	10bfffc4 	addi	r2,r2,-1
  80d4d0:	288a703a 	and	r5,r5,r2
  80d4d4:	0005883a 	mov	r2,zero
  80d4d8:	003ff006 	br	80d49c <__floatsidf+0x70>
  80d4dc:	0121c83a 	sub	r16,zero,r4
  80d4e0:	003fda06 	br	80d44c <__floatsidf+0x20>

0080d4e4 <__floatunsidf>:
  80d4e4:	defffe04 	addi	sp,sp,-8
  80d4e8:	dc000015 	stw	r16,0(sp)
  80d4ec:	dfc00115 	stw	ra,4(sp)
  80d4f0:	2021883a 	mov	r16,r4
  80d4f4:	20000f26 	beq	r4,zero,80d534 <__floatunsidf+0x50>
  80d4f8:	080d5740 	call	80d574 <__clzsi2>
  80d4fc:	00c10784 	movi	r3,1054
  80d500:	1887c83a 	sub	r3,r3,r2
  80d504:	110002c8 	cmpgei	r4,r2,11
  80d508:	18c1ffcc 	andi	r3,r3,2047
  80d50c:	2000121e 	bne	r4,zero,80d558 <__floatunsidf+0x74>
  80d510:	014002c4 	movi	r5,11
  80d514:	288bc83a 	sub	r5,r5,r2
  80d518:	814ad83a 	srl	r5,r16,r5
  80d51c:	01000434 	movhi	r4,16
  80d520:	10800544 	addi	r2,r2,21
  80d524:	213fffc4 	addi	r4,r4,-1
  80d528:	80a0983a 	sll	r16,r16,r2
  80d52c:	290a703a 	and	r5,r5,r4
  80d530:	00000206 	br	80d53c <__floatunsidf+0x58>
  80d534:	0007883a 	mov	r3,zero
  80d538:	000b883a 	mov	r5,zero
  80d53c:	1806953a 	slli	r3,r3,20
  80d540:	8005883a 	mov	r2,r16
  80d544:	1946b03a 	or	r3,r3,r5
  80d548:	dfc00117 	ldw	ra,4(sp)
  80d54c:	dc000017 	ldw	r16,0(sp)
  80d550:	dec00204 	addi	sp,sp,8
  80d554:	f800283a 	ret
  80d558:	117ffd44 	addi	r5,r2,-11
  80d55c:	814a983a 	sll	r5,r16,r5
  80d560:	00800434 	movhi	r2,16
  80d564:	10bfffc4 	addi	r2,r2,-1
  80d568:	288a703a 	and	r5,r5,r2
  80d56c:	0021883a 	mov	r16,zero
  80d570:	003ff206 	br	80d53c <__floatunsidf+0x58>

0080d574 <__clzsi2>:
  80d574:	00bfffd4 	movui	r2,65535
  80d578:	11000436 	bltu	r2,r4,80d58c <__clzsi2+0x18>
  80d57c:	20804030 	cmpltui	r2,r4,256
  80d580:	10000e26 	beq	r2,zero,80d5bc <__clzsi2+0x48>
  80d584:	01400804 	movi	r5,32
  80d588:	00000406 	br	80d59c <__clzsi2+0x28>
  80d58c:	00804034 	movhi	r2,256
  80d590:	20800736 	bltu	r4,r2,80d5b0 <__clzsi2+0x3c>
  80d594:	2008d63a 	srli	r4,r4,24
  80d598:	01400204 	movi	r5,8
  80d59c:	00c02074 	movhi	r3,129
  80d5a0:	20c7883a 	add	r3,r4,r3
  80d5a4:	18811003 	ldbu	r2,1088(r3)
  80d5a8:	2885c83a 	sub	r2,r5,r2
  80d5ac:	f800283a 	ret
  80d5b0:	2008d43a 	srli	r4,r4,16
  80d5b4:	01400404 	movi	r5,16
  80d5b8:	003ff806 	br	80d59c <__clzsi2+0x28>
  80d5bc:	2008d23a 	srli	r4,r4,8
  80d5c0:	01400604 	movi	r5,24
  80d5c4:	003ff506 	br	80d59c <__clzsi2+0x28>

0080d5c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d5c8:	defffe04 	addi	sp,sp,-8
  80d5cc:	dfc00115 	stw	ra,4(sp)
  80d5d0:	df000015 	stw	fp,0(sp)
  80d5d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d5d8:	d0a00917 	ldw	r2,-32732(gp)
  80d5dc:	10000326 	beq	r2,zero,80d5ec <alt_get_errno+0x24>
  80d5e0:	d0a00917 	ldw	r2,-32732(gp)
  80d5e4:	103ee83a 	callr	r2
  80d5e8:	00000106 	br	80d5f0 <alt_get_errno+0x28>
  80d5ec:	d0a70704 	addi	r2,gp,-25572
}
  80d5f0:	e037883a 	mov	sp,fp
  80d5f4:	dfc00117 	ldw	ra,4(sp)
  80d5f8:	df000017 	ldw	fp,0(sp)
  80d5fc:	dec00204 	addi	sp,sp,8
  80d600:	f800283a 	ret

0080d604 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80d604:	defffb04 	addi	sp,sp,-20
  80d608:	dfc00415 	stw	ra,16(sp)
  80d60c:	df000315 	stw	fp,12(sp)
  80d610:	df000304 	addi	fp,sp,12
  80d614:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80d618:	e0bffd17 	ldw	r2,-12(fp)
  80d61c:	10000916 	blt	r2,zero,80d644 <close+0x40>
  80d620:	e0fffd17 	ldw	r3,-12(fp)
  80d624:	1805883a 	mov	r2,r3
  80d628:	1085883a 	add	r2,r2,r2
  80d62c:	10c5883a 	add	r2,r2,r3
  80d630:	100490ba 	slli	r2,r2,2
  80d634:	00c02074 	movhi	r3,129
  80d638:	18c3cb04 	addi	r3,r3,3884
  80d63c:	10c5883a 	add	r2,r2,r3
  80d640:	00000106 	br	80d648 <close+0x44>
  80d644:	0005883a 	mov	r2,zero
  80d648:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
  80d64c:	e0bfff17 	ldw	r2,-4(fp)
  80d650:	10001926 	beq	r2,zero,80d6b8 <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80d654:	e0bfff17 	ldw	r2,-4(fp)
  80d658:	10800017 	ldw	r2,0(r2)
  80d65c:	10800417 	ldw	r2,16(r2)
  80d660:	10000626 	beq	r2,zero,80d67c <close+0x78>
  80d664:	e0bfff17 	ldw	r2,-4(fp)
  80d668:	10800017 	ldw	r2,0(r2)
  80d66c:	10800417 	ldw	r2,16(r2)
  80d670:	e13fff17 	ldw	r4,-4(fp)
  80d674:	103ee83a 	callr	r2
  80d678:	00000106 	br	80d680 <close+0x7c>
  80d67c:	0005883a 	mov	r2,zero
  80d680:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80d684:	e13ffd17 	ldw	r4,-12(fp)
  80d688:	080dec00 	call	80dec0 <alt_release_fd>
    if (rval < 0)
  80d68c:	e0bffe17 	ldw	r2,-8(fp)
  80d690:	1000070e 	bge	r2,zero,80d6b0 <close+0xac>
    {
      ALT_ERRNO = -rval;
  80d694:	080d5c80 	call	80d5c8 <alt_get_errno>
  80d698:	1007883a 	mov	r3,r2
  80d69c:	e0bffe17 	ldw	r2,-8(fp)
  80d6a0:	0085c83a 	sub	r2,zero,r2
  80d6a4:	18800015 	stw	r2,0(r3)
      return -1;
  80d6a8:	00bfffc4 	movi	r2,-1
  80d6ac:	00000706 	br	80d6cc <close+0xc8>
    }
    return 0;
  80d6b0:	0005883a 	mov	r2,zero
  80d6b4:	00000506 	br	80d6cc <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d6b8:	080d5c80 	call	80d5c8 <alt_get_errno>
  80d6bc:	1007883a 	mov	r3,r2
  80d6c0:	00801444 	movi	r2,81
  80d6c4:	18800015 	stw	r2,0(r3)
    return -1;
  80d6c8:	00bfffc4 	movi	r2,-1
  }
}
  80d6cc:	e037883a 	mov	sp,fp
  80d6d0:	dfc00117 	ldw	ra,4(sp)
  80d6d4:	df000017 	ldw	fp,0(sp)
  80d6d8:	dec00204 	addi	sp,sp,8
  80d6dc:	f800283a 	ret

0080d6e0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80d6e0:	defffc04 	addi	sp,sp,-16
  80d6e4:	df000315 	stw	fp,12(sp)
  80d6e8:	df000304 	addi	fp,sp,12
  80d6ec:	e13fff15 	stw	r4,-4(fp)
  80d6f0:	e17ffe15 	stw	r5,-8(fp)
  80d6f4:	e1bffd15 	stw	r6,-12(fp)
  return len;
  80d6f8:	e0bffd17 	ldw	r2,-12(fp)
}
  80d6fc:	e037883a 	mov	sp,fp
  80d700:	df000017 	ldw	fp,0(sp)
  80d704:	dec00104 	addi	sp,sp,4
  80d708:	f800283a 	ret

0080d70c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80d70c:	defffd04 	addi	sp,sp,-12
  80d710:	df000215 	stw	fp,8(sp)
  80d714:	df000204 	addi	fp,sp,8
  80d718:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  80d71c:	0001883a 	nop
  80d720:	e0bffe17 	ldw	r2,-8(fp)
  80d724:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  80d728:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80d72c:	10000226 	beq	r2,zero,80d738 <_exit+0x2c>
    ALT_SIM_FAIL();
  80d730:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
  80d734:	00000106 	br	80d73c <_exit+0x30>
    ALT_SIM_PASS();
  80d738:	002af0b0 	cmpltui	zero,zero,43970
}
  80d73c:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80d740:	003fff06 	br	80d740 <_exit+0x34>

0080d744 <alt_get_errno>:
{
  80d744:	defffe04 	addi	sp,sp,-8
  80d748:	dfc00115 	stw	ra,4(sp)
  80d74c:	df000015 	stw	fp,0(sp)
  80d750:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d754:	d0a00917 	ldw	r2,-32732(gp)
  80d758:	10000326 	beq	r2,zero,80d768 <alt_get_errno+0x24>
  80d75c:	d0a00917 	ldw	r2,-32732(gp)
  80d760:	103ee83a 	callr	r2
  80d764:	00000106 	br	80d76c <alt_get_errno+0x28>
  80d768:	d0a70704 	addi	r2,gp,-25572
}
  80d76c:	e037883a 	mov	sp,fp
  80d770:	dfc00117 	ldw	ra,4(sp)
  80d774:	df000017 	ldw	fp,0(sp)
  80d778:	dec00204 	addi	sp,sp,8
  80d77c:	f800283a 	ret

0080d780 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80d780:	defffb04 	addi	sp,sp,-20
  80d784:	dfc00415 	stw	ra,16(sp)
  80d788:	df000315 	stw	fp,12(sp)
  80d78c:	df000304 	addi	fp,sp,12
  80d790:	e13ffe15 	stw	r4,-8(fp)
  80d794:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d798:	e0bffe17 	ldw	r2,-8(fp)
  80d79c:	10000916 	blt	r2,zero,80d7c4 <fstat+0x44>
  80d7a0:	e0fffe17 	ldw	r3,-8(fp)
  80d7a4:	1805883a 	mov	r2,r3
  80d7a8:	1085883a 	add	r2,r2,r2
  80d7ac:	10c5883a 	add	r2,r2,r3
  80d7b0:	100490ba 	slli	r2,r2,2
  80d7b4:	00c02074 	movhi	r3,129
  80d7b8:	18c3cb04 	addi	r3,r3,3884
  80d7bc:	10c5883a 	add	r2,r2,r3
  80d7c0:	00000106 	br	80d7c8 <fstat+0x48>
  80d7c4:	0005883a 	mov	r2,zero
  80d7c8:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80d7cc:	e0bfff17 	ldw	r2,-4(fp)
  80d7d0:	10001026 	beq	r2,zero,80d814 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80d7d4:	e0bfff17 	ldw	r2,-4(fp)
  80d7d8:	10800017 	ldw	r2,0(r2)
  80d7dc:	10800817 	ldw	r2,32(r2)
  80d7e0:	10000726 	beq	r2,zero,80d800 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
  80d7e4:	e0bfff17 	ldw	r2,-4(fp)
  80d7e8:	10800017 	ldw	r2,0(r2)
  80d7ec:	10800817 	ldw	r2,32(r2)
  80d7f0:	e17ffd17 	ldw	r5,-12(fp)
  80d7f4:	e13fff17 	ldw	r4,-4(fp)
  80d7f8:	103ee83a 	callr	r2
  80d7fc:	00000a06 	br	80d828 <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80d800:	e0bffd17 	ldw	r2,-12(fp)
  80d804:	00c80004 	movi	r3,8192
  80d808:	10c00115 	stw	r3,4(r2)
      return 0;
  80d80c:	0005883a 	mov	r2,zero
  80d810:	00000506 	br	80d828 <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d814:	080d7440 	call	80d744 <alt_get_errno>
  80d818:	1007883a 	mov	r3,r2
  80d81c:	00801444 	movi	r2,81
  80d820:	18800015 	stw	r2,0(r3)
    return -1;
  80d824:	00bfffc4 	movi	r2,-1
  }
}
  80d828:	e037883a 	mov	sp,fp
  80d82c:	dfc00117 	ldw	ra,4(sp)
  80d830:	df000017 	ldw	fp,0(sp)
  80d834:	dec00204 	addi	sp,sp,8
  80d838:	f800283a 	ret

0080d83c <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
  80d83c:	deffff04 	addi	sp,sp,-4
  80d840:	df000015 	stw	fp,0(sp)
  80d844:	d839883a 	mov	fp,sp
  return 0;
  80d848:	0005883a 	mov	r2,zero
}
  80d84c:	e037883a 	mov	sp,fp
  80d850:	df000017 	ldw	fp,0(sp)
  80d854:	dec00104 	addi	sp,sp,4
  80d858:	f800283a 	ret

0080d85c <alt_get_errno>:
{
  80d85c:	defffe04 	addi	sp,sp,-8
  80d860:	dfc00115 	stw	ra,4(sp)
  80d864:	df000015 	stw	fp,0(sp)
  80d868:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d86c:	d0a00917 	ldw	r2,-32732(gp)
  80d870:	10000326 	beq	r2,zero,80d880 <alt_get_errno+0x24>
  80d874:	d0a00917 	ldw	r2,-32732(gp)
  80d878:	103ee83a 	callr	r2
  80d87c:	00000106 	br	80d884 <alt_get_errno+0x28>
  80d880:	d0a70704 	addi	r2,gp,-25572
}
  80d884:	e037883a 	mov	sp,fp
  80d888:	dfc00117 	ldw	ra,4(sp)
  80d88c:	df000017 	ldw	fp,0(sp)
  80d890:	dec00204 	addi	sp,sp,8
  80d894:	f800283a 	ret

0080d898 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80d898:	deffea04 	addi	sp,sp,-88
  80d89c:	dfc01515 	stw	ra,84(sp)
  80d8a0:	df001415 	stw	fp,80(sp)
  80d8a4:	df001404 	addi	fp,sp,80
  80d8a8:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80d8ac:	e0bfec17 	ldw	r2,-80(fp)
  80d8b0:	10000916 	blt	r2,zero,80d8d8 <isatty+0x40>
  80d8b4:	e0ffec17 	ldw	r3,-80(fp)
  80d8b8:	1805883a 	mov	r2,r3
  80d8bc:	1085883a 	add	r2,r2,r2
  80d8c0:	10c5883a 	add	r2,r2,r3
  80d8c4:	100490ba 	slli	r2,r2,2
  80d8c8:	00c02074 	movhi	r3,129
  80d8cc:	18c3cb04 	addi	r3,r3,3884
  80d8d0:	10c5883a 	add	r2,r2,r3
  80d8d4:	00000106 	br	80d8dc <isatty+0x44>
  80d8d8:	0005883a 	mov	r2,zero
  80d8dc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80d8e0:	e0bfff17 	ldw	r2,-4(fp)
  80d8e4:	10000e26 	beq	r2,zero,80d920 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80d8e8:	e0bfff17 	ldw	r2,-4(fp)
  80d8ec:	10800017 	ldw	r2,0(r2)
  80d8f0:	10800817 	ldw	r2,32(r2)
  80d8f4:	1000021e 	bne	r2,zero,80d900 <isatty+0x68>
    {
      return 1;
  80d8f8:	00800044 	movi	r2,1
  80d8fc:	00000d06 	br	80d934 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80d900:	e0bfed04 	addi	r2,fp,-76
  80d904:	100b883a 	mov	r5,r2
  80d908:	e13fec17 	ldw	r4,-80(fp)
  80d90c:	080d7800 	call	80d780 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80d910:	e0bfee17 	ldw	r2,-72(fp)
  80d914:	10880020 	cmpeqi	r2,r2,8192
  80d918:	10803fcc 	andi	r2,r2,255
  80d91c:	00000506 	br	80d934 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80d920:	080d85c0 	call	80d85c <alt_get_errno>
  80d924:	1007883a 	mov	r3,r2
  80d928:	00801444 	movi	r2,81
  80d92c:	18800015 	stw	r2,0(r3)
    return 0;
  80d930:	0005883a 	mov	r2,zero
  }
}
  80d934:	e037883a 	mov	sp,fp
  80d938:	dfc00117 	ldw	ra,4(sp)
  80d93c:	df000017 	ldw	fp,0(sp)
  80d940:	dec00204 	addi	sp,sp,8
  80d944:	f800283a 	ret

0080d948 <alt_get_errno>:
{
  80d948:	defffe04 	addi	sp,sp,-8
  80d94c:	dfc00115 	stw	ra,4(sp)
  80d950:	df000015 	stw	fp,0(sp)
  80d954:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d958:	d0a00917 	ldw	r2,-32732(gp)
  80d95c:	10000326 	beq	r2,zero,80d96c <alt_get_errno+0x24>
  80d960:	d0a00917 	ldw	r2,-32732(gp)
  80d964:	103ee83a 	callr	r2
  80d968:	00000106 	br	80d970 <alt_get_errno+0x28>
  80d96c:	d0a70704 	addi	r2,gp,-25572
}
  80d970:	e037883a 	mov	sp,fp
  80d974:	dfc00117 	ldw	ra,4(sp)
  80d978:	df000017 	ldw	fp,0(sp)
  80d97c:	dec00204 	addi	sp,sp,8
  80d980:	f800283a 	ret

0080d984 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
  80d984:	defffb04 	addi	sp,sp,-20
  80d988:	dfc00415 	stw	ra,16(sp)
  80d98c:	df000315 	stw	fp,12(sp)
  80d990:	df000304 	addi	fp,sp,12
  80d994:	e13ffe15 	stw	r4,-8(fp)
  80d998:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
  80d99c:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
  80d9a0:	e0bffe17 	ldw	r2,-8(fp)
  80d9a4:	00802e16 	blt	zero,r2,80da60 <kill+0xdc>
  80d9a8:	e0bffd17 	ldw	r2,-12(fp)
  80d9ac:	10800828 	cmpgeui	r2,r2,32
  80d9b0:	1000281e 	bne	r2,zero,80da54 <kill+0xd0>
  80d9b4:	e0bffd17 	ldw	r2,-12(fp)
  80d9b8:	100690ba 	slli	r3,r2,2
  80d9bc:	00802074 	movhi	r2,129
  80d9c0:	1885883a 	add	r2,r3,r2
  80d9c4:	10b67317 	ldw	r2,-9780(r2)
  80d9c8:	1000683a 	jmp	r2
  80d9cc:	0080da74 	movhi	r2,873
  80d9d0:	0080da54 	movui	r2,873
  80d9d4:	0080da54 	movui	r2,873
  80d9d8:	0080da4c 	andi	r2,zero,873
  80d9dc:	0080da4c 	andi	r2,zero,873
  80d9e0:	0080da4c 	andi	r2,zero,873
  80d9e4:	0080da4c 	andi	r2,zero,873
  80d9e8:	0080da54 	movui	r2,873
  80d9ec:	0080da4c 	andi	r2,zero,873
  80d9f0:	0080da4c 	andi	r2,zero,873
  80d9f4:	0080da4c 	andi	r2,zero,873
  80d9f8:	0080da4c 	andi	r2,zero,873
  80d9fc:	0080da4c 	andi	r2,zero,873
  80da00:	0080da4c 	andi	r2,zero,873
  80da04:	0080da4c 	andi	r2,zero,873
  80da08:	0080da4c 	andi	r2,zero,873
  80da0c:	0080da74 	movhi	r2,873
  80da10:	0080da54 	movui	r2,873
  80da14:	0080da54 	movui	r2,873
  80da18:	0080da54 	movui	r2,873
  80da1c:	0080da74 	movhi	r2,873
  80da20:	0080da54 	movui	r2,873
  80da24:	0080da54 	movui	r2,873
  80da28:	0080da4c 	andi	r2,zero,873
  80da2c:	0080da4c 	andi	r2,zero,873
  80da30:	0080da4c 	andi	r2,zero,873
  80da34:	0080da4c 	andi	r2,zero,873
  80da38:	0080da4c 	andi	r2,zero,873
  80da3c:	0080da54 	movui	r2,873
  80da40:	0080da54 	movui	r2,873
  80da44:	0080da4c 	andi	r2,zero,873
  80da48:	0080da4c 	andi	r2,zero,873
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
  80da4c:	0009883a 	mov	r4,zero
  80da50:	080d70c0 	call	80d70c <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
  80da54:	00800584 	movi	r2,22
  80da58:	e0bfff15 	stw	r2,-4(fp)
  80da5c:	00000606 	br	80da78 <kill+0xf4>
    }
  }

  else if (pid > 0)
  80da60:	e0bffe17 	ldw	r2,-8(fp)
  80da64:	0080040e 	bge	zero,r2,80da78 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  80da68:	008000c4 	movi	r2,3
  80da6c:	e0bfff15 	stw	r2,-4(fp)
  80da70:	00000106 	br	80da78 <kill+0xf4>
      break;
  80da74:	0001883a 	nop
  }

  if (status)
  80da78:	e0bfff17 	ldw	r2,-4(fp)
  80da7c:	10000626 	beq	r2,zero,80da98 <kill+0x114>
  {
    ALT_ERRNO = status;
  80da80:	080d9480 	call	80d948 <alt_get_errno>
  80da84:	1007883a 	mov	r3,r2
  80da88:	e0bfff17 	ldw	r2,-4(fp)
  80da8c:	18800015 	stw	r2,0(r3)
    return -1;
  80da90:	00bfffc4 	movi	r2,-1
  80da94:	00000106 	br	80da9c <kill+0x118>
  }

  return 0;
  80da98:	0005883a 	mov	r2,zero
}
  80da9c:	e037883a 	mov	sp,fp
  80daa0:	dfc00117 	ldw	ra,4(sp)
  80daa4:	df000017 	ldw	fp,0(sp)
  80daa8:	dec00204 	addi	sp,sp,8
  80daac:	f800283a 	ret

0080dab0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80dab0:	defffc04 	addi	sp,sp,-16
  80dab4:	df000315 	stw	fp,12(sp)
  80dab8:	df000304 	addi	fp,sp,12
  80dabc:	e13fff15 	stw	r4,-4(fp)
  80dac0:	e17ffe15 	stw	r5,-8(fp)
  80dac4:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
  80dac8:	e0fffe17 	ldw	r3,-8(fp)
  80dacc:	e0bfff17 	ldw	r2,-4(fp)
  80dad0:	18800c26 	beq	r3,r2,80db04 <alt_load_section+0x54>
  {
    while( to != end )
  80dad4:	00000806 	br	80daf8 <alt_load_section+0x48>
    {
      *to++ = *from++;
  80dad8:	e0ffff17 	ldw	r3,-4(fp)
  80dadc:	18800104 	addi	r2,r3,4
  80dae0:	e0bfff15 	stw	r2,-4(fp)
  80dae4:	e0bffe17 	ldw	r2,-8(fp)
  80dae8:	11000104 	addi	r4,r2,4
  80daec:	e13ffe15 	stw	r4,-8(fp)
  80daf0:	18c00017 	ldw	r3,0(r3)
  80daf4:	10c00015 	stw	r3,0(r2)
    while( to != end )
  80daf8:	e0fffe17 	ldw	r3,-8(fp)
  80dafc:	e0bffd17 	ldw	r2,-12(fp)
  80db00:	18bff51e 	bne	r3,r2,80dad8 <alt_load_section+0x28>
    }
  }
}
  80db04:	0001883a 	nop
  80db08:	e037883a 	mov	sp,fp
  80db0c:	df000017 	ldw	fp,0(sp)
  80db10:	dec00104 	addi	sp,sp,4
  80db14:	f800283a 	ret

0080db18 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80db18:	defffe04 	addi	sp,sp,-8
  80db1c:	dfc00115 	stw	ra,4(sp)
  80db20:	df000015 	stw	fp,0(sp)
  80db24:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80db28:	01802074 	movhi	r6,129
  80db2c:	31885104 	addi	r6,r6,8516
  80db30:	01402074 	movhi	r5,129
  80db34:	29415b04 	addi	r5,r5,1388
  80db38:	01002074 	movhi	r4,129
  80db3c:	21085104 	addi	r4,r4,8516
  80db40:	080dab00 	call	80dab0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80db44:	01802034 	movhi	r6,128
  80db48:	31808e04 	addi	r6,r6,568
  80db4c:	01402034 	movhi	r5,128
  80db50:	29400804 	addi	r5,r5,32
  80db54:	01002034 	movhi	r4,128
  80db58:	21000804 	addi	r4,r4,32
  80db5c:	080dab00 	call	80dab0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80db60:	01802074 	movhi	r6,129
  80db64:	31815b04 	addi	r6,r6,1388
  80db68:	01402074 	movhi	r5,129
  80db6c:	297fbb04 	addi	r5,r5,-276
  80db70:	01002074 	movhi	r4,129
  80db74:	213fbb04 	addi	r4,r4,-276
  80db78:	080dab00 	call	80dab0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80db7c:	080eea80 	call	80eea8 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80db80:	080f0a00 	call	80f0a0 <alt_icache_flush_all>
}
  80db84:	0001883a 	nop
  80db88:	e037883a 	mov	sp,fp
  80db8c:	dfc00117 	ldw	ra,4(sp)
  80db90:	df000017 	ldw	fp,0(sp)
  80db94:	dec00204 	addi	sp,sp,8
  80db98:	f800283a 	ret

0080db9c <alt_get_errno>:
{
  80db9c:	defffe04 	addi	sp,sp,-8
  80dba0:	dfc00115 	stw	ra,4(sp)
  80dba4:	df000015 	stw	fp,0(sp)
  80dba8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80dbac:	d0a00917 	ldw	r2,-32732(gp)
  80dbb0:	10000326 	beq	r2,zero,80dbc0 <alt_get_errno+0x24>
  80dbb4:	d0a00917 	ldw	r2,-32732(gp)
  80dbb8:	103ee83a 	callr	r2
  80dbbc:	00000106 	br	80dbc4 <alt_get_errno+0x28>
  80dbc0:	d0a70704 	addi	r2,gp,-25572
}
  80dbc4:	e037883a 	mov	sp,fp
  80dbc8:	dfc00117 	ldw	ra,4(sp)
  80dbcc:	df000017 	ldw	fp,0(sp)
  80dbd0:	dec00204 	addi	sp,sp,8
  80dbd4:	f800283a 	ret

0080dbd8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80dbd8:	defff904 	addi	sp,sp,-28
  80dbdc:	dfc00615 	stw	ra,24(sp)
  80dbe0:	df000515 	stw	fp,20(sp)
  80dbe4:	df000504 	addi	fp,sp,20
  80dbe8:	e13ffd15 	stw	r4,-12(fp)
  80dbec:	e17ffc15 	stw	r5,-16(fp)
  80dbf0:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80dbf4:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80dbf8:	e0bffd17 	ldw	r2,-12(fp)
  80dbfc:	10000916 	blt	r2,zero,80dc24 <lseek+0x4c>
  80dc00:	e0fffd17 	ldw	r3,-12(fp)
  80dc04:	1805883a 	mov	r2,r3
  80dc08:	1085883a 	add	r2,r2,r2
  80dc0c:	10c5883a 	add	r2,r2,r3
  80dc10:	100490ba 	slli	r2,r2,2
  80dc14:	00c02074 	movhi	r3,129
  80dc18:	18c3cb04 	addi	r3,r3,3884
  80dc1c:	10c5883a 	add	r2,r2,r3
  80dc20:	00000106 	br	80dc28 <lseek+0x50>
  80dc24:	0005883a 	mov	r2,zero
  80dc28:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
  80dc2c:	e0bffe17 	ldw	r2,-8(fp)
  80dc30:	10001026 	beq	r2,zero,80dc74 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80dc34:	e0bffe17 	ldw	r2,-8(fp)
  80dc38:	10800017 	ldw	r2,0(r2)
  80dc3c:	10800717 	ldw	r2,28(r2)
  80dc40:	10000926 	beq	r2,zero,80dc68 <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80dc44:	e0bffe17 	ldw	r2,-8(fp)
  80dc48:	10800017 	ldw	r2,0(r2)
  80dc4c:	10800717 	ldw	r2,28(r2)
  80dc50:	e1bffb17 	ldw	r6,-20(fp)
  80dc54:	e17ffc17 	ldw	r5,-16(fp)
  80dc58:	e13ffe17 	ldw	r4,-8(fp)
  80dc5c:	103ee83a 	callr	r2
  80dc60:	e0bfff15 	stw	r2,-4(fp)
  80dc64:	00000506 	br	80dc7c <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80dc68:	00bfde84 	movi	r2,-134
  80dc6c:	e0bfff15 	stw	r2,-4(fp)
  80dc70:	00000206 	br	80dc7c <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
  80dc74:	00bfebc4 	movi	r2,-81
  80dc78:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
  80dc7c:	e0bfff17 	ldw	r2,-4(fp)
  80dc80:	1000070e 	bge	r2,zero,80dca0 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
  80dc84:	080db9c0 	call	80db9c <alt_get_errno>
  80dc88:	1007883a 	mov	r3,r2
  80dc8c:	e0bfff17 	ldw	r2,-4(fp)
  80dc90:	0085c83a 	sub	r2,zero,r2
  80dc94:	18800015 	stw	r2,0(r3)
    rc = -1;
  80dc98:	00bfffc4 	movi	r2,-1
  80dc9c:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
  80dca0:	e0bfff17 	ldw	r2,-4(fp)
}
  80dca4:	e037883a 	mov	sp,fp
  80dca8:	dfc00117 	ldw	ra,4(sp)
  80dcac:	df000017 	ldw	fp,0(sp)
  80dcb0:	dec00204 	addi	sp,sp,8
  80dcb4:	f800283a 	ret

0080dcb8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80dcb8:	defffd04 	addi	sp,sp,-12
  80dcbc:	dfc00215 	stw	ra,8(sp)
  80dcc0:	df000115 	stw	fp,4(sp)
  80dcc4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80dcc8:	0009883a 	mov	r4,zero
  80dccc:	080e15c0 	call	80e15c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80dcd0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80dcd4:	080e1980 	call	80e198 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80dcd8:	01802074 	movhi	r6,129
  80dcdc:	31815304 	addi	r6,r6,1356
  80dce0:	01402074 	movhi	r5,129
  80dce4:	29415304 	addi	r5,r5,1356
  80dce8:	01002074 	movhi	r4,129
  80dcec:	21015304 	addi	r4,r4,1356
  80dcf0:	080f4400 	call	80f440 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80dcf4:	080efd80 	call	80efd8 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80dcf8:	01002074 	movhi	r4,129
  80dcfc:	213c0f04 	addi	r4,r4,-4036
  80dd00:	080fc7c0 	call	80fc7c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80dd04:	d0a70917 	ldw	r2,-25564(gp)
  80dd08:	d0e70a17 	ldw	r3,-25560(gp)
  80dd0c:	d1270b17 	ldw	r4,-25556(gp)
  80dd10:	200d883a 	mov	r6,r4
  80dd14:	180b883a 	mov	r5,r3
  80dd18:	1009883a 	mov	r4,r2
  80dd1c:	08002840 	call	800284 <main>
  80dd20:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80dd24:	01000044 	movi	r4,1
  80dd28:	080d6040 	call	80d604 <close>
  exit (result);
  80dd2c:	e13fff17 	ldw	r4,-4(fp)
  80dd30:	080fc900 	call	80fc90 <exit>

0080dd34 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80dd34:	defffe04 	addi	sp,sp,-8
  80dd38:	df000115 	stw	fp,4(sp)
  80dd3c:	df000104 	addi	fp,sp,4
  80dd40:	e13fff15 	stw	r4,-4(fp)
}
  80dd44:	0001883a 	nop
  80dd48:	e037883a 	mov	sp,fp
  80dd4c:	df000017 	ldw	fp,0(sp)
  80dd50:	dec00104 	addi	sp,sp,4
  80dd54:	f800283a 	ret

0080dd58 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80dd58:	defffe04 	addi	sp,sp,-8
  80dd5c:	df000115 	stw	fp,4(sp)
  80dd60:	df000104 	addi	fp,sp,4
  80dd64:	e13fff15 	stw	r4,-4(fp)
}
  80dd68:	0001883a 	nop
  80dd6c:	e037883a 	mov	sp,fp
  80dd70:	df000017 	ldw	fp,0(sp)
  80dd74:	dec00104 	addi	sp,sp,4
  80dd78:	f800283a 	ret

0080dd7c <alt_get_errno>:
{
  80dd7c:	defffe04 	addi	sp,sp,-8
  80dd80:	dfc00115 	stw	ra,4(sp)
  80dd84:	df000015 	stw	fp,0(sp)
  80dd88:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80dd8c:	d0a00917 	ldw	r2,-32732(gp)
  80dd90:	10000326 	beq	r2,zero,80dda0 <alt_get_errno+0x24>
  80dd94:	d0a00917 	ldw	r2,-32732(gp)
  80dd98:	103ee83a 	callr	r2
  80dd9c:	00000106 	br	80dda4 <alt_get_errno+0x28>
  80dda0:	d0a70704 	addi	r2,gp,-25572
}
  80dda4:	e037883a 	mov	sp,fp
  80dda8:	dfc00117 	ldw	ra,4(sp)
  80ddac:	df000017 	ldw	fp,0(sp)
  80ddb0:	dec00204 	addi	sp,sp,8
  80ddb4:	f800283a 	ret

0080ddb8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80ddb8:	defff904 	addi	sp,sp,-28
  80ddbc:	dfc00615 	stw	ra,24(sp)
  80ddc0:	df000515 	stw	fp,20(sp)
  80ddc4:	df000504 	addi	fp,sp,20
  80ddc8:	e13ffd15 	stw	r4,-12(fp)
  80ddcc:	e17ffc15 	stw	r5,-16(fp)
  80ddd0:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80ddd4:	e0bffd17 	ldw	r2,-12(fp)
  80ddd8:	10000916 	blt	r2,zero,80de00 <read+0x48>
  80dddc:	e0fffd17 	ldw	r3,-12(fp)
  80dde0:	1805883a 	mov	r2,r3
  80dde4:	1085883a 	add	r2,r2,r2
  80dde8:	10c5883a 	add	r2,r2,r3
  80ddec:	100490ba 	slli	r2,r2,2
  80ddf0:	00c02074 	movhi	r3,129
  80ddf4:	18c3cb04 	addi	r3,r3,3884
  80ddf8:	10c5883a 	add	r2,r2,r3
  80ddfc:	00000106 	br	80de04 <read+0x4c>
  80de00:	0005883a 	mov	r2,zero
  80de04:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80de08:	e0bfff17 	ldw	r2,-4(fp)
  80de0c:	10002226 	beq	r2,zero,80de98 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80de10:	e0bfff17 	ldw	r2,-4(fp)
  80de14:	10800217 	ldw	r2,8(r2)
  80de18:	108000cc 	andi	r2,r2,3
  80de1c:	10800060 	cmpeqi	r2,r2,1
  80de20:	1000181e 	bne	r2,zero,80de84 <read+0xcc>
        (fd->dev->read))
  80de24:	e0bfff17 	ldw	r2,-4(fp)
  80de28:	10800017 	ldw	r2,0(r2)
  80de2c:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80de30:	10001426 	beq	r2,zero,80de84 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80de34:	e0bfff17 	ldw	r2,-4(fp)
  80de38:	10800017 	ldw	r2,0(r2)
  80de3c:	10800517 	ldw	r2,20(r2)
  80de40:	e0fffb17 	ldw	r3,-20(fp)
  80de44:	180d883a 	mov	r6,r3
  80de48:	e17ffc17 	ldw	r5,-16(fp)
  80de4c:	e13fff17 	ldw	r4,-4(fp)
  80de50:	103ee83a 	callr	r2
  80de54:	e0bffe15 	stw	r2,-8(fp)
  80de58:	e0bffe17 	ldw	r2,-8(fp)
  80de5c:	1000070e 	bge	r2,zero,80de7c <read+0xc4>
        {
          ALT_ERRNO = -rval;
  80de60:	080dd7c0 	call	80dd7c <alt_get_errno>
  80de64:	1007883a 	mov	r3,r2
  80de68:	e0bffe17 	ldw	r2,-8(fp)
  80de6c:	0085c83a 	sub	r2,zero,r2
  80de70:	18800015 	stw	r2,0(r3)
          return -1;
  80de74:	00bfffc4 	movi	r2,-1
  80de78:	00000c06 	br	80deac <read+0xf4>
        }
        return rval;
  80de7c:	e0bffe17 	ldw	r2,-8(fp)
  80de80:	00000a06 	br	80deac <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80de84:	080dd7c0 	call	80dd7c <alt_get_errno>
  80de88:	1007883a 	mov	r3,r2
  80de8c:	00800344 	movi	r2,13
  80de90:	18800015 	stw	r2,0(r3)
  80de94:	00000406 	br	80dea8 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80de98:	080dd7c0 	call	80dd7c <alt_get_errno>
  80de9c:	1007883a 	mov	r3,r2
  80dea0:	00801444 	movi	r2,81
  80dea4:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80dea8:	00bfffc4 	movi	r2,-1
}
  80deac:	e037883a 	mov	sp,fp
  80deb0:	dfc00117 	ldw	ra,4(sp)
  80deb4:	df000017 	ldw	fp,0(sp)
  80deb8:	dec00204 	addi	sp,sp,8
  80debc:	f800283a 	ret

0080dec0 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80dec0:	defffe04 	addi	sp,sp,-8
  80dec4:	df000115 	stw	fp,4(sp)
  80dec8:	df000104 	addi	fp,sp,4
  80decc:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80ded0:	e0bfff17 	ldw	r2,-4(fp)
  80ded4:	108000d0 	cmplti	r2,r2,3
  80ded8:	1000101e 	bne	r2,zero,80df1c <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
  80dedc:	e0ffff17 	ldw	r3,-4(fp)
  80dee0:	1805883a 	mov	r2,r3
  80dee4:	1085883a 	add	r2,r2,r2
  80dee8:	10c5883a 	add	r2,r2,r3
  80deec:	100490ba 	slli	r2,r2,2
  80def0:	00c02074 	movhi	r3,129
  80def4:	10c7883a 	add	r3,r2,r3
  80def8:	1803cd15 	stw	zero,3892(r3)
    alt_fd_list[fd].dev      = 0;
  80defc:	e0ffff17 	ldw	r3,-4(fp)
  80df00:	1805883a 	mov	r2,r3
  80df04:	1085883a 	add	r2,r2,r2
  80df08:	10c5883a 	add	r2,r2,r3
  80df0c:	100490ba 	slli	r2,r2,2
  80df10:	00c02074 	movhi	r3,129
  80df14:	10c7883a 	add	r3,r2,r3
  80df18:	1803cb15 	stw	zero,3884(r3)
  }
}
  80df1c:	0001883a 	nop
  80df20:	e037883a 	mov	sp,fp
  80df24:	df000017 	ldw	fp,0(sp)
  80df28:	dec00104 	addi	sp,sp,4
  80df2c:	f800283a 	ret

0080df30 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80df30:	defff904 	addi	sp,sp,-28
  80df34:	df000615 	stw	fp,24(sp)
  80df38:	df000604 	addi	fp,sp,24
  80df3c:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
  80df40:	0005303a 	rdctl	r2,status
  80df44:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80df48:	e0fffd17 	ldw	r3,-12(fp)
  80df4c:	00bfff84 	movi	r2,-2
  80df50:	1884703a 	and	r2,r3,r2
  80df54:	1001703a 	wrctl	status,r2
  return context;
  80df58:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80df5c:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80df60:	d0a00a17 	ldw	r2,-32728(gp)
  80df64:	10c000c4 	addi	r3,r2,3
  80df68:	00bfff04 	movi	r2,-4
  80df6c:	1884703a 	and	r2,r3,r2
  80df70:	d0a00a15 	stw	r2,-32728(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80df74:	d0e00a17 	ldw	r3,-32728(gp)
  80df78:	e0bffa17 	ldw	r2,-24(fp)
  80df7c:	1887883a 	add	r3,r3,r2
  80df80:	00804034 	movhi	r2,256
  80df84:	10800004 	addi	r2,r2,0
  80df88:	10c0072e 	bgeu	r2,r3,80dfa8 <sbrk+0x78>
  80df8c:	e0bfff17 	ldw	r2,-4(fp)
  80df90:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80df94:	e0bffc17 	ldw	r2,-16(fp)
  80df98:	1001703a 	wrctl	status,r2
}
  80df9c:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80dfa0:	00bfffc4 	movi	r2,-1
  80dfa4:	00000c06 	br	80dfd8 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
  80dfa8:	d0a00a17 	ldw	r2,-32728(gp)
  80dfac:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
  80dfb0:	d0e00a17 	ldw	r3,-32728(gp)
  80dfb4:	e0bffa17 	ldw	r2,-24(fp)
  80dfb8:	1885883a 	add	r2,r3,r2
  80dfbc:	d0a00a15 	stw	r2,-32728(gp)
  80dfc0:	e0bfff17 	ldw	r2,-4(fp)
  80dfc4:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  80dfc8:	e0bffb17 	ldw	r2,-20(fp)
  80dfcc:	1001703a 	wrctl	status,r2
}
  80dfd0:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80dfd4:	e0bffe17 	ldw	r2,-8(fp)
} 
  80dfd8:	e037883a 	mov	sp,fp
  80dfdc:	df000017 	ldw	fp,0(sp)
  80dfe0:	dec00104 	addi	sp,sp,4
  80dfe4:	f800283a 	ret

0080dfe8 <alt_get_errno>:
{
  80dfe8:	defffe04 	addi	sp,sp,-8
  80dfec:	dfc00115 	stw	ra,4(sp)
  80dff0:	df000015 	stw	fp,0(sp)
  80dff4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80dff8:	d0a00917 	ldw	r2,-32732(gp)
  80dffc:	10000326 	beq	r2,zero,80e00c <alt_get_errno+0x24>
  80e000:	d0a00917 	ldw	r2,-32732(gp)
  80e004:	103ee83a 	callr	r2
  80e008:	00000106 	br	80e010 <alt_get_errno+0x28>
  80e00c:	d0a70704 	addi	r2,gp,-25572
}
  80e010:	e037883a 	mov	sp,fp
  80e014:	dfc00117 	ldw	ra,4(sp)
  80e018:	df000017 	ldw	fp,0(sp)
  80e01c:	dec00204 	addi	sp,sp,8
  80e020:	f800283a 	ret

0080e024 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80e024:	defff904 	addi	sp,sp,-28
  80e028:	dfc00615 	stw	ra,24(sp)
  80e02c:	df000515 	stw	fp,20(sp)
  80e030:	df000504 	addi	fp,sp,20
  80e034:	e13ffd15 	stw	r4,-12(fp)
  80e038:	e17ffc15 	stw	r5,-16(fp)
  80e03c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e040:	e0bffd17 	ldw	r2,-12(fp)
  80e044:	10000916 	blt	r2,zero,80e06c <write+0x48>
  80e048:	e0fffd17 	ldw	r3,-12(fp)
  80e04c:	1805883a 	mov	r2,r3
  80e050:	1085883a 	add	r2,r2,r2
  80e054:	10c5883a 	add	r2,r2,r3
  80e058:	100490ba 	slli	r2,r2,2
  80e05c:	00c02074 	movhi	r3,129
  80e060:	18c3cb04 	addi	r3,r3,3884
  80e064:	10c5883a 	add	r2,r2,r3
  80e068:	00000106 	br	80e070 <write+0x4c>
  80e06c:	0005883a 	mov	r2,zero
  80e070:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80e074:	e0bfff17 	ldw	r2,-4(fp)
  80e078:	10002126 	beq	r2,zero,80e100 <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80e07c:	e0bfff17 	ldw	r2,-4(fp)
  80e080:	10800217 	ldw	r2,8(r2)
  80e084:	108000cc 	andi	r2,r2,3
  80e088:	10001826 	beq	r2,zero,80e0ec <write+0xc8>
  80e08c:	e0bfff17 	ldw	r2,-4(fp)
  80e090:	10800017 	ldw	r2,0(r2)
  80e094:	10800617 	ldw	r2,24(r2)
  80e098:	10001426 	beq	r2,zero,80e0ec <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80e09c:	e0bfff17 	ldw	r2,-4(fp)
  80e0a0:	10800017 	ldw	r2,0(r2)
  80e0a4:	10800617 	ldw	r2,24(r2)
  80e0a8:	e0fffb17 	ldw	r3,-20(fp)
  80e0ac:	180d883a 	mov	r6,r3
  80e0b0:	e17ffc17 	ldw	r5,-16(fp)
  80e0b4:	e13fff17 	ldw	r4,-4(fp)
  80e0b8:	103ee83a 	callr	r2
  80e0bc:	e0bffe15 	stw	r2,-8(fp)
  80e0c0:	e0bffe17 	ldw	r2,-8(fp)
  80e0c4:	1000070e 	bge	r2,zero,80e0e4 <write+0xc0>
      {
        ALT_ERRNO = -rval;
  80e0c8:	080dfe80 	call	80dfe8 <alt_get_errno>
  80e0cc:	1007883a 	mov	r3,r2
  80e0d0:	e0bffe17 	ldw	r2,-8(fp)
  80e0d4:	0085c83a 	sub	r2,zero,r2
  80e0d8:	18800015 	stw	r2,0(r3)
        return -1;
  80e0dc:	00bfffc4 	movi	r2,-1
  80e0e0:	00000c06 	br	80e114 <write+0xf0>
      }
      return rval;
  80e0e4:	e0bffe17 	ldw	r2,-8(fp)
  80e0e8:	00000a06 	br	80e114 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80e0ec:	080dfe80 	call	80dfe8 <alt_get_errno>
  80e0f0:	1007883a 	mov	r3,r2
  80e0f4:	00800344 	movi	r2,13
  80e0f8:	18800015 	stw	r2,0(r3)
  80e0fc:	00000406 	br	80e110 <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80e100:	080dfe80 	call	80dfe8 <alt_get_errno>
  80e104:	1007883a 	mov	r3,r2
  80e108:	00801444 	movi	r2,81
  80e10c:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80e110:	00bfffc4 	movi	r2,-1
}
  80e114:	e037883a 	mov	sp,fp
  80e118:	dfc00117 	ldw	ra,4(sp)
  80e11c:	df000017 	ldw	fp,0(sp)
  80e120:	dec00204 	addi	sp,sp,8
  80e124:	f800283a 	ret

0080e128 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80e128:	defffd04 	addi	sp,sp,-12
  80e12c:	dfc00215 	stw	ra,8(sp)
  80e130:	df000115 	stw	fp,4(sp)
  80e134:	df000104 	addi	fp,sp,4
  80e138:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80e13c:	d1600604 	addi	r5,gp,-32744
  80e140:	e13fff17 	ldw	r4,-4(fp)
  80e144:	080ef300 	call	80ef30 <alt_dev_llist_insert>
}
  80e148:	e037883a 	mov	sp,fp
  80e14c:	dfc00117 	ldw	ra,4(sp)
  80e150:	df000017 	ldw	fp,0(sp)
  80e154:	dec00204 	addi	sp,sp,8
  80e158:	f800283a 	ret

0080e15c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80e15c:	defffd04 	addi	sp,sp,-12
  80e160:	dfc00215 	stw	ra,8(sp)
  80e164:	df000115 	stw	fp,4(sp)
  80e168:	df000104 	addi	fp,sp,4
  80e16c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  80e170:	080f8e00 	call	80f8e0 <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80e174:	00800044 	movi	r2,1
  80e178:	1001703a 	wrctl	status,r2
}
  80e17c:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
  80e180:	0001883a 	nop
  80e184:	e037883a 	mov	sp,fp
  80e188:	dfc00117 	ldw	ra,4(sp)
  80e18c:	df000017 	ldw	fp,0(sp)
  80e190:	dec00204 	addi	sp,sp,8
  80e194:	f800283a 	ret

0080e198 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80e198:	defffe04 	addi	sp,sp,-8
  80e19c:	dfc00115 	stw	ra,4(sp)
  80e1a0:	df000015 	stw	fp,0(sp)
  80e1a4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
  80e1a8:	01c0fa04 	movi	r7,1000
  80e1ac:	01800044 	movi	r6,1
  80e1b0:	000b883a 	mov	r5,zero
  80e1b4:	01004034 	movhi	r4,256
  80e1b8:	21041804 	addi	r4,r4,4192
  80e1bc:	080ecf00 	call	80ecf0 <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMESTAMP_TIMER, timestamp_timer);
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80e1c0:	01800404 	movi	r6,16
  80e1c4:	000b883a 	mov	r5,zero
  80e1c8:	01002074 	movhi	r4,129
  80e1cc:	21043504 	addi	r4,r4,4308
  80e1d0:	080e3640 	call	80e364 <altera_avalon_jtag_uart_init>
  80e1d4:	01002074 	movhi	r4,129
  80e1d8:	21042b04 	addi	r4,r4,4268
  80e1dc:	080e1280 	call	80e128 <alt_dev_reg>
    ALTERA_AVALON_SPI_INIT ( SPI, spi);
  80e1e0:	0001883a 	nop
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80e1e4:	0001883a 	nop
}
  80e1e8:	0001883a 	nop
  80e1ec:	e037883a 	mov	sp,fp
  80e1f0:	dfc00117 	ldw	ra,4(sp)
  80e1f4:	df000017 	ldw	fp,0(sp)
  80e1f8:	dec00204 	addi	sp,sp,8
  80e1fc:	f800283a 	ret

0080e200 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80e200:	defffa04 	addi	sp,sp,-24
  80e204:	dfc00515 	stw	ra,20(sp)
  80e208:	df000415 	stw	fp,16(sp)
  80e20c:	df000404 	addi	fp,sp,16
  80e210:	e13ffe15 	stw	r4,-8(fp)
  80e214:	e17ffd15 	stw	r5,-12(fp)
  80e218:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e21c:	e0bffe17 	ldw	r2,-8(fp)
  80e220:	10800017 	ldw	r2,0(r2)
  80e224:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80e228:	e0bfff17 	ldw	r2,-4(fp)
  80e22c:	10c00a04 	addi	r3,r2,40
  80e230:	e0bffe17 	ldw	r2,-8(fp)
  80e234:	10800217 	ldw	r2,8(r2)
  80e238:	100f883a 	mov	r7,r2
  80e23c:	e1bffc17 	ldw	r6,-16(fp)
  80e240:	e17ffd17 	ldw	r5,-12(fp)
  80e244:	1809883a 	mov	r4,r3
  80e248:	080e82c0 	call	80e82c <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80e24c:	e037883a 	mov	sp,fp
  80e250:	dfc00117 	ldw	ra,4(sp)
  80e254:	df000017 	ldw	fp,0(sp)
  80e258:	dec00204 	addi	sp,sp,8
  80e25c:	f800283a 	ret

0080e260 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80e260:	defffa04 	addi	sp,sp,-24
  80e264:	dfc00515 	stw	ra,20(sp)
  80e268:	df000415 	stw	fp,16(sp)
  80e26c:	df000404 	addi	fp,sp,16
  80e270:	e13ffe15 	stw	r4,-8(fp)
  80e274:	e17ffd15 	stw	r5,-12(fp)
  80e278:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e27c:	e0bffe17 	ldw	r2,-8(fp)
  80e280:	10800017 	ldw	r2,0(r2)
  80e284:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80e288:	e0bfff17 	ldw	r2,-4(fp)
  80e28c:	10c00a04 	addi	r3,r2,40
  80e290:	e0bffe17 	ldw	r2,-8(fp)
  80e294:	10800217 	ldw	r2,8(r2)
  80e298:	100f883a 	mov	r7,r2
  80e29c:	e1bffc17 	ldw	r6,-16(fp)
  80e2a0:	e17ffd17 	ldw	r5,-12(fp)
  80e2a4:	1809883a 	mov	r4,r3
  80e2a8:	080ea4c0 	call	80ea4c <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80e2ac:	e037883a 	mov	sp,fp
  80e2b0:	dfc00117 	ldw	ra,4(sp)
  80e2b4:	df000017 	ldw	fp,0(sp)
  80e2b8:	dec00204 	addi	sp,sp,8
  80e2bc:	f800283a 	ret

0080e2c0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80e2c0:	defffc04 	addi	sp,sp,-16
  80e2c4:	dfc00315 	stw	ra,12(sp)
  80e2c8:	df000215 	stw	fp,8(sp)
  80e2cc:	df000204 	addi	fp,sp,8
  80e2d0:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80e2d4:	e0bffe17 	ldw	r2,-8(fp)
  80e2d8:	10800017 	ldw	r2,0(r2)
  80e2dc:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80e2e0:	e0bfff17 	ldw	r2,-4(fp)
  80e2e4:	10c00a04 	addi	r3,r2,40
  80e2e8:	e0bffe17 	ldw	r2,-8(fp)
  80e2ec:	10800217 	ldw	r2,8(r2)
  80e2f0:	100b883a 	mov	r5,r2
  80e2f4:	1809883a 	mov	r4,r3
  80e2f8:	080e6d00 	call	80e6d0 <altera_avalon_jtag_uart_close>
}
  80e2fc:	e037883a 	mov	sp,fp
  80e300:	dfc00117 	ldw	ra,4(sp)
  80e304:	df000017 	ldw	fp,0(sp)
  80e308:	dec00204 	addi	sp,sp,8
  80e30c:	f800283a 	ret

0080e310 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80e310:	defffa04 	addi	sp,sp,-24
  80e314:	dfc00515 	stw	ra,20(sp)
  80e318:	df000415 	stw	fp,16(sp)
  80e31c:	df000404 	addi	fp,sp,16
  80e320:	e13ffe15 	stw	r4,-8(fp)
  80e324:	e17ffd15 	stw	r5,-12(fp)
  80e328:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80e32c:	e0bffe17 	ldw	r2,-8(fp)
  80e330:	10800017 	ldw	r2,0(r2)
  80e334:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80e338:	e0bfff17 	ldw	r2,-4(fp)
  80e33c:	10800a04 	addi	r2,r2,40
  80e340:	e1bffc17 	ldw	r6,-16(fp)
  80e344:	e17ffd17 	ldw	r5,-12(fp)
  80e348:	1009883a 	mov	r4,r2
  80e34c:	080e7380 	call	80e738 <altera_avalon_jtag_uart_ioctl>
}
  80e350:	e037883a 	mov	sp,fp
  80e354:	dfc00117 	ldw	ra,4(sp)
  80e358:	df000017 	ldw	fp,0(sp)
  80e35c:	dec00204 	addi	sp,sp,8
  80e360:	f800283a 	ret

0080e364 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80e364:	defffa04 	addi	sp,sp,-24
  80e368:	dfc00515 	stw	ra,20(sp)
  80e36c:	df000415 	stw	fp,16(sp)
  80e370:	df000404 	addi	fp,sp,16
  80e374:	e13fff15 	stw	r4,-4(fp)
  80e378:	e17ffe15 	stw	r5,-8(fp)
  80e37c:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e380:	e0bfff17 	ldw	r2,-4(fp)
  80e384:	00c00044 	movi	r3,1
  80e388:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80e38c:	e0bfff17 	ldw	r2,-4(fp)
  80e390:	10800017 	ldw	r2,0(r2)
  80e394:	10800104 	addi	r2,r2,4
  80e398:	1007883a 	mov	r3,r2
  80e39c:	e0bfff17 	ldw	r2,-4(fp)
  80e3a0:	10800817 	ldw	r2,32(r2)
  80e3a4:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80e3a8:	e0bffe17 	ldw	r2,-8(fp)
  80e3ac:	e0fffd17 	ldw	r3,-12(fp)
  80e3b0:	d8000015 	stw	zero,0(sp)
  80e3b4:	e1ffff17 	ldw	r7,-4(fp)
  80e3b8:	01802074 	movhi	r6,129
  80e3bc:	31b90904 	addi	r6,r6,-7132
  80e3c0:	180b883a 	mov	r5,r3
  80e3c4:	1009883a 	mov	r4,r2
  80e3c8:	080f0d40 	call	80f0d4 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80e3cc:	e0bfff17 	ldw	r2,-4(fp)
  80e3d0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80e3d4:	e0bfff17 	ldw	r2,-4(fp)
  80e3d8:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80e3dc:	d0e70d17 	ldw	r3,-25548(gp)
  80e3e0:	e1ffff17 	ldw	r7,-4(fp)
  80e3e4:	01802074 	movhi	r6,129
  80e3e8:	31b98c04 	addi	r6,r6,-6608
  80e3ec:	180b883a 	mov	r5,r3
  80e3f0:	1009883a 	mov	r4,r2
  80e3f4:	080ed740 	call	80ed74 <alt_alarm_start>
  80e3f8:	1000040e 	bge	r2,zero,80e40c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80e3fc:	e0ffff17 	ldw	r3,-4(fp)
  80e400:	00a00034 	movhi	r2,32768
  80e404:	10bfffc4 	addi	r2,r2,-1
  80e408:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80e40c:	0001883a 	nop
  80e410:	e037883a 	mov	sp,fp
  80e414:	dfc00117 	ldw	ra,4(sp)
  80e418:	df000017 	ldw	fp,0(sp)
  80e41c:	dec00204 	addi	sp,sp,8
  80e420:	f800283a 	ret

0080e424 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80e424:	defff804 	addi	sp,sp,-32
  80e428:	df000715 	stw	fp,28(sp)
  80e42c:	df000704 	addi	fp,sp,28
  80e430:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80e434:	e0bff917 	ldw	r2,-28(fp)
  80e438:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
  80e43c:	e0bffd17 	ldw	r2,-12(fp)
  80e440:	10800017 	ldw	r2,0(r2)
  80e444:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e448:	e0bffc17 	ldw	r2,-16(fp)
  80e44c:	10800104 	addi	r2,r2,4
  80e450:	10800037 	ldwio	r2,0(r2)
  80e454:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80e458:	e0bffb17 	ldw	r2,-20(fp)
  80e45c:	1080c00c 	andi	r2,r2,768
  80e460:	10006d26 	beq	r2,zero,80e618 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80e464:	e0bffb17 	ldw	r2,-20(fp)
  80e468:	1080400c 	andi	r2,r2,256
  80e46c:	10003526 	beq	r2,zero,80e544 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80e470:	00800074 	movhi	r2,1
  80e474:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e478:	e0bffd17 	ldw	r2,-12(fp)
  80e47c:	10800a17 	ldw	r2,40(r2)
  80e480:	10800044 	addi	r2,r2,1
  80e484:	1081ffcc 	andi	r2,r2,2047
  80e488:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
  80e48c:	e0bffd17 	ldw	r2,-12(fp)
  80e490:	10800b17 	ldw	r2,44(r2)
  80e494:	e0fffa17 	ldw	r3,-24(fp)
  80e498:	18801526 	beq	r3,r2,80e4f0 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80e49c:	e0bffc17 	ldw	r2,-16(fp)
  80e4a0:	10800037 	ldwio	r2,0(r2)
  80e4a4:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80e4a8:	e0bfff17 	ldw	r2,-4(fp)
  80e4ac:	10a0000c 	andi	r2,r2,32768
  80e4b0:	10001126 	beq	r2,zero,80e4f8 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80e4b4:	e0bffd17 	ldw	r2,-12(fp)
  80e4b8:	10800a17 	ldw	r2,40(r2)
  80e4bc:	e0ffff17 	ldw	r3,-4(fp)
  80e4c0:	1809883a 	mov	r4,r3
  80e4c4:	e0fffd17 	ldw	r3,-12(fp)
  80e4c8:	1885883a 	add	r2,r3,r2
  80e4cc:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e4d0:	e0bffd17 	ldw	r2,-12(fp)
  80e4d4:	10800a17 	ldw	r2,40(r2)
  80e4d8:	10800044 	addi	r2,r2,1
  80e4dc:	10c1ffcc 	andi	r3,r2,2047
  80e4e0:	e0bffd17 	ldw	r2,-12(fp)
  80e4e4:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  80e4e8:	0001883a 	nop
      {
  80e4ec:	003fe206 	br	80e478 <altera_avalon_jtag_uart_irq+0x54>
          break;
  80e4f0:	0001883a 	nop
  80e4f4:	00000106 	br	80e4fc <altera_avalon_jtag_uart_irq+0xd8>
          break;
  80e4f8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80e4fc:	e0bfff17 	ldw	r2,-4(fp)
  80e500:	10bfffec 	andhi	r2,r2,65535
  80e504:	10000f26 	beq	r2,zero,80e544 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e508:	e0bffd17 	ldw	r2,-12(fp)
  80e50c:	10c00817 	ldw	r3,32(r2)
  80e510:	00bfff84 	movi	r2,-2
  80e514:	1886703a 	and	r3,r3,r2
  80e518:	e0bffd17 	ldw	r2,-12(fp)
  80e51c:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80e520:	e0bffc17 	ldw	r2,-16(fp)
  80e524:	10800104 	addi	r2,r2,4
  80e528:	1007883a 	mov	r3,r2
  80e52c:	e0bffd17 	ldw	r2,-12(fp)
  80e530:	10800817 	ldw	r2,32(r2)
  80e534:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e538:	e0bffc17 	ldw	r2,-16(fp)
  80e53c:	10800104 	addi	r2,r2,4
  80e540:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80e544:	e0bffb17 	ldw	r2,-20(fp)
  80e548:	1080800c 	andi	r2,r2,512
  80e54c:	103fbe26 	beq	r2,zero,80e448 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80e550:	e0bffb17 	ldw	r2,-20(fp)
  80e554:	1004d43a 	srli	r2,r2,16
  80e558:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80e55c:	00001406 	br	80e5b0 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80e560:	e0bffc17 	ldw	r2,-16(fp)
  80e564:	e0fffd17 	ldw	r3,-12(fp)
  80e568:	18c00d17 	ldw	r3,52(r3)
  80e56c:	e13ffd17 	ldw	r4,-12(fp)
  80e570:	20c7883a 	add	r3,r4,r3
  80e574:	18c20e03 	ldbu	r3,2104(r3)
  80e578:	18c03fcc 	andi	r3,r3,255
  80e57c:	18c0201c 	xori	r3,r3,128
  80e580:	18ffe004 	addi	r3,r3,-128
  80e584:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e588:	e0bffd17 	ldw	r2,-12(fp)
  80e58c:	10800d17 	ldw	r2,52(r2)
  80e590:	10800044 	addi	r2,r2,1
  80e594:	10c1ffcc 	andi	r3,r2,2047
  80e598:	e0bffd17 	ldw	r2,-12(fp)
  80e59c:	10c00d15 	stw	r3,52(r2)
  80e5a0:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80e5a4:	e0bffe17 	ldw	r2,-8(fp)
  80e5a8:	10bfffc4 	addi	r2,r2,-1
  80e5ac:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
  80e5b0:	e0bffe17 	ldw	r2,-8(fp)
  80e5b4:	10000526 	beq	r2,zero,80e5cc <altera_avalon_jtag_uart_irq+0x1a8>
  80e5b8:	e0bffd17 	ldw	r2,-12(fp)
  80e5bc:	10c00d17 	ldw	r3,52(r2)
  80e5c0:	e0bffd17 	ldw	r2,-12(fp)
  80e5c4:	10800c17 	ldw	r2,48(r2)
  80e5c8:	18bfe51e 	bne	r3,r2,80e560 <altera_avalon_jtag_uart_irq+0x13c>
      }

      if (space > 0)
  80e5cc:	e0bffe17 	ldw	r2,-8(fp)
  80e5d0:	103f9d26 	beq	r2,zero,80e448 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80e5d4:	e0bffd17 	ldw	r2,-12(fp)
  80e5d8:	10c00817 	ldw	r3,32(r2)
  80e5dc:	00bfff44 	movi	r2,-3
  80e5e0:	1886703a 	and	r3,r3,r2
  80e5e4:	e0bffd17 	ldw	r2,-12(fp)
  80e5e8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e5ec:	e0bffd17 	ldw	r2,-12(fp)
  80e5f0:	10800017 	ldw	r2,0(r2)
  80e5f4:	10800104 	addi	r2,r2,4
  80e5f8:	1007883a 	mov	r3,r2
  80e5fc:	e0bffd17 	ldw	r2,-12(fp)
  80e600:	10800817 	ldw	r2,32(r2)
  80e604:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80e608:	e0bffc17 	ldw	r2,-16(fp)
  80e60c:	10800104 	addi	r2,r2,4
  80e610:	10800037 	ldwio	r2,0(r2)
  {
  80e614:	003f8c06 	br	80e448 <altera_avalon_jtag_uart_irq+0x24>
      break;
  80e618:	0001883a 	nop
      }
    }
  }
}
  80e61c:	0001883a 	nop
  80e620:	e037883a 	mov	sp,fp
  80e624:	df000017 	ldw	fp,0(sp)
  80e628:	dec00104 	addi	sp,sp,4
  80e62c:	f800283a 	ret

0080e630 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80e630:	defffc04 	addi	sp,sp,-16
  80e634:	df000315 	stw	fp,12(sp)
  80e638:	df000304 	addi	fp,sp,12
  80e63c:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80e640:	e0bffd17 	ldw	r2,-12(fp)
  80e644:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80e648:	e0bfff17 	ldw	r2,-4(fp)
  80e64c:	10800017 	ldw	r2,0(r2)
  80e650:	10800104 	addi	r2,r2,4
  80e654:	10800037 	ldwio	r2,0(r2)
  80e658:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80e65c:	e0bffe17 	ldw	r2,-8(fp)
  80e660:	1081000c 	andi	r2,r2,1024
  80e664:	10000b26 	beq	r2,zero,80e694 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80e668:	e0bfff17 	ldw	r2,-4(fp)
  80e66c:	10800017 	ldw	r2,0(r2)
  80e670:	10800104 	addi	r2,r2,4
  80e674:	1007883a 	mov	r3,r2
  80e678:	e0bfff17 	ldw	r2,-4(fp)
  80e67c:	10800817 	ldw	r2,32(r2)
  80e680:	10810014 	ori	r2,r2,1024
  80e684:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80e688:	e0bfff17 	ldw	r2,-4(fp)
  80e68c:	10000915 	stw	zero,36(r2)
  80e690:	00000a06 	br	80e6bc <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80e694:	e0bfff17 	ldw	r2,-4(fp)
  80e698:	10c00917 	ldw	r3,36(r2)
  80e69c:	00a00034 	movhi	r2,32768
  80e6a0:	10bfff04 	addi	r2,r2,-4
  80e6a4:	10c00536 	bltu	r2,r3,80e6bc <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80e6a8:	e0bfff17 	ldw	r2,-4(fp)
  80e6ac:	10800917 	ldw	r2,36(r2)
  80e6b0:	10c00044 	addi	r3,r2,1
  80e6b4:	e0bfff17 	ldw	r2,-4(fp)
  80e6b8:	10c00915 	stw	r3,36(r2)
  80e6bc:	d0a70d17 	ldw	r2,-25548(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80e6c0:	e037883a 	mov	sp,fp
  80e6c4:	df000017 	ldw	fp,0(sp)
  80e6c8:	dec00104 	addi	sp,sp,4
  80e6cc:	f800283a 	ret

0080e6d0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80e6d0:	defffd04 	addi	sp,sp,-12
  80e6d4:	df000215 	stw	fp,8(sp)
  80e6d8:	df000204 	addi	fp,sp,8
  80e6dc:	e13fff15 	stw	r4,-4(fp)
  80e6e0:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e6e4:	00000506 	br	80e6fc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80e6e8:	e0bffe17 	ldw	r2,-8(fp)
  80e6ec:	1090000c 	andi	r2,r2,16384
  80e6f0:	10000226 	beq	r2,zero,80e6fc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80e6f4:	00bffd44 	movi	r2,-11
  80e6f8:	00000b06 	br	80e728 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80e6fc:	e0bfff17 	ldw	r2,-4(fp)
  80e700:	10c00d17 	ldw	r3,52(r2)
  80e704:	e0bfff17 	ldw	r2,-4(fp)
  80e708:	10800c17 	ldw	r2,48(r2)
  80e70c:	18800526 	beq	r3,r2,80e724 <altera_avalon_jtag_uart_close+0x54>
  80e710:	e0bfff17 	ldw	r2,-4(fp)
  80e714:	10c00917 	ldw	r3,36(r2)
  80e718:	e0bfff17 	ldw	r2,-4(fp)
  80e71c:	10800117 	ldw	r2,4(r2)
  80e720:	18bff136 	bltu	r3,r2,80e6e8 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
  80e724:	0005883a 	mov	r2,zero
}
  80e728:	e037883a 	mov	sp,fp
  80e72c:	df000017 	ldw	fp,0(sp)
  80e730:	dec00104 	addi	sp,sp,4
  80e734:	f800283a 	ret

0080e738 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80e738:	defffa04 	addi	sp,sp,-24
  80e73c:	df000515 	stw	fp,20(sp)
  80e740:	df000504 	addi	fp,sp,20
  80e744:	e13ffd15 	stw	r4,-12(fp)
  80e748:	e17ffc15 	stw	r5,-16(fp)
  80e74c:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
  80e750:	00bff9c4 	movi	r2,-25
  80e754:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
  80e758:	e0bffc17 	ldw	r2,-16(fp)
  80e75c:	109a8060 	cmpeqi	r2,r2,27137
  80e760:	1000041e 	bne	r2,zero,80e774 <altera_avalon_jtag_uart_ioctl+0x3c>
  80e764:	e0bffc17 	ldw	r2,-16(fp)
  80e768:	109a80a0 	cmpeqi	r2,r2,27138
  80e76c:	1000181e 	bne	r2,zero,80e7d0 <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
  80e770:	00002906 	br	80e818 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
  80e774:	e0bffd17 	ldw	r2,-12(fp)
  80e778:	10c00117 	ldw	r3,4(r2)
  80e77c:	00a00034 	movhi	r2,32768
  80e780:	10bfffc4 	addi	r2,r2,-1
  80e784:	18802126 	beq	r3,r2,80e80c <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
  80e788:	e0bffb17 	ldw	r2,-20(fp)
  80e78c:	10800017 	ldw	r2,0(r2)
  80e790:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80e794:	e0bffe17 	ldw	r2,-8(fp)
  80e798:	10800090 	cmplti	r2,r2,2
  80e79c:	1000061e 	bne	r2,zero,80e7b8 <altera_avalon_jtag_uart_ioctl+0x80>
  80e7a0:	e0fffe17 	ldw	r3,-8(fp)
  80e7a4:	00a00034 	movhi	r2,32768
  80e7a8:	10bfffc4 	addi	r2,r2,-1
  80e7ac:	18800226 	beq	r3,r2,80e7b8 <altera_avalon_jtag_uart_ioctl+0x80>
  80e7b0:	e0bffe17 	ldw	r2,-8(fp)
  80e7b4:	00000206 	br	80e7c0 <altera_avalon_jtag_uart_ioctl+0x88>
  80e7b8:	00a00034 	movhi	r2,32768
  80e7bc:	10bfff84 	addi	r2,r2,-2
  80e7c0:	e0fffd17 	ldw	r3,-12(fp)
  80e7c4:	18800115 	stw	r2,4(r3)
      rc = 0;
  80e7c8:	e03fff15 	stw	zero,-4(fp)
    break;
  80e7cc:	00000f06 	br	80e80c <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
  80e7d0:	e0bffd17 	ldw	r2,-12(fp)
  80e7d4:	10c00117 	ldw	r3,4(r2)
  80e7d8:	00a00034 	movhi	r2,32768
  80e7dc:	10bfffc4 	addi	r2,r2,-1
  80e7e0:	18800c26 	beq	r3,r2,80e814 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80e7e4:	e0bffd17 	ldw	r2,-12(fp)
  80e7e8:	10c00917 	ldw	r3,36(r2)
  80e7ec:	e0bffd17 	ldw	r2,-12(fp)
  80e7f0:	10800117 	ldw	r2,4(r2)
  80e7f4:	1885803a 	cmpltu	r2,r3,r2
  80e7f8:	10c03fcc 	andi	r3,r2,255
  80e7fc:	e0bffb17 	ldw	r2,-20(fp)
  80e800:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80e804:	e03fff15 	stw	zero,-4(fp)
    break;
  80e808:	00000206 	br	80e814 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
  80e80c:	0001883a 	nop
  80e810:	00000106 	br	80e818 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
  80e814:	0001883a 	nop
  }

  return rc;
  80e818:	e0bfff17 	ldw	r2,-4(fp)
}
  80e81c:	e037883a 	mov	sp,fp
  80e820:	df000017 	ldw	fp,0(sp)
  80e824:	dec00104 	addi	sp,sp,4
  80e828:	f800283a 	ret

0080e82c <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80e82c:	defff304 	addi	sp,sp,-52
  80e830:	dfc00c15 	stw	ra,48(sp)
  80e834:	df000b15 	stw	fp,44(sp)
  80e838:	df000b04 	addi	fp,sp,44
  80e83c:	e13ff815 	stw	r4,-32(fp)
  80e840:	e17ff715 	stw	r5,-36(fp)
  80e844:	e1bff615 	stw	r6,-40(fp)
  80e848:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
  80e84c:	e0bff717 	ldw	r2,-36(fp)
  80e850:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80e854:	00004706 	br	80e974 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80e858:	e0bff817 	ldw	r2,-32(fp)
  80e85c:	10800a17 	ldw	r2,40(r2)
  80e860:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
  80e864:	e0bff817 	ldw	r2,-32(fp)
  80e868:	10800b17 	ldw	r2,44(r2)
  80e86c:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
  80e870:	e0fffd17 	ldw	r3,-12(fp)
  80e874:	e0bffc17 	ldw	r2,-16(fp)
  80e878:	18800536 	bltu	r3,r2,80e890 <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80e87c:	e0fffd17 	ldw	r3,-12(fp)
  80e880:	e0bffc17 	ldw	r2,-16(fp)
  80e884:	1885c83a 	sub	r2,r3,r2
  80e888:	e0bffe15 	stw	r2,-8(fp)
  80e88c:	00000406 	br	80e8a0 <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80e890:	00c20004 	movi	r3,2048
  80e894:	e0bffc17 	ldw	r2,-16(fp)
  80e898:	1885c83a 	sub	r2,r3,r2
  80e89c:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80e8a0:	e0bffe17 	ldw	r2,-8(fp)
  80e8a4:	10001e26 	beq	r2,zero,80e920 <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80e8a8:	e0fff617 	ldw	r3,-40(fp)
  80e8ac:	e0bffe17 	ldw	r2,-8(fp)
  80e8b0:	1880022e 	bgeu	r3,r2,80e8bc <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80e8b4:	e0bff617 	ldw	r2,-40(fp)
  80e8b8:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80e8bc:	e0bff817 	ldw	r2,-32(fp)
  80e8c0:	10c00e04 	addi	r3,r2,56
  80e8c4:	e0bffc17 	ldw	r2,-16(fp)
  80e8c8:	1885883a 	add	r2,r3,r2
  80e8cc:	e1bffe17 	ldw	r6,-8(fp)
  80e8d0:	100b883a 	mov	r5,r2
  80e8d4:	e13fff17 	ldw	r4,-4(fp)
  80e8d8:	0805e2c0 	call	805e2c <memcpy>
      ptr   += n;
  80e8dc:	e0ffff17 	ldw	r3,-4(fp)
  80e8e0:	e0bffe17 	ldw	r2,-8(fp)
  80e8e4:	1885883a 	add	r2,r3,r2
  80e8e8:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
  80e8ec:	e0fff617 	ldw	r3,-40(fp)
  80e8f0:	e0bffe17 	ldw	r2,-8(fp)
  80e8f4:	1885c83a 	sub	r2,r3,r2
  80e8f8:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80e8fc:	e0fffc17 	ldw	r3,-16(fp)
  80e900:	e0bffe17 	ldw	r2,-8(fp)
  80e904:	1885883a 	add	r2,r3,r2
  80e908:	10c1ffcc 	andi	r3,r2,2047
  80e90c:	e0bff817 	ldw	r2,-32(fp)
  80e910:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80e914:	e0bff617 	ldw	r2,-40(fp)
  80e918:	00bfcf16 	blt	zero,r2,80e858 <altera_avalon_jtag_uart_read+0x2c>
  80e91c:	00000106 	br	80e924 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
  80e920:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
  80e924:	e0ffff17 	ldw	r3,-4(fp)
  80e928:	e0bff717 	ldw	r2,-36(fp)
  80e92c:	1880141e 	bne	r3,r2,80e980 <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80e930:	e0bff517 	ldw	r2,-44(fp)
  80e934:	1090000c 	andi	r2,r2,16384
  80e938:	1000131e 	bne	r2,zero,80e988 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80e93c:	0001883a 	nop
  80e940:	e0bff817 	ldw	r2,-32(fp)
  80e944:	10800a17 	ldw	r2,40(r2)
  80e948:	e0fffd17 	ldw	r3,-12(fp)
  80e94c:	1880051e 	bne	r3,r2,80e964 <altera_avalon_jtag_uart_read+0x138>
  80e950:	e0bff817 	ldw	r2,-32(fp)
  80e954:	10c00917 	ldw	r3,36(r2)
  80e958:	e0bff817 	ldw	r2,-32(fp)
  80e95c:	10800117 	ldw	r2,4(r2)
  80e960:	18bff736 	bltu	r3,r2,80e940 <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80e964:	e0bff817 	ldw	r2,-32(fp)
  80e968:	10800a17 	ldw	r2,40(r2)
  80e96c:	e0fffd17 	ldw	r3,-12(fp)
  80e970:	18800726 	beq	r3,r2,80e990 <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
  80e974:	e0bff617 	ldw	r2,-40(fp)
  80e978:	00bfb716 	blt	zero,r2,80e858 <altera_avalon_jtag_uart_read+0x2c>
  80e97c:	00000506 	br	80e994 <altera_avalon_jtag_uart_read+0x168>
      break;
  80e980:	0001883a 	nop
  80e984:	00000306 	br	80e994 <altera_avalon_jtag_uart_read+0x168>
      break;
  80e988:	0001883a 	nop
  80e98c:	00000106 	br	80e994 <altera_avalon_jtag_uart_read+0x168>
      break;
  80e990:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80e994:	e0ffff17 	ldw	r3,-4(fp)
  80e998:	e0bff717 	ldw	r2,-36(fp)
  80e99c:	18801926 	beq	r3,r2,80ea04 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
  80e9a0:	0005303a 	rdctl	r2,status
  80e9a4:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e9a8:	e0fff917 	ldw	r3,-28(fp)
  80e9ac:	00bfff84 	movi	r2,-2
  80e9b0:	1884703a 	and	r2,r3,r2
  80e9b4:	1001703a 	wrctl	status,r2
  return context;
  80e9b8:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80e9bc:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80e9c0:	e0bff817 	ldw	r2,-32(fp)
  80e9c4:	10800817 	ldw	r2,32(r2)
  80e9c8:	10c00054 	ori	r3,r2,1
  80e9cc:	e0bff817 	ldw	r2,-32(fp)
  80e9d0:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80e9d4:	e0bff817 	ldw	r2,-32(fp)
  80e9d8:	10800017 	ldw	r2,0(r2)
  80e9dc:	10800104 	addi	r2,r2,4
  80e9e0:	1007883a 	mov	r3,r2
  80e9e4:	e0bff817 	ldw	r2,-32(fp)
  80e9e8:	10800817 	ldw	r2,32(r2)
  80e9ec:	18800035 	stwio	r2,0(r3)
  80e9f0:	e0bffb17 	ldw	r2,-20(fp)
  80e9f4:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80e9f8:	e0bffa17 	ldw	r2,-24(fp)
  80e9fc:	1001703a 	wrctl	status,r2
}
  80ea00:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80ea04:	e0ffff17 	ldw	r3,-4(fp)
  80ea08:	e0bff717 	ldw	r2,-36(fp)
  80ea0c:	18800426 	beq	r3,r2,80ea20 <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
  80ea10:	e0ffff17 	ldw	r3,-4(fp)
  80ea14:	e0bff717 	ldw	r2,-36(fp)
  80ea18:	1885c83a 	sub	r2,r3,r2
  80ea1c:	00000606 	br	80ea38 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
  80ea20:	e0bff517 	ldw	r2,-44(fp)
  80ea24:	1090000c 	andi	r2,r2,16384
  80ea28:	10000226 	beq	r2,zero,80ea34 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
  80ea2c:	00bffd44 	movi	r2,-11
  80ea30:	00000106 	br	80ea38 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
  80ea34:	00bffec4 	movi	r2,-5
}
  80ea38:	e037883a 	mov	sp,fp
  80ea3c:	dfc00117 	ldw	ra,4(sp)
  80ea40:	df000017 	ldw	fp,0(sp)
  80ea44:	dec00204 	addi	sp,sp,8
  80ea48:	f800283a 	ret

0080ea4c <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80ea4c:	defff304 	addi	sp,sp,-52
  80ea50:	dfc00c15 	stw	ra,48(sp)
  80ea54:	df000b15 	stw	fp,44(sp)
  80ea58:	df000b04 	addi	fp,sp,44
  80ea5c:	e13ff815 	stw	r4,-32(fp)
  80ea60:	e17ff715 	stw	r5,-36(fp)
  80ea64:	e1bff615 	stw	r6,-40(fp)
  80ea68:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80ea6c:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80ea70:	e0bff717 	ldw	r2,-36(fp)
  80ea74:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80ea78:	00003706 	br	80eb58 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80ea7c:	e0bff817 	ldw	r2,-32(fp)
  80ea80:	10800c17 	ldw	r2,48(r2)
  80ea84:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
  80ea88:	e0bff817 	ldw	r2,-32(fp)
  80ea8c:	10800d17 	ldw	r2,52(r2)
  80ea90:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
  80ea94:	e0fffc17 	ldw	r3,-16(fp)
  80ea98:	e0bfff17 	ldw	r2,-4(fp)
  80ea9c:	1880062e 	bgeu	r3,r2,80eab8 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80eaa0:	e0ffff17 	ldw	r3,-4(fp)
  80eaa4:	e0bffc17 	ldw	r2,-16(fp)
  80eaa8:	1885c83a 	sub	r2,r3,r2
  80eaac:	10bfffc4 	addi	r2,r2,-1
  80eab0:	e0bffe15 	stw	r2,-8(fp)
  80eab4:	00000b06 	br	80eae4 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80eab8:	e0bfff17 	ldw	r2,-4(fp)
  80eabc:	10000526 	beq	r2,zero,80ead4 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80eac0:	00c20004 	movi	r3,2048
  80eac4:	e0bffc17 	ldw	r2,-16(fp)
  80eac8:	1885c83a 	sub	r2,r3,r2
  80eacc:	e0bffe15 	stw	r2,-8(fp)
  80ead0:	00000406 	br	80eae4 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80ead4:	00c1ffc4 	movi	r3,2047
  80ead8:	e0bffc17 	ldw	r2,-16(fp)
  80eadc:	1885c83a 	sub	r2,r3,r2
  80eae0:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80eae4:	e0bffe17 	ldw	r2,-8(fp)
  80eae8:	10001e26 	beq	r2,zero,80eb64 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80eaec:	e0fff617 	ldw	r3,-40(fp)
  80eaf0:	e0bffe17 	ldw	r2,-8(fp)
  80eaf4:	1880022e 	bgeu	r3,r2,80eb00 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80eaf8:	e0bff617 	ldw	r2,-40(fp)
  80eafc:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80eb00:	e0bff817 	ldw	r2,-32(fp)
  80eb04:	10c20e04 	addi	r3,r2,2104
  80eb08:	e0bffc17 	ldw	r2,-16(fp)
  80eb0c:	1885883a 	add	r2,r3,r2
  80eb10:	e1bffe17 	ldw	r6,-8(fp)
  80eb14:	e17ff717 	ldw	r5,-36(fp)
  80eb18:	1009883a 	mov	r4,r2
  80eb1c:	0805e2c0 	call	805e2c <memcpy>
      ptr   += n;
  80eb20:	e0fff717 	ldw	r3,-36(fp)
  80eb24:	e0bffe17 	ldw	r2,-8(fp)
  80eb28:	1885883a 	add	r2,r3,r2
  80eb2c:	e0bff715 	stw	r2,-36(fp)
      count -= n;
  80eb30:	e0fff617 	ldw	r3,-40(fp)
  80eb34:	e0bffe17 	ldw	r2,-8(fp)
  80eb38:	1885c83a 	sub	r2,r3,r2
  80eb3c:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80eb40:	e0fffc17 	ldw	r3,-16(fp)
  80eb44:	e0bffe17 	ldw	r2,-8(fp)
  80eb48:	1885883a 	add	r2,r3,r2
  80eb4c:	10c1ffcc 	andi	r3,r2,2047
  80eb50:	e0bff817 	ldw	r2,-32(fp)
  80eb54:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
  80eb58:	e0bff617 	ldw	r2,-40(fp)
  80eb5c:	00bfc716 	blt	zero,r2,80ea7c <altera_avalon_jtag_uart_write+0x30>
  80eb60:	00000106 	br	80eb68 <altera_avalon_jtag_uart_write+0x11c>
        break;
  80eb64:	0001883a 	nop
  NIOS2_READ_STATUS (context);
  80eb68:	0005303a 	rdctl	r2,status
  80eb6c:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80eb70:	e0fff917 	ldw	r3,-28(fp)
  80eb74:	00bfff84 	movi	r2,-2
  80eb78:	1884703a 	and	r2,r3,r2
  80eb7c:	1001703a 	wrctl	status,r2
  return context;
  80eb80:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80eb84:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80eb88:	e0bff817 	ldw	r2,-32(fp)
  80eb8c:	10800817 	ldw	r2,32(r2)
  80eb90:	10c00094 	ori	r3,r2,2
  80eb94:	e0bff817 	ldw	r2,-32(fp)
  80eb98:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80eb9c:	e0bff817 	ldw	r2,-32(fp)
  80eba0:	10800017 	ldw	r2,0(r2)
  80eba4:	10800104 	addi	r2,r2,4
  80eba8:	1007883a 	mov	r3,r2
  80ebac:	e0bff817 	ldw	r2,-32(fp)
  80ebb0:	10800817 	ldw	r2,32(r2)
  80ebb4:	18800035 	stwio	r2,0(r3)
  80ebb8:	e0bffb17 	ldw	r2,-20(fp)
  80ebbc:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80ebc0:	e0bffa17 	ldw	r2,-24(fp)
  80ebc4:	1001703a 	wrctl	status,r2
}
  80ebc8:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80ebcc:	e0bff617 	ldw	r2,-40(fp)
  80ebd0:	0080100e 	bge	zero,r2,80ec14 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
  80ebd4:	e0bff517 	ldw	r2,-44(fp)
  80ebd8:	1090000c 	andi	r2,r2,16384
  80ebdc:	1000101e 	bne	r2,zero,80ec20 <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80ebe0:	0001883a 	nop
  80ebe4:	e0bff817 	ldw	r2,-32(fp)
  80ebe8:	10800d17 	ldw	r2,52(r2)
  80ebec:	e0ffff17 	ldw	r3,-4(fp)
  80ebf0:	1880051e 	bne	r3,r2,80ec08 <altera_avalon_jtag_uart_write+0x1bc>
  80ebf4:	e0bff817 	ldw	r2,-32(fp)
  80ebf8:	10c00917 	ldw	r3,36(r2)
  80ebfc:	e0bff817 	ldw	r2,-32(fp)
  80ec00:	10800117 	ldw	r2,4(r2)
  80ec04:	18bff736 	bltu	r3,r2,80ebe4 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80ec08:	e0bff817 	ldw	r2,-32(fp)
  80ec0c:	10800917 	ldw	r2,36(r2)
  80ec10:	1000051e 	bne	r2,zero,80ec28 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
  80ec14:	e0bff617 	ldw	r2,-40(fp)
  80ec18:	00bfcf16 	blt	zero,r2,80eb58 <altera_avalon_jtag_uart_write+0x10c>
  80ec1c:	00000306 	br	80ec2c <altera_avalon_jtag_uart_write+0x1e0>
        break;
  80ec20:	0001883a 	nop
  80ec24:	00000106 	br	80ec2c <altera_avalon_jtag_uart_write+0x1e0>
         break;
  80ec28:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80ec2c:	e0fff717 	ldw	r3,-36(fp)
  80ec30:	e0bffd17 	ldw	r2,-12(fp)
  80ec34:	18800426 	beq	r3,r2,80ec48 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
  80ec38:	e0fff717 	ldw	r3,-36(fp)
  80ec3c:	e0bffd17 	ldw	r2,-12(fp)
  80ec40:	1885c83a 	sub	r2,r3,r2
  80ec44:	00000606 	br	80ec60 <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
  80ec48:	e0bff517 	ldw	r2,-44(fp)
  80ec4c:	1090000c 	andi	r2,r2,16384
  80ec50:	10000226 	beq	r2,zero,80ec5c <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
  80ec54:	00bffd44 	movi	r2,-11
  80ec58:	00000106 	br	80ec60 <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80ec5c:	00bffec4 	movi	r2,-5
}
  80ec60:	e037883a 	mov	sp,fp
  80ec64:	dfc00117 	ldw	ra,4(sp)
  80ec68:	df000017 	ldw	fp,0(sp)
  80ec6c:	dec00204 	addi	sp,sp,8
  80ec70:	f800283a 	ret

0080ec74 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80ec74:	defffa04 	addi	sp,sp,-24
  80ec78:	dfc00515 	stw	ra,20(sp)
  80ec7c:	df000415 	stw	fp,16(sp)
  80ec80:	df000404 	addi	fp,sp,16
  80ec84:	e13ffc15 	stw	r4,-16(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80ec88:	0007883a 	mov	r3,zero
  80ec8c:	e0bffc17 	ldw	r2,-16(fp)
  80ec90:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80ec94:	e0bffc17 	ldw	r2,-16(fp)
  80ec98:	10800104 	addi	r2,r2,4
  80ec9c:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
  80eca0:	0005303a 	rdctl	r2,status
  80eca4:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80eca8:	e0fffd17 	ldw	r3,-12(fp)
  80ecac:	00bfff84 	movi	r2,-2
  80ecb0:	1884703a 	and	r2,r3,r2
  80ecb4:	1001703a 	wrctl	status,r2
  return context;
  80ecb8:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80ecbc:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
  80ecc0:	080f7d80 	call	80f7d8 <alt_tick>
  80ecc4:	e0bfff17 	ldw	r2,-4(fp)
  80ecc8:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  80eccc:	e0bffe17 	ldw	r2,-8(fp)
  80ecd0:	1001703a 	wrctl	status,r2
}
  80ecd4:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
  80ecd8:	0001883a 	nop
  80ecdc:	e037883a 	mov	sp,fp
  80ece0:	dfc00117 	ldw	ra,4(sp)
  80ece4:	df000017 	ldw	fp,0(sp)
  80ece8:	dec00204 	addi	sp,sp,8
  80ecec:	f800283a 	ret

0080ecf0 <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80ecf0:	defff804 	addi	sp,sp,-32
  80ecf4:	dfc00715 	stw	ra,28(sp)
  80ecf8:	df000615 	stw	fp,24(sp)
  80ecfc:	df000604 	addi	fp,sp,24
  80ed00:	e13ffe15 	stw	r4,-8(fp)
  80ed04:	e17ffd15 	stw	r5,-12(fp)
  80ed08:	e1bffc15 	stw	r6,-16(fp)
  80ed0c:	e1fffb15 	stw	r7,-20(fp)
  80ed10:	e0bffb17 	ldw	r2,-20(fp)
  80ed14:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  80ed18:	d0a70d17 	ldw	r2,-25548(gp)
  80ed1c:	1000031e 	bne	r2,zero,80ed2c <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
  80ed20:	e0bfff17 	ldw	r2,-4(fp)
  80ed24:	d0a70d15 	stw	r2,-25548(gp)
    return 0;
  80ed28:	00000106 	br	80ed30 <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
  80ed2c:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  80ed30:	e0bffe17 	ldw	r2,-8(fp)
  80ed34:	10800104 	addi	r2,r2,4
  80ed38:	00c001c4 	movi	r3,7
  80ed3c:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  80ed40:	d8000015 	stw	zero,0(sp)
  80ed44:	e1fffe17 	ldw	r7,-8(fp)
  80ed48:	01802074 	movhi	r6,129
  80ed4c:	31bb1d04 	addi	r6,r6,-5004
  80ed50:	e17ffc17 	ldw	r5,-16(fp)
  80ed54:	e13ffd17 	ldw	r4,-12(fp)
  80ed58:	080f0d40 	call	80f0d4 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  80ed5c:	0001883a 	nop
  80ed60:	e037883a 	mov	sp,fp
  80ed64:	dfc00117 	ldw	ra,4(sp)
  80ed68:	df000017 	ldw	fp,0(sp)
  80ed6c:	dec00204 	addi	sp,sp,8
  80ed70:	f800283a 	ret

0080ed74 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  80ed74:	defff504 	addi	sp,sp,-44
  80ed78:	df000a15 	stw	fp,40(sp)
  80ed7c:	df000a04 	addi	fp,sp,40
  80ed80:	e13ff915 	stw	r4,-28(fp)
  80ed84:	e17ff815 	stw	r5,-32(fp)
  80ed88:	e1bff715 	stw	r6,-36(fp)
  80ed8c:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  80ed90:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
  80ed94:	d0a70d17 	ldw	r2,-25548(gp)
  
  if (alt_ticks_per_second ())
  80ed98:	10003e26 	beq	r2,zero,80ee94 <alt_alarm_start+0x120>
  {
    if (alarm)
  80ed9c:	e0bff917 	ldw	r2,-28(fp)
  80eda0:	10003a26 	beq	r2,zero,80ee8c <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
  80eda4:	e0bff917 	ldw	r2,-28(fp)
  80eda8:	e0fff717 	ldw	r3,-36(fp)
  80edac:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  80edb0:	e0bff917 	ldw	r2,-28(fp)
  80edb4:	e0fff617 	ldw	r3,-40(fp)
  80edb8:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
  80edbc:	0005303a 	rdctl	r2,status
  80edc0:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80edc4:	e0fffd17 	ldw	r3,-12(fp)
  80edc8:	00bfff84 	movi	r2,-2
  80edcc:	1884703a 	and	r2,r3,r2
  80edd0:	1001703a 	wrctl	status,r2
  return context;
  80edd4:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
  80edd8:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  80eddc:	d0a70e17 	ldw	r2,-25544(gp)
      
      current_nticks = alt_nticks();
  80ede0:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  80ede4:	e0fff817 	ldw	r3,-32(fp)
  80ede8:	e0bfff17 	ldw	r2,-4(fp)
  80edec:	1885883a 	add	r2,r3,r2
  80edf0:	10c00044 	addi	r3,r2,1
  80edf4:	e0bff917 	ldw	r2,-28(fp)
  80edf8:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  80edfc:	e0bff917 	ldw	r2,-28(fp)
  80ee00:	10c00217 	ldw	r3,8(r2)
  80ee04:	e0bfff17 	ldw	r2,-4(fp)
  80ee08:	1880042e 	bgeu	r3,r2,80ee1c <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  80ee0c:	e0bff917 	ldw	r2,-28(fp)
  80ee10:	00c00044 	movi	r3,1
  80ee14:	10c00405 	stb	r3,16(r2)
  80ee18:	00000206 	br	80ee24 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  80ee1c:	e0bff917 	ldw	r2,-28(fp)
  80ee20:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  80ee24:	e0bff917 	ldw	r2,-28(fp)
  80ee28:	d0e00c04 	addi	r3,gp,-32720
  80ee2c:	e0fffb15 	stw	r3,-20(fp)
  80ee30:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  80ee34:	e0bffa17 	ldw	r2,-24(fp)
  80ee38:	e0fffb17 	ldw	r3,-20(fp)
  80ee3c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80ee40:	e0bffb17 	ldw	r2,-20(fp)
  80ee44:	10c00017 	ldw	r3,0(r2)
  80ee48:	e0bffa17 	ldw	r2,-24(fp)
  80ee4c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  80ee50:	e0bffb17 	ldw	r2,-20(fp)
  80ee54:	10800017 	ldw	r2,0(r2)
  80ee58:	e0fffa17 	ldw	r3,-24(fp)
  80ee5c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80ee60:	e0bffb17 	ldw	r2,-20(fp)
  80ee64:	e0fffa17 	ldw	r3,-24(fp)
  80ee68:	10c00015 	stw	r3,0(r2)
}
  80ee6c:	0001883a 	nop
  80ee70:	e0bffe17 	ldw	r2,-8(fp)
  80ee74:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80ee78:	e0bffc17 	ldw	r2,-16(fp)
  80ee7c:	1001703a 	wrctl	status,r2
}
  80ee80:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
  80ee84:	0005883a 	mov	r2,zero
  80ee88:	00000306 	br	80ee98 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
  80ee8c:	00bffa84 	movi	r2,-22
  80ee90:	00000106 	br	80ee98 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
  80ee94:	00bfde84 	movi	r2,-134
  }
}
  80ee98:	e037883a 	mov	sp,fp
  80ee9c:	df000017 	ldw	fp,0(sp)
  80eea0:	dec00104 	addi	sp,sp,4
  80eea4:	f800283a 	ret

0080eea8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80eea8:	defffe04 	addi	sp,sp,-8
  80eeac:	df000115 	stw	fp,4(sp)
  80eeb0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80eeb4:	e03fff15 	stw	zero,-4(fp)
  80eeb8:	00000506 	br	80eed0 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  80eebc:	e0bfff17 	ldw	r2,-4(fp)
  80eec0:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80eec4:	e0bfff17 	ldw	r2,-4(fp)
  80eec8:	10800804 	addi	r2,r2,32
  80eecc:	e0bfff15 	stw	r2,-4(fp)
  80eed0:	e0bfff17 	ldw	r2,-4(fp)
  80eed4:	10820030 	cmpltui	r2,r2,2048
  80eed8:	103ff81e 	bne	r2,zero,80eebc <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80eedc:	0001883a 	nop
  80eee0:	0001883a 	nop
  80eee4:	e037883a 	mov	sp,fp
  80eee8:	df000017 	ldw	fp,0(sp)
  80eeec:	dec00104 	addi	sp,sp,4
  80eef0:	f800283a 	ret

0080eef4 <alt_get_errno>:
{
  80eef4:	defffe04 	addi	sp,sp,-8
  80eef8:	dfc00115 	stw	ra,4(sp)
  80eefc:	df000015 	stw	fp,0(sp)
  80ef00:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80ef04:	d0a00917 	ldw	r2,-32732(gp)
  80ef08:	10000326 	beq	r2,zero,80ef18 <alt_get_errno+0x24>
  80ef0c:	d0a00917 	ldw	r2,-32732(gp)
  80ef10:	103ee83a 	callr	r2
  80ef14:	00000106 	br	80ef1c <alt_get_errno+0x28>
  80ef18:	d0a70704 	addi	r2,gp,-25572
}
  80ef1c:	e037883a 	mov	sp,fp
  80ef20:	dfc00117 	ldw	ra,4(sp)
  80ef24:	df000017 	ldw	fp,0(sp)
  80ef28:	dec00204 	addi	sp,sp,8
  80ef2c:	f800283a 	ret

0080ef30 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  80ef30:	defffa04 	addi	sp,sp,-24
  80ef34:	dfc00515 	stw	ra,20(sp)
  80ef38:	df000415 	stw	fp,16(sp)
  80ef3c:	df000404 	addi	fp,sp,16
  80ef40:	e13ffd15 	stw	r4,-12(fp)
  80ef44:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  80ef48:	e0bffd17 	ldw	r2,-12(fp)
  80ef4c:	10000326 	beq	r2,zero,80ef5c <alt_dev_llist_insert+0x2c>
  80ef50:	e0bffd17 	ldw	r2,-12(fp)
  80ef54:	10800217 	ldw	r2,8(r2)
  80ef58:	1000061e 	bne	r2,zero,80ef74 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  80ef5c:	080eef40 	call	80eef4 <alt_get_errno>
  80ef60:	1007883a 	mov	r3,r2
  80ef64:	00800584 	movi	r2,22
  80ef68:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  80ef6c:	00bffa84 	movi	r2,-22
  80ef70:	00001406 	br	80efc4 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  80ef74:	e0bffd17 	ldw	r2,-12(fp)
  80ef78:	e0fffc17 	ldw	r3,-16(fp)
  80ef7c:	e0ffff15 	stw	r3,-4(fp)
  80ef80:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
  80ef84:	e0bffe17 	ldw	r2,-8(fp)
  80ef88:	e0ffff17 	ldw	r3,-4(fp)
  80ef8c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  80ef90:	e0bfff17 	ldw	r2,-4(fp)
  80ef94:	10c00017 	ldw	r3,0(r2)
  80ef98:	e0bffe17 	ldw	r2,-8(fp)
  80ef9c:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
  80efa0:	e0bfff17 	ldw	r2,-4(fp)
  80efa4:	10800017 	ldw	r2,0(r2)
  80efa8:	e0fffe17 	ldw	r3,-8(fp)
  80efac:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  80efb0:	e0bfff17 	ldw	r2,-4(fp)
  80efb4:	e0fffe17 	ldw	r3,-8(fp)
  80efb8:	10c00015 	stw	r3,0(r2)
}
  80efbc:	0001883a 	nop

  return 0;  
  80efc0:	0005883a 	mov	r2,zero
}
  80efc4:	e037883a 	mov	sp,fp
  80efc8:	dfc00117 	ldw	ra,4(sp)
  80efcc:	df000017 	ldw	fp,0(sp)
  80efd0:	dec00204 	addi	sp,sp,8
  80efd4:	f800283a 	ret

0080efd8 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  80efd8:	defffd04 	addi	sp,sp,-12
  80efdc:	dfc00215 	stw	ra,8(sp)
  80efe0:	df000115 	stw	fp,4(sp)
  80efe4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80efe8:	00802074 	movhi	r2,129
  80efec:	10bfba04 	addi	r2,r2,-280
  80eff0:	e0bfff15 	stw	r2,-4(fp)
  80eff4:	00000606 	br	80f010 <_do_ctors+0x38>
        (*ctor) (); 
  80eff8:	e0bfff17 	ldw	r2,-4(fp)
  80effc:	10800017 	ldw	r2,0(r2)
  80f000:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  80f004:	e0bfff17 	ldw	r2,-4(fp)
  80f008:	10bfff04 	addi	r2,r2,-4
  80f00c:	e0bfff15 	stw	r2,-4(fp)
  80f010:	e0ffff17 	ldw	r3,-4(fp)
  80f014:	00802074 	movhi	r2,129
  80f018:	10bfbb04 	addi	r2,r2,-276
  80f01c:	18bff62e 	bgeu	r3,r2,80eff8 <_do_ctors+0x20>
}
  80f020:	0001883a 	nop
  80f024:	0001883a 	nop
  80f028:	e037883a 	mov	sp,fp
  80f02c:	dfc00117 	ldw	ra,4(sp)
  80f030:	df000017 	ldw	fp,0(sp)
  80f034:	dec00204 	addi	sp,sp,8
  80f038:	f800283a 	ret

0080f03c <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  80f03c:	defffd04 	addi	sp,sp,-12
  80f040:	dfc00215 	stw	ra,8(sp)
  80f044:	df000115 	stw	fp,4(sp)
  80f048:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80f04c:	00802074 	movhi	r2,129
  80f050:	10bfba04 	addi	r2,r2,-280
  80f054:	e0bfff15 	stw	r2,-4(fp)
  80f058:	00000606 	br	80f074 <_do_dtors+0x38>
        (*dtor) (); 
  80f05c:	e0bfff17 	ldw	r2,-4(fp)
  80f060:	10800017 	ldw	r2,0(r2)
  80f064:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  80f068:	e0bfff17 	ldw	r2,-4(fp)
  80f06c:	10bfff04 	addi	r2,r2,-4
  80f070:	e0bfff15 	stw	r2,-4(fp)
  80f074:	e0ffff17 	ldw	r3,-4(fp)
  80f078:	00802074 	movhi	r2,129
  80f07c:	10bfbb04 	addi	r2,r2,-276
  80f080:	18bff62e 	bgeu	r3,r2,80f05c <_do_dtors+0x20>
}
  80f084:	0001883a 	nop
  80f088:	0001883a 	nop
  80f08c:	e037883a 	mov	sp,fp
  80f090:	dfc00117 	ldw	ra,4(sp)
  80f094:	df000017 	ldw	fp,0(sp)
  80f098:	dec00204 	addi	sp,sp,8
  80f09c:	f800283a 	ret

0080f0a0 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80f0a0:	defffe04 	addi	sp,sp,-8
  80f0a4:	dfc00115 	stw	ra,4(sp)
  80f0a8:	df000015 	stw	fp,0(sp)
  80f0ac:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80f0b0:	01420004 	movi	r5,2048
  80f0b4:	0009883a 	mov	r4,zero
  80f0b8:	080fb540 	call	80fb54 <alt_icache_flush>
#endif
}
  80f0bc:	0001883a 	nop
  80f0c0:	e037883a 	mov	sp,fp
  80f0c4:	dfc00117 	ldw	ra,4(sp)
  80f0c8:	df000017 	ldw	fp,0(sp)
  80f0cc:	dec00204 	addi	sp,sp,8
  80f0d0:	f800283a 	ret

0080f0d4 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80f0d4:	defff904 	addi	sp,sp,-28
  80f0d8:	dfc00615 	stw	ra,24(sp)
  80f0dc:	df000515 	stw	fp,20(sp)
  80f0e0:	df000504 	addi	fp,sp,20
  80f0e4:	e13fff15 	stw	r4,-4(fp)
  80f0e8:	e17ffe15 	stw	r5,-8(fp)
  80f0ec:	e1bffd15 	stw	r6,-12(fp)
  80f0f0:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80f0f4:	e0800217 	ldw	r2,8(fp)
  80f0f8:	d8800015 	stw	r2,0(sp)
  80f0fc:	e1fffc17 	ldw	r7,-16(fp)
  80f100:	e1bffd17 	ldw	r6,-12(fp)
  80f104:	e17ffe17 	ldw	r5,-8(fp)
  80f108:	e13fff17 	ldw	r4,-4(fp)
  80f10c:	080f2840 	call	80f284 <alt_iic_isr_register>
}  
  80f110:	e037883a 	mov	sp,fp
  80f114:	dfc00117 	ldw	ra,4(sp)
  80f118:	df000017 	ldw	fp,0(sp)
  80f11c:	dec00204 	addi	sp,sp,8
  80f120:	f800283a 	ret

0080f124 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80f124:	defff904 	addi	sp,sp,-28
  80f128:	df000615 	stw	fp,24(sp)
  80f12c:	df000604 	addi	fp,sp,24
  80f130:	e13ffb15 	stw	r4,-20(fp)
  80f134:	e17ffa15 	stw	r5,-24(fp)
  80f138:	e0bffa17 	ldw	r2,-24(fp)
  80f13c:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  80f140:	0005303a 	rdctl	r2,status
  80f144:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f148:	e0fffe17 	ldw	r3,-8(fp)
  80f14c:	00bfff84 	movi	r2,-2
  80f150:	1884703a 	and	r2,r3,r2
  80f154:	1001703a 	wrctl	status,r2
  return context;
  80f158:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80f15c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
  80f160:	00c00044 	movi	r3,1
  80f164:	e0bfff17 	ldw	r2,-4(fp)
  80f168:	1884983a 	sll	r2,r3,r2
  80f16c:	1007883a 	mov	r3,r2
  80f170:	d0a70c17 	ldw	r2,-25552(gp)
  80f174:	1884b03a 	or	r2,r3,r2
  80f178:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80f17c:	d0a70c17 	ldw	r2,-25552(gp)
  80f180:	100170fa 	wrctl	ienable,r2
  80f184:	e0bffd17 	ldw	r2,-12(fp)
  80f188:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80f18c:	e0bffc17 	ldw	r2,-16(fp)
  80f190:	1001703a 	wrctl	status,r2
}
  80f194:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
  80f198:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
  80f19c:	e037883a 	mov	sp,fp
  80f1a0:	df000017 	ldw	fp,0(sp)
  80f1a4:	dec00104 	addi	sp,sp,4
  80f1a8:	f800283a 	ret

0080f1ac <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80f1ac:	defff904 	addi	sp,sp,-28
  80f1b0:	df000615 	stw	fp,24(sp)
  80f1b4:	df000604 	addi	fp,sp,24
  80f1b8:	e13ffb15 	stw	r4,-20(fp)
  80f1bc:	e17ffa15 	stw	r5,-24(fp)
  80f1c0:	e0bffa17 	ldw	r2,-24(fp)
  80f1c4:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  80f1c8:	0005303a 	rdctl	r2,status
  80f1cc:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f1d0:	e0fffe17 	ldw	r3,-8(fp)
  80f1d4:	00bfff84 	movi	r2,-2
  80f1d8:	1884703a 	and	r2,r3,r2
  80f1dc:	1001703a 	wrctl	status,r2
  return context;
  80f1e0:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
  80f1e4:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
  80f1e8:	00c00044 	movi	r3,1
  80f1ec:	e0bfff17 	ldw	r2,-4(fp)
  80f1f0:	1884983a 	sll	r2,r3,r2
  80f1f4:	0084303a 	nor	r2,zero,r2
  80f1f8:	1007883a 	mov	r3,r2
  80f1fc:	d0a70c17 	ldw	r2,-25552(gp)
  80f200:	1884703a 	and	r2,r3,r2
  80f204:	d0a70c15 	stw	r2,-25552(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80f208:	d0a70c17 	ldw	r2,-25552(gp)
  80f20c:	100170fa 	wrctl	ienable,r2
  80f210:	e0bffd17 	ldw	r2,-12(fp)
  80f214:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80f218:	e0bffc17 	ldw	r2,-16(fp)
  80f21c:	1001703a 	wrctl	status,r2
}
  80f220:	0001883a 	nop
  return 0;
  80f224:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
  80f228:	e037883a 	mov	sp,fp
  80f22c:	df000017 	ldw	fp,0(sp)
  80f230:	dec00104 	addi	sp,sp,4
  80f234:	f800283a 	ret

0080f238 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80f238:	defffc04 	addi	sp,sp,-16
  80f23c:	df000315 	stw	fp,12(sp)
  80f240:	df000304 	addi	fp,sp,12
  80f244:	e13ffe15 	stw	r4,-8(fp)
  80f248:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80f24c:	000530fa 	rdctl	r2,ienable
  80f250:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80f254:	00c00044 	movi	r3,1
  80f258:	e0bffd17 	ldw	r2,-12(fp)
  80f25c:	1884983a 	sll	r2,r3,r2
  80f260:	1007883a 	mov	r3,r2
  80f264:	e0bfff17 	ldw	r2,-4(fp)
  80f268:	1884703a 	and	r2,r3,r2
  80f26c:	1004c03a 	cmpne	r2,r2,zero
  80f270:	10803fcc 	andi	r2,r2,255
}
  80f274:	e037883a 	mov	sp,fp
  80f278:	df000017 	ldw	fp,0(sp)
  80f27c:	dec00104 	addi	sp,sp,4
  80f280:	f800283a 	ret

0080f284 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80f284:	defff504 	addi	sp,sp,-44
  80f288:	dfc00a15 	stw	ra,40(sp)
  80f28c:	df000915 	stw	fp,36(sp)
  80f290:	df000904 	addi	fp,sp,36
  80f294:	e13ffa15 	stw	r4,-24(fp)
  80f298:	e17ff915 	stw	r5,-28(fp)
  80f29c:	e1bff815 	stw	r6,-32(fp)
  80f2a0:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
  80f2a4:	00bffa84 	movi	r2,-22
  80f2a8:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80f2ac:	e0bff917 	ldw	r2,-28(fp)
  80f2b0:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80f2b4:	e0bffe17 	ldw	r2,-8(fp)
  80f2b8:	10800808 	cmpgei	r2,r2,32
  80f2bc:	1000251e 	bne	r2,zero,80f354 <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
  80f2c0:	0005303a 	rdctl	r2,status
  80f2c4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f2c8:	e0fffc17 	ldw	r3,-16(fp)
  80f2cc:	00bfff84 	movi	r2,-2
  80f2d0:	1884703a 	and	r2,r3,r2
  80f2d4:	1001703a 	wrctl	status,r2
  return context;
  80f2d8:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80f2dc:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
  80f2e0:	e0bffe17 	ldw	r2,-8(fp)
  80f2e4:	100890fa 	slli	r4,r2,3
  80f2e8:	e0fff817 	ldw	r3,-32(fp)
  80f2ec:	00802074 	movhi	r2,129
  80f2f0:	2085883a 	add	r2,r4,r2
  80f2f4:	10cf5d15 	stw	r3,15732(r2)
    alt_irq[id].context = isr_context;
  80f2f8:	e0bffe17 	ldw	r2,-8(fp)
  80f2fc:	100890fa 	slli	r4,r2,3
  80f300:	e0fff717 	ldw	r3,-36(fp)
  80f304:	00802074 	movhi	r2,129
  80f308:	2085883a 	add	r2,r4,r2
  80f30c:	10cf5e15 	stw	r3,15736(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80f310:	e0bff817 	ldw	r2,-32(fp)
  80f314:	10000526 	beq	r2,zero,80f32c <alt_iic_isr_register+0xa8>
  80f318:	e0bffe17 	ldw	r2,-8(fp)
  80f31c:	100b883a 	mov	r5,r2
  80f320:	e13ffa17 	ldw	r4,-24(fp)
  80f324:	080f1240 	call	80f124 <alt_ic_irq_enable>
  80f328:	00000406 	br	80f33c <alt_iic_isr_register+0xb8>
  80f32c:	e0bffe17 	ldw	r2,-8(fp)
  80f330:	100b883a 	mov	r5,r2
  80f334:	e13ffa17 	ldw	r4,-24(fp)
  80f338:	080f1ac0 	call	80f1ac <alt_ic_irq_disable>
  80f33c:	e0bfff15 	stw	r2,-4(fp)
  80f340:	e0bffd17 	ldw	r2,-12(fp)
  80f344:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  80f348:	e0bffb17 	ldw	r2,-20(fp)
  80f34c:	1001703a 	wrctl	status,r2
}
  80f350:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
  80f354:	e0bfff17 	ldw	r2,-4(fp)
}
  80f358:	e037883a 	mov	sp,fp
  80f35c:	dfc00117 	ldw	ra,4(sp)
  80f360:	df000017 	ldw	fp,0(sp)
  80f364:	dec00204 	addi	sp,sp,8
  80f368:	f800283a 	ret

0080f36c <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  80f36c:	defff904 	addi	sp,sp,-28
  80f370:	dfc00615 	stw	ra,24(sp)
  80f374:	df000515 	stw	fp,20(sp)
  80f378:	df000504 	addi	fp,sp,20
  80f37c:	e13ffe15 	stw	r4,-8(fp)
  80f380:	e17ffd15 	stw	r5,-12(fp)
  80f384:	e1bffc15 	stw	r6,-16(fp)
  80f388:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
  80f38c:	e1bffb17 	ldw	r6,-20(fp)
  80f390:	e17ffc17 	ldw	r5,-16(fp)
  80f394:	e13ffd17 	ldw	r4,-12(fp)
  80f398:	080f5d40 	call	80f5d4 <open>
  80f39c:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
  80f3a0:	e0bfff17 	ldw	r2,-4(fp)
  80f3a4:	10002016 	blt	r2,zero,80f428 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
  80f3a8:	e0ffff17 	ldw	r3,-4(fp)
  80f3ac:	1805883a 	mov	r2,r3
  80f3b0:	1085883a 	add	r2,r2,r2
  80f3b4:	10c5883a 	add	r2,r2,r3
  80f3b8:	100490ba 	slli	r2,r2,2
  80f3bc:	00c02074 	movhi	r3,129
  80f3c0:	10c7883a 	add	r3,r2,r3
  80f3c4:	18c3cb17 	ldw	r3,3884(r3)
  80f3c8:	e0bffe17 	ldw	r2,-8(fp)
  80f3cc:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  80f3d0:	e0ffff17 	ldw	r3,-4(fp)
  80f3d4:	1805883a 	mov	r2,r3
  80f3d8:	1085883a 	add	r2,r2,r2
  80f3dc:	10c5883a 	add	r2,r2,r3
  80f3e0:	100490ba 	slli	r2,r2,2
  80f3e4:	00c02074 	movhi	r3,129
  80f3e8:	10c7883a 	add	r3,r2,r3
  80f3ec:	18c3cc17 	ldw	r3,3888(r3)
  80f3f0:	e0bffe17 	ldw	r2,-8(fp)
  80f3f4:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  80f3f8:	e0ffff17 	ldw	r3,-4(fp)
  80f3fc:	1805883a 	mov	r2,r3
  80f400:	1085883a 	add	r2,r2,r2
  80f404:	10c5883a 	add	r2,r2,r3
  80f408:	100490ba 	slli	r2,r2,2
  80f40c:	00c02074 	movhi	r3,129
  80f410:	10c7883a 	add	r3,r2,r3
  80f414:	18c3cd17 	ldw	r3,3892(r3)
  80f418:	e0bffe17 	ldw	r2,-8(fp)
  80f41c:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  80f420:	e13fff17 	ldw	r4,-4(fp)
  80f424:	080dec00 	call	80dec0 <alt_release_fd>
  }
} 
  80f428:	0001883a 	nop
  80f42c:	e037883a 	mov	sp,fp
  80f430:	dfc00117 	ldw	ra,4(sp)
  80f434:	df000017 	ldw	fp,0(sp)
  80f438:	dec00204 	addi	sp,sp,8
  80f43c:	f800283a 	ret

0080f440 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  80f440:	defffb04 	addi	sp,sp,-20
  80f444:	dfc00415 	stw	ra,16(sp)
  80f448:	df000315 	stw	fp,12(sp)
  80f44c:	df000304 	addi	fp,sp,12
  80f450:	e13fff15 	stw	r4,-4(fp)
  80f454:	e17ffe15 	stw	r5,-8(fp)
  80f458:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  80f45c:	01c07fc4 	movi	r7,511
  80f460:	01800044 	movi	r6,1
  80f464:	e17fff17 	ldw	r5,-4(fp)
  80f468:	01002074 	movhi	r4,129
  80f46c:	2103ce04 	addi	r4,r4,3896
  80f470:	080f36c0 	call	80f36c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  80f474:	01c07fc4 	movi	r7,511
  80f478:	000d883a 	mov	r6,zero
  80f47c:	e17ffe17 	ldw	r5,-8(fp)
  80f480:	01002074 	movhi	r4,129
  80f484:	2103cb04 	addi	r4,r4,3884
  80f488:	080f36c0 	call	80f36c <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  80f48c:	01c07fc4 	movi	r7,511
  80f490:	01800044 	movi	r6,1
  80f494:	e17ffd17 	ldw	r5,-12(fp)
  80f498:	01002074 	movhi	r4,129
  80f49c:	2103d104 	addi	r4,r4,3908
  80f4a0:	080f36c0 	call	80f36c <alt_open_fd>
}  
  80f4a4:	0001883a 	nop
  80f4a8:	e037883a 	mov	sp,fp
  80f4ac:	dfc00117 	ldw	ra,4(sp)
  80f4b0:	df000017 	ldw	fp,0(sp)
  80f4b4:	dec00204 	addi	sp,sp,8
  80f4b8:	f800283a 	ret

0080f4bc <alt_get_errno>:
{
  80f4bc:	defffe04 	addi	sp,sp,-8
  80f4c0:	dfc00115 	stw	ra,4(sp)
  80f4c4:	df000015 	stw	fp,0(sp)
  80f4c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80f4cc:	d0a00917 	ldw	r2,-32732(gp)
  80f4d0:	10000326 	beq	r2,zero,80f4e0 <alt_get_errno+0x24>
  80f4d4:	d0a00917 	ldw	r2,-32732(gp)
  80f4d8:	103ee83a 	callr	r2
  80f4dc:	00000106 	br	80f4e4 <alt_get_errno+0x28>
  80f4e0:	d0a70704 	addi	r2,gp,-25572
}
  80f4e4:	e037883a 	mov	sp,fp
  80f4e8:	dfc00117 	ldw	ra,4(sp)
  80f4ec:	df000017 	ldw	fp,0(sp)
  80f4f0:	dec00204 	addi	sp,sp,8
  80f4f4:	f800283a 	ret

0080f4f8 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  80f4f8:	defffd04 	addi	sp,sp,-12
  80f4fc:	df000215 	stw	fp,8(sp)
  80f500:	df000204 	addi	fp,sp,8
  80f504:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  80f508:	e0bffe17 	ldw	r2,-8(fp)
  80f50c:	10800217 	ldw	r2,8(r2)
  80f510:	10d00034 	orhi	r3,r2,16384
  80f514:	e0bffe17 	ldw	r2,-8(fp)
  80f518:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  80f51c:	e03fff15 	stw	zero,-4(fp)
  80f520:	00002306 	br	80f5b0 <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  80f524:	e0ffff17 	ldw	r3,-4(fp)
  80f528:	1805883a 	mov	r2,r3
  80f52c:	1085883a 	add	r2,r2,r2
  80f530:	10c5883a 	add	r2,r2,r3
  80f534:	100490ba 	slli	r2,r2,2
  80f538:	00c02074 	movhi	r3,129
  80f53c:	10c7883a 	add	r3,r2,r3
  80f540:	18c3cb17 	ldw	r3,3884(r3)
  80f544:	e0bffe17 	ldw	r2,-8(fp)
  80f548:	10800017 	ldw	r2,0(r2)
  80f54c:	1880151e 	bne	r3,r2,80f5a4 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80f550:	e0ffff17 	ldw	r3,-4(fp)
  80f554:	1805883a 	mov	r2,r3
  80f558:	1085883a 	add	r2,r2,r2
  80f55c:	10c5883a 	add	r2,r2,r3
  80f560:	100490ba 	slli	r2,r2,2
  80f564:	00c02074 	movhi	r3,129
  80f568:	10c7883a 	add	r3,r2,r3
  80f56c:	1883cd17 	ldw	r2,3892(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
  80f570:	10000c0e 	bge	r2,zero,80f5a4 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
  80f574:	e0ffff17 	ldw	r3,-4(fp)
  80f578:	1805883a 	mov	r2,r3
  80f57c:	1085883a 	add	r2,r2,r2
  80f580:	10c5883a 	add	r2,r2,r3
  80f584:	100490ba 	slli	r2,r2,2
  80f588:	00c02074 	movhi	r3,129
  80f58c:	18c3cb04 	addi	r3,r3,3884
  80f590:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  80f594:	e0fffe17 	ldw	r3,-8(fp)
  80f598:	18800226 	beq	r3,r2,80f5a4 <alt_file_locked+0xac>
    {
      return -EACCES;
  80f59c:	00bffcc4 	movi	r2,-13
  80f5a0:	00000806 	br	80f5c4 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
  80f5a4:	e0bfff17 	ldw	r2,-4(fp)
  80f5a8:	10800044 	addi	r2,r2,1
  80f5ac:	e0bfff15 	stw	r2,-4(fp)
  80f5b0:	d0a00817 	ldw	r2,-32736(gp)
  80f5b4:	1007883a 	mov	r3,r2
  80f5b8:	e0bfff17 	ldw	r2,-4(fp)
  80f5bc:	18bfd92e 	bgeu	r3,r2,80f524 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  80f5c0:	0005883a 	mov	r2,zero
}
  80f5c4:	e037883a 	mov	sp,fp
  80f5c8:	df000017 	ldw	fp,0(sp)
  80f5cc:	dec00104 	addi	sp,sp,4
  80f5d0:	f800283a 	ret

0080f5d4 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  80f5d4:	defff604 	addi	sp,sp,-40
  80f5d8:	dfc00915 	stw	ra,36(sp)
  80f5dc:	df000815 	stw	fp,32(sp)
  80f5e0:	df000804 	addi	fp,sp,32
  80f5e4:	e13ffa15 	stw	r4,-24(fp)
  80f5e8:	e17ff915 	stw	r5,-28(fp)
  80f5ec:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  80f5f0:	00bfffc4 	movi	r2,-1
  80f5f4:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
  80f5f8:	00bffb44 	movi	r2,-19
  80f5fc:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
  80f600:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  80f604:	d1600604 	addi	r5,gp,-32744
  80f608:	e13ffa17 	ldw	r4,-24(fp)
  80f60c:	080f9040 	call	80f904 <alt_find_dev>
  80f610:	e0bfff15 	stw	r2,-4(fp)
  80f614:	e0bfff17 	ldw	r2,-4(fp)
  80f618:	1000051e 	bne	r2,zero,80f630 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  80f61c:	e13ffa17 	ldw	r4,-24(fp)
  80f620:	080f9940 	call	80f994 <alt_find_file>
  80f624:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
  80f628:	00800044 	movi	r2,1
  80f62c:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  80f630:	e0bfff17 	ldw	r2,-4(fp)
  80f634:	10002c26 	beq	r2,zero,80f6e8 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
  80f638:	e13fff17 	ldw	r4,-4(fp)
  80f63c:	080fa9c0 	call	80fa9c <alt_get_fd>
  80f640:	e0bffe15 	stw	r2,-8(fp)
  80f644:	e0bffe17 	ldw	r2,-8(fp)
  80f648:	1000030e 	bge	r2,zero,80f658 <open+0x84>
    {
      status = index;
  80f64c:	e0bffe17 	ldw	r2,-8(fp)
  80f650:	e0bffd15 	stw	r2,-12(fp)
  80f654:	00002606 	br	80f6f0 <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
  80f658:	e0fffe17 	ldw	r3,-8(fp)
  80f65c:	1805883a 	mov	r2,r3
  80f660:	1085883a 	add	r2,r2,r2
  80f664:	10c5883a 	add	r2,r2,r3
  80f668:	100490ba 	slli	r2,r2,2
  80f66c:	00c02074 	movhi	r3,129
  80f670:	18c3cb04 	addi	r3,r3,3884
  80f674:	10c5883a 	add	r2,r2,r3
  80f678:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  80f67c:	e0fff917 	ldw	r3,-28(fp)
  80f680:	00900034 	movhi	r2,16384
  80f684:	10bfffc4 	addi	r2,r2,-1
  80f688:	1886703a 	and	r3,r3,r2
  80f68c:	e0bffb17 	ldw	r2,-20(fp)
  80f690:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  80f694:	e0bffc17 	ldw	r2,-16(fp)
  80f698:	1000051e 	bne	r2,zero,80f6b0 <open+0xdc>
  80f69c:	e13ffb17 	ldw	r4,-20(fp)
  80f6a0:	080f4f80 	call	80f4f8 <alt_file_locked>
  80f6a4:	e0bffd15 	stw	r2,-12(fp)
  80f6a8:	e0bffd17 	ldw	r2,-12(fp)
  80f6ac:	10001016 	blt	r2,zero,80f6f0 <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  80f6b0:	e0bfff17 	ldw	r2,-4(fp)
  80f6b4:	10800317 	ldw	r2,12(r2)
  80f6b8:	10000826 	beq	r2,zero,80f6dc <open+0x108>
  80f6bc:	e0bfff17 	ldw	r2,-4(fp)
  80f6c0:	10800317 	ldw	r2,12(r2)
  80f6c4:	e1fff817 	ldw	r7,-32(fp)
  80f6c8:	e1bff917 	ldw	r6,-28(fp)
  80f6cc:	e17ffa17 	ldw	r5,-24(fp)
  80f6d0:	e13ffb17 	ldw	r4,-20(fp)
  80f6d4:	103ee83a 	callr	r2
  80f6d8:	00000106 	br	80f6e0 <open+0x10c>
  80f6dc:	0005883a 	mov	r2,zero
  80f6e0:	e0bffd15 	stw	r2,-12(fp)
  80f6e4:	00000206 	br	80f6f0 <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
  80f6e8:	00bffb44 	movi	r2,-19
  80f6ec:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  80f6f0:	e0bffd17 	ldw	r2,-12(fp)
  80f6f4:	1000090e 	bge	r2,zero,80f71c <open+0x148>
  {
    alt_release_fd (index);  
  80f6f8:	e13ffe17 	ldw	r4,-8(fp)
  80f6fc:	080dec00 	call	80dec0 <alt_release_fd>
    ALT_ERRNO = -status;
  80f700:	080f4bc0 	call	80f4bc <alt_get_errno>
  80f704:	1007883a 	mov	r3,r2
  80f708:	e0bffd17 	ldw	r2,-12(fp)
  80f70c:	0085c83a 	sub	r2,zero,r2
  80f710:	18800015 	stw	r2,0(r3)
    return -1;
  80f714:	00bfffc4 	movi	r2,-1
  80f718:	00000106 	br	80f720 <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
  80f71c:	e0bffe17 	ldw	r2,-8(fp)
}
  80f720:	e037883a 	mov	sp,fp
  80f724:	dfc00117 	ldw	ra,4(sp)
  80f728:	df000017 	ldw	fp,0(sp)
  80f72c:	dec00204 	addi	sp,sp,8
  80f730:	f800283a 	ret

0080f734 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  80f734:	defffa04 	addi	sp,sp,-24
  80f738:	df000515 	stw	fp,20(sp)
  80f73c:	df000504 	addi	fp,sp,20
  80f740:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
  80f744:	0005303a 	rdctl	r2,status
  80f748:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f74c:	e0fffc17 	ldw	r3,-16(fp)
  80f750:	00bfff84 	movi	r2,-2
  80f754:	1884703a 	and	r2,r3,r2
  80f758:	1001703a 	wrctl	status,r2
  return context;
  80f75c:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  80f760:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
  80f764:	e0bffb17 	ldw	r2,-20(fp)
  80f768:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  80f76c:	e0bffd17 	ldw	r2,-12(fp)
  80f770:	10800017 	ldw	r2,0(r2)
  80f774:	e0fffd17 	ldw	r3,-12(fp)
  80f778:	18c00117 	ldw	r3,4(r3)
  80f77c:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  80f780:	e0bffd17 	ldw	r2,-12(fp)
  80f784:	10800117 	ldw	r2,4(r2)
  80f788:	e0fffd17 	ldw	r3,-12(fp)
  80f78c:	18c00017 	ldw	r3,0(r3)
  80f790:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  80f794:	e0bffd17 	ldw	r2,-12(fp)
  80f798:	e0fffd17 	ldw	r3,-12(fp)
  80f79c:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  80f7a0:	e0bffd17 	ldw	r2,-12(fp)
  80f7a4:	e0fffd17 	ldw	r3,-12(fp)
  80f7a8:	10c00015 	stw	r3,0(r2)
} 
  80f7ac:	0001883a 	nop
  80f7b0:	e0bfff17 	ldw	r2,-4(fp)
  80f7b4:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  80f7b8:	e0bffe17 	ldw	r2,-8(fp)
  80f7bc:	1001703a 	wrctl	status,r2
}
  80f7c0:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
  80f7c4:	0001883a 	nop
  80f7c8:	e037883a 	mov	sp,fp
  80f7cc:	df000017 	ldw	fp,0(sp)
  80f7d0:	dec00104 	addi	sp,sp,4
  80f7d4:	f800283a 	ret

0080f7d8 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  80f7d8:	defffb04 	addi	sp,sp,-20
  80f7dc:	dfc00415 	stw	ra,16(sp)
  80f7e0:	df000315 	stw	fp,12(sp)
  80f7e4:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  80f7e8:	d0a00c17 	ldw	r2,-32720(gp)
  80f7ec:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  80f7f0:	d0a70e17 	ldw	r2,-25544(gp)
  80f7f4:	10800044 	addi	r2,r2,1
  80f7f8:	d0a70e15 	stw	r2,-25544(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f7fc:	00002e06 	br	80f8b8 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  80f800:	e0bfff17 	ldw	r2,-4(fp)
  80f804:	10800017 	ldw	r2,0(r2)
  80f808:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  80f80c:	e0bfff17 	ldw	r2,-4(fp)
  80f810:	10800403 	ldbu	r2,16(r2)
  80f814:	10803fcc 	andi	r2,r2,255
  80f818:	10000426 	beq	r2,zero,80f82c <alt_tick+0x54>
  80f81c:	d0a70e17 	ldw	r2,-25544(gp)
  80f820:	1000021e 	bne	r2,zero,80f82c <alt_tick+0x54>
    {
      alarm->rollover = 0;
  80f824:	e0bfff17 	ldw	r2,-4(fp)
  80f828:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  80f82c:	e0bfff17 	ldw	r2,-4(fp)
  80f830:	10800217 	ldw	r2,8(r2)
  80f834:	d0e70e17 	ldw	r3,-25544(gp)
  80f838:	18801d36 	bltu	r3,r2,80f8b0 <alt_tick+0xd8>
  80f83c:	e0bfff17 	ldw	r2,-4(fp)
  80f840:	10800403 	ldbu	r2,16(r2)
  80f844:	10803fcc 	andi	r2,r2,255
  80f848:	1000191e 	bne	r2,zero,80f8b0 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  80f84c:	e0bfff17 	ldw	r2,-4(fp)
  80f850:	10800317 	ldw	r2,12(r2)
  80f854:	e0ffff17 	ldw	r3,-4(fp)
  80f858:	18c00517 	ldw	r3,20(r3)
  80f85c:	1809883a 	mov	r4,r3
  80f860:	103ee83a 	callr	r2
  80f864:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  80f868:	e0bffd17 	ldw	r2,-12(fp)
  80f86c:	1000031e 	bne	r2,zero,80f87c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  80f870:	e13fff17 	ldw	r4,-4(fp)
  80f874:	080f7340 	call	80f734 <alt_alarm_stop>
  80f878:	00000d06 	br	80f8b0 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  80f87c:	e0bfff17 	ldw	r2,-4(fp)
  80f880:	10c00217 	ldw	r3,8(r2)
  80f884:	e0bffd17 	ldw	r2,-12(fp)
  80f888:	1887883a 	add	r3,r3,r2
  80f88c:	e0bfff17 	ldw	r2,-4(fp)
  80f890:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  80f894:	e0bfff17 	ldw	r2,-4(fp)
  80f898:	10c00217 	ldw	r3,8(r2)
  80f89c:	d0a70e17 	ldw	r2,-25544(gp)
  80f8a0:	1880032e 	bgeu	r3,r2,80f8b0 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  80f8a4:	e0bfff17 	ldw	r2,-4(fp)
  80f8a8:	00c00044 	movi	r3,1
  80f8ac:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  80f8b0:	e0bffe17 	ldw	r2,-8(fp)
  80f8b4:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
  80f8b8:	e0ffff17 	ldw	r3,-4(fp)
  80f8bc:	d0a00c04 	addi	r2,gp,-32720
  80f8c0:	18bfcf1e 	bne	r3,r2,80f800 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  80f8c4:	0001883a 	nop
}
  80f8c8:	0001883a 	nop
  80f8cc:	e037883a 	mov	sp,fp
  80f8d0:	dfc00117 	ldw	ra,4(sp)
  80f8d4:	df000017 	ldw	fp,0(sp)
  80f8d8:	dec00204 	addi	sp,sp,8
  80f8dc:	f800283a 	ret

0080f8e0 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  80f8e0:	deffff04 	addi	sp,sp,-4
  80f8e4:	df000015 	stw	fp,0(sp)
  80f8e8:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  80f8ec:	000170fa 	wrctl	ienable,zero
}
  80f8f0:	0001883a 	nop
  80f8f4:	e037883a 	mov	sp,fp
  80f8f8:	df000017 	ldw	fp,0(sp)
  80f8fc:	dec00104 	addi	sp,sp,4
  80f900:	f800283a 	ret

0080f904 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  80f904:	defffa04 	addi	sp,sp,-24
  80f908:	dfc00515 	stw	ra,20(sp)
  80f90c:	df000415 	stw	fp,16(sp)
  80f910:	df000404 	addi	fp,sp,16
  80f914:	e13ffd15 	stw	r4,-12(fp)
  80f918:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
  80f91c:	e0bffc17 	ldw	r2,-16(fp)
  80f920:	10800017 	ldw	r2,0(r2)
  80f924:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  80f928:	e13ffd17 	ldw	r4,-12(fp)
  80f92c:	08004f80 	call	8004f8 <strlen>
  80f930:	10800044 	addi	r2,r2,1
  80f934:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  80f938:	00000d06 	br	80f970 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  80f93c:	e0bfff17 	ldw	r2,-4(fp)
  80f940:	10800217 	ldw	r2,8(r2)
  80f944:	e0fffe17 	ldw	r3,-8(fp)
  80f948:	180d883a 	mov	r6,r3
  80f94c:	e17ffd17 	ldw	r5,-12(fp)
  80f950:	1009883a 	mov	r4,r2
  80f954:	080fcc40 	call	80fcc4 <memcmp>
  80f958:	1000021e 	bne	r2,zero,80f964 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  80f95c:	e0bfff17 	ldw	r2,-4(fp)
  80f960:	00000706 	br	80f980 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  80f964:	e0bfff17 	ldw	r2,-4(fp)
  80f968:	10800017 	ldw	r2,0(r2)
  80f96c:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
  80f970:	e0ffff17 	ldw	r3,-4(fp)
  80f974:	e0bffc17 	ldw	r2,-16(fp)
  80f978:	18bff01e 	bne	r3,r2,80f93c <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
  80f97c:	0005883a 	mov	r2,zero
}
  80f980:	e037883a 	mov	sp,fp
  80f984:	dfc00117 	ldw	ra,4(sp)
  80f988:	df000017 	ldw	fp,0(sp)
  80f98c:	dec00204 	addi	sp,sp,8
  80f990:	f800283a 	ret

0080f994 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  80f994:	defffb04 	addi	sp,sp,-20
  80f998:	dfc00415 	stw	ra,16(sp)
  80f99c:	df000315 	stw	fp,12(sp)
  80f9a0:	df000304 	addi	fp,sp,12
  80f9a4:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  80f9a8:	d0a00417 	ldw	r2,-32752(gp)
  80f9ac:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  80f9b0:	00003106 	br	80fa78 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  80f9b4:	e0bfff17 	ldw	r2,-4(fp)
  80f9b8:	10800217 	ldw	r2,8(r2)
  80f9bc:	1009883a 	mov	r4,r2
  80f9c0:	08004f80 	call	8004f8 <strlen>
  80f9c4:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  80f9c8:	e0bfff17 	ldw	r2,-4(fp)
  80f9cc:	10c00217 	ldw	r3,8(r2)
  80f9d0:	e0bffe17 	ldw	r2,-8(fp)
  80f9d4:	10bfffc4 	addi	r2,r2,-1
  80f9d8:	1885883a 	add	r2,r3,r2
  80f9dc:	10800003 	ldbu	r2,0(r2)
  80f9e0:	10803fcc 	andi	r2,r2,255
  80f9e4:	1080201c 	xori	r2,r2,128
  80f9e8:	10bfe004 	addi	r2,r2,-128
  80f9ec:	10800bd8 	cmpnei	r2,r2,47
  80f9f0:	1000031e 	bne	r2,zero,80fa00 <alt_find_file+0x6c>
    {
      len -= 1;
  80f9f4:	e0bffe17 	ldw	r2,-8(fp)
  80f9f8:	10bfffc4 	addi	r2,r2,-1
  80f9fc:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  80fa00:	e0bffe17 	ldw	r2,-8(fp)
  80fa04:	e0fffd17 	ldw	r3,-12(fp)
  80fa08:	1885883a 	add	r2,r3,r2
  80fa0c:	10800003 	ldbu	r2,0(r2)
  80fa10:	10803fcc 	andi	r2,r2,255
  80fa14:	1080201c 	xori	r2,r2,128
  80fa18:	10bfe004 	addi	r2,r2,-128
  80fa1c:	10800be0 	cmpeqi	r2,r2,47
  80fa20:	1000081e 	bne	r2,zero,80fa44 <alt_find_file+0xb0>
  80fa24:	e0bffe17 	ldw	r2,-8(fp)
  80fa28:	e0fffd17 	ldw	r3,-12(fp)
  80fa2c:	1885883a 	add	r2,r3,r2
  80fa30:	10800003 	ldbu	r2,0(r2)
  80fa34:	10803fcc 	andi	r2,r2,255
  80fa38:	1080201c 	xori	r2,r2,128
  80fa3c:	10bfe004 	addi	r2,r2,-128
  80fa40:	10000a1e 	bne	r2,zero,80fa6c <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  80fa44:	e0bfff17 	ldw	r2,-4(fp)
  80fa48:	10800217 	ldw	r2,8(r2)
  80fa4c:	e0fffe17 	ldw	r3,-8(fp)
  80fa50:	180d883a 	mov	r6,r3
  80fa54:	e17ffd17 	ldw	r5,-12(fp)
  80fa58:	1009883a 	mov	r4,r2
  80fa5c:	080fcc40 	call	80fcc4 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
  80fa60:	1000021e 	bne	r2,zero,80fa6c <alt_find_file+0xd8>
    {
      /* match found */

      return next;
  80fa64:	e0bfff17 	ldw	r2,-4(fp)
  80fa68:	00000706 	br	80fa88 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  80fa6c:	e0bfff17 	ldw	r2,-4(fp)
  80fa70:	10800017 	ldw	r2,0(r2)
  80fa74:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
  80fa78:	e0ffff17 	ldw	r3,-4(fp)
  80fa7c:	d0a00404 	addi	r2,gp,-32752
  80fa80:	18bfcc1e 	bne	r3,r2,80f9b4 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
  80fa84:	0005883a 	mov	r2,zero
}
  80fa88:	e037883a 	mov	sp,fp
  80fa8c:	dfc00117 	ldw	ra,4(sp)
  80fa90:	df000017 	ldw	fp,0(sp)
  80fa94:	dec00204 	addi	sp,sp,8
  80fa98:	f800283a 	ret

0080fa9c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  80fa9c:	defffc04 	addi	sp,sp,-16
  80faa0:	df000315 	stw	fp,12(sp)
  80faa4:	df000304 	addi	fp,sp,12
  80faa8:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
  80faac:	00bffa04 	movi	r2,-24
  80fab0:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  80fab4:	e03fff15 	stw	zero,-4(fp)
  80fab8:	00001d06 	br	80fb30 <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
  80fabc:	e0ffff17 	ldw	r3,-4(fp)
  80fac0:	1805883a 	mov	r2,r3
  80fac4:	1085883a 	add	r2,r2,r2
  80fac8:	10c5883a 	add	r2,r2,r3
  80facc:	100490ba 	slli	r2,r2,2
  80fad0:	00c02074 	movhi	r3,129
  80fad4:	10c7883a 	add	r3,r2,r3
  80fad8:	1883cb17 	ldw	r2,3884(r3)
  80fadc:	1000111e 	bne	r2,zero,80fb24 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
  80fae0:	e0ffff17 	ldw	r3,-4(fp)
  80fae4:	1805883a 	mov	r2,r3
  80fae8:	1085883a 	add	r2,r2,r2
  80faec:	10c5883a 	add	r2,r2,r3
  80faf0:	100490ba 	slli	r2,r2,2
  80faf4:	e13ffd17 	ldw	r4,-12(fp)
  80faf8:	00c02074 	movhi	r3,129
  80fafc:	10c7883a 	add	r3,r2,r3
  80fb00:	1903cb15 	stw	r4,3884(r3)
      if (i > alt_max_fd)
  80fb04:	d0e00817 	ldw	r3,-32736(gp)
  80fb08:	e0bfff17 	ldw	r2,-4(fp)
  80fb0c:	1880020e 	bge	r3,r2,80fb18 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
  80fb10:	e0bfff17 	ldw	r2,-4(fp)
  80fb14:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
  80fb18:	e0bfff17 	ldw	r2,-4(fp)
  80fb1c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  80fb20:	00000706 	br	80fb40 <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
  80fb24:	e0bfff17 	ldw	r2,-4(fp)
  80fb28:	10800044 	addi	r2,r2,1
  80fb2c:	e0bfff15 	stw	r2,-4(fp)
  80fb30:	e0bfff17 	ldw	r2,-4(fp)
  80fb34:	10800810 	cmplti	r2,r2,32
  80fb38:	103fe01e 	bne	r2,zero,80fabc <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
  80fb3c:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  80fb40:	e0bffe17 	ldw	r2,-8(fp)
}
  80fb44:	e037883a 	mov	sp,fp
  80fb48:	df000017 	ldw	fp,0(sp)
  80fb4c:	dec00104 	addi	sp,sp,4
  80fb50:	f800283a 	ret

0080fb54 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  80fb54:	defffb04 	addi	sp,sp,-20
  80fb58:	df000415 	stw	fp,16(sp)
  80fb5c:	df000404 	addi	fp,sp,16
  80fb60:	e13ffd15 	stw	r4,-12(fp)
  80fb64:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  80fb68:	e0bffc17 	ldw	r2,-16(fp)
  80fb6c:	10820070 	cmpltui	r2,r2,2049
  80fb70:	1000021e 	bne	r2,zero,80fb7c <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  80fb74:	00820004 	movi	r2,2048
  80fb78:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
  80fb7c:	e0fffd17 	ldw	r3,-12(fp)
  80fb80:	e0bffc17 	ldw	r2,-16(fp)
  80fb84:	1885883a 	add	r2,r3,r2
  80fb88:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80fb8c:	e0bffd17 	ldw	r2,-12(fp)
  80fb90:	e0bfff15 	stw	r2,-4(fp)
  80fb94:	00000506 	br	80fbac <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  80fb98:	e0bfff17 	ldw	r2,-4(fp)
  80fb9c:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  80fba0:	e0bfff17 	ldw	r2,-4(fp)
  80fba4:	10800804 	addi	r2,r2,32
  80fba8:	e0bfff15 	stw	r2,-4(fp)
  80fbac:	e0ffff17 	ldw	r3,-4(fp)
  80fbb0:	e0bffe17 	ldw	r2,-8(fp)
  80fbb4:	18bff836 	bltu	r3,r2,80fb98 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  80fbb8:	e0bffd17 	ldw	r2,-12(fp)
  80fbbc:	108007cc 	andi	r2,r2,31
  80fbc0:	10000226 	beq	r2,zero,80fbcc <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  80fbc4:	e0bfff17 	ldw	r2,-4(fp)
  80fbc8:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  80fbcc:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  80fbd0:	0001883a 	nop
  80fbd4:	e037883a 	mov	sp,fp
  80fbd8:	df000017 	ldw	fp,0(sp)
  80fbdc:	dec00104 	addi	sp,sp,4
  80fbe0:	f800283a 	ret

0080fbe4 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  80fbe4:	defffe04 	addi	sp,sp,-8
  80fbe8:	df000115 	stw	fp,4(sp)
  80fbec:	df000104 	addi	fp,sp,4
  80fbf0:	e13fff15 	stw	r4,-4(fp)
  80fbf4:	e0bfff17 	ldw	r2,-4(fp)
  80fbf8:	10bffe84 	addi	r2,r2,-6
  80fbfc:	10c00428 	cmpgeui	r3,r2,16
  80fc00:	1800191e 	bne	r3,zero,80fc68 <alt_exception_cause_generated_bad_addr+0x84>
  80fc04:	100690ba 	slli	r3,r2,2
  80fc08:	00802074 	movhi	r2,129
  80fc0c:	1885883a 	add	r2,r3,r2
  80fc10:	10bf0617 	ldw	r2,-1000(r2)
  80fc14:	1000683a 	jmp	r2
  80fc18:	0080fc58 	cmpnei	r2,zero,1009
  80fc1c:	0080fc58 	cmpnei	r2,zero,1009
  80fc20:	0080fc68 	cmpgeui	r2,zero,1009
  80fc24:	0080fc68 	cmpgeui	r2,zero,1009
  80fc28:	0080fc68 	cmpgeui	r2,zero,1009
  80fc2c:	0080fc58 	cmpnei	r2,zero,1009
  80fc30:	0080fc60 	cmpeqi	r2,zero,1009
  80fc34:	0080fc68 	cmpgeui	r2,zero,1009
  80fc38:	0080fc58 	cmpnei	r2,zero,1009
  80fc3c:	0080fc58 	cmpnei	r2,zero,1009
  80fc40:	0080fc68 	cmpgeui	r2,zero,1009
  80fc44:	0080fc58 	cmpnei	r2,zero,1009
  80fc48:	0080fc60 	cmpeqi	r2,zero,1009
  80fc4c:	0080fc68 	cmpgeui	r2,zero,1009
  80fc50:	0080fc68 	cmpgeui	r2,zero,1009
  80fc54:	0080fc58 	cmpnei	r2,zero,1009
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  80fc58:	00800044 	movi	r2,1
  80fc5c:	00000306 	br	80fc6c <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  80fc60:	0005883a 	mov	r2,zero
  80fc64:	00000106 	br	80fc6c <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
  80fc68:	0005883a 	mov	r2,zero
  }
}
  80fc6c:	e037883a 	mov	sp,fp
  80fc70:	df000017 	ldw	fp,0(sp)
  80fc74:	dec00104 	addi	sp,sp,4
  80fc78:	f800283a 	ret

0080fc7c <atexit>:
  80fc7c:	200b883a 	mov	r5,r4
  80fc80:	000f883a 	mov	r7,zero
  80fc84:	000d883a 	mov	r6,zero
  80fc88:	0009883a 	mov	r4,zero
  80fc8c:	080fd3c1 	jmpi	80fd3c <__register_exitproc>

0080fc90 <exit>:
  80fc90:	defffe04 	addi	sp,sp,-8
  80fc94:	000b883a 	mov	r5,zero
  80fc98:	dc000015 	stw	r16,0(sp)
  80fc9c:	dfc00115 	stw	ra,4(sp)
  80fca0:	2021883a 	mov	r16,r4
  80fca4:	080fdcc0 	call	80fdcc <__call_exitprocs>
  80fca8:	00802074 	movhi	r2,129
  80fcac:	11084317 	ldw	r4,8460(r2)
  80fcb0:	20800f17 	ldw	r2,60(r4)
  80fcb4:	10000126 	beq	r2,zero,80fcbc <exit+0x2c>
  80fcb8:	103ee83a 	callr	r2
  80fcbc:	8009883a 	mov	r4,r16
  80fcc0:	080d70c0 	call	80d70c <_exit>

0080fcc4 <memcmp>:
  80fcc4:	30800130 	cmpltui	r2,r6,4
  80fcc8:	10000b1e 	bne	r2,zero,80fcf8 <memcmp+0x34>
  80fccc:	2144b03a 	or	r2,r4,r5
  80fcd0:	108000cc 	andi	r2,r2,3
  80fcd4:	1000171e 	bne	r2,zero,80fd34 <memcmp+0x70>
  80fcd8:	20c00017 	ldw	r3,0(r4)
  80fcdc:	28800017 	ldw	r2,0(r5)
  80fce0:	1880141e 	bne	r3,r2,80fd34 <memcmp+0x70>
  80fce4:	31bfff04 	addi	r6,r6,-4
  80fce8:	30800128 	cmpgeui	r2,r6,4
  80fcec:	21000104 	addi	r4,r4,4
  80fcf0:	29400104 	addi	r5,r5,4
  80fcf4:	103ff81e 	bne	r2,zero,80fcd8 <memcmp+0x14>
  80fcf8:	30bfffc4 	addi	r2,r6,-1
  80fcfc:	30000b26 	beq	r6,zero,80fd2c <memcmp+0x68>
  80fd00:	11800044 	addi	r6,r2,1
  80fd04:	218d883a 	add	r6,r4,r6
  80fd08:	00000106 	br	80fd10 <memcmp+0x4c>
  80fd0c:	21800726 	beq	r4,r6,80fd2c <memcmp+0x68>
  80fd10:	20800003 	ldbu	r2,0(r4)
  80fd14:	28c00003 	ldbu	r3,0(r5)
  80fd18:	21000044 	addi	r4,r4,1
  80fd1c:	29400044 	addi	r5,r5,1
  80fd20:	10fffa26 	beq	r2,r3,80fd0c <memcmp+0x48>
  80fd24:	10c5c83a 	sub	r2,r2,r3
  80fd28:	f800283a 	ret
  80fd2c:	0005883a 	mov	r2,zero
  80fd30:	f800283a 	ret
  80fd34:	30bfffc4 	addi	r2,r6,-1
  80fd38:	003ff106 	br	80fd00 <memcmp+0x3c>

0080fd3c <__register_exitproc>:
  80fd3c:	00802074 	movhi	r2,129
  80fd40:	10c84317 	ldw	r3,8460(r2)
  80fd44:	18805217 	ldw	r2,328(r3)
  80fd48:	10001726 	beq	r2,zero,80fda8 <__register_exitproc+0x6c>
  80fd4c:	10c00117 	ldw	r3,4(r2)
  80fd50:	1a000808 	cmpgei	r8,r3,32
  80fd54:	40001b1e 	bne	r8,zero,80fdc4 <__register_exitproc+0x88>
  80fd58:	20000b26 	beq	r4,zero,80fd88 <__register_exitproc+0x4c>
  80fd5c:	181090ba 	slli	r8,r3,2
  80fd60:	02400044 	movi	r9,1
  80fd64:	48d2983a 	sll	r9,r9,r3
  80fd68:	1211883a 	add	r8,r2,r8
  80fd6c:	41802215 	stw	r6,136(r8)
  80fd70:	11806217 	ldw	r6,392(r2)
  80fd74:	21000098 	cmpnei	r4,r4,2
  80fd78:	324cb03a 	or	r6,r6,r9
  80fd7c:	11806215 	stw	r6,392(r2)
  80fd80:	41c04215 	stw	r7,264(r8)
  80fd84:	20000b26 	beq	r4,zero,80fdb4 <__register_exitproc+0x78>
  80fd88:	19000084 	addi	r4,r3,2
  80fd8c:	200890ba 	slli	r4,r4,2
  80fd90:	18c00044 	addi	r3,r3,1
  80fd94:	10c00115 	stw	r3,4(r2)
  80fd98:	1105883a 	add	r2,r2,r4
  80fd9c:	11400015 	stw	r5,0(r2)
  80fda0:	0005883a 	mov	r2,zero
  80fda4:	f800283a 	ret
  80fda8:	18805304 	addi	r2,r3,332
  80fdac:	18805215 	stw	r2,328(r3)
  80fdb0:	003fe606 	br	80fd4c <__register_exitproc+0x10>
  80fdb4:	11006317 	ldw	r4,396(r2)
  80fdb8:	2252b03a 	or	r9,r4,r9
  80fdbc:	12406315 	stw	r9,396(r2)
  80fdc0:	003ff106 	br	80fd88 <__register_exitproc+0x4c>
  80fdc4:	00bfffc4 	movi	r2,-1
  80fdc8:	f800283a 	ret

0080fdcc <__call_exitprocs>:
  80fdcc:	defff704 	addi	sp,sp,-36
  80fdd0:	00802074 	movhi	r2,129
  80fdd4:	dcc00315 	stw	r19,12(sp)
  80fdd8:	14c84317 	ldw	r19,8460(r2)
  80fddc:	dc800215 	stw	r18,8(sp)
  80fde0:	dfc00815 	stw	ra,32(sp)
  80fde4:	9c805217 	ldw	r18,328(r19)
  80fde8:	ddc00715 	stw	r23,28(sp)
  80fdec:	dd800615 	stw	r22,24(sp)
  80fdf0:	dd400515 	stw	r21,20(sp)
  80fdf4:	dd000415 	stw	r20,16(sp)
  80fdf8:	dc400115 	stw	r17,4(sp)
  80fdfc:	dc000015 	stw	r16,0(sp)
  80fe00:	90001026 	beq	r18,zero,80fe44 <__call_exitprocs+0x78>
  80fe04:	202b883a 	mov	r21,r4
  80fe08:	282d883a 	mov	r22,r5
  80fe0c:	05000044 	movi	r20,1
  80fe10:	94000117 	ldw	r16,4(r18)
  80fe14:	847fffc4 	addi	r17,r16,-1
  80fe18:	88000a16 	blt	r17,zero,80fe44 <__call_exitprocs+0x78>
  80fe1c:	84000044 	addi	r16,r16,1
  80fe20:	802090ba 	slli	r16,r16,2
  80fe24:	9421883a 	add	r16,r18,r16
  80fe28:	b0001126 	beq	r22,zero,80fe70 <__call_exitprocs+0xa4>
  80fe2c:	80804017 	ldw	r2,256(r16)
  80fe30:	15800f26 	beq	r2,r22,80fe70 <__call_exitprocs+0xa4>
  80fe34:	8c7fffc4 	addi	r17,r17,-1
  80fe38:	88bfffd8 	cmpnei	r2,r17,-1
  80fe3c:	843fff04 	addi	r16,r16,-4
  80fe40:	103ff91e 	bne	r2,zero,80fe28 <__call_exitprocs+0x5c>
  80fe44:	dfc00817 	ldw	ra,32(sp)
  80fe48:	ddc00717 	ldw	r23,28(sp)
  80fe4c:	dd800617 	ldw	r22,24(sp)
  80fe50:	dd400517 	ldw	r21,20(sp)
  80fe54:	dd000417 	ldw	r20,16(sp)
  80fe58:	dcc00317 	ldw	r19,12(sp)
  80fe5c:	dc800217 	ldw	r18,8(sp)
  80fe60:	dc400117 	ldw	r17,4(sp)
  80fe64:	dc000017 	ldw	r16,0(sp)
  80fe68:	dec00904 	addi	sp,sp,36
  80fe6c:	f800283a 	ret
  80fe70:	90800117 	ldw	r2,4(r18)
  80fe74:	81800017 	ldw	r6,0(r16)
  80fe78:	10bfffc4 	addi	r2,r2,-1
  80fe7c:	14401726 	beq	r2,r17,80fedc <__call_exitprocs+0x110>
  80fe80:	80000015 	stw	zero,0(r16)
  80fe84:	303feb26 	beq	r6,zero,80fe34 <__call_exitprocs+0x68>
  80fe88:	a446983a 	sll	r3,r20,r17
  80fe8c:	90806217 	ldw	r2,392(r18)
  80fe90:	95c00117 	ldw	r23,4(r18)
  80fe94:	1884703a 	and	r2,r3,r2
  80fe98:	1000081e 	bne	r2,zero,80febc <__call_exitprocs+0xf0>
  80fe9c:	303ee83a 	callr	r6
  80fea0:	90c00117 	ldw	r3,4(r18)
  80fea4:	98805217 	ldw	r2,328(r19)
  80fea8:	1dc0011e 	bne	r3,r23,80feb0 <__call_exitprocs+0xe4>
  80feac:	90bfe126 	beq	r18,r2,80fe34 <__call_exitprocs+0x68>
  80feb0:	103fe426 	beq	r2,zero,80fe44 <__call_exitprocs+0x78>
  80feb4:	1025883a 	mov	r18,r2
  80feb8:	003fd506 	br	80fe10 <__call_exitprocs+0x44>
  80febc:	90806317 	ldw	r2,396(r18)
  80fec0:	81002017 	ldw	r4,128(r16)
  80fec4:	1886703a 	and	r3,r3,r2
  80fec8:	1800061e 	bne	r3,zero,80fee4 <__call_exitprocs+0x118>
  80fecc:	200b883a 	mov	r5,r4
  80fed0:	a809883a 	mov	r4,r21
  80fed4:	303ee83a 	callr	r6
  80fed8:	003ff106 	br	80fea0 <__call_exitprocs+0xd4>
  80fedc:	94400115 	stw	r17,4(r18)
  80fee0:	003fe806 	br	80fe84 <__call_exitprocs+0xb8>
  80fee4:	303ee83a 	callr	r6
  80fee8:	003fed06 	br	80fea0 <__call_exitprocs+0xd4>
