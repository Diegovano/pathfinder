
PATHFINDER_DMA.elf:     file format elf32-littlenios2
PATHFINDER_DMA.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00800238

Program Header:
    LOAD off    0x00001000 vaddr 0x00800000 paddr 0x00800000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00800020 paddr 0x00800020 align 2**12
         filesz 0x00011700 memsz 0x00011700 flags r-x
    LOAD off    0x00012720 vaddr 0x00811720 paddr 0x008133e4 align 2**12
         filesz 0x00001cc4 memsz 0x00001cc4 flags rw-
    LOAD off    0x000150a8 vaddr 0x008150a8 paddr 0x008150a8 align 2**12
         filesz 0x00000000 memsz 0x00000164 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00800000  00800000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000218  00800020  00800020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00010da8  00800238  00800238  00001238  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000740  00810fe0  00810fe0  00011fe0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001cc4  00811720  008133e4  00012720  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000164  008150a8  008150a8  000150a8  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  0081520c  0081520c  000143e4  2**0
                  CONTENTS
  7 .comment      0000002d  00000000  00000000  000143e4  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00001168  00000000  00000000  00014418  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info   0003147a  00000000  00000000  00015580  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_abbrev 0000c340  00000000  00000000  000469fa  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_line   00017fb7  00000000  00000000  00052d3a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_frame  00002888  00000000  00000000  0006acf4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_str    00004570  00000000  00000000  0006d57c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0001e5ef  00000000  00000000  00071aec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_alt_sim_info 00000030  00000000  00000000  000900dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 000024a8  00000000  00000000  00090110  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .thread_model 00000003  00000000  00000000  00095e5f  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00095e62  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00095e65  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00095e66  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00095e67  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00095e6b  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00095e6f  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00095e73  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  00095e7c  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00095e85  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000c  00000000  00000000  00095e8e  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 0000003b  00000000  00000000  00095e9a  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00800000 l    d  .entry	00000000 .entry
00800020 l    d  .exceptions	00000000 .exceptions
00800238 l    d  .text	00000000 .text
00810fe0 l    d  .rodata	00000000 .rodata
00811720 l    d  .rwdata	00000000 .rwdata
008150a8 l    d  .bss	00000000 .bss
0081520c l    d  .sdram	00000000 .sdram
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 c:/Users/andre/ARM_pathfinder/group_repo/pathfinder/quartus/software/PATHFINDER_DMA_bsp//obj/HAL/src/crt0.o
00800280 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 dma.cpp
00000000 l    df *ABS*	00000000 hello_world.cpp
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 puts.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
008028bc l     F .text	000000c0 __sbprintf
0081111c l     O .rodata	00000010 blanks.1
0081110c l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
00802ae0 l     F .text	00000220 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
00804754 l     F .text	00000008 __fp_lock
00804768 l     F .text	00000008 __fp_unlock
00804770 l     F .text	00000168 __sinit.part.0
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00811720 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 localeconv.c
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
008111d0 l     O .rodata	0000000c p05.0
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 vfprintf.c
00807dec l     F .text	000000f4 __sprint_r.part.0
00809258 l     F .text	000000c0 __sbprintf
00811304 l     O .rodata	00000010 blanks.1
008112f4 l     O .rodata	00000010 zeroes.0
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 assert.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00809670 l     F .text	000000c0 _fclose_r.part.0
00000000 l    df *ABS*	00000000 fiprintf.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 locale.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfiprintfr_1.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 abort.c
00000000 l    df *ABS*	00000000 ctype_.c
00000000 l    df *ABS*	00000000 signal.c
00000000 l    df *ABS*	00000000 signalr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 unorddf2.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0080d980 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0080dae4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0080db48 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_getpid.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0080df2c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_kill.c
0080e018 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0080e180 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0080e26c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0080e44c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
008133c8 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0080e6b8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0080e7f8 l     F .text	00000034 alt_dev_reg
00812260 l     O .rwdata	000000a4 dma_priv
00812304 l     O .rwdata	0000001c dma_tx
00812320 l     O .rwdata	0000001c dma_rx
0081233c l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_dma.c
0080e910 l     F .text	00000034 alt_dma_txchan_reg
0080e944 l     F .text	00000034 alt_dma_rxchan_reg
0080ea74 l     F .text	0000009c alt_avalon_dma_launch_txonly
0080eb10 l     F .text	0000009c alt_avalon_dma_launch_rxonly
0080ebac l     F .text	00000350 alt_avalon_dma_ioctl
0080f270 l     F .text	000001c8 alt_avalon_dma_irq
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0080f710 l     F .text	0000020c altera_avalon_jtag_uart_irq
0080f91c l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0080ff60 l     F .text	0000007c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00810194 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dma_rxchan_open.c
00810278 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dma_txchan_open.c
00810308 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
00810618 l     F .text	000000d4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
00810768 l     F .text	0000003c alt_get_errno
008107a4 l     F .text	000000dc alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
008150d8 g     O .bss	00000004 alt_instruction_exception_handler
00800610 g     F .text	00000018 putchar
008073f8 g     F .text	00000070 _mprec_log10
008074e4 g     F .text	00000060 __any_on
00809ac8 g     F .text	00000058 _isatty_r
008111dc g     O .rodata	00000028 __mprec_tinytens
0080e388 g     F .text	0000007c alt_main
00800628 g     F .text	000000cc _puts_r
0081510c g     O .bss	00000100 alt_irq
00809c14 g     F .text	00000064 _lseek_r
008003d0 g     F .text	00000058 _Z11dma_irq_regv
008133e4 g       *ABS*	00000000 __flash_rwdata_start
0080c460 g     F .text	00000080 .hidden __eqdf2
0081520c g       *ABS*	00000000 __alt_heap_start
0080a41c g     F .text	00000060 _kill_r
008005d0 g     F .text	00000038 printf
00809de8 g     F .text	0000006c _wcrtomb_r
00809f8c g     F .text	00000098 _signal_r
00807d88 g     F .text	0000005c __sseek
00804ab8 g     F .text	00000010 __sinit
0080f438 g     F .text	000000b4 alt_avalon_dma_init
00809318 g     F .text	00000148 __swbuf_r
00809b20 g     F .text	00000074 _setlocale_r
008048d8 g     F .text	00000078 __sfmoreglue
0080e428 g     F .text	00000024 __malloc_unlock
008150d4 g     O .bss	00000004 altera_avalon_timer_ts_freq
00806138 g     F .text	0000012c memmove
00804aa4 g     F .text	00000014 _cleanup
00806354 g     F .text	000000a4 _Balloc
008150a8 g     O .bss	00000004 dma_done
0080c4e0 g     F .text	000000e8 .hidden __gtdf2
00810b8c g     F .text	00000024 altera_nios2_gen2_irq_init
00800000 g     F .entry	0000001c __reset
00805520 g     F .text	00000008 __localeconv_l
00800020 g       *ABS*	00000000 __flash_exceptions_start
00809a68 g     F .text	00000060 _fstat_r
008150b8 g     O .bss	00000004 errno
00807d00 g     F .text	00000008 __seofread
008150c8 g     O .bss	00000004 alt_argv
0081b39c g       *ABS*	00000000 _gp
0080dc40 g     F .text	00000020 getpid
00810344 g     F .text	00000054 alt_dma_txchan_open
008120e0 g     O .rwdata	00000180 alt_fd_list
00800284 g     F .text	00000070 _Z7dma_isrPv
00800608 g     F .text	00000008 _putchar_r
00810460 g     F .text	00000090 alt_find_dev
00806038 g     F .text	00000100 memcpy
0080475c g     F .text	0000000c _cleanup_r
0080d7e4 g     F .text	000000b8 .hidden __floatsidf
008106ec g     F .text	0000007c alt_io_redirect
0080c5c8 g     F .text	000000e8 .hidden __ltdf2
00810fe0 g       *ABS*	00000000 __DTOR_END__
008006f4 g     F .text	00000010 puts
00810580 g     F .text	00000098 alt_exception_cause_generated_bad_addr
00807354 g     F .text	000000a4 __ratio
0080923c g     F .text	0000001c __vfiprintf_internal
0080fb18 g     F .text	00000220 altera_avalon_jtag_uart_read
008005a0 g     F .text	00000030 _printf_r
0080b158 g     F .text	00000064 .hidden __udivsi3
0080df68 g     F .text	000000b0 isatty
0080a024 g     F .text	000000c4 _raise_r
00809534 g     F .text	00000064 __assert_func
0081122c g     O .rodata	000000c8 __mprec_tens
008104f0 g     F .text	00000090 alt_icache_flush
008150b4 g     O .bss	00000004 __malloc_top_pad
0080a47c g     F .text	00000004 _getpid_r
00805528 g     F .text	0000000c _localeconv_r
008067c4 g     F .text	000000b0 __i2b
00804f18 g     F .text	000004c8 __sfvwrite_r
0080a0e8 g     F .text	000000bc __sigtramp_r
00807c54 g     F .text	00000058 _sbrk_r
00809cc8 g     F .text	00000064 _read_r
008133bc g     O .rwdata	00000004 alt_max_fd
00809730 g     F .text	00000070 _fclose_r
008046d0 g     F .text	00000084 fflush
008150b0 g     O .bss	00000004 __malloc_max_sbrked_mem
0080b240 g     F .text	000008f0 .hidden __adddf3
0080e978 g     F .text	000000fc alt_avalon_dma_launch_bidir
008070e8 g     F .text	00000108 __b2d
008102b4 g     F .text	00000054 alt_dma_rxchan_open
0080aaa0 g     F .text	000005c4 .hidden __umoddi3
0080e2a8 g     F .text	000000e0 lseek
0081339c g     O .rwdata	00000004 _global_impure_ptr
008076f0 g     F .text	00000564 _realloc_r
0081520c g       *ABS*	00000000 __bss_end
0080de44 g     F .text	000000e8 alt_iic_isr_register
00810a84 g     F .text	00000108 alt_tick
0080a480 g     F .text	00000620 .hidden __udivdi3
008099cc g     F .text	00000024 _fputwc_r
00811204 g     O .rodata	00000028 __mprec_bigtens
00806578 g     F .text	00000138 __s2b
00809f18 g     F .text	00000018 abort
0080d89c g     F .text	00000090 .hidden __floatunsidf
00806e08 g     F .text	00000058 __mcmp
00804ad8 g     F .text	00000014 __fp_lock_all
0080ddf8 g     F .text	0000004c alt_ic_irq_enabled
008109e0 g     F .text	000000a4 alt_alarm_stop
008150c0 g     O .bss	00000004 alt_irq_active
008000fc g     F .exceptions	000000c8 alt_irq_handler
008120b8 g     O .rwdata	00000028 alt_dev_null
0080da98 g     F .text	0000004c alt_dcache_flush_all
008066b0 g     F .text	00000064 __hi0bits
0080d764 g     F .text	00000080 .hidden __fixdfsi
008133e4 g       *ABS*	00000000 __ram_rwdata_end
008133b4 g     O .rwdata	00000008 alt_dev_list
0080f0c4 g     F .text	00000074 alt_avalon_dma_space
0080e6f4 g     F .text	00000104 write
00807544 g     F .text	000000cc _putc_r
00811720 g       *ABS*	00000000 __ram_rodata_end
0080db84 g     F .text	000000bc fstat
0080e054 g     F .text	0000012c kill
0080c5c8 g     F .text	000000e8 .hidden __ledf2
00806b38 g     F .text	00000148 __pow5mult
00807ef8 g     F .text	00001344 ___vfiprintf_internal_r
0080b1bc g     F .text	0000005c .hidden __umodsi3
0081520c g       *ABS*	00000000 end
0080f650 g     F .text	000000c0 altera_avalon_jtag_uart_init
008001c4 g     F .exceptions	00000074 alt_instruction_exception_entry
00810fe0 g       *ABS*	00000000 __CTOR_LIST__
01000000 g       *ABS*	00000000 __alt_stack_pointer
0080ffdc g     F .text	00000084 alt_avalon_timer_sc_init
0080d92c g     F .text	00000054 .hidden __clzsi2
0080fd38 g     F .text	00000228 altera_avalon_jtag_uart_write
00804ac8 g     F .text	00000004 __sfp_lock_acquire
00805f68 g     F .text	000000d0 memchr
0080079c g     F .text	00002104 ___vfprintf_internal_r
00804c1c g     F .text	000002fc _free_r
00811468 g     O .rodata	00000180 _ctype_b
00809b94 g     F .text	0000000c __locale_mb_cur_max
0080f138 g     F .text	00000138 alt_avalon_dma_send
00810ec0 g     F .text	00000120 __call_exitprocs
008133d4 g     O .rwdata	00000008 alt_dma_txchan_list
008133a4 g     O .rwdata	00000004 __malloc_sbrk_base
00800238 g     F .text	0000004c _start
008150dc g     O .bss	00000004 _alt_tick_rate
00806c80 g     F .text	00000188 __lshift
008150e0 g     O .bss	00000004 _alt_nticks
0080a260 g     F .text	000000a0 signal
0080e488 g     F .text	00000108 read
0080e868 g     F .text	000000a8 alt_sys_init
00810e30 g     F .text	00000090 __register_exitproc
00806874 g     F .text	000002c4 __multiply
0080f9bc g     F .text	00000068 altera_avalon_jtag_uart_close
0080b218 g     F .text	00000028 .hidden __mulsi3
00811720 g       *ABS*	00000000 __ram_rwdata_start
00810fe0 g       *ABS*	00000000 __ram_rodata_start
008150e4 g     O .bss	00000028 __malloc_current_mallinfo
008071f0 g     F .text	00000164 __d2b
0080f4ec g     F .text	00000060 altera_avalon_jtag_uart_read_fd
00810cb8 g     F .text	000000b8 alt_get_fd
008094dc g     F .text	00000058 _close_r
00810db8 g     F .text	00000078 memcmp
0080f5ac g     F .text	00000050 altera_avalon_jtag_uart_close_fd
0081520c g       *ABS*	00000000 __alt_stack_base
0080f5fc g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0080297c g     F .text	00000164 __swsetup_r
0080bb30 g     F .text	00000930 .hidden __divdf3
00804950 g     F .text	00000154 __sfp
00807468 g     F .text	0000007c __copybits
00811b44 g     O .rwdata	00000408 __malloc_av_
00804ad4 g     F .text	00000004 __sinit_lock_release
0080c6b0 g     F .text	000007ac .hidden __muldf3
00807cac g     F .text	00000054 __sread
00810bb0 g     F .text	00000108 alt_find_file
008101d0 g     F .text	000000a8 alt_dev_llist_insert
0080e404 g     F .text	00000024 __malloc_lock
0080e600 g     F .text	000000b8 sbrk
00804670 g     F .text	00000060 _fflush_r
008095ac g     F .text	000000c4 _calloc_r
008150a8 g       *ABS*	00000000 __bss_start
00806264 g     F .text	000000f0 memset
008004c8 g     F .text	000000d8 main
0080ef44 g     F .text	00000048 alt_avalon_dma_rx_ioctl
008150cc g     O .bss	00000004 alt_envp
008150ac g     O .bss	00000004 __malloc_max_total_mem
0080f54c g     F .text	00000060 altera_avalon_jtag_uart_write_fd
00809460 g     F .text	00000018 __swbuf
00807de4 g     F .text	00000008 __sclose
01000000 g       *ABS*	00000000 __alt_heap_limit
008097a0 g     F .text	00000070 fclose
00802d00 g     F .text	00001748 _dtoa_r
00805788 g     F .text	000007e0 _malloc_r
00809ee8 g     F .text	00000030 __ascii_wctomb
008133c0 g     O .rwdata	00000004 alt_errno
00809810 g     F .text	00000020 _fiprintf_r
0080a300 g     F .text	00000060 _init_signal
008053e0 g     F .text	00000098 _fwalk
00809c78 g     F .text	0000000c _mbtowc_r
00807610 g     F .text	000000e0 putc
0080b064 g     F .text	00000080 .hidden __divsi3
00800428 g     F .text	000000a0 _Z15mem_to_mem_copyPiS_ii
00804b00 g     F .text	0000011c _malloc_trim_r
00810fe0 g       *ABS*	00000000 __CTOR_END__
00809d2c g     F .text	000000b8 strcmp
00810fe0 g       *ABS*	00000000 __flash_rodata_start
00810fe0 g       *ABS*	00000000 __DTOR_LIST__
0080c460 g     F .text	00000080 .hidden __nedf2
0080e82c g     F .text	0000003c alt_irq_init
0080e590 g     F .text	00000070 alt_release_fd
008115e8 g     O .rodata	00000100 .hidden __clz_tab
008150bc g     O .bss	00000004 _PathLocale
00810d70 g     F .text	00000014 atexit
00809478 g     F .text	00000064 _write_r
00809ba0 g     F .text	00000074 setlocale
008133a0 g     O .rwdata	00000004 _impure_ptr
008150c4 g     O .bss	00000004 alt_argc
00804448 g     F .text	00000228 __sflush_r
00800378 g     F .text	00000058 _Z9dma_resetv
008150d0 g     O .bss	00000004 altera_avalon_timer_ts_base
008103fc g     F .text	00000064 _do_dtors
00800020 g       .exceptions	00000000 alt_irq_entry
00809c84 g     F .text	00000044 __ascii_mbtowc
0080708c g     F .text	0000005c __ulp
00804aec g     F .text	00000014 __fp_unlock_all
008133ac g     O .rwdata	00000008 alt_fs_list
00800020 g       *ABS*	00000000 __ram_exceptions_start
00805534 g     F .text	0000000c localeconv
008056f0 g     F .text	00000098 __swhatbuf_r
0080dc94 g     F .text	00000050 alt_ic_isr_register
008133e4 g       *ABS*	00000000 _edata
0081520c g       *ABS*	00000000 _end
00809868 g     F .text	00000164 __fputwc
00800238 g       *ABS*	00000000 __ram_exceptions_end
0080fa24 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
0080dd6c g     F .text	0000008c alt_ic_irq_disable
00807d08 g     F .text	00000080 __swrite
008133a8 g     O .rwdata	00000004 __malloc_trim_threshold
00810d84 g     F .text	00000034 exit
00809830 g     F .text	00000038 fiprintf
00809de4 g     F .text	00000004 _vfiprintf_r
00805478 g     F .text	000000a8 _fwalk_reent
00806e60 g     F .text	0000022c __mdiff
0080b0e4 g     F .text	00000074 .hidden __modsi3
01000000 g       *ABS*	00000000 __alt_data_end
00800020 g     F .exceptions	00000000 alt_exception
00804acc g     F .text	00000004 __sfp_lock_release
00800000 g       *ABS*	00000000 __alt_mem_sdram
008002f4 g     F .text	00000084 _Z9dma_checkv
00811364 g     O .rodata	00000101 _ctype_
0080d710 g     F .text	00000054 .hidden __unorddf2
0080db10 g     F .text	00000038 _exit
00810060 g     F .text	00000134 alt_alarm_start
00805540 g     F .text	000001b0 __smakebuf_r
00800704 g     F .text	00000098 strlen
00809f30 g     F .text	0000005c _init_signal_r
00810880 g     F .text	00000160 open
0080c4e0 g     F .text	000000e8 .hidden __gedf2
00809598 g     F .text	00000014 __assert
00807ee0 g     F .text	00000018 __sprint_r
0080dc60 g     F .text	00000034 alt_icache_flush_all
008133c4 g     O .rwdata	00000004 alt_priority_mask
0080dce4 g     F .text	00000088 alt_ic_irq_enable
008028a0 g     F .text	0000001c __vfprintf_internal
00809edc g     F .text	0000000c _wctomb_r
0080ef8c g     F .text	00000138 alt_avalon_dma_prepare
0080ce5c g     F .text	000008b4 .hidden __subdf3
008133cc g     O .rwdata	00000008 alt_dma_rxchan_list
00806714 g     F .text	000000b0 __lo0bits
008133dc g     O .rwdata	00000008 alt_alarm_list
00810398 g     F .text	00000064 _do_ctors
0080a360 g     F .text	000000bc __sigtramp
00809e54 g     F .text	00000088 wcrtomb
0080d9bc g     F .text	000000dc close
00811f4c g     O .rwdata	0000016c __global_locale
0080e1e8 g     F .text	00000084 alt_load
0080eefc g     F .text	00000048 alt_avalon_dma_tx_ioctl
008099f0 g     F .text	00000078 fputwc
0080a1a4 g     F .text	000000bc raise
00804ad0 g     F .text	00000004 __sinit_lock_acquire
0080641c g     F .text	0000015c __multadd
008063f8 g     F .text	00000024 _Bfree



Disassembly of section .entry:

00800000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
  800000:	00880014 	movui	r2,8192
#endif

0:
    initi r2
  800004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
  800008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
  80000c:	00bffd16 	blt	zero,r2,800004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
  800010:	00402034 	movhi	at,128
    ori r1, r1, %lo(_start)
  800014:	08408e14 	ori	at,at,568
    jmp r1
  800018:	0800683a 	jmp	at
  80001c:	00000000 	call	0 <__alt_mem_sdram-0x800000>

Disassembly of section .exceptions:

00800020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
  800020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
  800024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
  800028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
  80002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
  800030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
  800034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
  800038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
  80003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
  800040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
  800044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
  800048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
  80004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
  800050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
  800054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
  800058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
  80005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
  800060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
  800064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
  800068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
  80006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  800070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
  800074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
  800078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
  80007c:	10000326 	beq	r2,zero,80008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
  800080:	20000226 	beq	r4,zero,80008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
  800084:	08000fc0 	call	8000fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
  800088:	00000706 	br	8000a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
  80008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
  800090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
  800094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
  800098:	08001c40 	call	8001c4 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
  80009c:	1000021e 	bne	r2,zero,8000a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
  8000a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
  8000a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
  8000a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
  8000ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
  8000b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
  8000b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
  8000b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
  8000bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
  8000c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
  8000c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
  8000c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
  8000cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
  8000d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
  8000d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
  8000d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
  8000dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
  8000e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
  8000e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
  8000e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
  8000ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
  8000f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
  8000f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
  8000f8:	ef80083a 	eret

008000fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
  8000fc:	defff904 	addi	sp,sp,-28
  800100:	dfc00615 	stw	ra,24(sp)
  800104:	df000515 	stw	fp,20(sp)
  800108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
  80010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
  800110:	0005313a 	rdctl	r2,ipending
  800114:	e0bffc15 	stw	r2,-16(fp)

  return active;
  800118:	e0bffc17 	ldw	r2,-16(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
  80011c:	e0bfff15 	stw	r2,-4(fp)

  do
  {
    i = 0;
  800120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
  800124:	00800044 	movi	r2,1
  800128:	e0bffe15 	stw	r2,-8(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
  80012c:	e0ffff17 	ldw	r3,-4(fp)
  800130:	e0bffe17 	ldw	r2,-8(fp)
  800134:	1884703a 	and	r2,r3,r2
  800138:	10001126 	beq	r2,zero,800180 <alt_irq_handler+0x84>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
  80013c:	e0bffd17 	ldw	r2,-12(fp)
  800140:	100690fa 	slli	r3,r2,3
  800144:	00802074 	movhi	r2,129
  800148:	1885883a 	add	r2,r3,r2
  80014c:	10d44317 	ldw	r3,20748(r2)
  800150:	e0bffd17 	ldw	r2,-12(fp)
  800154:	100890fa 	slli	r4,r2,3
  800158:	00802074 	movhi	r2,129
  80015c:	2085883a 	add	r2,r4,r2
  800160:	10944417 	ldw	r2,20752(r2)
  800164:	1009883a 	mov	r4,r2
  800168:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
  80016c:	0001883a 	nop
  NIOS2_READ_IPENDING (active);
  800170:	0005313a 	rdctl	r2,ipending
  800174:	e0bffb15 	stw	r2,-20(fp)
  return active;
  800178:	e0bffb17 	ldw	r2,-20(fp)
  80017c:	00000706 	br	80019c <alt_irq_handler+0xa0>
      }
      mask <<= 1;
  800180:	e0bffe17 	ldw	r2,-8(fp)
  800184:	1085883a 	add	r2,r2,r2
  800188:	e0bffe15 	stw	r2,-8(fp)
      i++;
  80018c:	e0bffd17 	ldw	r2,-12(fp)
  800190:	10800044 	addi	r2,r2,1
  800194:	e0bffd15 	stw	r2,-12(fp)
      if (active & mask)
  800198:	003fe406 	br	80012c <alt_irq_handler+0x30>

    } while (1);

    active = alt_irq_pending ();
  80019c:	e0bfff15 	stw	r2,-4(fp)
    
  } while (active);
  8001a0:	e0bfff17 	ldw	r2,-4(fp)
  8001a4:	103fde1e 	bne	r2,zero,800120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
  8001a8:	0001883a 	nop
}
  8001ac:	0001883a 	nop
  8001b0:	e037883a 	mov	sp,fp
  8001b4:	dfc00117 	ldw	ra,4(sp)
  8001b8:	df000017 	ldw	fp,0(sp)
  8001bc:	dec00204 	addi	sp,sp,8
  8001c0:	f800283a 	ret

008001c4 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
  8001c4:	defffb04 	addi	sp,sp,-20
  8001c8:	dfc00415 	stw	ra,16(sp)
  8001cc:	df000315 	stw	fp,12(sp)
  8001d0:	df000304 	addi	fp,sp,12
  8001d4:	e13ffd15 	stw	r4,-12(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
  8001d8:	000531fa 	rdctl	r2,exception
  8001dc:	e0bfff15 	stw	r2,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
  8001e0:	e0bfff17 	ldw	r2,-4(fp)
  8001e4:	1004d0ba 	srli	r2,r2,2
  8001e8:	108007cc 	andi	r2,r2,31
  8001ec:	e0bfff15 	stw	r2,-4(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
  8001f0:	0005333a 	rdctl	r2,badaddr
  8001f4:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
  8001f8:	d0a74f17 	ldw	r2,-25284(gp)
  8001fc:	10000726 	beq	r2,zero,80021c <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
  800200:	d0a74f17 	ldw	r2,-25284(gp)
  800204:	e0ffff17 	ldw	r3,-4(fp)
  800208:	e1bffe17 	ldw	r6,-8(fp)
  80020c:	e17ffd17 	ldw	r5,-12(fp)
  800210:	1809883a 	mov	r4,r3
  800214:	103ee83a 	callr	r2
  800218:	00000206 	br	800224 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
  80021c:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
  800220:	0005883a 	mov	r2,zero
}
  800224:	e037883a 	mov	sp,fp
  800228:	dfc00117 	ldw	ra,4(sp)
  80022c:	df000017 	ldw	fp,0(sp)
  800230:	dec00204 	addi	sp,sp,8
  800234:	f800283a 	ret

Disassembly of section .text:

00800238 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
  800238:	00880014 	movui	r2,8192
#endif

0:
    initd 0(r2)
  80023c:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
  800240:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
  800244:	00bffd16 	blt	zero,r2,80023c <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
  800248:	06c04034 	movhi	sp,256
    ori sp, sp, %lo(__alt_stack_pointer)
  80024c:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
  800250:	06802074 	movhi	gp,129
    ori gp, gp, %lo(_gp)
  800254:	d6ace714 	ori	gp,gp,45980
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
  800258:	00802074 	movhi	r2,129
    ori r2, r2, %lo(__bss_start)
  80025c:	10942a14 	ori	r2,r2,20648

    movhi r3, %hi(__bss_end)
  800260:	00c02074 	movhi	r3,129
    ori r3, r3, %lo(__bss_end)
  800264:	18d48314 	ori	r3,r3,21004

    beq r2, r3, 1f
  800268:	10c00326 	beq	r2,r3,800278 <_start+0x40>

0:
    stw zero, (r2)
  80026c:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
  800270:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
  800274:	10fffd36 	bltu	r2,r3,80026c <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
  800278:	080e1e80 	call	80e1e8 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
  80027c:	080e3880 	call	80e388 <alt_main>

00800280 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
  800280:	003fff06 	br	800280 <alt_after_alt_main>

00800284 <_Z7dma_isrPv>:
 * is cleared before exiting the function.     *
 * Change the function contents according to   *
 * the handler you wish to have.               *
 **********************************************/
void dma_isr(void * context)
{
  800284:	defffd04 	addi	sp,sp,-12
  800288:	dfc00215 	stw	ra,8(sp)
  80028c:	df000115 	stw	fp,4(sp)
  800290:	df000104 	addi	fp,sp,4
  800294:	e13fff15 	stw	r4,-4(fp)
	printf("DMA COPY COMPLETED\n");
  800298:	01002074 	movhi	r4,129
  80029c:	2103f804 	addi	r4,r4,4064
  8002a0:	08006f40 	call	8006f4 <puts>
	printf("Custom instruction result: %d\n\n", vector_op(0,0));
  8002a4:	0005883a 	mov	r2,zero
  8002a8:	0007883a 	mov	r3,zero
  8002ac:	10c5c032 	custom	0,r2,r2,r3
  8002b0:	100b883a 	mov	r5,r2
  8002b4:	01002074 	movhi	r4,129
  8002b8:	2103fd04 	addi	r4,r4,4084
  8002bc:	08005d00 	call	8005d0 <printf>
	dma_done++;
  8002c0:	d0a74317 	ldw	r2,-25332(gp)
  8002c4:	10800044 	addi	r2,r2,1
  8002c8:	d0a74315 	stw	r2,-25332(gp)
	DMA_WR_STATUS(DMA_BASE, 0);  /*clear the interrupt*/
  8002cc:	0007883a 	mov	r3,zero
  8002d0:	00804034 	movhi	r2,256
  8002d4:	10c42035 	stwio	r3,4224(r2)
	dma_reset();
  8002d8:	08003780 	call	800378 <_Z9dma_resetv>
}
  8002dc:	0001883a 	nop
  8002e0:	e037883a 	mov	sp,fp
  8002e4:	dfc00117 	ldw	ra,4(sp)
  8002e8:	df000017 	ldw	fp,0(sp)
  8002ec:	dec00204 	addi	sp,sp,8
  8002f0:	f800283a 	ret

008002f4 <_Z9dma_checkv>:
/**********************************************/

void dma_check()
{
  8002f4:	defffb04 	addi	sp,sp,-20
  8002f8:	dfc00415 	stw	ra,16(sp)
  8002fc:	df000315 	stw	fp,12(sp)
  800300:	df000304 	addi	fp,sp,12
	int STATUS_MASK = 0x11111;
  800304:	00800074 	movhi	r2,1
  800308:	10844444 	addi	r2,r2,4369
  80030c:	e0bfff15 	stw	r2,-4(fp)

	printf("readaddress: %x, writeaddress: %x, length: %x, status: %x, control: %x\n",
  800310:	00804034 	movhi	r2,256
  800314:	11042137 	ldwio	r4,4228(r2)
  800318:	00804034 	movhi	r2,256
  80031c:	11442237 	ldwio	r5,4232(r2)
  800320:	00804034 	movhi	r2,256
  800324:	11842337 	ldwio	r6,4236(r2)
			IORD_ALTERA_AVALON_DMA_RADDRESS(DMA_BASE),
			IORD_ALTERA_AVALON_DMA_WADDRESS(DMA_BASE),
			IORD_ALTERA_AVALON_DMA_LENGTH(DMA_BASE),
			IORD_ALTERA_AVALON_DMA_STATUS(DMA_BASE) & STATUS_MASK,
  800328:	00804034 	movhi	r2,256
  80032c:	10c42037 	ldwio	r3,4224(r2)
	printf("readaddress: %x, writeaddress: %x, length: %x, status: %x, control: %x\n",
  800330:	e0bfff17 	ldw	r2,-4(fp)
  800334:	1884703a 	and	r2,r3,r2
  800338:	00c04034 	movhi	r3,256
  80033c:	18c42637 	ldwio	r3,4248(r3)
  800340:	d8c00115 	stw	r3,4(sp)
  800344:	d8800015 	stw	r2,0(sp)
  800348:	300f883a 	mov	r7,r6
  80034c:	280d883a 	mov	r6,r5
  800350:	200b883a 	mov	r5,r4
  800354:	01002074 	movhi	r4,129
  800358:	21040504 	addi	r4,r4,4116
  80035c:	08005d00 	call	8005d0 <printf>
			IORD_ALTERA_AVALON_DMA_CONTROL(DMA_BASE)
			);
}
  800360:	0001883a 	nop
  800364:	e037883a 	mov	sp,fp
  800368:	dfc00117 	ldw	ra,4(sp)
  80036c:	df000017 	ldw	fp,0(sp)
  800370:	dec00204 	addi	sp,sp,8
  800374:	f800283a 	ret

00800378 <_Z9dma_resetv>:

void dma_reset()
{
  800378:	defffe04 	addi	sp,sp,-8
  80037c:	dfc00115 	stw	ra,4(sp)
  800380:	df000015 	stw	fp,0(sp)
  800384:	d839883a 	mov	fp,sp
	printf("DMA RESET\n");
  800388:	01002074 	movhi	r4,129
  80038c:	21041704 	addi	r4,r4,4188
  800390:	08006f40 	call	8006f4 <puts>
	IOWR_ALTERA_AVALON_DMA_CONTROL(DMA_BASE, 0x1 << 12);
  800394:	00c40004 	movi	r3,4096
  800398:	00804034 	movhi	r2,256
  80039c:	10c42635 	stwio	r3,4248(r2)
	IOWR_ALTERA_AVALON_DMA_CONTROL(DMA_BASE, 0x1 << 12);
  8003a0:	00c40004 	movi	r3,4096
  8003a4:	00804034 	movhi	r2,256
  8003a8:	10c42635 	stwio	r3,4248(r2)
	dma_check();
  8003ac:	08002f40 	call	8002f4 <_Z9dma_checkv>
	printf("\n");
  8003b0:	01000284 	movi	r4,10
  8003b4:	08006100 	call	800610 <putchar>
}
  8003b8:	0001883a 	nop
  8003bc:	e037883a 	mov	sp,fp
  8003c0:	dfc00117 	ldw	ra,4(sp)
  8003c4:	df000017 	ldw	fp,0(sp)
  8003c8:	dec00204 	addi	sp,sp,8
  8003cc:	f800283a 	ret

008003d0 <_Z11dma_irq_regv>:
/***********************************************
 * Register the IRQ. Return 1 if the           *
 * registration failed.                        *
 **********************************************/
int dma_irq_reg()
{
  8003d0:	defffd04 	addi	sp,sp,-12
  8003d4:	dfc00215 	stw	ra,8(sp)
  8003d8:	df000115 	stw	fp,4(sp)
  8003dc:	df000104 	addi	fp,sp,4
    if(alt_ic_isr_register(DMA_IRQ_INTERRUPT_CONTROLLER_ID, DMA_IRQ, dma_isr, NULL, NULL) != 0)
  8003e0:	d8000015 	stw	zero,0(sp)
  8003e4:	000f883a 	mov	r7,zero
  8003e8:	01802034 	movhi	r6,128
  8003ec:	3180a104 	addi	r6,r6,644
  8003f0:	01400084 	movi	r5,2
  8003f4:	0009883a 	mov	r4,zero
  8003f8:	080dc940 	call	80dc94 <alt_ic_isr_register>
  8003fc:	1004c03a 	cmpne	r2,r2,zero
  800400:	10803fcc 	andi	r2,r2,255
  800404:	10000226 	beq	r2,zero,800410 <_Z11dma_irq_regv+0x40>
    {
       return 1;
  800408:	00800044 	movi	r2,1
  80040c:	00000106 	br	800414 <_Z11dma_irq_regv+0x44>
    }
    return 0;
  800410:	0005883a 	mov	r2,zero
}
  800414:	e037883a 	mov	sp,fp
  800418:	dfc00117 	ldw	ra,4(sp)
  80041c:	df000017 	ldw	fp,0(sp)
  800420:	dec00204 	addi	sp,sp,8
  800424:	f800283a 	ret

00800428 <_Z15mem_to_mem_copyPiS_ii>:
 * Function to write values to DMA registers.  *
 * Writing registers can't be done if the DMA  *
 * is busy and the function returns 1.         *
 **********************************************/
int mem_to_mem_copy(int * read_location, int * write_location, int length, int control)
{
  800428:	defffa04 	addi	sp,sp,-24
  80042c:	dfc00515 	stw	ra,20(sp)
  800430:	df000415 	stw	fp,16(sp)
  800434:	df000404 	addi	fp,sp,16
  800438:	e13fff15 	stw	r4,-4(fp)
  80043c:	e17ffe15 	stw	r5,-8(fp)
  800440:	e1bffd15 	stw	r6,-12(fp)
  800444:	e1fffc15 	stw	r7,-16(fp)
	printf("mem_to_mem_copy initiated\n");
  800448:	01002074 	movhi	r4,129
  80044c:	21041a04 	addi	r4,r4,4200
  800450:	08006f40 	call	8006f4 <puts>

    if((DMA_RD_STATUS(DMA_BASE) & DMA_BUSY_BIT)==DMA_BUSY_BIT)
  800454:	00804034 	movhi	r2,256
  800458:	10842037 	ldwio	r2,4224(r2)
  80045c:	1080008c 	andi	r2,r2,2
  800460:	108000a0 	cmpeqi	r2,r2,2
  800464:	10803fcc 	andi	r2,r2,255
  800468:	10000226 	beq	r2,zero,800474 <_Z15mem_to_mem_copyPiS_ii+0x4c>
    {
        return 1;
  80046c:	00800044 	movi	r2,1
  800470:	00001006 	br	8004b4 <_Z15mem_to_mem_copyPiS_ii+0x8c>
    }

    /*Read buffer address*/
    DMA_WR_READADDR(DMA_BASE, (unsigned int)read_location);
  800474:	e0ffff17 	ldw	r3,-4(fp)
  800478:	00804034 	movhi	r2,256
  80047c:	10c42135 	stwio	r3,4228(r2)
    /*Write buffer address*/
    DMA_WR_WRITEADDR(DMA_BASE, (unsigned int)write_location);
  800480:	e0fffe17 	ldw	r3,-8(fp)
  800484:	00804034 	movhi	r2,256
  800488:	10c42235 	stwio	r3,4232(r2)
    /*Data length size*/
    DMA_WR_LEN(DMA_BASE, length);
  80048c:	e0fffd17 	ldw	r3,-12(fp)
  800490:	00804034 	movhi	r2,256
  800494:	10c42335 	stwio	r3,4236(r2)
    /*Control register*/
    DMA_WR_CTRL(DMA_BASE, control);
  800498:	e0fffc17 	ldw	r3,-16(fp)
  80049c:	00804034 	movhi	r2,256
  8004a0:	10c42635 	stwio	r3,4248(r2)

    dma_check();
  8004a4:	08002f40 	call	8002f4 <_Z9dma_checkv>
    printf("\n");
  8004a8:	01000284 	movi	r4,10
  8004ac:	08006100 	call	800610 <putchar>
    return 0;
  8004b0:	0005883a 	mov	r2,zero
}
  8004b4:	e037883a 	mov	sp,fp
  8004b8:	dfc00117 	ldw	ra,4(sp)
  8004bc:	df000017 	ldw	fp,0(sp)
  8004c0:	dec00204 	addi	sp,sp,8
  8004c4:	f800283a 	ret

008004c8 <main>:
#include "includes_and_settings.h"

int main (int argc, char* argv[], char* envp[])
{
  8004c8:	defff104 	addi	sp,sp,-60
  8004cc:	dfc00e15 	stw	ra,56(sp)
  8004d0:	df000d15 	stw	fp,52(sp)
  8004d4:	df000d04 	addi	fp,sp,52
  8004d8:	e13ff515 	stw	r4,-44(fp)
  8004dc:	e17ff415 	stw	r5,-48(fp)
  8004e0:	e1bff315 	stw	r6,-52(fp)
	printf("Testing DMA!\n");
  8004e4:	01002074 	movhi	r4,129
  8004e8:	21042104 	addi	r4,r4,4228
  8004ec:	08006f40 	call	8006f4 <puts>

	//INITIALISE MEMORY
	int source_ptr[8]{0};
  8004f0:	e03ff615 	stw	zero,-40(fp)
  8004f4:	e03ff715 	stw	zero,-36(fp)
  8004f8:	e03ff815 	stw	zero,-32(fp)
  8004fc:	e03ff915 	stw	zero,-28(fp)
  800500:	e03ffa15 	stw	zero,-24(fp)
  800504:	e03ffb15 	stw	zero,-20(fp)
  800508:	e03ffc15 	stw	zero,-16(fp)
  80050c:	e03ffd15 	stw	zero,-12(fp)
	int* destination_ptr = 0;
  800510:	e03fff15 	stw	zero,-4(fp)

	//INITIALISE DMA
	dma_reset();
  800514:	08003780 	call	800378 <_Z9dma_resetv>


	int _control = (/*DMA_GO_BIT |*/ DMA_WORD | DMA_IRQ_E_BIT | DMA_LEEN);
  800518:	00802504 	movi	r2,148
  80051c:	e0bffe15 	stw	r2,-8(fp)

	if (dma_irq_reg()){
  800520:	08003d00 	call	8003d0 <_Z11dma_irq_regv>
  800524:	1004c03a 	cmpne	r2,r2,zero
  800528:	10803fcc 	andi	r2,r2,255
  80052c:	10000326 	beq	r2,zero,80053c <main+0x74>
		printf("ERROR failed to register isr\n");
  800530:	01002074 	movhi	r4,129
  800534:	21042504 	addi	r4,r4,4244
  800538:	08006f40 	call	8006f4 <puts>
	}

	source_ptr[0] = 32;
  80053c:	00800804 	movi	r2,32
  800540:	e0bff615 	stw	r2,-40(fp)
	source_ptr[1] = 64;
  800544:	00801004 	movi	r2,64
  800548:	e0bff715 	stw	r2,-36(fp)

	alt_icache_flush_all();
  80054c:	080dc600 	call	80dc60 <alt_icache_flush_all>
	alt_dcache_flush_all();
  800550:	080da980 	call	80da98 <alt_dcache_flush_all>

	// FIRST TRANSFER
	if (mem_to_mem_copy(source_ptr, destination_ptr, BUFFER_SIZE, _control))
  800554:	e0bff604 	addi	r2,fp,-40
  800558:	e1fffe17 	ldw	r7,-8(fp)
  80055c:	01800204 	movi	r6,8
  800560:	e17fff17 	ldw	r5,-4(fp)
  800564:	1009883a 	mov	r4,r2
  800568:	08004280 	call	800428 <_Z15mem_to_mem_copyPiS_ii>
  80056c:	1004c03a 	cmpne	r2,r2,zero
  800570:	10803fcc 	andi	r2,r2,255
  800574:	10000326 	beq	r2,zero,800584 <main+0xbc>
	{
		printf("ERROR DMA busy\n");
  800578:	01002074 	movhi	r4,129
  80057c:	21042d04 	addi	r4,r4,4276
  800580:	08006f40 	call	8006f4 <puts>
	}
	DMA_WR_CTRL(DMA_BASE, _control | DMA_GO_BIT);
  800584:	e0bffe17 	ldw	r2,-8(fp)
  800588:	10c00214 	ori	r3,r2,8
  80058c:	00804034 	movhi	r2,256
  800590:	10c42635 	stwio	r3,4248(r2)

	alt_icache_flush_all();
  800594:	080dc600 	call	80dc60 <alt_icache_flush_all>
	alt_dcache_flush_all();
  800598:	080da980 	call	80da98 <alt_dcache_flush_all>

	while(true);
  80059c:	003fff06 	br	80059c <main+0xd4>

008005a0 <_printf_r>:
  8005a0:	defffd04 	addi	sp,sp,-12
  8005a4:	2805883a 	mov	r2,r5
  8005a8:	dfc00015 	stw	ra,0(sp)
  8005ac:	d9800115 	stw	r6,4(sp)
  8005b0:	d9c00215 	stw	r7,8(sp)
  8005b4:	21400217 	ldw	r5,8(r4)
  8005b8:	d9c00104 	addi	r7,sp,4
  8005bc:	100d883a 	mov	r6,r2
  8005c0:	080079c0 	call	80079c <___vfprintf_internal_r>
  8005c4:	dfc00017 	ldw	ra,0(sp)
  8005c8:	dec00304 	addi	sp,sp,12
  8005cc:	f800283a 	ret

008005d0 <printf>:
  8005d0:	defffc04 	addi	sp,sp,-16
  8005d4:	dfc00015 	stw	ra,0(sp)
  8005d8:	d9400115 	stw	r5,4(sp)
  8005dc:	d9800215 	stw	r6,8(sp)
  8005e0:	d9c00315 	stw	r7,12(sp)
  8005e4:	00802074 	movhi	r2,129
  8005e8:	108ce817 	ldw	r2,13216(r2)
  8005ec:	200b883a 	mov	r5,r4
  8005f0:	d9800104 	addi	r6,sp,4
  8005f4:	11000217 	ldw	r4,8(r2)
  8005f8:	08028a00 	call	8028a0 <__vfprintf_internal>
  8005fc:	dfc00017 	ldw	ra,0(sp)
  800600:	dec00404 	addi	sp,sp,16
  800604:	f800283a 	ret

00800608 <_putchar_r>:
  800608:	21800217 	ldw	r6,8(r4)
  80060c:	08075441 	jmpi	807544 <_putc_r>

00800610 <putchar>:
  800610:	00802074 	movhi	r2,129
  800614:	108ce817 	ldw	r2,13216(r2)
  800618:	200b883a 	mov	r5,r4
  80061c:	11800217 	ldw	r6,8(r2)
  800620:	1009883a 	mov	r4,r2
  800624:	08075441 	jmpi	807544 <_putc_r>

00800628 <_puts_r>:
  800628:	defff504 	addi	sp,sp,-44
  80062c:	dc000815 	stw	r16,32(sp)
  800630:	2021883a 	mov	r16,r4
  800634:	2809883a 	mov	r4,r5
  800638:	dc400915 	stw	r17,36(sp)
  80063c:	dfc00a15 	stw	ra,40(sp)
  800640:	2823883a 	mov	r17,r5
  800644:	08007040 	call	800704 <strlen>
  800648:	11000044 	addi	r4,r2,1
  80064c:	d8800515 	stw	r2,20(sp)
  800650:	00800044 	movi	r2,1
  800654:	00c02074 	movhi	r3,129
  800658:	d8800715 	stw	r2,28(sp)
  80065c:	d8800404 	addi	r2,sp,16
  800660:	18c43104 	addi	r3,r3,4292
  800664:	d8800115 	stw	r2,4(sp)
  800668:	00800084 	movi	r2,2
  80066c:	dc400415 	stw	r17,16(sp)
  800670:	d8c00615 	stw	r3,24(sp)
  800674:	d9000315 	stw	r4,12(sp)
  800678:	d8800215 	stw	r2,8(sp)
  80067c:	81400217 	ldw	r5,8(r16)
  800680:	80000226 	beq	r16,zero,80068c <_puts_r+0x64>
  800684:	80800e17 	ldw	r2,56(r16)
  800688:	10001326 	beq	r2,zero,8006d8 <_puts_r+0xb0>
  80068c:	2880030b 	ldhu	r2,12(r5)
  800690:	10c8000c 	andi	r3,r2,8192
  800694:	1800061e 	bne	r3,zero,8006b0 <_puts_r+0x88>
  800698:	28c01917 	ldw	r3,100(r5)
  80069c:	0137ffc4 	movi	r4,-8193
  8006a0:	10880014 	ori	r2,r2,8192
  8006a4:	1906703a 	and	r3,r3,r4
  8006a8:	2880030d 	sth	r2,12(r5)
  8006ac:	28c01915 	stw	r3,100(r5)
  8006b0:	d9800104 	addi	r6,sp,4
  8006b4:	8009883a 	mov	r4,r16
  8006b8:	0804f180 	call	804f18 <__sfvwrite_r>
  8006bc:	10000b1e 	bne	r2,zero,8006ec <_puts_r+0xc4>
  8006c0:	00800284 	movi	r2,10
  8006c4:	dfc00a17 	ldw	ra,40(sp)
  8006c8:	dc400917 	ldw	r17,36(sp)
  8006cc:	dc000817 	ldw	r16,32(sp)
  8006d0:	dec00b04 	addi	sp,sp,44
  8006d4:	f800283a 	ret
  8006d8:	8009883a 	mov	r4,r16
  8006dc:	d9400015 	stw	r5,0(sp)
  8006e0:	0804ab80 	call	804ab8 <__sinit>
  8006e4:	d9400017 	ldw	r5,0(sp)
  8006e8:	003fe806 	br	80068c <_puts_r+0x64>
  8006ec:	00bfffc4 	movi	r2,-1
  8006f0:	003ff406 	br	8006c4 <_puts_r+0x9c>

008006f4 <puts>:
  8006f4:	00802074 	movhi	r2,129
  8006f8:	200b883a 	mov	r5,r4
  8006fc:	110ce817 	ldw	r4,13216(r2)
  800700:	08006281 	jmpi	800628 <_puts_r>

00800704 <strlen>:
  800704:	208000cc 	andi	r2,r4,3
  800708:	10000926 	beq	r2,zero,800730 <strlen+0x2c>
  80070c:	2005883a 	mov	r2,r4
  800710:	00000306 	br	800720 <strlen+0x1c>
  800714:	10800044 	addi	r2,r2,1
  800718:	10c000cc 	andi	r3,r2,3
  80071c:	18000526 	beq	r3,zero,800734 <strlen+0x30>
  800720:	10c00007 	ldb	r3,0(r2)
  800724:	183ffb1e 	bne	r3,zero,800714 <strlen+0x10>
  800728:	1105c83a 	sub	r2,r2,r4
  80072c:	f800283a 	ret
  800730:	2005883a 	mov	r2,r4
  800734:	11400017 	ldw	r5,0(r2)
  800738:	01ffbff4 	movhi	r7,65279
  80073c:	39ffbfc4 	addi	r7,r7,-257
  800740:	29c7883a 	add	r3,r5,r7
  800744:	01a02074 	movhi	r6,32897
  800748:	014a303a 	nor	r5,zero,r5
  80074c:	1946703a 	and	r3,r3,r5
  800750:	31a02004 	addi	r6,r6,-32640
  800754:	1986703a 	and	r3,r3,r6
  800758:	1800071e 	bne	r3,zero,800778 <strlen+0x74>
  80075c:	11400117 	ldw	r5,4(r2)
  800760:	10800104 	addi	r2,r2,4
  800764:	29c7883a 	add	r3,r5,r7
  800768:	014a303a 	nor	r5,zero,r5
  80076c:	1946703a 	and	r3,r3,r5
  800770:	1986703a 	and	r3,r3,r6
  800774:	183ff926 	beq	r3,zero,80075c <strlen+0x58>
  800778:	10c00007 	ldb	r3,0(r2)
  80077c:	183fea26 	beq	r3,zero,800728 <strlen+0x24>
  800780:	10c00047 	ldb	r3,1(r2)
  800784:	10800044 	addi	r2,r2,1
  800788:	183fe726 	beq	r3,zero,800728 <strlen+0x24>
  80078c:	10c00047 	ldb	r3,1(r2)
  800790:	10800044 	addi	r2,r2,1
  800794:	183ffa1e 	bne	r3,zero,800780 <strlen+0x7c>
  800798:	003fe306 	br	800728 <strlen+0x24>

0080079c <___vfprintf_internal_r>:
  80079c:	deffbf04 	addi	sp,sp,-260
  8007a0:	dfc04015 	stw	ra,256(sp)
  8007a4:	dd803d15 	stw	r22,244(sp)
  8007a8:	dcc03a15 	stw	r19,232(sp)
  8007ac:	dc803915 	stw	r18,228(sp)
  8007b0:	2027883a 	mov	r19,r4
  8007b4:	2825883a 	mov	r18,r5
  8007b8:	302d883a 	mov	r22,r6
  8007bc:	d9c00615 	stw	r7,24(sp)
  8007c0:	df003f15 	stw	fp,252(sp)
  8007c4:	ddc03e15 	stw	r23,248(sp)
  8007c8:	dd403c15 	stw	r21,240(sp)
  8007cc:	dd003b15 	stw	r20,236(sp)
  8007d0:	dc403815 	stw	r17,224(sp)
  8007d4:	dc003715 	stw	r16,220(sp)
  8007d8:	08055280 	call	805528 <_localeconv_r>
  8007dc:	10800017 	ldw	r2,0(r2)
  8007e0:	1009883a 	mov	r4,r2
  8007e4:	d8800d15 	stw	r2,52(sp)
  8007e8:	08007040 	call	800704 <strlen>
  8007ec:	d8800b15 	stw	r2,44(sp)
  8007f0:	98000226 	beq	r19,zero,8007fc <___vfprintf_internal_r+0x60>
  8007f4:	98800e17 	ldw	r2,56(r19)
  8007f8:	1001e026 	beq	r2,zero,800f7c <___vfprintf_internal_r+0x7e0>
  8007fc:	9080030b 	ldhu	r2,12(r18)
  800800:	10c8000c 	andi	r3,r2,8192
  800804:	1800061e 	bne	r3,zero,800820 <___vfprintf_internal_r+0x84>
  800808:	90c01917 	ldw	r3,100(r18)
  80080c:	0137ffc4 	movi	r4,-8193
  800810:	10880014 	ori	r2,r2,8192
  800814:	1906703a 	and	r3,r3,r4
  800818:	9080030d 	sth	r2,12(r18)
  80081c:	90c01915 	stw	r3,100(r18)
  800820:	10c0020c 	andi	r3,r2,8
  800824:	1800fc26 	beq	r3,zero,800c18 <___vfprintf_internal_r+0x47c>
  800828:	90c00417 	ldw	r3,16(r18)
  80082c:	1800fa26 	beq	r3,zero,800c18 <___vfprintf_internal_r+0x47c>
  800830:	1080068c 	andi	r2,r2,26
  800834:	10800298 	cmpnei	r2,r2,10
  800838:	1000ff26 	beq	r2,zero,800c38 <___vfprintf_internal_r+0x49c>
  80083c:	d8802704 	addi	r2,sp,156
  800840:	b02f883a 	mov	r23,r22
  800844:	d8801a15 	stw	r2,104(sp)
  800848:	d8001c15 	stw	zero,112(sp)
  80084c:	d8001b15 	stw	zero,108(sp)
  800850:	d8000815 	stw	zero,32(sp)
  800854:	d8000915 	stw	zero,36(sp)
  800858:	d8000a15 	stw	zero,40(sp)
  80085c:	d8000c15 	stw	zero,48(sp)
  800860:	d8001015 	stw	zero,64(sp)
  800864:	d8000515 	stw	zero,20(sp)
  800868:	102d883a 	mov	r22,r2
  80086c:	b8800007 	ldb	r2,0(r23)
  800870:	1000d726 	beq	r2,zero,800bd0 <___vfprintf_internal_r+0x434>
  800874:	b821883a 	mov	r16,r23
  800878:	00000306 	br	800888 <___vfprintf_internal_r+0xec>
  80087c:	80800047 	ldb	r2,1(r16)
  800880:	84000044 	addi	r16,r16,1
  800884:	10012226 	beq	r2,zero,800d10 <___vfprintf_internal_r+0x574>
  800888:	10800958 	cmpnei	r2,r2,37
  80088c:	103ffb1e 	bne	r2,zero,80087c <___vfprintf_internal_r+0xe0>
  800890:	85e3c83a 	sub	r17,r16,r23
  800894:	85c1201e 	bne	r16,r23,800d18 <___vfprintf_internal_r+0x57c>
  800898:	80800003 	ldbu	r2,0(r16)
  80089c:	10803fcc 	andi	r2,r2,255
  8008a0:	1080201c 	xori	r2,r2,128
  8008a4:	10bfe004 	addi	r2,r2,-128
  8008a8:	1000c926 	beq	r2,zero,800bd0 <___vfprintf_internal_r+0x434>
  8008ac:	82c00047 	ldb	r11,1(r16)
  8008b0:	85c00044 	addi	r23,r16,1
  8008b4:	d8001345 	stb	zero,77(sp)
  8008b8:	0009883a 	mov	r4,zero
  8008bc:	000b883a 	mov	r5,zero
  8008c0:	023fffc4 	movi	r8,-1
  8008c4:	0021883a 	mov	r16,zero
  8008c8:	0019883a 	mov	r12,zero
  8008cc:	bdc00044 	addi	r23,r23,1
  8008d0:	5839883a 	mov	fp,r11
  8008d4:	e0bff804 	addi	r2,fp,-32
  8008d8:	10c01668 	cmpgeui	r3,r2,89
  8008dc:	18006c1e 	bne	r3,zero,800a90 <___vfprintf_internal_r+0x2f4>
  8008e0:	100490ba 	slli	r2,r2,2
  8008e4:	00c02034 	movhi	r3,128
  8008e8:	10c7883a 	add	r3,r2,r3
  8008ec:	18823d17 	ldw	r2,2292(r3)
  8008f0:	1000683a 	jmp	r2
  8008f4:	00801244 	movi	r2,73
  8008f8:	00800a90 	cmplti	r2,zero,42
  8008fc:	00800a90 	cmplti	r2,zero,42
  800900:	00801238 	rdprs	r2,zero,72
  800904:	00800a90 	cmplti	r2,zero,42
  800908:	00800a90 	cmplti	r2,zero,42
  80090c:	00800a90 	cmplti	r2,zero,42
  800910:	00800a90 	cmplti	r2,zero,42
  800914:	00800a90 	cmplti	r2,zero,42
  800918:	00800a90 	cmplti	r2,zero,42
  80091c:	00801210 	cmplti	r2,zero,72
  800920:	00801200 	call	80120 <__alt_mem_sdram-0x77fee0>
  800924:	00800a90 	cmplti	r2,zero,42
  800928:	008011e8 	cmpgeui	r2,zero,71
  80092c:	0080119c 	xori	r2,zero,70
  800930:	00800a90 	cmplti	r2,zero,42
  800934:	00801190 	cmplti	r2,zero,70
  800938:	00800a58 	cmpnei	r2,zero,41
  80093c:	00800a58 	cmpnei	r2,zero,41
  800940:	00800a58 	cmpnei	r2,zero,41
  800944:	00800a58 	cmpnei	r2,zero,41
  800948:	00800a58 	cmpnei	r2,zero,41
  80094c:	00800a58 	cmpnei	r2,zero,41
  800950:	00800a58 	cmpnei	r2,zero,41
  800954:	00800a58 	cmpnei	r2,zero,41
  800958:	00800a58 	cmpnei	r2,zero,41
  80095c:	00800a90 	cmplti	r2,zero,42
  800960:	00800a90 	cmplti	r2,zero,42
  800964:	00800a90 	cmplti	r2,zero,42
  800968:	00800a90 	cmplti	r2,zero,42
  80096c:	00800a90 	cmplti	r2,zero,42
  800970:	00800a90 	cmplti	r2,zero,42
  800974:	00800a90 	cmplti	r2,zero,42
  800978:	00800a90 	cmplti	r2,zero,42
  80097c:	00800a90 	cmplti	r2,zero,42
  800980:	00800a90 	cmplti	r2,zero,42
  800984:	008010a8 	cmpgeui	r2,zero,66
  800988:	00800d74 	movhi	r2,53
  80098c:	00800a90 	cmplti	r2,zero,42
  800990:	00800d74 	movhi	r2,53
  800994:	00800a90 	cmplti	r2,zero,42
  800998:	00800a90 	cmplti	r2,zero,42
  80099c:	00800a90 	cmplti	r2,zero,42
  8009a0:	00800a90 	cmplti	r2,zero,42
  8009a4:	0080109c 	xori	r2,zero,66
  8009a8:	00800a90 	cmplti	r2,zero,42
  8009ac:	00800a90 	cmplti	r2,zero,42
  8009b0:	00800ca8 	cmpgeui	r2,zero,50
  8009b4:	00800a90 	cmplti	r2,zero,42
  8009b8:	00800a90 	cmplti	r2,zero,42
  8009bc:	00800a90 	cmplti	r2,zero,42
  8009c0:	00800a90 	cmplti	r2,zero,42
  8009c4:	00800a90 	cmplti	r2,zero,42
  8009c8:	00800c80 	call	800c8 <__alt_mem_sdram-0x77ff38>
  8009cc:	00800a90 	cmplti	r2,zero,42
  8009d0:	00800a90 	cmplti	r2,zero,42
  8009d4:	00801054 	movui	r2,65
  8009d8:	00800a90 	cmplti	r2,zero,42
  8009dc:	00800a90 	cmplti	r2,zero,42
  8009e0:	00800a90 	cmplti	r2,zero,42
  8009e4:	00800a90 	cmplti	r2,zero,42
  8009e8:	00800a90 	cmplti	r2,zero,42
  8009ec:	00800a90 	cmplti	r2,zero,42
  8009f0:	00800a90 	cmplti	r2,zero,42
  8009f4:	00800a90 	cmplti	r2,zero,42
  8009f8:	00800a90 	cmplti	r2,zero,42
  8009fc:	00800a90 	cmplti	r2,zero,42
  800a00:	0080102c 	andhi	r2,zero,64
  800a04:	00800f88 	cmpgei	r2,zero,62
  800a08:	00800d74 	movhi	r2,53
  800a0c:	00800d74 	movhi	r2,53
  800a10:	00800d74 	movhi	r2,53
  800a14:	00801020 	cmpeqi	r2,zero,64
  800a18:	00800f88 	cmpgei	r2,zero,62
  800a1c:	00800a90 	cmplti	r2,zero,42
  800a20:	00800a90 	cmplti	r2,zero,42
  800a24:	00801398 	cmpnei	r2,zero,78
  800a28:	00800a90 	cmplti	r2,zero,42
  800a2c:	0080135c 	xori	r2,zero,77
  800a30:	00800cac 	andhi	r2,zero,50
  800a34:	0080131c 	xori	r2,zero,76
  800a38:	00801310 	cmplti	r2,zero,76
  800a3c:	00800a90 	cmplti	r2,zero,42
  800a40:	008012b8 	rdprs	r2,zero,74
  800a44:	00800a90 	cmplti	r2,zero,42
  800a48:	00800c84 	movi	r2,50
  800a4c:	00800a90 	cmplti	r2,zero,42
  800a50:	00800a90 	cmplti	r2,zero,42
  800a54:	00801270 	cmpltui	r2,zero,73
  800a58:	0021883a 	mov	r16,zero
  800a5c:	e0fff404 	addi	r3,fp,-48
  800a60:	800490ba 	slli	r2,r16,2
  800a64:	bf000007 	ldb	fp,0(r23)
  800a68:	bdc00044 	addi	r23,r23,1
  800a6c:	1421883a 	add	r16,r2,r16
  800a70:	8421883a 	add	r16,r16,r16
  800a74:	1c21883a 	add	r16,r3,r16
  800a78:	e0fff404 	addi	r3,fp,-48
  800a7c:	188002b0 	cmpltui	r2,r3,10
  800a80:	103ff71e 	bne	r2,zero,800a60 <___vfprintf_internal_r+0x2c4>
  800a84:	e0bff804 	addi	r2,fp,-32
  800a88:	10c01668 	cmpgeui	r3,r2,89
  800a8c:	183f9426 	beq	r3,zero,8008e0 <___vfprintf_internal_r+0x144>
  800a90:	21003fcc 	andi	r4,r4,255
  800a94:	2006871e 	bne	r4,zero,8024b4 <___vfprintf_internal_r+0x1d18>
  800a98:	e0004d26 	beq	fp,zero,800bd0 <___vfprintf_internal_r+0x434>
  800a9c:	df001d05 	stb	fp,116(sp)
  800aa0:	d8001345 	stb	zero,77(sp)
  800aa4:	05000044 	movi	r20,1
  800aa8:	05400044 	movi	r21,1
  800aac:	dc401d04 	addi	r17,sp,116
  800ab0:	db000415 	stw	r12,16(sp)
  800ab4:	0011883a 	mov	r8,zero
  800ab8:	d8000715 	stw	zero,28(sp)
  800abc:	d8800417 	ldw	r2,16(sp)
  800ac0:	1380008c 	andi	r14,r2,2
  800ac4:	70000126 	beq	r14,zero,800acc <___vfprintf_internal_r+0x330>
  800ac8:	a5000084 	addi	r20,r20,2
  800acc:	d8800417 	ldw	r2,16(sp)
  800ad0:	d8c01c17 	ldw	r3,112(sp)
  800ad4:	1340210c 	andi	r13,r2,132
  800ad8:	6800021e 	bne	r13,zero,800ae4 <___vfprintf_internal_r+0x348>
  800adc:	850fc83a 	sub	r7,r16,r20
  800ae0:	01c34516 	blt	zero,r7,8017f8 <___vfprintf_internal_r+0x105c>
  800ae4:	d8801347 	ldb	r2,77(sp)
  800ae8:	10000c26 	beq	r2,zero,800b1c <___vfprintf_internal_r+0x380>
  800aec:	d8801b17 	ldw	r2,108(sp)
  800af0:	d9001344 	addi	r4,sp,77
  800af4:	18c00044 	addi	r3,r3,1
  800af8:	10800044 	addi	r2,r2,1
  800afc:	b1000015 	stw	r4,0(r22)
  800b00:	01000044 	movi	r4,1
  800b04:	d8801b15 	stw	r2,108(sp)
  800b08:	b1000115 	stw	r4,4(r22)
  800b0c:	d8c01c15 	stw	r3,112(sp)
  800b10:	10800208 	cmpgei	r2,r2,8
  800b14:	1003791e 	bne	r2,zero,8018fc <___vfprintf_internal_r+0x1160>
  800b18:	b5800204 	addi	r22,r22,8
  800b1c:	70000c26 	beq	r14,zero,800b50 <___vfprintf_internal_r+0x3b4>
  800b20:	d8801b17 	ldw	r2,108(sp)
  800b24:	d9001384 	addi	r4,sp,78
  800b28:	18c00084 	addi	r3,r3,2
  800b2c:	10800044 	addi	r2,r2,1
  800b30:	b1000015 	stw	r4,0(r22)
  800b34:	01000084 	movi	r4,2
  800b38:	d8801b15 	stw	r2,108(sp)
  800b3c:	b1000115 	stw	r4,4(r22)
  800b40:	d8c01c15 	stw	r3,112(sp)
  800b44:	10800208 	cmpgei	r2,r2,8
  800b48:	10037a1e 	bne	r2,zero,801934 <___vfprintf_internal_r+0x1198>
  800b4c:	b5800204 	addi	r22,r22,8
  800b50:	6b402018 	cmpnei	r13,r13,128
  800b54:	68025b26 	beq	r13,zero,8014c4 <___vfprintf_internal_r+0xd28>
  800b58:	4551c83a 	sub	r8,r8,r21
  800b5c:	02029316 	blt	zero,r8,8015ac <___vfprintf_internal_r+0xe10>
  800b60:	d8800417 	ldw	r2,16(sp)
  800b64:	1080400c 	andi	r2,r2,256
  800b68:	1002101e 	bne	r2,zero,8013ac <___vfprintf_internal_r+0xc10>
  800b6c:	d8801b17 	ldw	r2,108(sp)
  800b70:	1d47883a 	add	r3,r3,r21
  800b74:	b4400015 	stw	r17,0(r22)
  800b78:	10800044 	addi	r2,r2,1
  800b7c:	b5400115 	stw	r21,4(r22)
  800b80:	d8801b15 	stw	r2,108(sp)
  800b84:	d8c01c15 	stw	r3,112(sp)
  800b88:	10800208 	cmpgei	r2,r2,8
  800b8c:	1003101e 	bne	r2,zero,8017d0 <___vfprintf_internal_r+0x1034>
  800b90:	b5800204 	addi	r22,r22,8
  800b94:	d8800417 	ldw	r2,16(sp)
  800b98:	1440010c 	andi	r17,r2,4
  800b9c:	88000226 	beq	r17,zero,800ba8 <___vfprintf_internal_r+0x40c>
  800ba0:	8523c83a 	sub	r17,r16,r20
  800ba4:	0440c616 	blt	zero,r17,800ec0 <___vfprintf_internal_r+0x724>
  800ba8:	8500010e 	bge	r16,r20,800bb0 <___vfprintf_internal_r+0x414>
  800bac:	a021883a 	mov	r16,r20
  800bb0:	d8800517 	ldw	r2,20(sp)
  800bb4:	1405883a 	add	r2,r2,r16
  800bb8:	d8800515 	stw	r2,20(sp)
  800bbc:	1802c21e 	bne	r3,zero,8016c8 <___vfprintf_internal_r+0xf2c>
  800bc0:	b8800007 	ldb	r2,0(r23)
  800bc4:	d8001b15 	stw	zero,108(sp)
  800bc8:	dd802704 	addi	r22,sp,156
  800bcc:	103f291e 	bne	r2,zero,800874 <___vfprintf_internal_r+0xd8>
  800bd0:	d8801c17 	ldw	r2,112(sp)
  800bd4:	1006391e 	bne	r2,zero,8024bc <___vfprintf_internal_r+0x1d20>
  800bd8:	9080030b 	ldhu	r2,12(r18)
  800bdc:	1080100c 	andi	r2,r2,64
  800be0:	1006cf1e 	bne	r2,zero,802720 <___vfprintf_internal_r+0x1f84>
  800be4:	d8800517 	ldw	r2,20(sp)
  800be8:	dfc04017 	ldw	ra,256(sp)
  800bec:	df003f17 	ldw	fp,252(sp)
  800bf0:	ddc03e17 	ldw	r23,248(sp)
  800bf4:	dd803d17 	ldw	r22,244(sp)
  800bf8:	dd403c17 	ldw	r21,240(sp)
  800bfc:	dd003b17 	ldw	r20,236(sp)
  800c00:	dcc03a17 	ldw	r19,232(sp)
  800c04:	dc803917 	ldw	r18,228(sp)
  800c08:	dc403817 	ldw	r17,224(sp)
  800c0c:	dc003717 	ldw	r16,220(sp)
  800c10:	dec04104 	addi	sp,sp,260
  800c14:	f800283a 	ret
  800c18:	900b883a 	mov	r5,r18
  800c1c:	9809883a 	mov	r4,r19
  800c20:	080297c0 	call	80297c <__swsetup_r>
  800c24:	1006be1e 	bne	r2,zero,802720 <___vfprintf_internal_r+0x1f84>
  800c28:	9080030b 	ldhu	r2,12(r18)
  800c2c:	1080068c 	andi	r2,r2,26
  800c30:	10800298 	cmpnei	r2,r2,10
  800c34:	103f011e 	bne	r2,zero,80083c <___vfprintf_internal_r+0xa0>
  800c38:	9080038f 	ldh	r2,14(r18)
  800c3c:	103eff16 	blt	r2,zero,80083c <___vfprintf_internal_r+0xa0>
  800c40:	d9c00617 	ldw	r7,24(sp)
  800c44:	b00d883a 	mov	r6,r22
  800c48:	900b883a 	mov	r5,r18
  800c4c:	9809883a 	mov	r4,r19
  800c50:	dfc04017 	ldw	ra,256(sp)
  800c54:	df003f17 	ldw	fp,252(sp)
  800c58:	ddc03e17 	ldw	r23,248(sp)
  800c5c:	dd803d17 	ldw	r22,244(sp)
  800c60:	dd403c17 	ldw	r21,240(sp)
  800c64:	dd003b17 	ldw	r20,236(sp)
  800c68:	dcc03a17 	ldw	r19,232(sp)
  800c6c:	dc803917 	ldw	r18,228(sp)
  800c70:	dc403817 	ldw	r17,224(sp)
  800c74:	dc003717 	ldw	r16,220(sp)
  800c78:	dec04104 	addi	sp,sp,260
  800c7c:	08028bc1 	jmpi	8028bc <__sbprintf>
  800c80:	63000414 	ori	r12,r12,16
  800c84:	6080080c 	andi	r2,r12,32
  800c88:	10008126 	beq	r2,zero,800e90 <___vfprintf_internal_r+0x6f4>
  800c8c:	d8c00617 	ldw	r3,24(sp)
  800c90:	00800044 	movi	r2,1
  800c94:	1d000017 	ldw	r20,0(r3)
  800c98:	1d400117 	ldw	r21,4(r3)
  800c9c:	18c00204 	addi	r3,r3,8
  800ca0:	d8c00615 	stw	r3,24(sp)
  800ca4:	00000906 	br	800ccc <___vfprintf_internal_r+0x530>
  800ca8:	63000414 	ori	r12,r12,16
  800cac:	6080080c 	andi	r2,r12,32
  800cb0:	10006b26 	beq	r2,zero,800e60 <___vfprintf_internal_r+0x6c4>
  800cb4:	d8c00617 	ldw	r3,24(sp)
  800cb8:	0005883a 	mov	r2,zero
  800cbc:	1d000017 	ldw	r20,0(r3)
  800cc0:	1d400117 	ldw	r21,4(r3)
  800cc4:	18c00204 	addi	r3,r3,8
  800cc8:	d8c00615 	stw	r3,24(sp)
  800ccc:	d8001345 	stb	zero,77(sp)
  800cd0:	40ffffe0 	cmpeqi	r3,r8,-1
  800cd4:	001b883a 	mov	r13,zero
  800cd8:	18010e1e 	bne	r3,zero,801114 <___vfprintf_internal_r+0x978>
  800cdc:	047fdfc4 	movi	r17,-129
  800ce0:	6448703a 	and	r4,r12,r17
  800ce4:	a546b03a 	or	r3,r20,r21
  800ce8:	d9000415 	stw	r4,16(sp)
  800cec:	1802c01e 	bne	r3,zero,8017f0 <___vfprintf_internal_r+0x1054>
  800cf0:	40025f1e 	bne	r8,zero,801670 <___vfprintf_internal_r+0xed4>
  800cf4:	1003751e 	bne	r2,zero,801acc <___vfprintf_internal_r+0x1330>
  800cf8:	6540004c 	andi	r21,r12,1
  800cfc:	a803b026 	beq	r21,zero,801bc0 <___vfprintf_internal_r+0x1424>
  800d00:	00800c04 	movi	r2,48
  800d04:	d88026c5 	stb	r2,155(sp)
  800d08:	dc4026c4 	addi	r17,sp,155
  800d0c:	0000ba06 	br	800ff8 <___vfprintf_internal_r+0x85c>
  800d10:	85e3c83a 	sub	r17,r16,r23
  800d14:	85ffae26 	beq	r16,r23,800bd0 <___vfprintf_internal_r+0x434>
  800d18:	d8c01c17 	ldw	r3,112(sp)
  800d1c:	d8801b17 	ldw	r2,108(sp)
  800d20:	b5c00015 	stw	r23,0(r22)
  800d24:	1c47883a 	add	r3,r3,r17
  800d28:	10800044 	addi	r2,r2,1
  800d2c:	d8801b15 	stw	r2,108(sp)
  800d30:	b4400115 	stw	r17,4(r22)
  800d34:	d8c01c15 	stw	r3,112(sp)
  800d38:	10800208 	cmpgei	r2,r2,8
  800d3c:	1000061e 	bne	r2,zero,800d58 <___vfprintf_internal_r+0x5bc>
  800d40:	b5800204 	addi	r22,r22,8
  800d44:	d8c00517 	ldw	r3,20(sp)
  800d48:	80800003 	ldbu	r2,0(r16)
  800d4c:	1c47883a 	add	r3,r3,r17
  800d50:	d8c00515 	stw	r3,20(sp)
  800d54:	003ed106 	br	80089c <___vfprintf_internal_r+0x100>
  800d58:	d9801a04 	addi	r6,sp,104
  800d5c:	900b883a 	mov	r5,r18
  800d60:	9809883a 	mov	r4,r19
  800d64:	0807ee00 	call	807ee0 <__sprint_r>
  800d68:	103f9b1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  800d6c:	dd802704 	addi	r22,sp,156
  800d70:	003ff406 	br	800d44 <___vfprintf_internal_r+0x5a8>
  800d74:	21003fcc 	andi	r4,r4,255
  800d78:	2006671e 	bne	r4,zero,802718 <___vfprintf_internal_r+0x1f7c>
  800d7c:	d8c00617 	ldw	r3,24(sp)
  800d80:	6080020c 	andi	r2,r12,8
  800d84:	19000204 	addi	r4,r3,8
  800d88:	d9000e15 	stw	r4,56(sp)
  800d8c:	1003a71e 	bne	r2,zero,801c2c <___vfprintf_internal_r+0x1490>
  800d90:	d8800617 	ldw	r2,24(sp)
  800d94:	10c00017 	ldw	r3,0(r2)
  800d98:	10800117 	ldw	r2,4(r2)
  800d9c:	d8c00915 	stw	r3,36(sp)
  800da0:	d8800a15 	stw	r2,40(sp)
  800da4:	dd400a17 	ldw	r21,40(sp)
  800da8:	dd000917 	ldw	r20,36(sp)
  800dac:	00a00034 	movhi	r2,32768
  800db0:	10bfffc4 	addi	r2,r2,-1
  800db4:	a8a2703a 	and	r17,r21,r2
  800db8:	01dffc34 	movhi	r7,32752
  800dbc:	01bfffc4 	movi	r6,-1
  800dc0:	39ffffc4 	addi	r7,r7,-1
  800dc4:	a009883a 	mov	r4,r20
  800dc8:	880b883a 	mov	r5,r17
  800dcc:	da000615 	stw	r8,24(sp)
  800dd0:	db000415 	stw	r12,16(sp)
  800dd4:	080d7100 	call	80d710 <__unorddf2>
  800dd8:	db000417 	ldw	r12,16(sp)
  800ddc:	da000617 	ldw	r8,24(sp)
  800de0:	1004641e 	bne	r2,zero,801f74 <___vfprintf_internal_r+0x17d8>
  800de4:	01dffc34 	movhi	r7,32752
  800de8:	01bfffc4 	movi	r6,-1
  800dec:	39ffffc4 	addi	r7,r7,-1
  800df0:	a009883a 	mov	r4,r20
  800df4:	880b883a 	mov	r5,r17
  800df8:	080c5c80 	call	80c5c8 <__ledf2>
  800dfc:	db000417 	ldw	r12,16(sp)
  800e00:	da000617 	ldw	r8,24(sp)
  800e04:	00845b0e 	bge	zero,r2,801f74 <___vfprintf_internal_r+0x17d8>
  800e08:	000d883a 	mov	r6,zero
  800e0c:	000f883a 	mov	r7,zero
  800e10:	a009883a 	mov	r4,r20
  800e14:	a80b883a 	mov	r5,r21
  800e18:	080c5c80 	call	80c5c8 <__ledf2>
  800e1c:	db000417 	ldw	r12,16(sp)
  800e20:	10059116 	blt	r2,zero,802468 <___vfprintf_internal_r+0x1ccc>
  800e24:	db401343 	ldbu	r13,77(sp)
  800e28:	e0801210 	cmplti	r2,fp,72
  800e2c:	1005391e 	bne	r2,zero,802314 <___vfprintf_internal_r+0x1b78>
  800e30:	04402074 	movhi	r17,129
  800e34:	8c443304 	addi	r17,r17,4300
  800e38:	00bfdfc4 	movi	r2,-129
  800e3c:	6084703a 	and	r2,r12,r2
  800e40:	d8800415 	stw	r2,16(sp)
  800e44:	d8800e17 	ldw	r2,56(sp)
  800e48:	050000c4 	movi	r20,3
  800e4c:	054000c4 	movi	r21,3
  800e50:	d8800615 	stw	r2,24(sp)
  800e54:	0011883a 	mov	r8,zero
  800e58:	d8000715 	stw	zero,28(sp)
  800e5c:	00006a06 	br	801008 <___vfprintf_internal_r+0x86c>
  800e60:	d9000617 	ldw	r4,24(sp)
  800e64:	6080040c 	andi	r2,r12,16
  800e68:	20c00104 	addi	r3,r4,4
  800e6c:	10036a1e 	bne	r2,zero,801c18 <___vfprintf_internal_r+0x147c>
  800e70:	6080100c 	andi	r2,r12,64
  800e74:	10052126 	beq	r2,zero,8022fc <___vfprintf_internal_r+0x1b60>
  800e78:	d8800617 	ldw	r2,24(sp)
  800e7c:	002b883a 	mov	r21,zero
  800e80:	d8c00615 	stw	r3,24(sp)
  800e84:	1500000b 	ldhu	r20,0(r2)
  800e88:	0005883a 	mov	r2,zero
  800e8c:	003f8f06 	br	800ccc <___vfprintf_internal_r+0x530>
  800e90:	d9000617 	ldw	r4,24(sp)
  800e94:	6080040c 	andi	r2,r12,16
  800e98:	20c00104 	addi	r3,r4,4
  800e9c:	1003501e 	bne	r2,zero,801be0 <___vfprintf_internal_r+0x1444>
  800ea0:	6080100c 	andi	r2,r12,64
  800ea4:	10055926 	beq	r2,zero,80240c <___vfprintf_internal_r+0x1c70>
  800ea8:	d8800617 	ldw	r2,24(sp)
  800eac:	002b883a 	mov	r21,zero
  800eb0:	d8c00615 	stw	r3,24(sp)
  800eb4:	1500000b 	ldhu	r20,0(r2)
  800eb8:	00800044 	movi	r2,1
  800ebc:	003f8306 	br	800ccc <___vfprintf_internal_r+0x530>
  800ec0:	03002074 	movhi	r12,129
  800ec4:	89000450 	cmplti	r4,r17,17
  800ec8:	d8801b17 	ldw	r2,108(sp)
  800ecc:	63044704 	addi	r12,r12,4380
  800ed0:	20001b1e 	bne	r4,zero,800f40 <___vfprintf_internal_r+0x7a4>
  800ed4:	05400404 	movi	r21,16
  800ed8:	6039883a 	mov	fp,r12
  800edc:	00000406 	br	800ef0 <___vfprintf_internal_r+0x754>
  800ee0:	8c7ffc04 	addi	r17,r17,-16
  800ee4:	89000448 	cmpgei	r4,r17,17
  800ee8:	b5800204 	addi	r22,r22,8
  800eec:	20001326 	beq	r4,zero,800f3c <___vfprintf_internal_r+0x7a0>
  800ef0:	10800044 	addi	r2,r2,1
  800ef4:	18c00404 	addi	r3,r3,16
  800ef8:	b7000015 	stw	fp,0(r22)
  800efc:	b5400115 	stw	r21,4(r22)
  800f00:	d8c01c15 	stw	r3,112(sp)
  800f04:	d8801b15 	stw	r2,108(sp)
  800f08:	11000208 	cmpgei	r4,r2,8
  800f0c:	203ff426 	beq	r4,zero,800ee0 <___vfprintf_internal_r+0x744>
  800f10:	d9801a04 	addi	r6,sp,104
  800f14:	900b883a 	mov	r5,r18
  800f18:	9809883a 	mov	r4,r19
  800f1c:	0807ee00 	call	807ee0 <__sprint_r>
  800f20:	103f2d1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  800f24:	8c7ffc04 	addi	r17,r17,-16
  800f28:	89000448 	cmpgei	r4,r17,17
  800f2c:	d8c01c17 	ldw	r3,112(sp)
  800f30:	d8801b17 	ldw	r2,108(sp)
  800f34:	dd802704 	addi	r22,sp,156
  800f38:	203fed1e 	bne	r4,zero,800ef0 <___vfprintf_internal_r+0x754>
  800f3c:	e019883a 	mov	r12,fp
  800f40:	10800044 	addi	r2,r2,1
  800f44:	1c47883a 	add	r3,r3,r17
  800f48:	d8801b15 	stw	r2,108(sp)
  800f4c:	b3000015 	stw	r12,0(r22)
  800f50:	b4400115 	stw	r17,4(r22)
  800f54:	d8c01c15 	stw	r3,112(sp)
  800f58:	10800210 	cmplti	r2,r2,8
  800f5c:	103f121e 	bne	r2,zero,800ba8 <___vfprintf_internal_r+0x40c>
  800f60:	d9801a04 	addi	r6,sp,104
  800f64:	900b883a 	mov	r5,r18
  800f68:	9809883a 	mov	r4,r19
  800f6c:	0807ee00 	call	807ee0 <__sprint_r>
  800f70:	103f191e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  800f74:	d8c01c17 	ldw	r3,112(sp)
  800f78:	003f0b06 	br	800ba8 <___vfprintf_internal_r+0x40c>
  800f7c:	9809883a 	mov	r4,r19
  800f80:	0804ab80 	call	804ab8 <__sinit>
  800f84:	003e1d06 	br	8007fc <___vfprintf_internal_r+0x60>
  800f88:	21003fcc 	andi	r4,r4,255
  800f8c:	2005de1e 	bne	r4,zero,802708 <___vfprintf_internal_r+0x1f6c>
  800f90:	6080080c 	andi	r2,r12,32
  800f94:	10004926 	beq	r2,zero,8010bc <___vfprintf_internal_r+0x920>
  800f98:	d8c00617 	ldw	r3,24(sp)
  800f9c:	18800117 	ldw	r2,4(r3)
  800fa0:	1d000017 	ldw	r20,0(r3)
  800fa4:	18c00204 	addi	r3,r3,8
  800fa8:	d8c00615 	stw	r3,24(sp)
  800fac:	102b883a 	mov	r21,r2
  800fb0:	10004e16 	blt	r2,zero,8010ec <___vfprintf_internal_r+0x950>
  800fb4:	40bfffd8 	cmpnei	r2,r8,-1
  800fb8:	db401343 	ldbu	r13,77(sp)
  800fbc:	10000626 	beq	r2,zero,800fd8 <___vfprintf_internal_r+0x83c>
  800fc0:	047fdfc4 	movi	r17,-129
  800fc4:	6446703a 	and	r3,r12,r17
  800fc8:	a544b03a 	or	r2,r20,r21
  800fcc:	d8c00415 	stw	r3,16(sp)
  800fd0:	1002bd26 	beq	r2,zero,801ac8 <___vfprintf_internal_r+0x132c>
  800fd4:	db000417 	ldw	r12,16(sp)
  800fd8:	a803701e 	bne	r21,zero,801d9c <___vfprintf_internal_r+0x1600>
  800fdc:	a08002a8 	cmpgeui	r2,r20,10
  800fe0:	10036e1e 	bne	r2,zero,801d9c <___vfprintf_internal_r+0x1600>
  800fe4:	a5000c04 	addi	r20,r20,48
  800fe8:	dd0026c5 	stb	r20,155(sp)
  800fec:	db000415 	stw	r12,16(sp)
  800ff0:	05400044 	movi	r21,1
  800ff4:	dc4026c4 	addi	r17,sp,155
  800ff8:	4029883a 	mov	r20,r8
  800ffc:	4540010e 	bge	r8,r21,801004 <___vfprintf_internal_r+0x868>
  801000:	a829883a 	mov	r20,r21
  801004:	d8000715 	stw	zero,28(sp)
  801008:	6b403fcc 	andi	r13,r13,255
  80100c:	6b40201c 	xori	r13,r13,128
  801010:	6b7fe004 	addi	r13,r13,-128
  801014:	683ea926 	beq	r13,zero,800abc <___vfprintf_internal_r+0x320>
  801018:	a5000044 	addi	r20,r20,1
  80101c:	003ea706 	br	800abc <___vfprintf_internal_r+0x320>
  801020:	bac00007 	ldb	r11,0(r23)
  801024:	63001014 	ori	r12,r12,64
  801028:	003e2806 	br	8008cc <___vfprintf_internal_r+0x130>
  80102c:	d8c00617 	ldw	r3,24(sp)
  801030:	d8001345 	stb	zero,77(sp)
  801034:	05000044 	movi	r20,1
  801038:	18800017 	ldw	r2,0(r3)
  80103c:	18c00104 	addi	r3,r3,4
  801040:	d8c00615 	stw	r3,24(sp)
  801044:	d8801d05 	stb	r2,116(sp)
  801048:	05400044 	movi	r21,1
  80104c:	dc401d04 	addi	r17,sp,116
  801050:	003e9706 	br	800ab0 <___vfprintf_internal_r+0x314>
  801054:	21003fcc 	andi	r4,r4,255
  801058:	2005a71e 	bne	r4,zero,8026f8 <___vfprintf_internal_r+0x1f5c>
  80105c:	00802074 	movhi	r2,129
  801060:	10843b04 	addi	r2,r2,4332
  801064:	d8800c15 	stw	r2,48(sp)
  801068:	6080080c 	andi	r2,r12,32
  80106c:	10008726 	beq	r2,zero,80128c <___vfprintf_internal_r+0xaf0>
  801070:	d8800617 	ldw	r2,24(sp)
  801074:	15000017 	ldw	r20,0(r2)
  801078:	15400117 	ldw	r21,4(r2)
  80107c:	10800204 	addi	r2,r2,8
  801080:	d8800615 	stw	r2,24(sp)
  801084:	6080004c 	andi	r2,r12,1
  801088:	10000226 	beq	r2,zero,801094 <___vfprintf_internal_r+0x8f8>
  80108c:	a544b03a 	or	r2,r20,r21
  801090:	1002cd1e 	bne	r2,zero,801bc8 <___vfprintf_internal_r+0x142c>
  801094:	00800084 	movi	r2,2
  801098:	003f0c06 	br	800ccc <___vfprintf_internal_r+0x530>
  80109c:	bac00007 	ldb	r11,0(r23)
  8010a0:	63000214 	ori	r12,r12,8
  8010a4:	003e0906 	br	8008cc <___vfprintf_internal_r+0x130>
  8010a8:	21003fcc 	andi	r4,r4,255
  8010ac:	2005981e 	bne	r4,zero,802710 <___vfprintf_internal_r+0x1f74>
  8010b0:	63000414 	ori	r12,r12,16
  8010b4:	6080080c 	andi	r2,r12,32
  8010b8:	103fb71e 	bne	r2,zero,800f98 <___vfprintf_internal_r+0x7fc>
  8010bc:	d9000617 	ldw	r4,24(sp)
  8010c0:	6080040c 	andi	r2,r12,16
  8010c4:	20c00104 	addi	r3,r4,4
  8010c8:	1002dd1e 	bne	r2,zero,801c40 <___vfprintf_internal_r+0x14a4>
  8010cc:	6080100c 	andi	r2,r12,64
  8010d0:	10048426 	beq	r2,zero,8022e4 <___vfprintf_internal_r+0x1b48>
  8010d4:	d8800617 	ldw	r2,24(sp)
  8010d8:	d8c00615 	stw	r3,24(sp)
  8010dc:	1500000f 	ldh	r20,0(r2)
  8010e0:	a02bd7fa 	srai	r21,r20,31
  8010e4:	a805883a 	mov	r2,r21
  8010e8:	103fb20e 	bge	r2,zero,800fb4 <___vfprintf_internal_r+0x818>
  8010ec:	a004c03a 	cmpne	r2,r20,zero
  8010f0:	056bc83a 	sub	r21,zero,r21
  8010f4:	a8abc83a 	sub	r21,r21,r2
  8010f8:	00800b44 	movi	r2,45
  8010fc:	d8801345 	stb	r2,77(sp)
  801100:	40ffffe0 	cmpeqi	r3,r8,-1
  801104:	0529c83a 	sub	r20,zero,r20
  801108:	03400b44 	movi	r13,45
  80110c:	00800044 	movi	r2,1
  801110:	183ef226 	beq	r3,zero,800cdc <___vfprintf_internal_r+0x540>
  801114:	10c00060 	cmpeqi	r3,r2,1
  801118:	183faf1e 	bne	r3,zero,800fd8 <___vfprintf_internal_r+0x83c>
  80111c:	108000a0 	cmpeqi	r2,r2,2
  801120:	1001581e 	bne	r2,zero,801684 <___vfprintf_internal_r+0xee8>
  801124:	dc402704 	addi	r17,sp,156
  801128:	a006d0fa 	srli	r3,r20,3
  80112c:	a808977a 	slli	r4,r21,29
  801130:	a82ad0fa 	srli	r21,r21,3
  801134:	a50001cc 	andi	r20,r20,7
  801138:	a0800c04 	addi	r2,r20,48
  80113c:	20e8b03a 	or	r20,r4,r3
  801140:	88bfffc5 	stb	r2,-1(r17)
  801144:	a546b03a 	or	r3,r20,r21
  801148:	880b883a 	mov	r5,r17
  80114c:	8c7fffc4 	addi	r17,r17,-1
  801150:	183ff51e 	bne	r3,zero,801128 <___vfprintf_internal_r+0x98c>
  801154:	60c0004c 	andi	r3,r12,1
  801158:	18015726 	beq	r3,zero,8016b8 <___vfprintf_internal_r+0xf1c>
  80115c:	10803fcc 	andi	r2,r2,255
  801160:	1080201c 	xori	r2,r2,128
  801164:	10bfe004 	addi	r2,r2,-128
  801168:	10800c18 	cmpnei	r2,r2,48
  80116c:	10015226 	beq	r2,zero,8016b8 <___vfprintf_internal_r+0xf1c>
  801170:	00800c04 	movi	r2,48
  801174:	297fff84 	addi	r5,r5,-2
  801178:	88bfffc5 	stb	r2,-1(r17)
  80117c:	d8802704 	addi	r2,sp,156
  801180:	116bc83a 	sub	r21,r2,r5
  801184:	db000415 	stw	r12,16(sp)
  801188:	2823883a 	mov	r17,r5
  80118c:	003f9a06 	br	800ff8 <___vfprintf_internal_r+0x85c>
  801190:	bac00007 	ldb	r11,0(r23)
  801194:	63002014 	ori	r12,r12,128
  801198:	003dcc06 	br	8008cc <___vfprintf_internal_r+0x130>
  80119c:	bf000007 	ldb	fp,0(r23)
  8011a0:	b8800044 	addi	r2,r23,1
  8011a4:	e0c00aa0 	cmpeqi	r3,fp,42
  8011a8:	1805b11e 	bne	r3,zero,802870 <___vfprintf_internal_r+0x20d4>
  8011ac:	e0fff404 	addi	r3,fp,-48
  8011b0:	198002b0 	cmpltui	r6,r3,10
  8011b4:	102f883a 	mov	r23,r2
  8011b8:	0011883a 	mov	r8,zero
  8011bc:	303dc526 	beq	r6,zero,8008d4 <___vfprintf_internal_r+0x138>
  8011c0:	400490ba 	slli	r2,r8,2
  8011c4:	bf000007 	ldb	fp,0(r23)
  8011c8:	bdc00044 	addi	r23,r23,1
  8011cc:	1211883a 	add	r8,r2,r8
  8011d0:	4211883a 	add	r8,r8,r8
  8011d4:	40d1883a 	add	r8,r8,r3
  8011d8:	e0fff404 	addi	r3,fp,-48
  8011dc:	188002b0 	cmpltui	r2,r3,10
  8011e0:	103ff71e 	bne	r2,zero,8011c0 <___vfprintf_internal_r+0xa24>
  8011e4:	003dbb06 	br	8008d4 <___vfprintf_internal_r+0x138>
  8011e8:	bf000003 	ldbu	fp,0(r23)
  8011ec:	e2c03fcc 	andi	r11,fp,255
  8011f0:	5ac0201c 	xori	r11,r11,128
  8011f4:	63000114 	ori	r12,r12,4
  8011f8:	5affe004 	addi	r11,r11,-128
  8011fc:	003db306 	br	8008cc <___vfprintf_internal_r+0x130>
  801200:	bac00007 	ldb	r11,0(r23)
  801204:	01000044 	movi	r4,1
  801208:	01400ac4 	movi	r5,43
  80120c:	003daf06 	br	8008cc <___vfprintf_internal_r+0x130>
  801210:	d8800617 	ldw	r2,24(sp)
  801214:	bf000003 	ldbu	fp,0(r23)
  801218:	14000017 	ldw	r16,0(r2)
  80121c:	10800104 	addi	r2,r2,4
  801220:	80028c16 	blt	r16,zero,801c54 <___vfprintf_internal_r+0x14b8>
  801224:	d8800615 	stw	r2,24(sp)
  801228:	e2c03fcc 	andi	r11,fp,255
  80122c:	5ac0201c 	xori	r11,r11,128
  801230:	5affe004 	addi	r11,r11,-128
  801234:	003da506 	br	8008cc <___vfprintf_internal_r+0x130>
  801238:	bac00007 	ldb	r11,0(r23)
  80123c:	63000054 	ori	r12,r12,1
  801240:	003da206 	br	8008cc <___vfprintf_internal_r+0x130>
  801244:	28803fcc 	andi	r2,r5,255
  801248:	1080201c 	xori	r2,r2,128
  80124c:	10bfe004 	addi	r2,r2,-128
  801250:	bf000003 	ldbu	fp,0(r23)
  801254:	103ff41e 	bne	r2,zero,801228 <___vfprintf_internal_r+0xa8c>
  801258:	e2c03fcc 	andi	r11,fp,255
  80125c:	5ac0201c 	xori	r11,r11,128
  801260:	01000044 	movi	r4,1
  801264:	01400804 	movi	r5,32
  801268:	5affe004 	addi	r11,r11,-128
  80126c:	003d9706 	br	8008cc <___vfprintf_internal_r+0x130>
  801270:	21003fcc 	andi	r4,r4,255
  801274:	20051e1e 	bne	r4,zero,8026f0 <___vfprintf_internal_r+0x1f54>
  801278:	00802074 	movhi	r2,129
  80127c:	10843604 	addi	r2,r2,4312
  801280:	d8800c15 	stw	r2,48(sp)
  801284:	6080080c 	andi	r2,r12,32
  801288:	103f791e 	bne	r2,zero,801070 <___vfprintf_internal_r+0x8d4>
  80128c:	d9000617 	ldw	r4,24(sp)
  801290:	6080040c 	andi	r2,r12,16
  801294:	20c00104 	addi	r3,r4,4
  801298:	10025b1e 	bne	r2,zero,801c08 <___vfprintf_internal_r+0x146c>
  80129c:	6080100c 	andi	r2,r12,64
  8012a0:	10046026 	beq	r2,zero,802424 <___vfprintf_internal_r+0x1c88>
  8012a4:	d8800617 	ldw	r2,24(sp)
  8012a8:	002b883a 	mov	r21,zero
  8012ac:	d8c00615 	stw	r3,24(sp)
  8012b0:	1500000b 	ldhu	r20,0(r2)
  8012b4:	003f7306 	br	801084 <___vfprintf_internal_r+0x8e8>
  8012b8:	d8800617 	ldw	r2,24(sp)
  8012bc:	d8001345 	stb	zero,77(sp)
  8012c0:	14400017 	ldw	r17,0(r2)
  8012c4:	10c00104 	addi	r3,r2,4
  8012c8:	88028e26 	beq	r17,zero,801d04 <___vfprintf_internal_r+0x1568>
  8012cc:	40bfffe0 	cmpeqi	r2,r8,-1
  8012d0:	1003c01e 	bne	r2,zero,8021d4 <___vfprintf_internal_r+0x1a38>
  8012d4:	400d883a 	mov	r6,r8
  8012d8:	000b883a 	mov	r5,zero
  8012dc:	8809883a 	mov	r4,r17
  8012e0:	d8c00715 	stw	r3,28(sp)
  8012e4:	db000615 	stw	r12,24(sp)
  8012e8:	da000415 	stw	r8,16(sp)
  8012ec:	0805f680 	call	805f68 <memchr>
  8012f0:	da000417 	ldw	r8,16(sp)
  8012f4:	db000617 	ldw	r12,24(sp)
  8012f8:	d8c00717 	ldw	r3,28(sp)
  8012fc:	1004ec26 	beq	r2,zero,8026b0 <___vfprintf_internal_r+0x1f14>
  801300:	146bc83a 	sub	r21,r2,r17
  801304:	a829883a 	mov	r20,r21
  801308:	d8c00615 	stw	r3,24(sp)
  80130c:	003de806 	br	800ab0 <___vfprintf_internal_r+0x314>
  801310:	bac00007 	ldb	r11,0(r23)
  801314:	63000814 	ori	r12,r12,32
  801318:	003d6c06 	br	8008cc <___vfprintf_internal_r+0x130>
  80131c:	d8c00617 	ldw	r3,24(sp)
  801320:	00800c04 	movi	r2,48
  801324:	d8801385 	stb	r2,78(sp)
  801328:	00801e04 	movi	r2,120
  80132c:	01002074 	movhi	r4,129
  801330:	d88013c5 	stb	r2,79(sp)
  801334:	18800104 	addi	r2,r3,4
  801338:	d8800615 	stw	r2,24(sp)
  80133c:	20843604 	addi	r2,r4,4312
  801340:	d8800c15 	stw	r2,48(sp)
  801344:	1d000017 	ldw	r20,0(r3)
  801348:	002b883a 	mov	r21,zero
  80134c:	63000094 	ori	r12,r12,2
  801350:	00800084 	movi	r2,2
  801354:	07001e04 	movi	fp,120
  801358:	003e5c06 	br	800ccc <___vfprintf_internal_r+0x530>
  80135c:	21003fcc 	andi	r4,r4,255
  801360:	2004e71e 	bne	r4,zero,802700 <___vfprintf_internal_r+0x1f64>
  801364:	d9000617 	ldw	r4,24(sp)
  801368:	6080080c 	andi	r2,r12,32
  80136c:	20c00017 	ldw	r3,0(r4)
  801370:	21000104 	addi	r4,r4,4
  801374:	d9000615 	stw	r4,24(sp)
  801378:	10021e1e 	bne	r2,zero,801bf4 <___vfprintf_internal_r+0x1458>
  80137c:	6080040c 	andi	r2,r12,16
  801380:	1002ae1e 	bne	r2,zero,801e3c <___vfprintf_internal_r+0x16a0>
  801384:	6300100c 	andi	r12,r12,64
  801388:	6002ac26 	beq	r12,zero,801e3c <___vfprintf_internal_r+0x16a0>
  80138c:	d8800517 	ldw	r2,20(sp)
  801390:	1880000d 	sth	r2,0(r3)
  801394:	003d3506 	br	80086c <___vfprintf_internal_r+0xd0>
  801398:	bac00007 	ldb	r11,0(r23)
  80139c:	58801b18 	cmpnei	r2,r11,108
  8013a0:	10024926 	beq	r2,zero,801cc8 <___vfprintf_internal_r+0x152c>
  8013a4:	63000414 	ori	r12,r12,16
  8013a8:	003d4806 	br	8008cc <___vfprintf_internal_r+0x130>
  8013ac:	e2c01990 	cmplti	r11,fp,102
  8013b0:	5800cb1e 	bne	r11,zero,8016e0 <___vfprintf_internal_r+0xf44>
  8013b4:	d9000917 	ldw	r4,36(sp)
  8013b8:	d9400a17 	ldw	r5,40(sp)
  8013bc:	000d883a 	mov	r6,zero
  8013c0:	000f883a 	mov	r7,zero
  8013c4:	d8c00e15 	stw	r3,56(sp)
  8013c8:	080c4600 	call	80c460 <__eqdf2>
  8013cc:	d8c00e17 	ldw	r3,56(sp)
  8013d0:	1001641e 	bne	r2,zero,801964 <___vfprintf_internal_r+0x11c8>
  8013d4:	d8801b17 	ldw	r2,108(sp)
  8013d8:	01002074 	movhi	r4,129
  8013dc:	21044204 	addi	r4,r4,4360
  8013e0:	10800044 	addi	r2,r2,1
  8013e4:	18c00044 	addi	r3,r3,1
  8013e8:	b1000015 	stw	r4,0(r22)
  8013ec:	01000044 	movi	r4,1
  8013f0:	d8801b15 	stw	r2,108(sp)
  8013f4:	b1000115 	stw	r4,4(r22)
  8013f8:	d8c01c15 	stw	r3,112(sp)
  8013fc:	10800208 	cmpgei	r2,r2,8
  801400:	1003621e 	bne	r2,zero,80218c <___vfprintf_internal_r+0x19f0>
  801404:	b5800204 	addi	r22,r22,8
  801408:	d8801417 	ldw	r2,80(sp)
  80140c:	d9000817 	ldw	r4,32(sp)
  801410:	1101e70e 	bge	r2,r4,801bb0 <___vfprintf_internal_r+0x1414>
  801414:	d8800d17 	ldw	r2,52(sp)
  801418:	d9000b17 	ldw	r4,44(sp)
  80141c:	b0800015 	stw	r2,0(r22)
  801420:	d8801b17 	ldw	r2,108(sp)
  801424:	1907883a 	add	r3,r3,r4
  801428:	b1000115 	stw	r4,4(r22)
  80142c:	10800044 	addi	r2,r2,1
  801430:	d8801b15 	stw	r2,108(sp)
  801434:	d8c01c15 	stw	r3,112(sp)
  801438:	10800208 	cmpgei	r2,r2,8
  80143c:	1002291e 	bne	r2,zero,801ce4 <___vfprintf_internal_r+0x1548>
  801440:	b5800204 	addi	r22,r22,8
  801444:	d8800817 	ldw	r2,32(sp)
  801448:	157fffc4 	addi	r21,r2,-1
  80144c:	057dd10e 	bge	zero,r21,800b94 <___vfprintf_internal_r+0x3f8>
  801450:	01c02074 	movhi	r7,129
  801454:	a9000450 	cmplti	r4,r21,17
  801458:	d8801b17 	ldw	r2,108(sp)
  80145c:	39c44304 	addi	r7,r7,4364
  801460:	2003461e 	bne	r4,zero,80217c <___vfprintf_internal_r+0x19e0>
  801464:	07000404 	movi	fp,16
  801468:	3823883a 	mov	r17,r7
  80146c:	00000406 	br	801480 <___vfprintf_internal_r+0xce4>
  801470:	b5800204 	addi	r22,r22,8
  801474:	ad7ffc04 	addi	r21,r21,-16
  801478:	a9000448 	cmpgei	r4,r21,17
  80147c:	20033e26 	beq	r4,zero,802178 <___vfprintf_internal_r+0x19dc>
  801480:	10800044 	addi	r2,r2,1
  801484:	18c00404 	addi	r3,r3,16
  801488:	b4400015 	stw	r17,0(r22)
  80148c:	b7000115 	stw	fp,4(r22)
  801490:	d8c01c15 	stw	r3,112(sp)
  801494:	d8801b15 	stw	r2,108(sp)
  801498:	11000208 	cmpgei	r4,r2,8
  80149c:	203ff426 	beq	r4,zero,801470 <___vfprintf_internal_r+0xcd4>
  8014a0:	d9801a04 	addi	r6,sp,104
  8014a4:	900b883a 	mov	r5,r18
  8014a8:	9809883a 	mov	r4,r19
  8014ac:	0807ee00 	call	807ee0 <__sprint_r>
  8014b0:	103dc91e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  8014b4:	d8c01c17 	ldw	r3,112(sp)
  8014b8:	d8801b17 	ldw	r2,108(sp)
  8014bc:	dd802704 	addi	r22,sp,156
  8014c0:	003fec06 	br	801474 <___vfprintf_internal_r+0xcd8>
  8014c4:	8519c83a 	sub	r12,r16,r20
  8014c8:	033da30e 	bge	zero,r12,800b58 <___vfprintf_internal_r+0x3bc>
  8014cc:	01c02074 	movhi	r7,129
  8014d0:	61000450 	cmplti	r4,r12,17
  8014d4:	d8801b17 	ldw	r2,108(sp)
  8014d8:	39c44304 	addi	r7,r7,4364
  8014dc:	2000281e 	bne	r4,zero,801580 <___vfprintf_internal_r+0xde4>
  8014e0:	dc400e15 	stw	r17,56(sp)
  8014e4:	dc000f15 	stw	r16,60(sp)
  8014e8:	b009883a 	mov	r4,r22
  8014ec:	03400404 	movi	r13,16
  8014f0:	a02d883a 	mov	r22,r20
  8014f4:	6021883a 	mov	r16,r12
  8014f8:	4029883a 	mov	r20,r8
  8014fc:	3823883a 	mov	r17,r7
  801500:	00000406 	br	801514 <___vfprintf_internal_r+0xd78>
  801504:	843ffc04 	addi	r16,r16,-16
  801508:	81400448 	cmpgei	r5,r16,17
  80150c:	21000204 	addi	r4,r4,8
  801510:	28001426 	beq	r5,zero,801564 <___vfprintf_internal_r+0xdc8>
  801514:	10800044 	addi	r2,r2,1
  801518:	18c00404 	addi	r3,r3,16
  80151c:	24400015 	stw	r17,0(r4)
  801520:	23400115 	stw	r13,4(r4)
  801524:	d8c01c15 	stw	r3,112(sp)
  801528:	d8801b15 	stw	r2,108(sp)
  80152c:	11400208 	cmpgei	r5,r2,8
  801530:	283ff426 	beq	r5,zero,801504 <___vfprintf_internal_r+0xd68>
  801534:	d9801a04 	addi	r6,sp,104
  801538:	900b883a 	mov	r5,r18
  80153c:	9809883a 	mov	r4,r19
  801540:	0807ee00 	call	807ee0 <__sprint_r>
  801544:	103da41e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  801548:	843ffc04 	addi	r16,r16,-16
  80154c:	81400448 	cmpgei	r5,r16,17
  801550:	d8c01c17 	ldw	r3,112(sp)
  801554:	d8801b17 	ldw	r2,108(sp)
  801558:	d9002704 	addi	r4,sp,156
  80155c:	03400404 	movi	r13,16
  801560:	283fec1e 	bne	r5,zero,801514 <___vfprintf_internal_r+0xd78>
  801564:	8019883a 	mov	r12,r16
  801568:	880f883a 	mov	r7,r17
  80156c:	dc000f17 	ldw	r16,60(sp)
  801570:	dc400e17 	ldw	r17,56(sp)
  801574:	a011883a 	mov	r8,r20
  801578:	b029883a 	mov	r20,r22
  80157c:	202d883a 	mov	r22,r4
  801580:	10800044 	addi	r2,r2,1
  801584:	1b07883a 	add	r3,r3,r12
  801588:	d8801b15 	stw	r2,108(sp)
  80158c:	b1c00015 	stw	r7,0(r22)
  801590:	b3000115 	stw	r12,4(r22)
  801594:	d8c01c15 	stw	r3,112(sp)
  801598:	10800208 	cmpgei	r2,r2,8
  80159c:	1003031e 	bne	r2,zero,8021ac <___vfprintf_internal_r+0x1a10>
  8015a0:	4551c83a 	sub	r8,r8,r21
  8015a4:	b5800204 	addi	r22,r22,8
  8015a8:	023d6d0e 	bge	zero,r8,800b60 <___vfprintf_internal_r+0x3c4>
  8015ac:	01c02074 	movhi	r7,129
  8015b0:	41000450 	cmplti	r4,r8,17
  8015b4:	d8801b17 	ldw	r2,108(sp)
  8015b8:	39c44304 	addi	r7,r7,4364
  8015bc:	2000221e 	bne	r4,zero,801648 <___vfprintf_internal_r+0xeac>
  8015c0:	dc400e15 	stw	r17,56(sp)
  8015c4:	dc000f15 	stw	r16,60(sp)
  8015c8:	03000404 	movi	r12,16
  8015cc:	4021883a 	mov	r16,r8
  8015d0:	3823883a 	mov	r17,r7
  8015d4:	00000406 	br	8015e8 <___vfprintf_internal_r+0xe4c>
  8015d8:	843ffc04 	addi	r16,r16,-16
  8015dc:	81000448 	cmpgei	r4,r16,17
  8015e0:	b5800204 	addi	r22,r22,8
  8015e4:	20001426 	beq	r4,zero,801638 <___vfprintf_internal_r+0xe9c>
  8015e8:	10800044 	addi	r2,r2,1
  8015ec:	18c00404 	addi	r3,r3,16
  8015f0:	b4400015 	stw	r17,0(r22)
  8015f4:	b3000115 	stw	r12,4(r22)
  8015f8:	d8c01c15 	stw	r3,112(sp)
  8015fc:	d8801b15 	stw	r2,108(sp)
  801600:	11000208 	cmpgei	r4,r2,8
  801604:	203ff426 	beq	r4,zero,8015d8 <___vfprintf_internal_r+0xe3c>
  801608:	d9801a04 	addi	r6,sp,104
  80160c:	900b883a 	mov	r5,r18
  801610:	9809883a 	mov	r4,r19
  801614:	0807ee00 	call	807ee0 <__sprint_r>
  801618:	103d6f1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  80161c:	843ffc04 	addi	r16,r16,-16
  801620:	81000448 	cmpgei	r4,r16,17
  801624:	d8c01c17 	ldw	r3,112(sp)
  801628:	d8801b17 	ldw	r2,108(sp)
  80162c:	dd802704 	addi	r22,sp,156
  801630:	03000404 	movi	r12,16
  801634:	203fec1e 	bne	r4,zero,8015e8 <___vfprintf_internal_r+0xe4c>
  801638:	8011883a 	mov	r8,r16
  80163c:	880f883a 	mov	r7,r17
  801640:	dc000f17 	ldw	r16,60(sp)
  801644:	dc400e17 	ldw	r17,56(sp)
  801648:	10800044 	addi	r2,r2,1
  80164c:	1a07883a 	add	r3,r3,r8
  801650:	d8801b15 	stw	r2,108(sp)
  801654:	b1c00015 	stw	r7,0(r22)
  801658:	b2000115 	stw	r8,4(r22)
  80165c:	d8c01c15 	stw	r3,112(sp)
  801660:	10800208 	cmpgei	r2,r2,8
  801664:	10014a1e 	bne	r2,zero,801b90 <___vfprintf_internal_r+0x13f4>
  801668:	b5800204 	addi	r22,r22,8
  80166c:	003d3c06 	br	800b60 <___vfprintf_internal_r+0x3c4>
  801670:	10c00060 	cmpeqi	r3,r2,1
  801674:	1803bc1e 	bne	r3,zero,802568 <___vfprintf_internal_r+0x1dcc>
  801678:	108000a0 	cmpeqi	r2,r2,2
  80167c:	db000417 	ldw	r12,16(sp)
  801680:	103ea826 	beq	r2,zero,801124 <___vfprintf_internal_r+0x988>
  801684:	d9000c17 	ldw	r4,48(sp)
  801688:	dc402704 	addi	r17,sp,156
  80168c:	a08003cc 	andi	r2,r20,15
  801690:	a806973a 	slli	r3,r21,28
  801694:	a028d13a 	srli	r20,r20,4
  801698:	2085883a 	add	r2,r4,r2
  80169c:	10800003 	ldbu	r2,0(r2)
  8016a0:	a82ad13a 	srli	r21,r21,4
  8016a4:	1d28b03a 	or	r20,r3,r20
  8016a8:	88bfffc5 	stb	r2,-1(r17)
  8016ac:	a544b03a 	or	r2,r20,r21
  8016b0:	8c7fffc4 	addi	r17,r17,-1
  8016b4:	103ff51e 	bne	r2,zero,80168c <___vfprintf_internal_r+0xef0>
  8016b8:	d8802704 	addi	r2,sp,156
  8016bc:	146bc83a 	sub	r21,r2,r17
  8016c0:	db000415 	stw	r12,16(sp)
  8016c4:	003e4c06 	br	800ff8 <___vfprintf_internal_r+0x85c>
  8016c8:	d9801a04 	addi	r6,sp,104
  8016cc:	900b883a 	mov	r5,r18
  8016d0:	9809883a 	mov	r4,r19
  8016d4:	0807ee00 	call	807ee0 <__sprint_r>
  8016d8:	103d3926 	beq	r2,zero,800bc0 <___vfprintf_internal_r+0x424>
  8016dc:	003d3e06 	br	800bd8 <___vfprintf_internal_r+0x43c>
  8016e0:	d8800817 	ldw	r2,32(sp)
  8016e4:	da001b17 	ldw	r8,108(sp)
  8016e8:	18c00044 	addi	r3,r3,1
  8016ec:	10800088 	cmpgei	r2,r2,2
  8016f0:	45400044 	addi	r21,r8,1
  8016f4:	b7000204 	addi	fp,r22,8
  8016f8:	1000f826 	beq	r2,zero,801adc <___vfprintf_internal_r+0x1340>
  8016fc:	00800044 	movi	r2,1
  801700:	b0800115 	stw	r2,4(r22)
  801704:	b4400015 	stw	r17,0(r22)
  801708:	d8c01c15 	stw	r3,112(sp)
  80170c:	dd401b15 	stw	r21,108(sp)
  801710:	a8800210 	cmplti	r2,r21,8
  801714:	1001cc26 	beq	r2,zero,801e48 <___vfprintf_internal_r+0x16ac>
  801718:	d8800b17 	ldw	r2,44(sp)
  80171c:	d9000d17 	ldw	r4,52(sp)
  801720:	ad400044 	addi	r21,r21,1
  801724:	1887883a 	add	r3,r3,r2
  801728:	e0800115 	stw	r2,4(fp)
  80172c:	e1000015 	stw	r4,0(fp)
  801730:	d8c01c15 	stw	r3,112(sp)
  801734:	dd401b15 	stw	r21,108(sp)
  801738:	a8800208 	cmpgei	r2,r21,8
  80173c:	1001cb1e 	bne	r2,zero,801e6c <___vfprintf_internal_r+0x16d0>
  801740:	e7000204 	addi	fp,fp,8
  801744:	d9000917 	ldw	r4,36(sp)
  801748:	d9400a17 	ldw	r5,40(sp)
  80174c:	aa000044 	addi	r8,r21,1
  801750:	000d883a 	mov	r6,zero
  801754:	000f883a 	mov	r7,zero
  801758:	d8c00e15 	stw	r3,56(sp)
  80175c:	da000715 	stw	r8,28(sp)
  801760:	080c4600 	call	80c460 <__eqdf2>
  801764:	d8c00817 	ldw	r3,32(sp)
  801768:	da000717 	ldw	r8,28(sp)
  80176c:	e5800204 	addi	r22,fp,8
  801770:	1affffc4 	addi	r11,r3,-1
  801774:	d8c00e17 	ldw	r3,56(sp)
  801778:	1000e526 	beq	r2,zero,801b10 <___vfprintf_internal_r+0x1374>
  80177c:	8a400044 	addi	r9,r17,1
  801780:	1ac7883a 	add	r3,r3,r11
  801784:	da001b15 	stw	r8,108(sp)
  801788:	e2400015 	stw	r9,0(fp)
  80178c:	e2c00115 	stw	r11,4(fp)
  801790:	d8c01c15 	stw	r3,112(sp)
  801794:	42000208 	cmpgei	r8,r8,8
  801798:	40013e1e 	bne	r8,zero,801c94 <___vfprintf_internal_r+0x14f8>
  80179c:	e0800404 	addi	r2,fp,16
  8017a0:	aa000084 	addi	r8,r21,2
  8017a4:	b039883a 	mov	fp,r22
  8017a8:	102d883a 	mov	r22,r2
  8017ac:	d9001017 	ldw	r4,64(sp)
  8017b0:	d8801644 	addi	r2,sp,89
  8017b4:	da001b15 	stw	r8,108(sp)
  8017b8:	20c7883a 	add	r3,r4,r3
  8017bc:	e0800015 	stw	r2,0(fp)
  8017c0:	e1000115 	stw	r4,4(fp)
  8017c4:	d8c01c15 	stw	r3,112(sp)
  8017c8:	42000210 	cmplti	r8,r8,8
  8017cc:	403cf11e 	bne	r8,zero,800b94 <___vfprintf_internal_r+0x3f8>
  8017d0:	d9801a04 	addi	r6,sp,104
  8017d4:	900b883a 	mov	r5,r18
  8017d8:	9809883a 	mov	r4,r19
  8017dc:	0807ee00 	call	807ee0 <__sprint_r>
  8017e0:	103cfd1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  8017e4:	d8c01c17 	ldw	r3,112(sp)
  8017e8:	dd802704 	addi	r22,sp,156
  8017ec:	003ce906 	br	800b94 <___vfprintf_internal_r+0x3f8>
  8017f0:	db000417 	ldw	r12,16(sp)
  8017f4:	003e4706 	br	801114 <___vfprintf_internal_r+0x978>
  8017f8:	03002074 	movhi	r12,129
  8017fc:	39000450 	cmplti	r4,r7,17
  801800:	d8801b17 	ldw	r2,108(sp)
  801804:	63044704 	addi	r12,r12,4380
  801808:	2000321e 	bne	r4,zero,8018d4 <___vfprintf_internal_r+0x1138>
  80180c:	dc401115 	stw	r17,68(sp)
  801810:	b009883a 	mov	r4,r22
  801814:	9023883a 	mov	r17,r18
  801818:	a82d883a 	mov	r22,r21
  80181c:	ddc01215 	stw	r23,72(sp)
  801820:	03c00404 	movi	r15,16
  801824:	a02f883a 	mov	r23,r20
  801828:	db800e15 	stw	r14,56(sp)
  80182c:	8029883a 	mov	r20,r16
  801830:	db400f15 	stw	r13,60(sp)
  801834:	402b883a 	mov	r21,r8
  801838:	3821883a 	mov	r16,r7
  80183c:	6025883a 	mov	r18,r12
  801840:	00000406 	br	801854 <___vfprintf_internal_r+0x10b8>
  801844:	843ffc04 	addi	r16,r16,-16
  801848:	81800448 	cmpgei	r6,r16,17
  80184c:	21000204 	addi	r4,r4,8
  801850:	30001426 	beq	r6,zero,8018a4 <___vfprintf_internal_r+0x1108>
  801854:	10800044 	addi	r2,r2,1
  801858:	18c00404 	addi	r3,r3,16
  80185c:	24800015 	stw	r18,0(r4)
  801860:	23c00115 	stw	r15,4(r4)
  801864:	d8c01c15 	stw	r3,112(sp)
  801868:	d8801b15 	stw	r2,108(sp)
  80186c:	11800208 	cmpgei	r6,r2,8
  801870:	303ff426 	beq	r6,zero,801844 <___vfprintf_internal_r+0x10a8>
  801874:	d9801a04 	addi	r6,sp,104
  801878:	880b883a 	mov	r5,r17
  80187c:	9809883a 	mov	r4,r19
  801880:	0807ee00 	call	807ee0 <__sprint_r>
  801884:	1001b91e 	bne	r2,zero,801f6c <___vfprintf_internal_r+0x17d0>
  801888:	843ffc04 	addi	r16,r16,-16
  80188c:	81800448 	cmpgei	r6,r16,17
  801890:	d8c01c17 	ldw	r3,112(sp)
  801894:	d8801b17 	ldw	r2,108(sp)
  801898:	d9002704 	addi	r4,sp,156
  80189c:	03c00404 	movi	r15,16
  8018a0:	303fec1e 	bne	r6,zero,801854 <___vfprintf_internal_r+0x10b8>
  8018a4:	800f883a 	mov	r7,r16
  8018a8:	9019883a 	mov	r12,r18
  8018ac:	a021883a 	mov	r16,r20
  8018b0:	8825883a 	mov	r18,r17
  8018b4:	b829883a 	mov	r20,r23
  8018b8:	db800e17 	ldw	r14,56(sp)
  8018bc:	db400f17 	ldw	r13,60(sp)
  8018c0:	ddc01217 	ldw	r23,72(sp)
  8018c4:	dc401117 	ldw	r17,68(sp)
  8018c8:	a811883a 	mov	r8,r21
  8018cc:	b02b883a 	mov	r21,r22
  8018d0:	202d883a 	mov	r22,r4
  8018d4:	10800044 	addi	r2,r2,1
  8018d8:	19c7883a 	add	r3,r3,r7
  8018dc:	d8801b15 	stw	r2,108(sp)
  8018e0:	b3000015 	stw	r12,0(r22)
  8018e4:	b1c00115 	stw	r7,4(r22)
  8018e8:	d8c01c15 	stw	r3,112(sp)
  8018ec:	10800208 	cmpgei	r2,r2,8
  8018f0:	1001671e 	bne	r2,zero,801e90 <___vfprintf_internal_r+0x16f4>
  8018f4:	b5800204 	addi	r22,r22,8
  8018f8:	003c7a06 	br	800ae4 <___vfprintf_internal_r+0x348>
  8018fc:	d9801a04 	addi	r6,sp,104
  801900:	900b883a 	mov	r5,r18
  801904:	9809883a 	mov	r4,r19
  801908:	da001115 	stw	r8,68(sp)
  80190c:	db400f15 	stw	r13,60(sp)
  801910:	db800e15 	stw	r14,56(sp)
  801914:	0807ee00 	call	807ee0 <__sprint_r>
  801918:	103caf1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  80191c:	d8c01c17 	ldw	r3,112(sp)
  801920:	da001117 	ldw	r8,68(sp)
  801924:	db400f17 	ldw	r13,60(sp)
  801928:	db800e17 	ldw	r14,56(sp)
  80192c:	dd802704 	addi	r22,sp,156
  801930:	003c7a06 	br	800b1c <___vfprintf_internal_r+0x380>
  801934:	d9801a04 	addi	r6,sp,104
  801938:	900b883a 	mov	r5,r18
  80193c:	9809883a 	mov	r4,r19
  801940:	da000f15 	stw	r8,60(sp)
  801944:	db400e15 	stw	r13,56(sp)
  801948:	0807ee00 	call	807ee0 <__sprint_r>
  80194c:	103ca21e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  801950:	d8c01c17 	ldw	r3,112(sp)
  801954:	da000f17 	ldw	r8,60(sp)
  801958:	db400e17 	ldw	r13,56(sp)
  80195c:	dd802704 	addi	r22,sp,156
  801960:	003c7b06 	br	800b50 <___vfprintf_internal_r+0x3b4>
  801964:	d9401417 	ldw	r5,80(sp)
  801968:	0141570e 	bge	zero,r5,801ec8 <___vfprintf_internal_r+0x172c>
  80196c:	d8800717 	ldw	r2,28(sp)
  801970:	d9000817 	ldw	r4,32(sp)
  801974:	102b883a 	mov	r21,r2
  801978:	2080b916 	blt	r4,r2,801c60 <___vfprintf_internal_r+0x14c4>
  80197c:	05400a0e 	bge	zero,r21,8019a8 <___vfprintf_internal_r+0x120c>
  801980:	d8801b17 	ldw	r2,108(sp)
  801984:	1d47883a 	add	r3,r3,r21
  801988:	b4400015 	stw	r17,0(r22)
  80198c:	10800044 	addi	r2,r2,1
  801990:	d8801b15 	stw	r2,108(sp)
  801994:	b5400115 	stw	r21,4(r22)
  801998:	d8c01c15 	stw	r3,112(sp)
  80199c:	10800208 	cmpgei	r2,r2,8
  8019a0:	10032d1e 	bne	r2,zero,802658 <___vfprintf_internal_r+0x1ebc>
  8019a4:	b5800204 	addi	r22,r22,8
  8019a8:	a800c516 	blt	r21,zero,801cc0 <___vfprintf_internal_r+0x1524>
  8019ac:	d8800717 	ldw	r2,28(sp)
  8019b0:	156bc83a 	sub	r21,r2,r21
  8019b4:	0540db16 	blt	zero,r21,801d24 <___vfprintf_internal_r+0x1588>
  8019b8:	dd401417 	ldw	r21,80(sp)
  8019bc:	d8800817 	ldw	r2,32(sp)
  8019c0:	a880aa0e 	bge	r21,r2,801c6c <___vfprintf_internal_r+0x14d0>
  8019c4:	d8800d17 	ldw	r2,52(sp)
  8019c8:	d9000b17 	ldw	r4,44(sp)
  8019cc:	b0800015 	stw	r2,0(r22)
  8019d0:	d8801b17 	ldw	r2,108(sp)
  8019d4:	1907883a 	add	r3,r3,r4
  8019d8:	b1000115 	stw	r4,4(r22)
  8019dc:	10800044 	addi	r2,r2,1
  8019e0:	d8801b15 	stw	r2,108(sp)
  8019e4:	d8c01c15 	stw	r3,112(sp)
  8019e8:	10800208 	cmpgei	r2,r2,8
  8019ec:	1003111e 	bne	r2,zero,802634 <___vfprintf_internal_r+0x1e98>
  8019f0:	b5800204 	addi	r22,r22,8
  8019f4:	d9000817 	ldw	r4,32(sp)
  8019f8:	d9400717 	ldw	r5,28(sp)
  8019fc:	2545c83a 	sub	r2,r4,r21
  801a00:	2149c83a 	sub	r4,r4,r5
  801a04:	102b883a 	mov	r21,r2
  801a08:	2080010e 	bge	r4,r2,801a10 <___vfprintf_internal_r+0x1274>
  801a0c:	202b883a 	mov	r21,r4
  801a10:	05400c0e 	bge	zero,r21,801a44 <___vfprintf_internal_r+0x12a8>
  801a14:	d9000717 	ldw	r4,28(sp)
  801a18:	1d47883a 	add	r3,r3,r21
  801a1c:	b5400115 	stw	r21,4(r22)
  801a20:	8913883a 	add	r9,r17,r4
  801a24:	d9001b17 	ldw	r4,108(sp)
  801a28:	b2400015 	stw	r9,0(r22)
  801a2c:	d8c01c15 	stw	r3,112(sp)
  801a30:	21000044 	addi	r4,r4,1
  801a34:	d9001b15 	stw	r4,108(sp)
  801a38:	21000208 	cmpgei	r4,r4,8
  801a3c:	2003111e 	bne	r4,zero,802684 <___vfprintf_internal_r+0x1ee8>
  801a40:	b5800204 	addi	r22,r22,8
  801a44:	a800010e 	bge	r21,zero,801a4c <___vfprintf_internal_r+0x12b0>
  801a48:	002b883a 	mov	r21,zero
  801a4c:	156bc83a 	sub	r21,r2,r21
  801a50:	057c500e 	bge	zero,r21,800b94 <___vfprintf_internal_r+0x3f8>
  801a54:	01c02074 	movhi	r7,129
  801a58:	a9000450 	cmplti	r4,r21,17
  801a5c:	d8801b17 	ldw	r2,108(sp)
  801a60:	39c44304 	addi	r7,r7,4364
  801a64:	2001c51e 	bne	r4,zero,80217c <___vfprintf_internal_r+0x19e0>
  801a68:	07000404 	movi	fp,16
  801a6c:	3823883a 	mov	r17,r7
  801a70:	00000406 	br	801a84 <___vfprintf_internal_r+0x12e8>
  801a74:	b5800204 	addi	r22,r22,8
  801a78:	ad7ffc04 	addi	r21,r21,-16
  801a7c:	a9000448 	cmpgei	r4,r21,17
  801a80:	2001bd26 	beq	r4,zero,802178 <___vfprintf_internal_r+0x19dc>
  801a84:	10800044 	addi	r2,r2,1
  801a88:	18c00404 	addi	r3,r3,16
  801a8c:	b4400015 	stw	r17,0(r22)
  801a90:	b7000115 	stw	fp,4(r22)
  801a94:	d8c01c15 	stw	r3,112(sp)
  801a98:	d8801b15 	stw	r2,108(sp)
  801a9c:	11000208 	cmpgei	r4,r2,8
  801aa0:	203ff426 	beq	r4,zero,801a74 <___vfprintf_internal_r+0x12d8>
  801aa4:	d9801a04 	addi	r6,sp,104
  801aa8:	900b883a 	mov	r5,r18
  801aac:	9809883a 	mov	r4,r19
  801ab0:	0807ee00 	call	807ee0 <__sprint_r>
  801ab4:	103c481e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  801ab8:	d8c01c17 	ldw	r3,112(sp)
  801abc:	d8801b17 	ldw	r2,108(sp)
  801ac0:	dd802704 	addi	r22,sp,156
  801ac4:	003fec06 	br	801a78 <___vfprintf_internal_r+0x12dc>
  801ac8:	4002a71e 	bne	r8,zero,802568 <___vfprintf_internal_r+0x1dcc>
  801acc:	0011883a 	mov	r8,zero
  801ad0:	002b883a 	mov	r21,zero
  801ad4:	dc402704 	addi	r17,sp,156
  801ad8:	003d4706 	br	800ff8 <___vfprintf_internal_r+0x85c>
  801adc:	d8800417 	ldw	r2,16(sp)
  801ae0:	1080004c 	andi	r2,r2,1
  801ae4:	103f051e 	bne	r2,zero,8016fc <___vfprintf_internal_r+0xf60>
  801ae8:	00800044 	movi	r2,1
  801aec:	dd401b15 	stw	r21,108(sp)
  801af0:	b4400015 	stw	r17,0(r22)
  801af4:	b0800115 	stw	r2,4(r22)
  801af8:	d8c01c15 	stw	r3,112(sp)
  801afc:	ad400208 	cmpgei	r21,r21,8
  801b00:	a800641e 	bne	r21,zero,801c94 <___vfprintf_internal_r+0x14f8>
  801b04:	42000084 	addi	r8,r8,2
  801b08:	b5800404 	addi	r22,r22,16
  801b0c:	003f2706 	br	8017ac <___vfprintf_internal_r+0x1010>
  801b10:	02ff260e 	bge	zero,r11,8017ac <___vfprintf_internal_r+0x1010>
  801b14:	58800450 	cmplti	r2,r11,17
  801b18:	01c02074 	movhi	r7,129
  801b1c:	10034c1e 	bne	r2,zero,802850 <___vfprintf_internal_r+0x20b4>
  801b20:	39c44304 	addi	r7,r7,4364
  801b24:	dc000715 	stw	r16,28(sp)
  801b28:	05800404 	movi	r22,16
  801b2c:	5823883a 	mov	r17,r11
  801b30:	402b883a 	mov	r21,r8
  801b34:	3821883a 	mov	r16,r7
  801b38:	00000506 	br	801b50 <___vfprintf_internal_r+0x13b4>
  801b3c:	e7000204 	addi	fp,fp,8
  801b40:	8c7ffc04 	addi	r17,r17,-16
  801b44:	88800448 	cmpgei	r2,r17,17
  801b48:	1001d626 	beq	r2,zero,8022a4 <___vfprintf_internal_r+0x1b08>
  801b4c:	ad400044 	addi	r21,r21,1
  801b50:	18c00404 	addi	r3,r3,16
  801b54:	e4000015 	stw	r16,0(fp)
  801b58:	e5800115 	stw	r22,4(fp)
  801b5c:	d8c01c15 	stw	r3,112(sp)
  801b60:	dd401b15 	stw	r21,108(sp)
  801b64:	a8800208 	cmpgei	r2,r21,8
  801b68:	103ff426 	beq	r2,zero,801b3c <___vfprintf_internal_r+0x13a0>
  801b6c:	d9801a04 	addi	r6,sp,104
  801b70:	900b883a 	mov	r5,r18
  801b74:	9809883a 	mov	r4,r19
  801b78:	0807ee00 	call	807ee0 <__sprint_r>
  801b7c:	103c161e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  801b80:	dd401b17 	ldw	r21,108(sp)
  801b84:	d8c01c17 	ldw	r3,112(sp)
  801b88:	df002704 	addi	fp,sp,156
  801b8c:	003fec06 	br	801b40 <___vfprintf_internal_r+0x13a4>
  801b90:	d9801a04 	addi	r6,sp,104
  801b94:	900b883a 	mov	r5,r18
  801b98:	9809883a 	mov	r4,r19
  801b9c:	0807ee00 	call	807ee0 <__sprint_r>
  801ba0:	103c0d1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  801ba4:	d8c01c17 	ldw	r3,112(sp)
  801ba8:	dd802704 	addi	r22,sp,156
  801bac:	003bec06 	br	800b60 <___vfprintf_internal_r+0x3c4>
  801bb0:	d8800417 	ldw	r2,16(sp)
  801bb4:	1080004c 	andi	r2,r2,1
  801bb8:	103bf626 	beq	r2,zero,800b94 <___vfprintf_internal_r+0x3f8>
  801bbc:	003e1506 	br	801414 <___vfprintf_internal_r+0xc78>
  801bc0:	dc402704 	addi	r17,sp,156
  801bc4:	003d0c06 	br	800ff8 <___vfprintf_internal_r+0x85c>
  801bc8:	00800c04 	movi	r2,48
  801bcc:	d8801385 	stb	r2,78(sp)
  801bd0:	df0013c5 	stb	fp,79(sp)
  801bd4:	63000094 	ori	r12,r12,2
  801bd8:	00800084 	movi	r2,2
  801bdc:	003c3b06 	br	800ccc <___vfprintf_internal_r+0x530>
  801be0:	25000017 	ldw	r20,0(r4)
  801be4:	002b883a 	mov	r21,zero
  801be8:	d8c00615 	stw	r3,24(sp)
  801bec:	00800044 	movi	r2,1
  801bf0:	003c3606 	br	800ccc <___vfprintf_internal_r+0x530>
  801bf4:	d9000517 	ldw	r4,20(sp)
  801bf8:	2005d7fa 	srai	r2,r4,31
  801bfc:	19000015 	stw	r4,0(r3)
  801c00:	18800115 	stw	r2,4(r3)
  801c04:	003b1906 	br	80086c <___vfprintf_internal_r+0xd0>
  801c08:	25000017 	ldw	r20,0(r4)
  801c0c:	002b883a 	mov	r21,zero
  801c10:	d8c00615 	stw	r3,24(sp)
  801c14:	003d1b06 	br	801084 <___vfprintf_internal_r+0x8e8>
  801c18:	25000017 	ldw	r20,0(r4)
  801c1c:	002b883a 	mov	r21,zero
  801c20:	d8c00615 	stw	r3,24(sp)
  801c24:	0005883a 	mov	r2,zero
  801c28:	003c2806 	br	800ccc <___vfprintf_internal_r+0x530>
  801c2c:	18800017 	ldw	r2,0(r3)
  801c30:	d8800915 	stw	r2,36(sp)
  801c34:	18800117 	ldw	r2,4(r3)
  801c38:	d8800a15 	stw	r2,40(sp)
  801c3c:	003c5906 	br	800da4 <___vfprintf_internal_r+0x608>
  801c40:	25000017 	ldw	r20,0(r4)
  801c44:	d8c00615 	stw	r3,24(sp)
  801c48:	a02bd7fa 	srai	r21,r20,31
  801c4c:	a805883a 	mov	r2,r21
  801c50:	003cd706 	br	800fb0 <___vfprintf_internal_r+0x814>
  801c54:	0421c83a 	sub	r16,zero,r16
  801c58:	d8800615 	stw	r2,24(sp)
  801c5c:	003d6306 	br	8011ec <___vfprintf_internal_r+0xa50>
  801c60:	202b883a 	mov	r21,r4
  801c64:	057f4616 	blt	zero,r21,801980 <___vfprintf_internal_r+0x11e4>
  801c68:	003f4f06 	br	8019a8 <___vfprintf_internal_r+0x120c>
  801c6c:	d8800417 	ldw	r2,16(sp)
  801c70:	1080004c 	andi	r2,r2,1
  801c74:	103f531e 	bne	r2,zero,8019c4 <___vfprintf_internal_r+0x1228>
  801c78:	d9000817 	ldw	r4,32(sp)
  801c7c:	d9400717 	ldw	r5,28(sp)
  801c80:	2545c83a 	sub	r2,r4,r21
  801c84:	216bc83a 	sub	r21,r4,r5
  801c88:	157f6e0e 	bge	r2,r21,801a44 <___vfprintf_internal_r+0x12a8>
  801c8c:	102b883a 	mov	r21,r2
  801c90:	003f6c06 	br	801a44 <___vfprintf_internal_r+0x12a8>
  801c94:	d9801a04 	addi	r6,sp,104
  801c98:	900b883a 	mov	r5,r18
  801c9c:	9809883a 	mov	r4,r19
  801ca0:	0807ee00 	call	807ee0 <__sprint_r>
  801ca4:	103bcc1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  801ca8:	da001b17 	ldw	r8,108(sp)
  801cac:	d8c01c17 	ldw	r3,112(sp)
  801cb0:	dd802904 	addi	r22,sp,164
  801cb4:	42000044 	addi	r8,r8,1
  801cb8:	df002704 	addi	fp,sp,156
  801cbc:	003ebb06 	br	8017ac <___vfprintf_internal_r+0x1010>
  801cc0:	002b883a 	mov	r21,zero
  801cc4:	003f3906 	br	8019ac <___vfprintf_internal_r+0x1210>
  801cc8:	bf000043 	ldbu	fp,1(r23)
  801ccc:	63000814 	ori	r12,r12,32
  801cd0:	bdc00044 	addi	r23,r23,1
  801cd4:	e2c03fcc 	andi	r11,fp,255
  801cd8:	5ac0201c 	xori	r11,r11,128
  801cdc:	5affe004 	addi	r11,r11,-128
  801ce0:	003afa06 	br	8008cc <___vfprintf_internal_r+0x130>
  801ce4:	d9801a04 	addi	r6,sp,104
  801ce8:	900b883a 	mov	r5,r18
  801cec:	9809883a 	mov	r4,r19
  801cf0:	0807ee00 	call	807ee0 <__sprint_r>
  801cf4:	103bb81e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  801cf8:	d8c01c17 	ldw	r3,112(sp)
  801cfc:	dd802704 	addi	r22,sp,156
  801d00:	003dd006 	br	801444 <___vfprintf_internal_r+0xca8>
  801d04:	408001f0 	cmpltui	r2,r8,7
  801d08:	402b883a 	mov	r21,r8
  801d0c:	1001e726 	beq	r2,zero,8024ac <___vfprintf_internal_r+0x1d10>
  801d10:	04402074 	movhi	r17,129
  801d14:	a829883a 	mov	r20,r21
  801d18:	d8c00615 	stw	r3,24(sp)
  801d1c:	8c444004 	addi	r17,r17,4352
  801d20:	003b6306 	br	800ab0 <___vfprintf_internal_r+0x314>
  801d24:	01c02074 	movhi	r7,129
  801d28:	a9000450 	cmplti	r4,r21,17
  801d2c:	d8801b17 	ldw	r2,108(sp)
  801d30:	39c44304 	addi	r7,r7,4364
  801d34:	2001c21e 	bne	r4,zero,802440 <___vfprintf_internal_r+0x1ca4>
  801d38:	dc000e15 	stw	r16,56(sp)
  801d3c:	07000404 	movi	fp,16
  801d40:	3821883a 	mov	r16,r7
  801d44:	00000406 	br	801d58 <___vfprintf_internal_r+0x15bc>
  801d48:	b5800204 	addi	r22,r22,8
  801d4c:	ad7ffc04 	addi	r21,r21,-16
  801d50:	a9000448 	cmpgei	r4,r21,17
  801d54:	2001b826 	beq	r4,zero,802438 <___vfprintf_internal_r+0x1c9c>
  801d58:	10800044 	addi	r2,r2,1
  801d5c:	18c00404 	addi	r3,r3,16
  801d60:	b4000015 	stw	r16,0(r22)
  801d64:	b7000115 	stw	fp,4(r22)
  801d68:	d8c01c15 	stw	r3,112(sp)
  801d6c:	d8801b15 	stw	r2,108(sp)
  801d70:	11000208 	cmpgei	r4,r2,8
  801d74:	203ff426 	beq	r4,zero,801d48 <___vfprintf_internal_r+0x15ac>
  801d78:	d9801a04 	addi	r6,sp,104
  801d7c:	900b883a 	mov	r5,r18
  801d80:	9809883a 	mov	r4,r19
  801d84:	0807ee00 	call	807ee0 <__sprint_r>
  801d88:	103b931e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  801d8c:	d8c01c17 	ldw	r3,112(sp)
  801d90:	d8801b17 	ldw	r2,108(sp)
  801d94:	dd802704 	addi	r22,sp,156
  801d98:	003fec06 	br	801d4c <___vfprintf_internal_r+0x15b0>
  801d9c:	dc402704 	addi	r17,sp,156
  801da0:	a805883a 	mov	r2,r21
  801da4:	dc000715 	stw	r16,28(sp)
  801da8:	902b883a 	mov	r21,r18
  801dac:	8821883a 	mov	r16,r17
  801db0:	db000415 	stw	r12,16(sp)
  801db4:	a023883a 	mov	r17,r20
  801db8:	da000e15 	stw	r8,56(sp)
  801dbc:	9829883a 	mov	r20,r19
  801dc0:	1025883a 	mov	r18,r2
  801dc4:	6827883a 	mov	r19,r13
  801dc8:	8809883a 	mov	r4,r17
  801dcc:	900b883a 	mov	r5,r18
  801dd0:	01800284 	movi	r6,10
  801dd4:	000f883a 	mov	r7,zero
  801dd8:	080aaa00 	call	80aaa0 <__umoddi3>
  801ddc:	10800c04 	addi	r2,r2,48
  801de0:	8809883a 	mov	r4,r17
  801de4:	900b883a 	mov	r5,r18
  801de8:	01800284 	movi	r6,10
  801dec:	000f883a 	mov	r7,zero
  801df0:	80bfffc5 	stb	r2,-1(r16)
  801df4:	080a4800 	call	80a480 <__udivdi3>
  801df8:	900d883a 	mov	r6,r18
  801dfc:	880f883a 	mov	r7,r17
  801e00:	843fffc4 	addi	r16,r16,-1
  801e04:	1023883a 	mov	r17,r2
  801e08:	1825883a 	mov	r18,r3
  801e0c:	303fee1e 	bne	r6,zero,801dc8 <___vfprintf_internal_r+0x162c>
  801e10:	39c002a8 	cmpgeui	r7,r7,10
  801e14:	383fec1e 	bne	r7,zero,801dc8 <___vfprintf_internal_r+0x162c>
  801e18:	8023883a 	mov	r17,r16
  801e1c:	d8802704 	addi	r2,sp,156
  801e20:	981b883a 	mov	r13,r19
  801e24:	a825883a 	mov	r18,r21
  801e28:	dc000717 	ldw	r16,28(sp)
  801e2c:	da000e17 	ldw	r8,56(sp)
  801e30:	a027883a 	mov	r19,r20
  801e34:	146bc83a 	sub	r21,r2,r17
  801e38:	003c6f06 	br	800ff8 <___vfprintf_internal_r+0x85c>
  801e3c:	d8800517 	ldw	r2,20(sp)
  801e40:	18800015 	stw	r2,0(r3)
  801e44:	003a8906 	br	80086c <___vfprintf_internal_r+0xd0>
  801e48:	d9801a04 	addi	r6,sp,104
  801e4c:	900b883a 	mov	r5,r18
  801e50:	9809883a 	mov	r4,r19
  801e54:	0807ee00 	call	807ee0 <__sprint_r>
  801e58:	103b5f1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  801e5c:	d8c01c17 	ldw	r3,112(sp)
  801e60:	dd401b17 	ldw	r21,108(sp)
  801e64:	df002704 	addi	fp,sp,156
  801e68:	003e2b06 	br	801718 <___vfprintf_internal_r+0xf7c>
  801e6c:	d9801a04 	addi	r6,sp,104
  801e70:	900b883a 	mov	r5,r18
  801e74:	9809883a 	mov	r4,r19
  801e78:	0807ee00 	call	807ee0 <__sprint_r>
  801e7c:	103b561e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  801e80:	d8c01c17 	ldw	r3,112(sp)
  801e84:	dd401b17 	ldw	r21,108(sp)
  801e88:	df002704 	addi	fp,sp,156
  801e8c:	003e2d06 	br	801744 <___vfprintf_internal_r+0xfa8>
  801e90:	d9801a04 	addi	r6,sp,104
  801e94:	900b883a 	mov	r5,r18
  801e98:	9809883a 	mov	r4,r19
  801e9c:	da001115 	stw	r8,68(sp)
  801ea0:	db400f15 	stw	r13,60(sp)
  801ea4:	db800e15 	stw	r14,56(sp)
  801ea8:	0807ee00 	call	807ee0 <__sprint_r>
  801eac:	103b4a1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  801eb0:	d8c01c17 	ldw	r3,112(sp)
  801eb4:	da001117 	ldw	r8,68(sp)
  801eb8:	db400f17 	ldw	r13,60(sp)
  801ebc:	db800e17 	ldw	r14,56(sp)
  801ec0:	dd802704 	addi	r22,sp,156
  801ec4:	003b0706 	br	800ae4 <___vfprintf_internal_r+0x348>
  801ec8:	d8801b17 	ldw	r2,108(sp)
  801ecc:	01002074 	movhi	r4,129
  801ed0:	21044204 	addi	r4,r4,4360
  801ed4:	10800044 	addi	r2,r2,1
  801ed8:	18c00044 	addi	r3,r3,1
  801edc:	b1000015 	stw	r4,0(r22)
  801ee0:	01000044 	movi	r4,1
  801ee4:	d8801b15 	stw	r2,108(sp)
  801ee8:	b1000115 	stw	r4,4(r22)
  801eec:	d8c01c15 	stw	r3,112(sp)
  801ef0:	10800208 	cmpgei	r2,r2,8
  801ef4:	1001641e 	bne	r2,zero,802488 <___vfprintf_internal_r+0x1cec>
  801ef8:	b5800204 	addi	r22,r22,8
  801efc:	2800bd1e 	bne	r5,zero,8021f4 <___vfprintf_internal_r+0x1a58>
  801f00:	d8800417 	ldw	r2,16(sp)
  801f04:	d9000817 	ldw	r4,32(sp)
  801f08:	1080004c 	andi	r2,r2,1
  801f0c:	1104b03a 	or	r2,r2,r4
  801f10:	103b2026 	beq	r2,zero,800b94 <___vfprintf_internal_r+0x3f8>
  801f14:	d8800d17 	ldw	r2,52(sp)
  801f18:	d9000b17 	ldw	r4,44(sp)
  801f1c:	b0800015 	stw	r2,0(r22)
  801f20:	d8801b17 	ldw	r2,108(sp)
  801f24:	20c7883a 	add	r3,r4,r3
  801f28:	b1000115 	stw	r4,4(r22)
  801f2c:	10800044 	addi	r2,r2,1
  801f30:	d8c01c15 	stw	r3,112(sp)
  801f34:	d8801b15 	stw	r2,108(sp)
  801f38:	11000208 	cmpgei	r4,r2,8
  801f3c:	2001771e 	bne	r4,zero,80251c <___vfprintf_internal_r+0x1d80>
  801f40:	b5800204 	addi	r22,r22,8
  801f44:	d9000817 	ldw	r4,32(sp)
  801f48:	10800044 	addi	r2,r2,1
  801f4c:	d8801b15 	stw	r2,108(sp)
  801f50:	20c7883a 	add	r3,r4,r3
  801f54:	b4400015 	stw	r17,0(r22)
  801f58:	b1000115 	stw	r4,4(r22)
  801f5c:	d8c01c15 	stw	r3,112(sp)
  801f60:	10800208 	cmpgei	r2,r2,8
  801f64:	103b0a26 	beq	r2,zero,800b90 <___vfprintf_internal_r+0x3f4>
  801f68:	003e1906 	br	8017d0 <___vfprintf_internal_r+0x1034>
  801f6c:	8825883a 	mov	r18,r17
  801f70:	003b1906 	br	800bd8 <___vfprintf_internal_r+0x43c>
  801f74:	d9000917 	ldw	r4,36(sp)
  801f78:	d9400a17 	ldw	r5,40(sp)
  801f7c:	da000615 	stw	r8,24(sp)
  801f80:	200d883a 	mov	r6,r4
  801f84:	280f883a 	mov	r7,r5
  801f88:	db000415 	stw	r12,16(sp)
  801f8c:	080d7100 	call	80d710 <__unorddf2>
  801f90:	db000417 	ldw	r12,16(sp)
  801f94:	da000617 	ldw	r8,24(sp)
  801f98:	1002061e 	bne	r2,zero,8027b4 <___vfprintf_internal_r+0x2018>
  801f9c:	057ff7c4 	movi	r21,-33
  801fa0:	40bfffe0 	cmpeqi	r2,r8,-1
  801fa4:	e56a703a 	and	r21,fp,r21
  801fa8:	1001b41e 	bne	r2,zero,80267c <___vfprintf_internal_r+0x1ee0>
  801fac:	a88011d8 	cmpnei	r2,r21,71
  801fb0:	10015726 	beq	r2,zero,802510 <___vfprintf_internal_r+0x1d74>
  801fb4:	60804014 	ori	r2,r12,256
  801fb8:	d8800415 	stw	r2,16(sp)
  801fbc:	d8800a17 	ldw	r2,40(sp)
  801fc0:	10012d16 	blt	r2,zero,802478 <___vfprintf_internal_r+0x1cdc>
  801fc4:	dd000a17 	ldw	r20,40(sp)
  801fc8:	d8000605 	stb	zero,24(sp)
  801fcc:	e08019a0 	cmpeqi	r2,fp,102
  801fd0:	d8800f15 	stw	r2,60(sp)
  801fd4:	1000d21e 	bne	r2,zero,802320 <___vfprintf_internal_r+0x1b84>
  801fd8:	e08011a0 	cmpeqi	r2,fp,70
  801fdc:	1000d01e 	bne	r2,zero,802320 <___vfprintf_internal_r+0x1b84>
  801fe0:	a8801158 	cmpnei	r2,r21,69
  801fe4:	10016226 	beq	r2,zero,802570 <___vfprintf_internal_r+0x1dd4>
  801fe8:	d8801804 	addi	r2,sp,96
  801fec:	d8800315 	stw	r2,12(sp)
  801ff0:	d9400917 	ldw	r5,36(sp)
  801ff4:	d8801504 	addi	r2,sp,84
  801ff8:	d8800215 	stw	r2,8(sp)
  801ffc:	d8801404 	addi	r2,sp,80
  802000:	da000015 	stw	r8,0(sp)
  802004:	9809883a 	mov	r4,r19
  802008:	d8800115 	stw	r2,4(sp)
  80200c:	01c00084 	movi	r7,2
  802010:	a00d883a 	mov	r6,r20
  802014:	db000815 	stw	r12,32(sp)
  802018:	da000715 	stw	r8,28(sp)
  80201c:	0802d000 	call	802d00 <_dtoa_r>
  802020:	da000717 	ldw	r8,28(sp)
  802024:	e10019d8 	cmpnei	r4,fp,103
  802028:	db000817 	ldw	r12,32(sp)
  80202c:	1023883a 	mov	r17,r2
  802030:	4007883a 	mov	r3,r8
  802034:	2001621e 	bne	r4,zero,8025c0 <___vfprintf_internal_r+0x1e24>
  802038:	6080004c 	andi	r2,r12,1
  80203c:	1001621e 	bne	r2,zero,8025c8 <___vfprintf_internal_r+0x1e2c>
  802040:	d8801417 	ldw	r2,80(sp)
  802044:	ad4011e0 	cmpeqi	r21,r21,71
  802048:	d8800715 	stw	r2,28(sp)
  80204c:	d8801817 	ldw	r2,96(sp)
  802050:	1445c83a 	sub	r2,r2,r17
  802054:	d8800815 	stw	r2,32(sp)
  802058:	a8000526 	beq	r21,zero,802070 <___vfprintf_internal_r+0x18d4>
  80205c:	d8c00717 	ldw	r3,28(sp)
  802060:	18bfff50 	cmplti	r2,r3,-3
  802064:	1000011e 	bne	r2,zero,80206c <___vfprintf_internal_r+0x18d0>
  802068:	40c1670e 	bge	r8,r3,802608 <___vfprintf_internal_r+0x1e6c>
  80206c:	e73fff84 	addi	fp,fp,-2
  802070:	d8800717 	ldw	r2,28(sp)
  802074:	df001645 	stb	fp,89(sp)
  802078:	157fffc4 	addi	r21,r2,-1
  80207c:	dd401415 	stw	r21,80(sp)
  802080:	a801d416 	blt	r21,zero,8027d4 <___vfprintf_internal_r+0x2038>
  802084:	00800ac4 	movi	r2,43
  802088:	d8801685 	stb	r2,90(sp)
  80208c:	a8800290 	cmplti	r2,r21,10
  802090:	1001c11e 	bne	r2,zero,802798 <___vfprintf_internal_r+0x1ffc>
  802094:	d98019c4 	addi	r6,sp,103
  802098:	9029883a 	mov	r20,r18
  80209c:	dc400715 	stw	r17,28(sp)
  8020a0:	8025883a 	mov	r18,r16
  8020a4:	db000f15 	stw	r12,60(sp)
  8020a8:	3021883a 	mov	r16,r6
  8020ac:	a809883a 	mov	r4,r21
  8020b0:	01400284 	movi	r5,10
  8020b4:	080b0e40 	call	80b0e4 <__modsi3>
  8020b8:	10800c04 	addi	r2,r2,48
  8020bc:	a809883a 	mov	r4,r21
  8020c0:	80bfffc5 	stb	r2,-1(r16)
  8020c4:	01400284 	movi	r5,10
  8020c8:	080b0640 	call	80b064 <__divsi3>
  8020cc:	a9001908 	cmpgei	r4,r21,100
  8020d0:	8023883a 	mov	r17,r16
  8020d4:	102b883a 	mov	r21,r2
  8020d8:	843fffc4 	addi	r16,r16,-1
  8020dc:	203ff31e 	bne	r4,zero,8020ac <___vfprintf_internal_r+0x1910>
  8020e0:	800d883a 	mov	r6,r16
  8020e4:	11000c04 	addi	r4,r2,48
  8020e8:	9021883a 	mov	r16,r18
  8020ec:	a025883a 	mov	r18,r20
  8020f0:	8829883a 	mov	r20,r17
  8020f4:	a0bfff84 	addi	r2,r20,-2
  8020f8:	313fffc5 	stb	r4,-1(r6)
  8020fc:	d8c019c4 	addi	r3,sp,103
  802100:	db000f17 	ldw	r12,60(sp)
  802104:	dc400717 	ldw	r17,28(sp)
  802108:	10c1d62e 	bgeu	r2,r3,802864 <___vfprintf_internal_r+0x20c8>
  80210c:	d8c016c4 	addi	r3,sp,91
  802110:	00000106 	br	802118 <___vfprintf_internal_r+0x197c>
  802114:	11000003 	ldbu	r4,0(r2)
  802118:	19000005 	stb	r4,0(r3)
  80211c:	10800044 	addi	r2,r2,1
  802120:	d90019c4 	addi	r4,sp,103
  802124:	18c00044 	addi	r3,r3,1
  802128:	113ffa1e 	bne	r2,r4,802114 <___vfprintf_internal_r+0x1978>
  80212c:	d8801a44 	addi	r2,sp,105
  802130:	d8c016c4 	addi	r3,sp,91
  802134:	1505c83a 	sub	r2,r2,r20
  802138:	1885883a 	add	r2,r3,r2
  80213c:	d8c01644 	addi	r3,sp,89
  802140:	10c5c83a 	sub	r2,r2,r3
  802144:	d8801015 	stw	r2,64(sp)
  802148:	d8c00817 	ldw	r3,32(sp)
  80214c:	d9001017 	ldw	r4,64(sp)
  802150:	18800088 	cmpgei	r2,r3,2
  802154:	192b883a 	add	r21,r3,r4
  802158:	1001aa26 	beq	r2,zero,802804 <___vfprintf_internal_r+0x2068>
  80215c:	d8800b17 	ldw	r2,44(sp)
  802160:	a8ab883a 	add	r21,r21,r2
  802164:	a829883a 	mov	r20,r21
  802168:	a800010e 	bge	r21,zero,802170 <___vfprintf_internal_r+0x19d4>
  80216c:	0029883a 	mov	r20,zero
  802170:	d8000715 	stw	zero,28(sp)
  802174:	00009d06 	br	8023ec <___vfprintf_internal_r+0x1c50>
  802178:	880f883a 	mov	r7,r17
  80217c:	10800044 	addi	r2,r2,1
  802180:	1d47883a 	add	r3,r3,r21
  802184:	b1c00015 	stw	r7,0(r22)
  802188:	003a7c06 	br	800b7c <___vfprintf_internal_r+0x3e0>
  80218c:	d9801a04 	addi	r6,sp,104
  802190:	900b883a 	mov	r5,r18
  802194:	9809883a 	mov	r4,r19
  802198:	0807ee00 	call	807ee0 <__sprint_r>
  80219c:	103a8e1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  8021a0:	d8c01c17 	ldw	r3,112(sp)
  8021a4:	dd802704 	addi	r22,sp,156
  8021a8:	003c9706 	br	801408 <___vfprintf_internal_r+0xc6c>
  8021ac:	d9801a04 	addi	r6,sp,104
  8021b0:	900b883a 	mov	r5,r18
  8021b4:	9809883a 	mov	r4,r19
  8021b8:	da000e15 	stw	r8,56(sp)
  8021bc:	0807ee00 	call	807ee0 <__sprint_r>
  8021c0:	103a851e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  8021c4:	d8c01c17 	ldw	r3,112(sp)
  8021c8:	da000e17 	ldw	r8,56(sp)
  8021cc:	dd802704 	addi	r22,sp,156
  8021d0:	003a6106 	br	800b58 <___vfprintf_internal_r+0x3bc>
  8021d4:	8809883a 	mov	r4,r17
  8021d8:	db000415 	stw	r12,16(sp)
  8021dc:	d8c00615 	stw	r3,24(sp)
  8021e0:	08007040 	call	800704 <strlen>
  8021e4:	db000417 	ldw	r12,16(sp)
  8021e8:	102b883a 	mov	r21,r2
  8021ec:	1029883a 	mov	r20,r2
  8021f0:	003a2f06 	br	800ab0 <___vfprintf_internal_r+0x314>
  8021f4:	d8800d17 	ldw	r2,52(sp)
  8021f8:	d9000b17 	ldw	r4,44(sp)
  8021fc:	b0800015 	stw	r2,0(r22)
  802200:	d8801b17 	ldw	r2,108(sp)
  802204:	20c7883a 	add	r3,r4,r3
  802208:	b1000115 	stw	r4,4(r22)
  80220c:	10800044 	addi	r2,r2,1
  802210:	d8c01c15 	stw	r3,112(sp)
  802214:	d8801b15 	stw	r2,108(sp)
  802218:	11000208 	cmpgei	r4,r2,8
  80221c:	2000bf1e 	bne	r4,zero,80251c <___vfprintf_internal_r+0x1d80>
  802220:	b5800204 	addi	r22,r22,8
  802224:	283f470e 	bge	r5,zero,801f44 <___vfprintf_internal_r+0x17a8>
  802228:	01c02074 	movhi	r7,129
  80222c:	293ffc08 	cmpgei	r4,r5,-16
  802230:	39c44304 	addi	r7,r7,4364
  802234:	0179c83a 	sub	fp,zero,r5
  802238:	20013f1e 	bne	r4,zero,802738 <___vfprintf_internal_r+0x1f9c>
  80223c:	dc000715 	stw	r16,28(sp)
  802240:	05400404 	movi	r21,16
  802244:	9021883a 	mov	r16,r18
  802248:	3825883a 	mov	r18,r7
  80224c:	00000406 	br	802260 <___vfprintf_internal_r+0x1ac4>
  802250:	b5800204 	addi	r22,r22,8
  802254:	e73ffc04 	addi	fp,fp,-16
  802258:	e1800448 	cmpgei	r6,fp,17
  80225c:	30013326 	beq	r6,zero,80272c <___vfprintf_internal_r+0x1f90>
  802260:	10800044 	addi	r2,r2,1
  802264:	18c00404 	addi	r3,r3,16
  802268:	b4800015 	stw	r18,0(r22)
  80226c:	b5400115 	stw	r21,4(r22)
  802270:	d8c01c15 	stw	r3,112(sp)
  802274:	d8801b15 	stw	r2,108(sp)
  802278:	11800208 	cmpgei	r6,r2,8
  80227c:	303ff426 	beq	r6,zero,802250 <___vfprintf_internal_r+0x1ab4>
  802280:	d9801a04 	addi	r6,sp,104
  802284:	800b883a 	mov	r5,r16
  802288:	9809883a 	mov	r4,r19
  80228c:	0807ee00 	call	807ee0 <__sprint_r>
  802290:	1001721e 	bne	r2,zero,80285c <___vfprintf_internal_r+0x20c0>
  802294:	d8c01c17 	ldw	r3,112(sp)
  802298:	d8801b17 	ldw	r2,108(sp)
  80229c:	dd802704 	addi	r22,sp,156
  8022a0:	003fec06 	br	802254 <___vfprintf_internal_r+0x1ab8>
  8022a4:	800f883a 	mov	r7,r16
  8022a8:	dc000717 	ldw	r16,28(sp)
  8022ac:	8817883a 	mov	r11,r17
  8022b0:	aa000044 	addi	r8,r21,1
  8022b4:	e0800204 	addi	r2,fp,8
  8022b8:	1ac7883a 	add	r3,r3,r11
  8022bc:	e1c00015 	stw	r7,0(fp)
  8022c0:	e2c00115 	stw	r11,4(fp)
  8022c4:	d8c01c15 	stw	r3,112(sp)
  8022c8:	da001b15 	stw	r8,108(sp)
  8022cc:	41000208 	cmpgei	r4,r8,8
  8022d0:	203e701e 	bne	r4,zero,801c94 <___vfprintf_internal_r+0x14f8>
  8022d4:	42000044 	addi	r8,r8,1
  8022d8:	15800204 	addi	r22,r2,8
  8022dc:	1039883a 	mov	fp,r2
  8022e0:	003d3206 	br	8017ac <___vfprintf_internal_r+0x1010>
  8022e4:	d8800617 	ldw	r2,24(sp)
  8022e8:	d8c00615 	stw	r3,24(sp)
  8022ec:	15000017 	ldw	r20,0(r2)
  8022f0:	a02bd7fa 	srai	r21,r20,31
  8022f4:	a805883a 	mov	r2,r21
  8022f8:	003b2d06 	br	800fb0 <___vfprintf_internal_r+0x814>
  8022fc:	d8800617 	ldw	r2,24(sp)
  802300:	002b883a 	mov	r21,zero
  802304:	d8c00615 	stw	r3,24(sp)
  802308:	15000017 	ldw	r20,0(r2)
  80230c:	0005883a 	mov	r2,zero
  802310:	003a6e06 	br	800ccc <___vfprintf_internal_r+0x530>
  802314:	04402074 	movhi	r17,129
  802318:	8c443204 	addi	r17,r17,4296
  80231c:	003ac606 	br	800e38 <___vfprintf_internal_r+0x69c>
  802320:	d8801804 	addi	r2,sp,96
  802324:	d8800315 	stw	r2,12(sp)
  802328:	d9400917 	ldw	r5,36(sp)
  80232c:	d8801504 	addi	r2,sp,84
  802330:	d8800215 	stw	r2,8(sp)
  802334:	d8801404 	addi	r2,sp,80
  802338:	da000015 	stw	r8,0(sp)
  80233c:	d8800115 	stw	r2,4(sp)
  802340:	01c000c4 	movi	r7,3
  802344:	a00d883a 	mov	r6,r20
  802348:	9809883a 	mov	r4,r19
  80234c:	db000815 	stw	r12,32(sp)
  802350:	da000715 	stw	r8,28(sp)
  802354:	0802d000 	call	802d00 <_dtoa_r>
  802358:	da000717 	ldw	r8,28(sp)
  80235c:	1023883a 	mov	r17,r2
  802360:	db000817 	ldw	r12,32(sp)
  802364:	1207883a 	add	r3,r2,r8
  802368:	88800007 	ldb	r2,0(r17)
  80236c:	10800c20 	cmpeqi	r2,r2,48
  802370:	1000571e 	bne	r2,zero,8024d0 <___vfprintf_internal_r+0x1d34>
  802374:	d8801417 	ldw	r2,80(sp)
  802378:	1893883a 	add	r9,r3,r2
  80237c:	d9000917 	ldw	r4,36(sp)
  802380:	000d883a 	mov	r6,zero
  802384:	000f883a 	mov	r7,zero
  802388:	a00b883a 	mov	r5,r20
  80238c:	da401115 	stw	r9,68(sp)
  802390:	da000815 	stw	r8,32(sp)
  802394:	db000715 	stw	r12,28(sp)
  802398:	080c4600 	call	80c460 <__eqdf2>
  80239c:	db000717 	ldw	r12,28(sp)
  8023a0:	da000817 	ldw	r8,32(sp)
  8023a4:	da401117 	ldw	r9,68(sp)
  8023a8:	1000891e 	bne	r2,zero,8025d0 <___vfprintf_internal_r+0x1e34>
  8023ac:	4805883a 	mov	r2,r9
  8023b0:	d8c01417 	ldw	r3,80(sp)
  8023b4:	1445c83a 	sub	r2,r2,r17
  8023b8:	ad4011d8 	cmpnei	r21,r21,71
  8023bc:	d8c00715 	stw	r3,28(sp)
  8023c0:	d8800815 	stw	r2,32(sp)
  8023c4:	a83f2526 	beq	r21,zero,80205c <___vfprintf_internal_r+0x18c0>
  8023c8:	d8800f17 	ldw	r2,60(sp)
  8023cc:	103f2826 	beq	r2,zero,802070 <___vfprintf_internal_r+0x18d4>
  8023d0:	d8c00717 	ldw	r3,28(sp)
  8023d4:	6080004c 	andi	r2,r12,1
  8023d8:	1204b03a 	or	r2,r2,r8
  8023dc:	00c1140e 	bge	zero,r3,802830 <___vfprintf_internal_r+0x2094>
  8023e0:	1001011e 	bne	r2,zero,8027e8 <___vfprintf_internal_r+0x204c>
  8023e4:	dd400717 	ldw	r21,28(sp)
  8023e8:	a829883a 	mov	r20,r21
  8023ec:	d8800607 	ldb	r2,24(sp)
  8023f0:	10008026 	beq	r2,zero,8025f4 <___vfprintf_internal_r+0x1e58>
  8023f4:	00800b44 	movi	r2,45
  8023f8:	d8801345 	stb	r2,77(sp)
  8023fc:	d8800e17 	ldw	r2,56(sp)
  802400:	0011883a 	mov	r8,zero
  802404:	d8800615 	stw	r2,24(sp)
  802408:	003b0306 	br	801018 <___vfprintf_internal_r+0x87c>
  80240c:	d8800617 	ldw	r2,24(sp)
  802410:	002b883a 	mov	r21,zero
  802414:	d8c00615 	stw	r3,24(sp)
  802418:	15000017 	ldw	r20,0(r2)
  80241c:	00800044 	movi	r2,1
  802420:	003a2a06 	br	800ccc <___vfprintf_internal_r+0x530>
  802424:	d8800617 	ldw	r2,24(sp)
  802428:	002b883a 	mov	r21,zero
  80242c:	d8c00615 	stw	r3,24(sp)
  802430:	15000017 	ldw	r20,0(r2)
  802434:	003b1306 	br	801084 <___vfprintf_internal_r+0x8e8>
  802438:	800f883a 	mov	r7,r16
  80243c:	dc000e17 	ldw	r16,56(sp)
  802440:	10800044 	addi	r2,r2,1
  802444:	1d47883a 	add	r3,r3,r21
  802448:	d8801b15 	stw	r2,108(sp)
  80244c:	b1c00015 	stw	r7,0(r22)
  802450:	b5400115 	stw	r21,4(r22)
  802454:	d8c01c15 	stw	r3,112(sp)
  802458:	10800208 	cmpgei	r2,r2,8
  80245c:	10003a1e 	bne	r2,zero,802548 <___vfprintf_internal_r+0x1dac>
  802460:	b5800204 	addi	r22,r22,8
  802464:	003d5406 	br	8019b8 <___vfprintf_internal_r+0x121c>
  802468:	00800b44 	movi	r2,45
  80246c:	d8801345 	stb	r2,77(sp)
  802470:	03400b44 	movi	r13,45
  802474:	003a6c06 	br	800e28 <___vfprintf_internal_r+0x68c>
  802478:	1520003c 	xorhi	r20,r2,32768
  80247c:	00800b44 	movi	r2,45
  802480:	d8800605 	stb	r2,24(sp)
  802484:	003ed106 	br	801fcc <___vfprintf_internal_r+0x1830>
  802488:	d9801a04 	addi	r6,sp,104
  80248c:	900b883a 	mov	r5,r18
  802490:	9809883a 	mov	r4,r19
  802494:	0807ee00 	call	807ee0 <__sprint_r>
  802498:	1039cf1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  80249c:	d9401417 	ldw	r5,80(sp)
  8024a0:	d8c01c17 	ldw	r3,112(sp)
  8024a4:	dd802704 	addi	r22,sp,156
  8024a8:	003e9406 	br	801efc <___vfprintf_internal_r+0x1760>
  8024ac:	05400184 	movi	r21,6
  8024b0:	003e1706 	br	801d10 <___vfprintf_internal_r+0x1574>
  8024b4:	d9401345 	stb	r5,77(sp)
  8024b8:	00397706 	br	800a98 <___vfprintf_internal_r+0x2fc>
  8024bc:	d9801a04 	addi	r6,sp,104
  8024c0:	900b883a 	mov	r5,r18
  8024c4:	9809883a 	mov	r4,r19
  8024c8:	0807ee00 	call	807ee0 <__sprint_r>
  8024cc:	0039c206 	br	800bd8 <___vfprintf_internal_r+0x43c>
  8024d0:	d9000917 	ldw	r4,36(sp)
  8024d4:	000d883a 	mov	r6,zero
  8024d8:	000f883a 	mov	r7,zero
  8024dc:	a00b883a 	mov	r5,r20
  8024e0:	d8c01115 	stw	r3,68(sp)
  8024e4:	da000815 	stw	r8,32(sp)
  8024e8:	db000715 	stw	r12,28(sp)
  8024ec:	080c4600 	call	80c460 <__eqdf2>
  8024f0:	db000717 	ldw	r12,28(sp)
  8024f4:	da000817 	ldw	r8,32(sp)
  8024f8:	d8c01117 	ldw	r3,68(sp)
  8024fc:	103f9d26 	beq	r2,zero,802374 <___vfprintf_internal_r+0x1bd8>
  802500:	00800044 	movi	r2,1
  802504:	1205c83a 	sub	r2,r2,r8
  802508:	d8801415 	stw	r2,80(sp)
  80250c:	003f9a06 	br	802378 <___vfprintf_internal_r+0x1bdc>
  802510:	403ea81e 	bne	r8,zero,801fb4 <___vfprintf_internal_r+0x1818>
  802514:	02000044 	movi	r8,1
  802518:	003ea606 	br	801fb4 <___vfprintf_internal_r+0x1818>
  80251c:	d9801a04 	addi	r6,sp,104
  802520:	900b883a 	mov	r5,r18
  802524:	9809883a 	mov	r4,r19
  802528:	0807ee00 	call	807ee0 <__sprint_r>
  80252c:	1039aa1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  802530:	d9401417 	ldw	r5,80(sp)
  802534:	d8c01c17 	ldw	r3,112(sp)
  802538:	d8801b17 	ldw	r2,108(sp)
  80253c:	dd802704 	addi	r22,sp,156
  802540:	283e800e 	bge	r5,zero,801f44 <___vfprintf_internal_r+0x17a8>
  802544:	003f3806 	br	802228 <___vfprintf_internal_r+0x1a8c>
  802548:	d9801a04 	addi	r6,sp,104
  80254c:	900b883a 	mov	r5,r18
  802550:	9809883a 	mov	r4,r19
  802554:	0807ee00 	call	807ee0 <__sprint_r>
  802558:	10399f1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  80255c:	d8c01c17 	ldw	r3,112(sp)
  802560:	dd802704 	addi	r22,sp,156
  802564:	003d1406 	br	8019b8 <___vfprintf_internal_r+0x121c>
  802568:	db000417 	ldw	r12,16(sp)
  80256c:	003a9d06 	br	800fe4 <___vfprintf_internal_r+0x848>
  802570:	d8801804 	addi	r2,sp,96
  802574:	d8800315 	stw	r2,12(sp)
  802578:	d9400917 	ldw	r5,36(sp)
  80257c:	d8801504 	addi	r2,sp,84
  802580:	40c00044 	addi	r3,r8,1
  802584:	d8800215 	stw	r2,8(sp)
  802588:	d8801404 	addi	r2,sp,80
  80258c:	d8c00015 	stw	r3,0(sp)
  802590:	d8800115 	stw	r2,4(sp)
  802594:	01c00084 	movi	r7,2
  802598:	a00d883a 	mov	r6,r20
  80259c:	9809883a 	mov	r4,r19
  8025a0:	db001115 	stw	r12,68(sp)
  8025a4:	da000815 	stw	r8,32(sp)
  8025a8:	d8c00715 	stw	r3,28(sp)
  8025ac:	0802d000 	call	802d00 <_dtoa_r>
  8025b0:	d8c00717 	ldw	r3,28(sp)
  8025b4:	da000817 	ldw	r8,32(sp)
  8025b8:	db001117 	ldw	r12,68(sp)
  8025bc:	1023883a 	mov	r17,r2
  8025c0:	e08011d8 	cmpnei	r2,fp,71
  8025c4:	103e9c26 	beq	r2,zero,802038 <___vfprintf_internal_r+0x189c>
  8025c8:	88d3883a 	add	r9,r17,r3
  8025cc:	003f6b06 	br	80237c <___vfprintf_internal_r+0x1be0>
  8025d0:	d8801817 	ldw	r2,96(sp)
  8025d4:	127f762e 	bgeu	r2,r9,8023b0 <___vfprintf_internal_r+0x1c14>
  8025d8:	01000c04 	movi	r4,48
  8025dc:	10c00044 	addi	r3,r2,1
  8025e0:	d8c01815 	stw	r3,96(sp)
  8025e4:	11000005 	stb	r4,0(r2)
  8025e8:	d8801817 	ldw	r2,96(sp)
  8025ec:	127ffb36 	bltu	r2,r9,8025dc <___vfprintf_internal_r+0x1e40>
  8025f0:	003f6f06 	br	8023b0 <___vfprintf_internal_r+0x1c14>
  8025f4:	d8800e17 	ldw	r2,56(sp)
  8025f8:	db401343 	ldbu	r13,77(sp)
  8025fc:	0011883a 	mov	r8,zero
  802600:	d8800615 	stw	r2,24(sp)
  802604:	003a8006 	br	801008 <___vfprintf_internal_r+0x86c>
  802608:	d8800717 	ldw	r2,28(sp)
  80260c:	d8c00817 	ldw	r3,32(sp)
  802610:	10c02b16 	blt	r2,r3,8026c0 <___vfprintf_internal_r+0x1f24>
  802614:	6300004c 	andi	r12,r12,1
  802618:	6000581e 	bne	r12,zero,80277c <___vfprintf_internal_r+0x1fe0>
  80261c:	1029883a 	mov	r20,r2
  802620:	1000010e 	bge	r2,zero,802628 <___vfprintf_internal_r+0x1e8c>
  802624:	0029883a 	mov	r20,zero
  802628:	dd400717 	ldw	r21,28(sp)
  80262c:	070019c4 	movi	fp,103
  802630:	003f6e06 	br	8023ec <___vfprintf_internal_r+0x1c50>
  802634:	d9801a04 	addi	r6,sp,104
  802638:	900b883a 	mov	r5,r18
  80263c:	9809883a 	mov	r4,r19
  802640:	0807ee00 	call	807ee0 <__sprint_r>
  802644:	1039641e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  802648:	dd401417 	ldw	r21,80(sp)
  80264c:	d8c01c17 	ldw	r3,112(sp)
  802650:	dd802704 	addi	r22,sp,156
  802654:	003ce706 	br	8019f4 <___vfprintf_internal_r+0x1258>
  802658:	d9801a04 	addi	r6,sp,104
  80265c:	900b883a 	mov	r5,r18
  802660:	9809883a 	mov	r4,r19
  802664:	0807ee00 	call	807ee0 <__sprint_r>
  802668:	10395b1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  80266c:	d8c01c17 	ldw	r3,112(sp)
  802670:	dd802704 	addi	r22,sp,156
  802674:	a83ccd0e 	bge	r21,zero,8019ac <___vfprintf_internal_r+0x1210>
  802678:	003d9106 	br	801cc0 <___vfprintf_internal_r+0x1524>
  80267c:	02000184 	movi	r8,6
  802680:	003e4c06 	br	801fb4 <___vfprintf_internal_r+0x1818>
  802684:	d9801a04 	addi	r6,sp,104
  802688:	900b883a 	mov	r5,r18
  80268c:	9809883a 	mov	r4,r19
  802690:	0807ee00 	call	807ee0 <__sprint_r>
  802694:	1039501e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  802698:	d8801417 	ldw	r2,80(sp)
  80269c:	d9000817 	ldw	r4,32(sp)
  8026a0:	d8c01c17 	ldw	r3,112(sp)
  8026a4:	dd802704 	addi	r22,sp,156
  8026a8:	2085c83a 	sub	r2,r4,r2
  8026ac:	003ce506 	br	801a44 <___vfprintf_internal_r+0x12a8>
  8026b0:	4029883a 	mov	r20,r8
  8026b4:	d8c00615 	stw	r3,24(sp)
  8026b8:	402b883a 	mov	r21,r8
  8026bc:	0038fc06 	br	800ab0 <___vfprintf_internal_r+0x314>
  8026c0:	d8800817 	ldw	r2,32(sp)
  8026c4:	d8c00b17 	ldw	r3,44(sp)
  8026c8:	10eb883a 	add	r21,r2,r3
  8026cc:	d8800717 	ldw	r2,28(sp)
  8026d0:	00800316 	blt	zero,r2,8026e0 <___vfprintf_internal_r+0x1f44>
  8026d4:	d8800717 	ldw	r2,28(sp)
  8026d8:	a8abc83a 	sub	r21,r21,r2
  8026dc:	ad400044 	addi	r21,r21,1
  8026e0:	a829883a 	mov	r20,r21
  8026e4:	a8002a16 	blt	r21,zero,802790 <___vfprintf_internal_r+0x1ff4>
  8026e8:	070019c4 	movi	fp,103
  8026ec:	003f3f06 	br	8023ec <___vfprintf_internal_r+0x1c50>
  8026f0:	d9401345 	stb	r5,77(sp)
  8026f4:	003ae006 	br	801278 <___vfprintf_internal_r+0xadc>
  8026f8:	d9401345 	stb	r5,77(sp)
  8026fc:	003a5706 	br	80105c <___vfprintf_internal_r+0x8c0>
  802700:	d9401345 	stb	r5,77(sp)
  802704:	003b1706 	br	801364 <___vfprintf_internal_r+0xbc8>
  802708:	d9401345 	stb	r5,77(sp)
  80270c:	003a2006 	br	800f90 <___vfprintf_internal_r+0x7f4>
  802710:	d9401345 	stb	r5,77(sp)
  802714:	003a6606 	br	8010b0 <___vfprintf_internal_r+0x914>
  802718:	d9401345 	stb	r5,77(sp)
  80271c:	00399706 	br	800d7c <___vfprintf_internal_r+0x5e0>
  802720:	00bfffc4 	movi	r2,-1
  802724:	d8800515 	stw	r2,20(sp)
  802728:	00392e06 	br	800be4 <___vfprintf_internal_r+0x448>
  80272c:	900f883a 	mov	r7,r18
  802730:	8025883a 	mov	r18,r16
  802734:	dc000717 	ldw	r16,28(sp)
  802738:	10800044 	addi	r2,r2,1
  80273c:	1f07883a 	add	r3,r3,fp
  802740:	b1c00015 	stw	r7,0(r22)
  802744:	b7000115 	stw	fp,4(r22)
  802748:	d8c01c15 	stw	r3,112(sp)
  80274c:	d8801b15 	stw	r2,108(sp)
  802750:	11000208 	cmpgei	r4,r2,8
  802754:	203dfa26 	beq	r4,zero,801f40 <___vfprintf_internal_r+0x17a4>
  802758:	d9801a04 	addi	r6,sp,104
  80275c:	900b883a 	mov	r5,r18
  802760:	9809883a 	mov	r4,r19
  802764:	0807ee00 	call	807ee0 <__sprint_r>
  802768:	10391b1e 	bne	r2,zero,800bd8 <___vfprintf_internal_r+0x43c>
  80276c:	d8c01c17 	ldw	r3,112(sp)
  802770:	d8801b17 	ldw	r2,108(sp)
  802774:	dd802704 	addi	r22,sp,156
  802778:	003df206 	br	801f44 <___vfprintf_internal_r+0x17a8>
  80277c:	d8800717 	ldw	r2,28(sp)
  802780:	d8c00b17 	ldw	r3,44(sp)
  802784:	10eb883a 	add	r21,r2,r3
  802788:	a829883a 	mov	r20,r21
  80278c:	a83fd60e 	bge	r21,zero,8026e8 <___vfprintf_internal_r+0x1f4c>
  802790:	0029883a 	mov	r20,zero
  802794:	003fd406 	br	8026e8 <___vfprintf_internal_r+0x1f4c>
  802798:	00800c04 	movi	r2,48
  80279c:	ad400c04 	addi	r21,r21,48
  8027a0:	d88016c5 	stb	r2,91(sp)
  8027a4:	00800104 	movi	r2,4
  8027a8:	dd401705 	stb	r21,92(sp)
  8027ac:	d8801015 	stw	r2,64(sp)
  8027b0:	003e6506 	br	802148 <___vfprintf_internal_r+0x19ac>
  8027b4:	d8800a17 	ldw	r2,40(sp)
  8027b8:	10001916 	blt	r2,zero,802820 <___vfprintf_internal_r+0x2084>
  8027bc:	db401343 	ldbu	r13,77(sp)
  8027c0:	e0801210 	cmplti	r2,fp,72
  8027c4:	1000131e 	bne	r2,zero,802814 <___vfprintf_internal_r+0x2078>
  8027c8:	04402074 	movhi	r17,129
  8027cc:	8c443504 	addi	r17,r17,4308
  8027d0:	00399906 	br	800e38 <___vfprintf_internal_r+0x69c>
  8027d4:	05400044 	movi	r21,1
  8027d8:	a8abc83a 	sub	r21,r21,r2
  8027dc:	00800b44 	movi	r2,45
  8027e0:	d8801685 	stb	r2,90(sp)
  8027e4:	003e2906 	br	80208c <___vfprintf_internal_r+0x18f0>
  8027e8:	d8800b17 	ldw	r2,44(sp)
  8027ec:	18ab883a 	add	r21,r3,r2
  8027f0:	aa2b883a 	add	r21,r21,r8
  8027f4:	a829883a 	mov	r20,r21
  8027f8:	a83efc0e 	bge	r21,zero,8023ec <___vfprintf_internal_r+0x1c50>
  8027fc:	0029883a 	mov	r20,zero
  802800:	003efa06 	br	8023ec <___vfprintf_internal_r+0x1c50>
  802804:	6080004c 	andi	r2,r12,1
  802808:	d8800715 	stw	r2,28(sp)
  80280c:	103e531e 	bne	r2,zero,80215c <___vfprintf_internal_r+0x19c0>
  802810:	003ff806 	br	8027f4 <___vfprintf_internal_r+0x2058>
  802814:	04402074 	movhi	r17,129
  802818:	8c443404 	addi	r17,r17,4304
  80281c:	00398606 	br	800e38 <___vfprintf_internal_r+0x69c>
  802820:	00800b44 	movi	r2,45
  802824:	d8801345 	stb	r2,77(sp)
  802828:	03400b44 	movi	r13,45
  80282c:	003fe406 	br	8027c0 <___vfprintf_internal_r+0x2024>
  802830:	1000031e 	bne	r2,zero,802840 <___vfprintf_internal_r+0x20a4>
  802834:	05000044 	movi	r20,1
  802838:	05400044 	movi	r21,1
  80283c:	003eeb06 	br	8023ec <___vfprintf_internal_r+0x1c50>
  802840:	d8800b17 	ldw	r2,44(sp)
  802844:	15400044 	addi	r21,r2,1
  802848:	aa2b883a 	add	r21,r21,r8
  80284c:	003fe906 	br	8027f4 <___vfprintf_internal_r+0x2058>
  802850:	b005883a 	mov	r2,r22
  802854:	39c44304 	addi	r7,r7,4364
  802858:	003e9706 	br	8022b8 <___vfprintf_internal_r+0x1b1c>
  80285c:	8025883a 	mov	r18,r16
  802860:	0038dd06 	br	800bd8 <___vfprintf_internal_r+0x43c>
  802864:	00800084 	movi	r2,2
  802868:	d8801015 	stw	r2,64(sp)
  80286c:	003e3606 	br	802148 <___vfprintf_internal_r+0x19ac>
  802870:	d8c00617 	ldw	r3,24(sp)
  802874:	1a000017 	ldw	r8,0(r3)
  802878:	18c00104 	addi	r3,r3,4
  80287c:	4000010e 	bge	r8,zero,802884 <___vfprintf_internal_r+0x20e8>
  802880:	023fffc4 	movi	r8,-1
  802884:	bf000043 	ldbu	fp,1(r23)
  802888:	d8c00615 	stw	r3,24(sp)
  80288c:	102f883a 	mov	r23,r2
  802890:	e2c03fcc 	andi	r11,fp,255
  802894:	5ac0201c 	xori	r11,r11,128
  802898:	5affe004 	addi	r11,r11,-128
  80289c:	00380b06 	br	8008cc <___vfprintf_internal_r+0x130>

008028a0 <__vfprintf_internal>:
  8028a0:	00c02074 	movhi	r3,129
  8028a4:	2005883a 	mov	r2,r4
  8028a8:	190ce817 	ldw	r4,13216(r3)
  8028ac:	300f883a 	mov	r7,r6
  8028b0:	280d883a 	mov	r6,r5
  8028b4:	100b883a 	mov	r5,r2
  8028b8:	080079c1 	jmpi	80079c <___vfprintf_internal_r>

008028bc <__sbprintf>:
  8028bc:	2880030b 	ldhu	r2,12(r5)
  8028c0:	2b001917 	ldw	r12,100(r5)
  8028c4:	2ac0038b 	ldhu	r11,14(r5)
  8028c8:	2a800717 	ldw	r10,28(r5)
  8028cc:	2a400917 	ldw	r9,36(r5)
  8028d0:	defee204 	addi	sp,sp,-1144
  8028d4:	da001a04 	addi	r8,sp,104
  8028d8:	00c10004 	movi	r3,1024
  8028dc:	dc011a15 	stw	r16,1128(sp)
  8028e0:	10bfff4c 	andi	r2,r2,65533
  8028e4:	2821883a 	mov	r16,r5
  8028e8:	d80b883a 	mov	r5,sp
  8028ec:	dc811c15 	stw	r18,1136(sp)
  8028f0:	dc411b15 	stw	r17,1132(sp)
  8028f4:	dfc11d15 	stw	ra,1140(sp)
  8028f8:	2025883a 	mov	r18,r4
  8028fc:	d880030d 	sth	r2,12(sp)
  802900:	db001915 	stw	r12,100(sp)
  802904:	dac0038d 	sth	r11,14(sp)
  802908:	da800715 	stw	r10,28(sp)
  80290c:	da400915 	stw	r9,36(sp)
  802910:	da000015 	stw	r8,0(sp)
  802914:	da000415 	stw	r8,16(sp)
  802918:	d8c00215 	stw	r3,8(sp)
  80291c:	d8c00515 	stw	r3,20(sp)
  802920:	d8000615 	stw	zero,24(sp)
  802924:	080079c0 	call	80079c <___vfprintf_internal_r>
  802928:	1023883a 	mov	r17,r2
  80292c:	10000d0e 	bge	r2,zero,802964 <__sbprintf+0xa8>
  802930:	d880030b 	ldhu	r2,12(sp)
  802934:	1080100c 	andi	r2,r2,64
  802938:	10000326 	beq	r2,zero,802948 <__sbprintf+0x8c>
  80293c:	8080030b 	ldhu	r2,12(r16)
  802940:	10801014 	ori	r2,r2,64
  802944:	8080030d 	sth	r2,12(r16)
  802948:	8805883a 	mov	r2,r17
  80294c:	dfc11d17 	ldw	ra,1140(sp)
  802950:	dc811c17 	ldw	r18,1136(sp)
  802954:	dc411b17 	ldw	r17,1132(sp)
  802958:	dc011a17 	ldw	r16,1128(sp)
  80295c:	dec11e04 	addi	sp,sp,1144
  802960:	f800283a 	ret
  802964:	d80b883a 	mov	r5,sp
  802968:	9009883a 	mov	r4,r18
  80296c:	08046700 	call	804670 <_fflush_r>
  802970:	103fef26 	beq	r2,zero,802930 <__sbprintf+0x74>
  802974:	047fffc4 	movi	r17,-1
  802978:	003fed06 	br	802930 <__sbprintf+0x74>

0080297c <__swsetup_r>:
  80297c:	00802074 	movhi	r2,129
  802980:	108ce817 	ldw	r2,13216(r2)
  802984:	defffd04 	addi	sp,sp,-12
  802988:	dc400115 	stw	r17,4(sp)
  80298c:	dc000015 	stw	r16,0(sp)
  802990:	dfc00215 	stw	ra,8(sp)
  802994:	2023883a 	mov	r17,r4
  802998:	2821883a 	mov	r16,r5
  80299c:	10000226 	beq	r2,zero,8029a8 <__swsetup_r+0x2c>
  8029a0:	10c00e17 	ldw	r3,56(r2)
  8029a4:	18001f26 	beq	r3,zero,802a24 <__swsetup_r+0xa8>
  8029a8:	8180030b 	ldhu	r6,12(r16)
  8029ac:	30c0020c 	andi	r3,r6,8
  8029b0:	3005883a 	mov	r2,r6
  8029b4:	18002126 	beq	r3,zero,802a3c <__swsetup_r+0xc0>
  8029b8:	80c00417 	ldw	r3,16(r16)
  8029bc:	18002826 	beq	r3,zero,802a60 <__swsetup_r+0xe4>
  8029c0:	1100004c 	andi	r4,r2,1
  8029c4:	20000b1e 	bne	r4,zero,8029f4 <__swsetup_r+0x78>
  8029c8:	1100008c 	andi	r4,r2,2
  8029cc:	20002e1e 	bne	r4,zero,802a88 <__swsetup_r+0x10c>
  8029d0:	81000517 	ldw	r4,20(r16)
  8029d4:	81000215 	stw	r4,8(r16)
  8029d8:	18000b26 	beq	r3,zero,802a08 <__swsetup_r+0x8c>
  8029dc:	0005883a 	mov	r2,zero
  8029e0:	dfc00217 	ldw	ra,8(sp)
  8029e4:	dc400117 	ldw	r17,4(sp)
  8029e8:	dc000017 	ldw	r16,0(sp)
  8029ec:	dec00304 	addi	sp,sp,12
  8029f0:	f800283a 	ret
  8029f4:	81000517 	ldw	r4,20(r16)
  8029f8:	80000215 	stw	zero,8(r16)
  8029fc:	0109c83a 	sub	r4,zero,r4
  802a00:	81000615 	stw	r4,24(r16)
  802a04:	183ff51e 	bne	r3,zero,8029dc <__swsetup_r+0x60>
  802a08:	10c0200c 	andi	r3,r2,128
  802a0c:	0005883a 	mov	r2,zero
  802a10:	183ff326 	beq	r3,zero,8029e0 <__swsetup_r+0x64>
  802a14:	31801014 	ori	r6,r6,64
  802a18:	8180030d 	sth	r6,12(r16)
  802a1c:	00bfffc4 	movi	r2,-1
  802a20:	003fef06 	br	8029e0 <__swsetup_r+0x64>
  802a24:	1009883a 	mov	r4,r2
  802a28:	0804ab80 	call	804ab8 <__sinit>
  802a2c:	8180030b 	ldhu	r6,12(r16)
  802a30:	30c0020c 	andi	r3,r6,8
  802a34:	3005883a 	mov	r2,r6
  802a38:	183fdf1e 	bne	r3,zero,8029b8 <__swsetup_r+0x3c>
  802a3c:	3080040c 	andi	r2,r6,16
  802a40:	10002126 	beq	r2,zero,802ac8 <__swsetup_r+0x14c>
  802a44:	3080010c 	andi	r2,r6,4
  802a48:	1000111e 	bne	r2,zero,802a90 <__swsetup_r+0x114>
  802a4c:	80c00417 	ldw	r3,16(r16)
  802a50:	30800214 	ori	r2,r6,8
  802a54:	8080030d 	sth	r2,12(r16)
  802a58:	100d883a 	mov	r6,r2
  802a5c:	183fd81e 	bne	r3,zero,8029c0 <__swsetup_r+0x44>
  802a60:	1100a00c 	andi	r4,r2,640
  802a64:	21008020 	cmpeqi	r4,r4,512
  802a68:	203fd51e 	bne	r4,zero,8029c0 <__swsetup_r+0x44>
  802a6c:	800b883a 	mov	r5,r16
  802a70:	8809883a 	mov	r4,r17
  802a74:	08055400 	call	805540 <__smakebuf_r>
  802a78:	8180030b 	ldhu	r6,12(r16)
  802a7c:	80c00417 	ldw	r3,16(r16)
  802a80:	3005883a 	mov	r2,r6
  802a84:	003fce06 	br	8029c0 <__swsetup_r+0x44>
  802a88:	0009883a 	mov	r4,zero
  802a8c:	003fd106 	br	8029d4 <__swsetup_r+0x58>
  802a90:	81400c17 	ldw	r5,48(r16)
  802a94:	28000626 	beq	r5,zero,802ab0 <__swsetup_r+0x134>
  802a98:	80801004 	addi	r2,r16,64
  802a9c:	28800326 	beq	r5,r2,802aac <__swsetup_r+0x130>
  802aa0:	8809883a 	mov	r4,r17
  802aa4:	0804c1c0 	call	804c1c <_free_r>
  802aa8:	8180030b 	ldhu	r6,12(r16)
  802aac:	80000c15 	stw	zero,48(r16)
  802ab0:	80c00417 	ldw	r3,16(r16)
  802ab4:	00bff6c4 	movi	r2,-37
  802ab8:	118c703a 	and	r6,r2,r6
  802abc:	80000115 	stw	zero,4(r16)
  802ac0:	80c00015 	stw	r3,0(r16)
  802ac4:	003fe206 	br	802a50 <__swsetup_r+0xd4>
  802ac8:	00800244 	movi	r2,9
  802acc:	88800015 	stw	r2,0(r17)
  802ad0:	31801014 	ori	r6,r6,64
  802ad4:	8180030d 	sth	r6,12(r16)
  802ad8:	00bfffc4 	movi	r2,-1
  802adc:	003fc006 	br	8029e0 <__swsetup_r+0x64>

00802ae0 <quorem>:
  802ae0:	defff204 	addi	sp,sp,-56
  802ae4:	dc400515 	stw	r17,20(sp)
  802ae8:	20800417 	ldw	r2,16(r4)
  802aec:	2c400417 	ldw	r17,16(r5)
  802af0:	dfc00d15 	stw	ra,52(sp)
  802af4:	df000c15 	stw	fp,48(sp)
  802af8:	ddc00b15 	stw	r23,44(sp)
  802afc:	dd800a15 	stw	r22,40(sp)
  802b00:	dd400915 	stw	r21,36(sp)
  802b04:	dd000815 	stw	r20,32(sp)
  802b08:	dcc00715 	stw	r19,28(sp)
  802b0c:	dc800615 	stw	r18,24(sp)
  802b10:	dc000415 	stw	r16,16(sp)
  802b14:	d9000115 	stw	r4,4(sp)
  802b18:	d9400215 	stw	r5,8(sp)
  802b1c:	14407616 	blt	r2,r17,802cf8 <quorem+0x218>
  802b20:	8c7fffc4 	addi	r17,r17,-1
  802b24:	882a90ba 	slli	r21,r17,2
  802b28:	2f000504 	addi	fp,r5,20
  802b2c:	25800504 	addi	r22,r4,20
  802b30:	e565883a 	add	r18,fp,r21
  802b34:	b545883a 	add	r2,r22,r21
  802b38:	95c00017 	ldw	r23,0(r18)
  802b3c:	15000017 	ldw	r20,0(r2)
  802b40:	dd800015 	stw	r22,0(sp)
  802b44:	bdc00044 	addi	r23,r23,1
  802b48:	b80b883a 	mov	r5,r23
  802b4c:	a009883a 	mov	r4,r20
  802b50:	d8800315 	stw	r2,12(sp)
  802b54:	080b1580 	call	80b158 <__udivsi3>
  802b58:	1021883a 	mov	r16,r2
  802b5c:	a5c02f36 	bltu	r20,r23,802c1c <quorem+0x13c>
  802b60:	e029883a 	mov	r20,fp
  802b64:	002b883a 	mov	r21,zero
  802b68:	002f883a 	mov	r23,zero
  802b6c:	a4c00017 	ldw	r19,0(r20)
  802b70:	800b883a 	mov	r5,r16
  802b74:	b5800104 	addi	r22,r22,4
  802b78:	993fffcc 	andi	r4,r19,65535
  802b7c:	080b2180 	call	80b218 <__mulsi3>
  802b80:	9808d43a 	srli	r4,r19,16
  802b84:	800b883a 	mov	r5,r16
  802b88:	156b883a 	add	r21,r2,r21
  802b8c:	080b2180 	call	80b218 <__mulsi3>
  802b90:	b0ffff17 	ldw	r3,-4(r22)
  802b94:	a80ad43a 	srli	r5,r21,16
  802b98:	a93fffcc 	andi	r4,r21,65535
  802b9c:	19bfffcc 	andi	r6,r3,65535
  802ba0:	b909c83a 	sub	r4,r23,r4
  802ba4:	2189883a 	add	r4,r4,r6
  802ba8:	1806d43a 	srli	r3,r3,16
  802bac:	1145883a 	add	r2,r2,r5
  802bb0:	200bd43a 	srai	r5,r4,16
  802bb4:	11bfffcc 	andi	r6,r2,65535
  802bb8:	1987c83a 	sub	r3,r3,r6
  802bbc:	1947883a 	add	r3,r3,r5
  802bc0:	180a943a 	slli	r5,r3,16
  802bc4:	213fffcc 	andi	r4,r4,65535
  802bc8:	a5000104 	addi	r20,r20,4
  802bcc:	2908b03a 	or	r4,r5,r4
  802bd0:	b13fff15 	stw	r4,-4(r22)
  802bd4:	102ad43a 	srli	r21,r2,16
  802bd8:	182fd43a 	srai	r23,r3,16
  802bdc:	953fe32e 	bgeu	r18,r20,802b6c <quorem+0x8c>
  802be0:	d8c00317 	ldw	r3,12(sp)
  802be4:	18800017 	ldw	r2,0(r3)
  802be8:	10000c1e 	bne	r2,zero,802c1c <quorem+0x13c>
  802bec:	d8800017 	ldw	r2,0(sp)
  802bf0:	1d7fff04 	addi	r21,r3,-4
  802bf4:	15400436 	bltu	r2,r21,802c08 <quorem+0x128>
  802bf8:	00000606 	br	802c14 <quorem+0x134>
  802bfc:	d8800017 	ldw	r2,0(sp)
  802c00:	8c7fffc4 	addi	r17,r17,-1
  802c04:	1540032e 	bgeu	r2,r21,802c14 <quorem+0x134>
  802c08:	a8800017 	ldw	r2,0(r21)
  802c0c:	ad7fff04 	addi	r21,r21,-4
  802c10:	103ffa26 	beq	r2,zero,802bfc <quorem+0x11c>
  802c14:	d8800117 	ldw	r2,4(sp)
  802c18:	14400415 	stw	r17,16(r2)
  802c1c:	d9400217 	ldw	r5,8(sp)
  802c20:	d9000117 	ldw	r4,4(sp)
  802c24:	0806e080 	call	806e08 <__mcmp>
  802c28:	10002616 	blt	r2,zero,802cc4 <quorem+0x1e4>
  802c2c:	d9400017 	ldw	r5,0(sp)
  802c30:	84000044 	addi	r16,r16,1
  802c34:	0007883a 	mov	r3,zero
  802c38:	e1000017 	ldw	r4,0(fp)
  802c3c:	29800017 	ldw	r6,0(r5)
  802c40:	29400104 	addi	r5,r5,4
  802c44:	20bfffcc 	andi	r2,r4,65535
  802c48:	1887c83a 	sub	r3,r3,r2
  802c4c:	30bfffcc 	andi	r2,r6,65535
  802c50:	1885883a 	add	r2,r3,r2
  802c54:	2008d43a 	srli	r4,r4,16
  802c58:	3006d43a 	srli	r3,r6,16
  802c5c:	100fd43a 	srai	r7,r2,16
  802c60:	11bfffcc 	andi	r6,r2,65535
  802c64:	1907c83a 	sub	r3,r3,r4
  802c68:	19c7883a 	add	r3,r3,r7
  802c6c:	1804943a 	slli	r2,r3,16
  802c70:	e7000104 	addi	fp,fp,4
  802c74:	1807d43a 	srai	r3,r3,16
  802c78:	1184b03a 	or	r2,r2,r6
  802c7c:	28bfff15 	stw	r2,-4(r5)
  802c80:	973fed2e 	bgeu	r18,fp,802c38 <quorem+0x158>
  802c84:	880490ba 	slli	r2,r17,2
  802c88:	d9000017 	ldw	r4,0(sp)
  802c8c:	2085883a 	add	r2,r4,r2
  802c90:	10c00017 	ldw	r3,0(r2)
  802c94:	18000b1e 	bne	r3,zero,802cc4 <quorem+0x1e4>
  802c98:	10bfff04 	addi	r2,r2,-4
  802c9c:	20800436 	bltu	r4,r2,802cb0 <quorem+0x1d0>
  802ca0:	00000606 	br	802cbc <quorem+0x1dc>
  802ca4:	d8c00017 	ldw	r3,0(sp)
  802ca8:	8c7fffc4 	addi	r17,r17,-1
  802cac:	1880032e 	bgeu	r3,r2,802cbc <quorem+0x1dc>
  802cb0:	10c00017 	ldw	r3,0(r2)
  802cb4:	10bfff04 	addi	r2,r2,-4
  802cb8:	183ffa26 	beq	r3,zero,802ca4 <quorem+0x1c4>
  802cbc:	d8800117 	ldw	r2,4(sp)
  802cc0:	14400415 	stw	r17,16(r2)
  802cc4:	8005883a 	mov	r2,r16
  802cc8:	dfc00d17 	ldw	ra,52(sp)
  802ccc:	df000c17 	ldw	fp,48(sp)
  802cd0:	ddc00b17 	ldw	r23,44(sp)
  802cd4:	dd800a17 	ldw	r22,40(sp)
  802cd8:	dd400917 	ldw	r21,36(sp)
  802cdc:	dd000817 	ldw	r20,32(sp)
  802ce0:	dcc00717 	ldw	r19,28(sp)
  802ce4:	dc800617 	ldw	r18,24(sp)
  802ce8:	dc400517 	ldw	r17,20(sp)
  802cec:	dc000417 	ldw	r16,16(sp)
  802cf0:	dec00e04 	addi	sp,sp,56
  802cf4:	f800283a 	ret
  802cf8:	0005883a 	mov	r2,zero
  802cfc:	003ff206 	br	802cc8 <quorem+0x1e8>

00802d00 <_dtoa_r>:
  802d00:	20801017 	ldw	r2,64(r4)
  802d04:	deffe204 	addi	sp,sp,-120
  802d08:	ddc01b15 	stw	r23,108(sp)
  802d0c:	dcc01715 	stw	r19,92(sp)
  802d10:	dc801615 	stw	r18,88(sp)
  802d14:	dc401515 	stw	r17,84(sp)
  802d18:	dc001415 	stw	r16,80(sp)
  802d1c:	dfc01d15 	stw	ra,116(sp)
  802d20:	df001c15 	stw	fp,112(sp)
  802d24:	dd801a15 	stw	r22,104(sp)
  802d28:	dd401915 	stw	r21,100(sp)
  802d2c:	dd001815 	stw	r20,96(sp)
  802d30:	d9c00215 	stw	r7,8(sp)
  802d34:	dc002017 	ldw	r16,128(sp)
  802d38:	202f883a 	mov	r23,r4
  802d3c:	3025883a 	mov	r18,r6
  802d40:	2827883a 	mov	r19,r5
  802d44:	3023883a 	mov	r17,r6
  802d48:	10000826 	beq	r2,zero,802d6c <_dtoa_r+0x6c>
  802d4c:	21801117 	ldw	r6,68(r4)
  802d50:	00c00044 	movi	r3,1
  802d54:	100b883a 	mov	r5,r2
  802d58:	1986983a 	sll	r3,r3,r6
  802d5c:	11800115 	stw	r6,4(r2)
  802d60:	10c00215 	stw	r3,8(r2)
  802d64:	08063f80 	call	8063f8 <_Bfree>
  802d68:	b8001015 	stw	zero,64(r23)
  802d6c:	90018816 	blt	r18,zero,803390 <_dtoa_r+0x690>
  802d70:	80000015 	stw	zero,0(r16)
  802d74:	909ffc2c 	andhi	r2,r18,32752
  802d78:	00dffc34 	movhi	r3,32752
  802d7c:	10c18d26 	beq	r2,r3,8033b4 <_dtoa_r+0x6b4>
  802d80:	000d883a 	mov	r6,zero
  802d84:	000f883a 	mov	r7,zero
  802d88:	9809883a 	mov	r4,r19
  802d8c:	880b883a 	mov	r5,r17
  802d90:	080c4600 	call	80c460 <__eqdf2>
  802d94:	1000191e 	bne	r2,zero,802dfc <_dtoa_r+0xfc>
  802d98:	d8c01f17 	ldw	r3,124(sp)
  802d9c:	00800044 	movi	r2,1
  802da0:	18800015 	stw	r2,0(r3)
  802da4:	d8802117 	ldw	r2,132(sp)
  802da8:	1002f926 	beq	r2,zero,803990 <_dtoa_r+0xc90>
  802dac:	d9002117 	ldw	r4,132(sp)
  802db0:	00802074 	movhi	r2,129
  802db4:	10844244 	addi	r2,r2,4361
  802db8:	00c02074 	movhi	r3,129
  802dbc:	20800015 	stw	r2,0(r4)
  802dc0:	18844204 	addi	r2,r3,4360
  802dc4:	d8800115 	stw	r2,4(sp)
  802dc8:	d8800117 	ldw	r2,4(sp)
  802dcc:	dfc01d17 	ldw	ra,116(sp)
  802dd0:	df001c17 	ldw	fp,112(sp)
  802dd4:	ddc01b17 	ldw	r23,108(sp)
  802dd8:	dd801a17 	ldw	r22,104(sp)
  802ddc:	dd401917 	ldw	r21,100(sp)
  802de0:	dd001817 	ldw	r20,96(sp)
  802de4:	dcc01717 	ldw	r19,92(sp)
  802de8:	dc801617 	ldw	r18,88(sp)
  802dec:	dc401517 	ldw	r17,84(sp)
  802df0:	dc001417 	ldw	r16,80(sp)
  802df4:	dec01e04 	addi	sp,sp,120
  802df8:	f800283a 	ret
  802dfc:	d8801204 	addi	r2,sp,72
  802e00:	9020d53a 	srli	r16,r18,20
  802e04:	d8800015 	stw	r2,0(sp)
  802e08:	d9c01304 	addi	r7,sp,76
  802e0c:	980b883a 	mov	r5,r19
  802e10:	880d883a 	mov	r6,r17
  802e14:	b809883a 	mov	r4,r23
  802e18:	08071f00 	call	8071f0 <__d2b>
  802e1c:	1039883a 	mov	fp,r2
  802e20:	8001771e 	bne	r16,zero,803400 <_dtoa_r+0x700>
  802e24:	dd001217 	ldw	r20,72(sp)
  802e28:	dc001317 	ldw	r16,76(sp)
  802e2c:	a421883a 	add	r16,r20,r16
  802e30:	80810c84 	addi	r2,r16,1074
  802e34:	10c00850 	cmplti	r3,r2,33
  802e38:	1802e51e 	bne	r3,zero,8039d0 <_dtoa_r+0xcd0>
  802e3c:	01001004 	movi	r4,64
  802e40:	2085c83a 	sub	r2,r4,r2
  802e44:	81010484 	addi	r4,r16,1042
  802e48:	90a4983a 	sll	r18,r18,r2
  802e4c:	9908d83a 	srl	r4,r19,r4
  802e50:	9108b03a 	or	r4,r18,r4
  802e54:	080d89c0 	call	80d89c <__floatunsidf>
  802e58:	1009883a 	mov	r4,r2
  802e5c:	017f8434 	movhi	r5,65040
  802e60:	00800044 	movi	r2,1
  802e64:	194b883a 	add	r5,r3,r5
  802e68:	843fffc4 	addi	r16,r16,-1
  802e6c:	d8800a15 	stw	r2,40(sp)
  802e70:	000d883a 	mov	r6,zero
  802e74:	01cffe34 	movhi	r7,16376
  802e78:	080ce5c0 	call	80ce5c <__subdf3>
  802e7c:	0198dbf4 	movhi	r6,25455
  802e80:	01cff4f4 	movhi	r7,16339
  802e84:	3190d844 	addi	r6,r6,17249
  802e88:	39e1e9c4 	addi	r7,r7,-30809
  802e8c:	1009883a 	mov	r4,r2
  802e90:	180b883a 	mov	r5,r3
  802e94:	080c6b00 	call	80c6b0 <__muldf3>
  802e98:	01a2d874 	movhi	r6,35681
  802e9c:	01cff1f4 	movhi	r7,16327
  802ea0:	31b22cc4 	addi	r6,r6,-14157
  802ea4:	39e28a04 	addi	r7,r7,-30168
  802ea8:	180b883a 	mov	r5,r3
  802eac:	1009883a 	mov	r4,r2
  802eb0:	080b2400 	call	80b240 <__adddf3>
  802eb4:	8009883a 	mov	r4,r16
  802eb8:	102b883a 	mov	r21,r2
  802ebc:	1825883a 	mov	r18,r3
  802ec0:	080d7e40 	call	80d7e4 <__floatsidf>
  802ec4:	019427f4 	movhi	r6,20639
  802ec8:	01cff4f4 	movhi	r7,16339
  802ecc:	319e7ec4 	addi	r6,r6,31227
  802ed0:	39d104c4 	addi	r7,r7,17427
  802ed4:	1009883a 	mov	r4,r2
  802ed8:	180b883a 	mov	r5,r3
  802edc:	080c6b00 	call	80c6b0 <__muldf3>
  802ee0:	100d883a 	mov	r6,r2
  802ee4:	180f883a 	mov	r7,r3
  802ee8:	a809883a 	mov	r4,r21
  802eec:	900b883a 	mov	r5,r18
  802ef0:	080b2400 	call	80b240 <__adddf3>
  802ef4:	1009883a 	mov	r4,r2
  802ef8:	180b883a 	mov	r5,r3
  802efc:	1025883a 	mov	r18,r2
  802f00:	182d883a 	mov	r22,r3
  802f04:	080d7640 	call	80d764 <__fixdfsi>
  802f08:	000d883a 	mov	r6,zero
  802f0c:	000f883a 	mov	r7,zero
  802f10:	9009883a 	mov	r4,r18
  802f14:	b00b883a 	mov	r5,r22
  802f18:	102b883a 	mov	r21,r2
  802f1c:	d8800315 	stw	r2,12(sp)
  802f20:	080c5c80 	call	80c5c8 <__ledf2>
  802f24:	10028f16 	blt	r2,zero,803964 <_dtoa_r+0xc64>
  802f28:	dc800317 	ldw	r18,12(sp)
  802f2c:	a421c83a 	sub	r16,r20,r16
  802f30:	85bfffc4 	addi	r22,r16,-1
  802f34:	908005e8 	cmpgeui	r2,r18,23
  802f38:	1002821e 	bne	r2,zero,803944 <_dtoa_r+0xc44>
  802f3c:	900690fa 	slli	r3,r18,3
  802f40:	00802074 	movhi	r2,129
  802f44:	10848b04 	addi	r2,r2,4652
  802f48:	10c5883a 	add	r2,r2,r3
  802f4c:	11800017 	ldw	r6,0(r2)
  802f50:	11c00117 	ldw	r7,4(r2)
  802f54:	9809883a 	mov	r4,r19
  802f58:	880b883a 	mov	r5,r17
  802f5c:	080c5c80 	call	80c5c8 <__ledf2>
  802f60:	1002550e 	bge	r2,zero,8038b8 <_dtoa_r+0xbb8>
  802f64:	90bfffc4 	addi	r2,r18,-1
  802f68:	d8800315 	stw	r2,12(sp)
  802f6c:	d8000915 	stw	zero,36(sp)
  802f70:	b0027716 	blt	r22,zero,803950 <_dtoa_r+0xc50>
  802f74:	d8000615 	stw	zero,24(sp)
  802f78:	d8800317 	ldw	r2,12(sp)
  802f7c:	1002510e 	bge	r2,zero,8038c4 <_dtoa_r+0xbc4>
  802f80:	d8800317 	ldw	r2,12(sp)
  802f84:	d8c00617 	ldw	r3,24(sp)
  802f88:	d8000315 	stw	zero,12(sp)
  802f8c:	d8800415 	stw	r2,16(sp)
  802f90:	1887c83a 	sub	r3,r3,r2
  802f94:	d8c00615 	stw	r3,24(sp)
  802f98:	0087c83a 	sub	r3,zero,r2
  802f9c:	d8c00815 	stw	r3,32(sp)
  802fa0:	d8c00217 	ldw	r3,8(sp)
  802fa4:	188002a8 	cmpgeui	r2,r3,10
  802fa8:	10024d1e 	bne	r2,zero,8038e0 <_dtoa_r+0xbe0>
  802fac:	18800190 	cmplti	r2,r3,6
  802fb0:	10028b1e 	bne	r2,zero,8039e0 <_dtoa_r+0xce0>
  802fb4:	18bfff04 	addi	r2,r3,-4
  802fb8:	d8800215 	stw	r2,8(sp)
  802fbc:	0021883a 	mov	r16,zero
  802fc0:	d8c00217 	ldw	r3,8(sp)
  802fc4:	18800120 	cmpeqi	r2,r3,4
  802fc8:	10035d1e 	bne	r2,zero,803d40 <_dtoa_r+0x1040>
  802fcc:	18800160 	cmpeqi	r2,r3,5
  802fd0:	10031b1e 	bne	r2,zero,803c40 <_dtoa_r+0xf40>
  802fd4:	188000a0 	cmpeqi	r2,r3,2
  802fd8:	10024d26 	beq	r2,zero,803910 <_dtoa_r+0xc10>
  802fdc:	d8000715 	stw	zero,28(sp)
  802fe0:	d8801e17 	ldw	r2,120(sp)
  802fe4:	0083260e 	bge	zero,r2,803c80 <_dtoa_r+0xf80>
  802fe8:	d8800b15 	stw	r2,44(sp)
  802fec:	d8800515 	stw	r2,20(sp)
  802ff0:	100d883a 	mov	r6,r2
  802ff4:	b8001115 	stw	zero,68(r23)
  802ff8:	30800610 	cmplti	r2,r6,24
  802ffc:	1004f11e 	bne	r2,zero,8043c4 <_dtoa_r+0x16c4>
  803000:	00c00044 	movi	r3,1
  803004:	00800104 	movi	r2,4
  803008:	1085883a 	add	r2,r2,r2
  80300c:	11000504 	addi	r4,r2,20
  803010:	180b883a 	mov	r5,r3
  803014:	18c00044 	addi	r3,r3,1
  803018:	313ffb2e 	bgeu	r6,r4,803008 <_dtoa_r+0x308>
  80301c:	b9401115 	stw	r5,68(r23)
  803020:	b809883a 	mov	r4,r23
  803024:	08063540 	call	806354 <_Balloc>
  803028:	d8800115 	stw	r2,4(sp)
  80302c:	1004de26 	beq	r2,zero,8043a8 <_dtoa_r+0x16a8>
  803030:	d8800117 	ldw	r2,4(sp)
  803034:	b8801015 	stw	r2,64(r23)
  803038:	d8800517 	ldw	r2,20(sp)
  80303c:	108003e8 	cmpgeui	r2,r2,15
  803040:	1001021e 	bne	r2,zero,80344c <_dtoa_r+0x74c>
  803044:	80010126 	beq	r16,zero,80344c <_dtoa_r+0x74c>
  803048:	d9000417 	ldw	r4,16(sp)
  80304c:	01038b0e 	bge	zero,r4,803e7c <_dtoa_r+0x117c>
  803050:	208003cc 	andi	r2,r4,15
  803054:	100690fa 	slli	r3,r2,3
  803058:	2029d13a 	srai	r20,r4,4
  80305c:	00802074 	movhi	r2,129
  803060:	10848b04 	addi	r2,r2,4652
  803064:	10c5883a 	add	r2,r2,r3
  803068:	a0c0040c 	andi	r3,r20,16
  80306c:	12800017 	ldw	r10,0(r2)
  803070:	12400117 	ldw	r9,4(r2)
  803074:	18032c26 	beq	r3,zero,803d28 <_dtoa_r+0x1028>
  803078:	00802074 	movhi	r2,129
  80307c:	10848104 	addi	r2,r2,4612
  803080:	11800817 	ldw	r6,32(r2)
  803084:	11c00917 	ldw	r7,36(r2)
  803088:	9809883a 	mov	r4,r19
  80308c:	880b883a 	mov	r5,r17
  803090:	da400e15 	stw	r9,56(sp)
  803094:	da800d15 	stw	r10,52(sp)
  803098:	080bb300 	call	80bb30 <__divdf3>
  80309c:	da800d17 	ldw	r10,52(sp)
  8030a0:	da400e17 	ldw	r9,56(sp)
  8030a4:	a50003cc 	andi	r20,r20,15
  8030a8:	d8800c15 	stw	r2,48(sp)
  8030ac:	1825883a 	mov	r18,r3
  8030b0:	054000c4 	movi	r21,3
  8030b4:	a0001126 	beq	r20,zero,8030fc <_dtoa_r+0x3fc>
  8030b8:	04002074 	movhi	r16,129
  8030bc:	84048104 	addi	r16,r16,4612
  8030c0:	5009883a 	mov	r4,r10
  8030c4:	480b883a 	mov	r5,r9
  8030c8:	a180004c 	andi	r6,r20,1
  8030cc:	30000626 	beq	r6,zero,8030e8 <_dtoa_r+0x3e8>
  8030d0:	81800017 	ldw	r6,0(r16)
  8030d4:	81c00117 	ldw	r7,4(r16)
  8030d8:	ad400044 	addi	r21,r21,1
  8030dc:	080c6b00 	call	80c6b0 <__muldf3>
  8030e0:	1009883a 	mov	r4,r2
  8030e4:	180b883a 	mov	r5,r3
  8030e8:	a029d07a 	srai	r20,r20,1
  8030ec:	84000204 	addi	r16,r16,8
  8030f0:	a03ff51e 	bne	r20,zero,8030c8 <_dtoa_r+0x3c8>
  8030f4:	2015883a 	mov	r10,r4
  8030f8:	2813883a 	mov	r9,r5
  8030fc:	d9000c17 	ldw	r4,48(sp)
  803100:	900b883a 	mov	r5,r18
  803104:	500d883a 	mov	r6,r10
  803108:	480f883a 	mov	r7,r9
  80310c:	080bb300 	call	80bb30 <__divdf3>
  803110:	1021883a 	mov	r16,r2
  803114:	1825883a 	mov	r18,r3
  803118:	d8800917 	ldw	r2,36(sp)
  80311c:	10000626 	beq	r2,zero,803138 <_dtoa_r+0x438>
  803120:	000d883a 	mov	r6,zero
  803124:	01cffc34 	movhi	r7,16368
  803128:	8009883a 	mov	r4,r16
  80312c:	900b883a 	mov	r5,r18
  803130:	080c5c80 	call	80c5c8 <__ledf2>
  803134:	10044416 	blt	r2,zero,804248 <_dtoa_r+0x1548>
  803138:	a809883a 	mov	r4,r21
  80313c:	080d7e40 	call	80d7e4 <__floatsidf>
  803140:	800d883a 	mov	r6,r16
  803144:	900f883a 	mov	r7,r18
  803148:	1009883a 	mov	r4,r2
  80314c:	180b883a 	mov	r5,r3
  803150:	080c6b00 	call	80c6b0 <__muldf3>
  803154:	000d883a 	mov	r6,zero
  803158:	01d00734 	movhi	r7,16412
  80315c:	1009883a 	mov	r4,r2
  803160:	180b883a 	mov	r5,r3
  803164:	080b2400 	call	80b240 <__adddf3>
  803168:	1029883a 	mov	r20,r2
  80316c:	00bf3034 	movhi	r2,64704
  803170:	1885883a 	add	r2,r3,r2
  803174:	d8800c15 	stw	r2,48(sp)
  803178:	d8800517 	ldw	r2,20(sp)
  80317c:	10032226 	beq	r2,zero,803e08 <_dtoa_r+0x1108>
  803180:	d8800417 	ldw	r2,16(sp)
  803184:	d8801115 	stw	r2,68(sp)
  803188:	d8800517 	ldw	r2,20(sp)
  80318c:	d8800d15 	stw	r2,52(sp)
  803190:	d8800d17 	ldw	r2,52(sp)
  803194:	900b883a 	mov	r5,r18
  803198:	8009883a 	mov	r4,r16
  80319c:	10bfffc4 	addi	r2,r2,-1
  8031a0:	100690fa 	slli	r3,r2,3
  8031a4:	00802074 	movhi	r2,129
  8031a8:	10848b04 	addi	r2,r2,4652
  8031ac:	10c5883a 	add	r2,r2,r3
  8031b0:	12800017 	ldw	r10,0(r2)
  8031b4:	12c00117 	ldw	r11,4(r2)
  8031b8:	da800f15 	stw	r10,60(sp)
  8031bc:	dac00e15 	stw	r11,56(sp)
  8031c0:	080d7640 	call	80d764 <__fixdfsi>
  8031c4:	1009883a 	mov	r4,r2
  8031c8:	10800c04 	addi	r2,r2,48
  8031cc:	d8801015 	stw	r2,64(sp)
  8031d0:	080d7e40 	call	80d7e4 <__floatsidf>
  8031d4:	8009883a 	mov	r4,r16
  8031d8:	100d883a 	mov	r6,r2
  8031dc:	180f883a 	mov	r7,r3
  8031e0:	900b883a 	mov	r5,r18
  8031e4:	080ce5c0 	call	80ce5c <__subdf3>
  8031e8:	d9000117 	ldw	r4,4(sp)
  8031ec:	dac00e17 	ldw	r11,56(sp)
  8031f0:	da800f17 	ldw	r10,60(sp)
  8031f4:	1825883a 	mov	r18,r3
  8031f8:	d8c00717 	ldw	r3,28(sp)
  8031fc:	25400044 	addi	r21,r4,1
  803200:	1021883a 	mov	r16,r2
  803204:	500d883a 	mov	r6,r10
  803208:	580f883a 	mov	r7,r11
  80320c:	1803b626 	beq	r3,zero,8040e8 <_dtoa_r+0x13e8>
  803210:	0009883a 	mov	r4,zero
  803214:	014ff834 	movhi	r5,16352
  803218:	080bb300 	call	80bb30 <__divdf3>
  80321c:	d9c00c17 	ldw	r7,48(sp)
  803220:	a00d883a 	mov	r6,r20
  803224:	1009883a 	mov	r4,r2
  803228:	180b883a 	mov	r5,r3
  80322c:	080ce5c0 	call	80ce5c <__subdf3>
  803230:	d9000117 	ldw	r4,4(sp)
  803234:	1029883a 	mov	r20,r2
  803238:	d8801017 	ldw	r2,64(sp)
  80323c:	800d883a 	mov	r6,r16
  803240:	900f883a 	mov	r7,r18
  803244:	20800005 	stb	r2,0(r4)
  803248:	180b883a 	mov	r5,r3
  80324c:	a009883a 	mov	r4,r20
  803250:	d8c00c15 	stw	r3,48(sp)
  803254:	080c4e00 	call	80c4e0 <__gedf2>
  803258:	0083e716 	blt	zero,r2,8041f8 <_dtoa_r+0x14f8>
  80325c:	0005883a 	mov	r2,zero
  803260:	dd800e15 	stw	r22,56(sp)
  803264:	dc400f15 	stw	r17,60(sp)
  803268:	dd800d17 	ldw	r22,52(sp)
  80326c:	dc400c17 	ldw	r17,48(sp)
  803270:	ddc00d15 	stw	r23,52(sp)
  803274:	dcc00c15 	stw	r19,48(sp)
  803278:	1027883a 	mov	r19,r2
  80327c:	00002606 	br	803318 <_dtoa_r+0x618>
  803280:	9cc00044 	addi	r19,r19,1
  803284:	9d806d0e 	bge	r19,r22,80343c <_dtoa_r+0x73c>
  803288:	a009883a 	mov	r4,r20
  80328c:	880b883a 	mov	r5,r17
  803290:	000d883a 	mov	r6,zero
  803294:	01d00934 	movhi	r7,16420
  803298:	080c6b00 	call	80c6b0 <__muldf3>
  80329c:	000d883a 	mov	r6,zero
  8032a0:	01d00934 	movhi	r7,16420
  8032a4:	8009883a 	mov	r4,r16
  8032a8:	900b883a 	mov	r5,r18
  8032ac:	1029883a 	mov	r20,r2
  8032b0:	1823883a 	mov	r17,r3
  8032b4:	080c6b00 	call	80c6b0 <__muldf3>
  8032b8:	180b883a 	mov	r5,r3
  8032bc:	1009883a 	mov	r4,r2
  8032c0:	1821883a 	mov	r16,r3
  8032c4:	1025883a 	mov	r18,r2
  8032c8:	080d7640 	call	80d764 <__fixdfsi>
  8032cc:	1009883a 	mov	r4,r2
  8032d0:	102f883a 	mov	r23,r2
  8032d4:	080d7e40 	call	80d7e4 <__floatsidf>
  8032d8:	9009883a 	mov	r4,r18
  8032dc:	800b883a 	mov	r5,r16
  8032e0:	100d883a 	mov	r6,r2
  8032e4:	180f883a 	mov	r7,r3
  8032e8:	080ce5c0 	call	80ce5c <__subdf3>
  8032ec:	ad400044 	addi	r21,r21,1
  8032f0:	ba000c04 	addi	r8,r23,48
  8032f4:	aa3fffc5 	stb	r8,-1(r21)
  8032f8:	a00d883a 	mov	r6,r20
  8032fc:	880f883a 	mov	r7,r17
  803300:	1009883a 	mov	r4,r2
  803304:	180b883a 	mov	r5,r3
  803308:	1021883a 	mov	r16,r2
  80330c:	1825883a 	mov	r18,r3
  803310:	080c5c80 	call	80c5c8 <__ledf2>
  803314:	10040516 	blt	r2,zero,80432c <_dtoa_r+0x162c>
  803318:	800d883a 	mov	r6,r16
  80331c:	900f883a 	mov	r7,r18
  803320:	0009883a 	mov	r4,zero
  803324:	014ffc34 	movhi	r5,16368
  803328:	080ce5c0 	call	80ce5c <__subdf3>
  80332c:	a00d883a 	mov	r6,r20
  803330:	880f883a 	mov	r7,r17
  803334:	1009883a 	mov	r4,r2
  803338:	180b883a 	mov	r5,r3
  80333c:	080c5c80 	call	80c5c8 <__ledf2>
  803340:	103fcf0e 	bge	r2,zero,803280 <_dtoa_r+0x580>
  803344:	d8801117 	ldw	r2,68(sp)
  803348:	ddc00d17 	ldw	r23,52(sp)
  80334c:	d9000117 	ldw	r4,4(sp)
  803350:	10800044 	addi	r2,r2,1
  803354:	d8800415 	stw	r2,16(sp)
  803358:	a829883a 	mov	r20,r21
  80335c:	00000106 	br	803364 <_dtoa_r+0x664>
  803360:	a103da26 	beq	r20,r4,8042cc <_dtoa_r+0x15cc>
  803364:	a0ffffc3 	ldbu	r3,-1(r20)
  803368:	a02b883a 	mov	r21,r20
  80336c:	a53fffc4 	addi	r20,r20,-1
  803370:	18803fcc 	andi	r2,r3,255
  803374:	1080201c 	xori	r2,r2,128
  803378:	10bfe004 	addi	r2,r2,-128
  80337c:	10800e60 	cmpeqi	r2,r2,57
  803380:	103ff71e 	bne	r2,zero,803360 <_dtoa_r+0x660>
  803384:	18c00044 	addi	r3,r3,1
  803388:	a0c00005 	stb	r3,0(r20)
  80338c:	00013f06 	br	80388c <_dtoa_r+0xb8c>
  803390:	04600034 	movhi	r17,32768
  803394:	8c7fffc4 	addi	r17,r17,-1
  803398:	9462703a 	and	r17,r18,r17
  80339c:	00800044 	movi	r2,1
  8033a0:	8825883a 	mov	r18,r17
  8033a4:	80800015 	stw	r2,0(r16)
  8033a8:	00dffc34 	movhi	r3,32752
  8033ac:	909ffc2c 	andhi	r2,r18,32752
  8033b0:	10fe731e 	bne	r2,r3,802d80 <_dtoa_r+0x80>
  8033b4:	d9001f17 	ldw	r4,124(sp)
  8033b8:	00800434 	movhi	r2,16
  8033bc:	10bfffc4 	addi	r2,r2,-1
  8033c0:	9084703a 	and	r2,r18,r2
  8033c4:	00c9c3c4 	movi	r3,9999
  8033c8:	20c00015 	stw	r3,0(r4)
  8033cc:	14e6b03a 	or	r19,r2,r19
  8033d0:	9800141e 	bne	r19,zero,803424 <_dtoa_r+0x724>
  8033d4:	d8802117 	ldw	r2,132(sp)
  8033d8:	10041226 	beq	r2,zero,804424 <_dtoa_r+0x1724>
  8033dc:	00802074 	movhi	r2,129
  8033e0:	1007883a 	mov	r3,r2
  8033e4:	18c44c04 	addi	r3,r3,4400
  8033e8:	00802074 	movhi	r2,129
  8033ec:	d8c00115 	stw	r3,4(sp)
  8033f0:	10844e04 	addi	r2,r2,4408
  8033f4:	d8c02117 	ldw	r3,132(sp)
  8033f8:	18800015 	stw	r2,0(r3)
  8033fc:	003e7206 	br	802dc8 <_dtoa_r+0xc8>
  803400:	01400434 	movhi	r5,16
  803404:	297fffc4 	addi	r5,r5,-1
  803408:	894a703a 	and	r5,r17,r5
  80340c:	dd001217 	ldw	r20,72(sp)
  803410:	9809883a 	mov	r4,r19
  803414:	294ffc34 	orhi	r5,r5,16368
  803418:	843f0044 	addi	r16,r16,-1023
  80341c:	d8000a15 	stw	zero,40(sp)
  803420:	003e9306 	br	802e70 <_dtoa_r+0x170>
  803424:	d8802117 	ldw	r2,132(sp)
  803428:	1001fe1e 	bne	r2,zero,803c24 <_dtoa_r+0xf24>
  80342c:	00802074 	movhi	r2,129
  803430:	10844b04 	addi	r2,r2,4396
  803434:	d8800115 	stw	r2,4(sp)
  803438:	003e6306 	br	802dc8 <_dtoa_r+0xc8>
  80343c:	dd800e17 	ldw	r22,56(sp)
  803440:	ddc00d17 	ldw	r23,52(sp)
  803444:	dc400f17 	ldw	r17,60(sp)
  803448:	dcc00c17 	ldw	r19,48(sp)
  80344c:	d8801317 	ldw	r2,76(sp)
  803450:	10006e16 	blt	r2,zero,80360c <_dtoa_r+0x90c>
  803454:	d9000417 	ldw	r4,16(sp)
  803458:	20c003c8 	cmpgei	r3,r4,15
  80345c:	18006b1e 	bne	r3,zero,80360c <_dtoa_r+0x90c>
  803460:	200690fa 	slli	r3,r4,3
  803464:	00802074 	movhi	r2,129
  803468:	10848b04 	addi	r2,r2,4652
  80346c:	10c5883a 	add	r2,r2,r3
  803470:	14000017 	ldw	r16,0(r2)
  803474:	14800117 	ldw	r18,4(r2)
  803478:	d8801e17 	ldw	r2,120(sp)
  80347c:	1000150e 	bge	r2,zero,8034d4 <_dtoa_r+0x7d4>
  803480:	d8800517 	ldw	r2,20(sp)
  803484:	00801316 	blt	zero,r2,8034d4 <_dtoa_r+0x7d4>
  803488:	d8800517 	ldw	r2,20(sp)
  80348c:	1002721e 	bne	r2,zero,803e58 <_dtoa_r+0x1158>
  803490:	8009883a 	mov	r4,r16
  803494:	000d883a 	mov	r6,zero
  803498:	01d00534 	movhi	r7,16404
  80349c:	900b883a 	mov	r5,r18
  8034a0:	080c6b00 	call	80c6b0 <__muldf3>
  8034a4:	100d883a 	mov	r6,r2
  8034a8:	180f883a 	mov	r7,r3
  8034ac:	9809883a 	mov	r4,r19
  8034b0:	880b883a 	mov	r5,r17
  8034b4:	080c5c80 	call	80c5c8 <__ledf2>
  8034b8:	0029883a 	mov	r20,zero
  8034bc:	0021883a 	mov	r16,zero
  8034c0:	00820216 	blt	zero,r2,803ccc <_dtoa_r+0xfcc>
  8034c4:	d8801e17 	ldw	r2,120(sp)
  8034c8:	dd400117 	ldw	r21,4(sp)
  8034cc:	00a2303a 	nor	r17,zero,r2
  8034d0:	00020406 	br	803ce4 <_dtoa_r+0xfe4>
  8034d4:	800d883a 	mov	r6,r16
  8034d8:	900f883a 	mov	r7,r18
  8034dc:	9809883a 	mov	r4,r19
  8034e0:	880b883a 	mov	r5,r17
  8034e4:	080bb300 	call	80bb30 <__divdf3>
  8034e8:	180b883a 	mov	r5,r3
  8034ec:	1009883a 	mov	r4,r2
  8034f0:	080d7640 	call	80d764 <__fixdfsi>
  8034f4:	1009883a 	mov	r4,r2
  8034f8:	102b883a 	mov	r21,r2
  8034fc:	080d7e40 	call	80d7e4 <__floatsidf>
  803500:	800d883a 	mov	r6,r16
  803504:	900f883a 	mov	r7,r18
  803508:	1009883a 	mov	r4,r2
  80350c:	180b883a 	mov	r5,r3
  803510:	080c6b00 	call	80c6b0 <__muldf3>
  803514:	100d883a 	mov	r6,r2
  803518:	9809883a 	mov	r4,r19
  80351c:	880b883a 	mov	r5,r17
  803520:	180f883a 	mov	r7,r3
  803524:	080ce5c0 	call	80ce5c <__subdf3>
  803528:	d9800117 	ldw	r6,4(sp)
  80352c:	dd800517 	ldw	r22,20(sp)
  803530:	1009883a 	mov	r4,r2
  803534:	a8800c04 	addi	r2,r21,48
  803538:	30800005 	stb	r2,0(r6)
  80353c:	b0800060 	cmpeqi	r2,r22,1
  803540:	180b883a 	mov	r5,r3
  803544:	35000044 	addi	r20,r6,1
  803548:	10029f1e 	bne	r2,zero,803fc8 <_dtoa_r+0x12c8>
  80354c:	04400044 	movi	r17,1
  803550:	ddc00215 	stw	r23,8(sp)
  803554:	00001c06 	br	8035c8 <_dtoa_r+0x8c8>
  803558:	800d883a 	mov	r6,r16
  80355c:	900f883a 	mov	r7,r18
  803560:	a809883a 	mov	r4,r21
  803564:	980b883a 	mov	r5,r19
  803568:	080bb300 	call	80bb30 <__divdf3>
  80356c:	180b883a 	mov	r5,r3
  803570:	1009883a 	mov	r4,r2
  803574:	080d7640 	call	80d764 <__fixdfsi>
  803578:	1009883a 	mov	r4,r2
  80357c:	102f883a 	mov	r23,r2
  803580:	080d7e40 	call	80d7e4 <__floatsidf>
  803584:	800d883a 	mov	r6,r16
  803588:	900f883a 	mov	r7,r18
  80358c:	1009883a 	mov	r4,r2
  803590:	180b883a 	mov	r5,r3
  803594:	080c6b00 	call	80c6b0 <__muldf3>
  803598:	a809883a 	mov	r4,r21
  80359c:	980b883a 	mov	r5,r19
  8035a0:	100d883a 	mov	r6,r2
  8035a4:	180f883a 	mov	r7,r3
  8035a8:	080ce5c0 	call	80ce5c <__subdf3>
  8035ac:	b9000c04 	addi	r4,r23,48
  8035b0:	a1000005 	stb	r4,0(r20)
  8035b4:	8c400044 	addi	r17,r17,1
  8035b8:	a5000044 	addi	r20,r20,1
  8035bc:	1009883a 	mov	r4,r2
  8035c0:	180b883a 	mov	r5,r3
  8035c4:	8d827e26 	beq	r17,r22,803fc0 <_dtoa_r+0x12c0>
  8035c8:	000d883a 	mov	r6,zero
  8035cc:	01d00934 	movhi	r7,16420
  8035d0:	080c6b00 	call	80c6b0 <__muldf3>
  8035d4:	000d883a 	mov	r6,zero
  8035d8:	000f883a 	mov	r7,zero
  8035dc:	1009883a 	mov	r4,r2
  8035e0:	180b883a 	mov	r5,r3
  8035e4:	102b883a 	mov	r21,r2
  8035e8:	1827883a 	mov	r19,r3
  8035ec:	080c4600 	call	80c460 <__eqdf2>
  8035f0:	103fd91e 	bne	r2,zero,803558 <_dtoa_r+0x858>
  8035f4:	d8800417 	ldw	r2,16(sp)
  8035f8:	ddc00217 	ldw	r23,8(sp)
  8035fc:	a02b883a 	mov	r21,r20
  803600:	10800044 	addi	r2,r2,1
  803604:	d8800415 	stw	r2,16(sp)
  803608:	0000a006 	br	80388c <_dtoa_r+0xb8c>
  80360c:	d8c00717 	ldw	r3,28(sp)
  803610:	1800e326 	beq	r3,zero,8039a0 <_dtoa_r+0xca0>
  803614:	d8c00217 	ldw	r3,8(sp)
  803618:	18c00088 	cmpgei	r3,r3,2
  80361c:	1801e026 	beq	r3,zero,803da0 <_dtoa_r+0x10a0>
  803620:	d8800517 	ldw	r2,20(sp)
  803624:	153fffc4 	addi	r20,r2,-1
  803628:	d8800817 	ldw	r2,32(sp)
  80362c:	1501bc0e 	bge	r2,r20,803d20 <_dtoa_r+0x1020>
  803630:	d8800817 	ldw	r2,32(sp)
  803634:	d8c00317 	ldw	r3,12(sp)
  803638:	dd000815 	stw	r20,32(sp)
  80363c:	a085c83a 	sub	r2,r20,r2
  803640:	1885883a 	add	r2,r3,r2
  803644:	d8800315 	stw	r2,12(sp)
  803648:	0029883a 	mov	r20,zero
  80364c:	d8800517 	ldw	r2,20(sp)
  803650:	10028b16 	blt	r2,zero,804080 <_dtoa_r+0x1380>
  803654:	d8c00617 	ldw	r3,24(sp)
  803658:	b0ad883a 	add	r22,r22,r2
  80365c:	1885883a 	add	r2,r3,r2
  803660:	1825883a 	mov	r18,r3
  803664:	d8800615 	stw	r2,24(sp)
  803668:	01400044 	movi	r5,1
  80366c:	b809883a 	mov	r4,r23
  803670:	08067c40 	call	8067c4 <__i2b>
  803674:	1021883a 	mov	r16,r2
  803678:	0480080e 	bge	zero,r18,80369c <_dtoa_r+0x99c>
  80367c:	0580070e 	bge	zero,r22,80369c <_dtoa_r+0x99c>
  803680:	9005883a 	mov	r2,r18
  803684:	b4819e16 	blt	r22,r18,803d00 <_dtoa_r+0x1000>
  803688:	d8c00617 	ldw	r3,24(sp)
  80368c:	90a5c83a 	sub	r18,r18,r2
  803690:	b0adc83a 	sub	r22,r22,r2
  803694:	1887c83a 	sub	r3,r3,r2
  803698:	d8c00615 	stw	r3,24(sp)
  80369c:	d8800817 	ldw	r2,32(sp)
  8036a0:	10001426 	beq	r2,zero,8036f4 <_dtoa_r+0x9f4>
  8036a4:	d8800717 	ldw	r2,28(sp)
  8036a8:	1001ee26 	beq	r2,zero,803e64 <_dtoa_r+0x1164>
  8036ac:	05000e0e 	bge	zero,r20,8036e8 <_dtoa_r+0x9e8>
  8036b0:	800b883a 	mov	r5,r16
  8036b4:	a00d883a 	mov	r6,r20
  8036b8:	b809883a 	mov	r4,r23
  8036bc:	0806b380 	call	806b38 <__pow5mult>
  8036c0:	e00d883a 	mov	r6,fp
  8036c4:	100b883a 	mov	r5,r2
  8036c8:	b809883a 	mov	r4,r23
  8036cc:	1021883a 	mov	r16,r2
  8036d0:	08068740 	call	806874 <__multiply>
  8036d4:	102b883a 	mov	r21,r2
  8036d8:	e00b883a 	mov	r5,fp
  8036dc:	b809883a 	mov	r4,r23
  8036e0:	08063f80 	call	8063f8 <_Bfree>
  8036e4:	a839883a 	mov	fp,r21
  8036e8:	d8800817 	ldw	r2,32(sp)
  8036ec:	150dc83a 	sub	r6,r2,r20
  8036f0:	15025e1e 	bne	r2,r20,80406c <_dtoa_r+0x136c>
  8036f4:	01400044 	movi	r5,1
  8036f8:	b809883a 	mov	r4,r23
  8036fc:	08067c40 	call	8067c4 <__i2b>
  803700:	d9800317 	ldw	r6,12(sp)
  803704:	1029883a 	mov	r20,r2
  803708:	0180b716 	blt	zero,r6,8039e8 <_dtoa_r+0xce8>
  80370c:	d8800217 	ldw	r2,8(sp)
  803710:	10800088 	cmpgei	r2,r2,2
  803714:	10014d26 	beq	r2,zero,803c4c <_dtoa_r+0xf4c>
  803718:	0023883a 	mov	r17,zero
  80371c:	d8c00317 	ldw	r3,12(sp)
  803720:	00800044 	movi	r2,1
  803724:	1800b81e 	bne	r3,zero,803a08 <_dtoa_r+0xd08>
  803728:	1585883a 	add	r2,r2,r22
  80372c:	108007cc 	andi	r2,r2,31
  803730:	1000a526 	beq	r2,zero,8039c8 <_dtoa_r+0xcc8>
  803734:	00c00804 	movi	r3,32
  803738:	1887c83a 	sub	r3,r3,r2
  80373c:	19000150 	cmplti	r4,r3,5
  803740:	20033c1e 	bne	r4,zero,804434 <_dtoa_r+0x1734>
  803744:	00c00704 	movi	r3,28
  803748:	1885c83a 	sub	r2,r3,r2
  80374c:	d8c00617 	ldw	r3,24(sp)
  803750:	90a5883a 	add	r18,r18,r2
  803754:	b0ad883a 	add	r22,r22,r2
  803758:	1887883a 	add	r3,r3,r2
  80375c:	d8c00615 	stw	r3,24(sp)
  803760:	d8800617 	ldw	r2,24(sp)
  803764:	00809216 	blt	zero,r2,8039b0 <_dtoa_r+0xcb0>
  803768:	0580050e 	bge	zero,r22,803780 <_dtoa_r+0xa80>
  80376c:	a00b883a 	mov	r5,r20
  803770:	b00d883a 	mov	r6,r22
  803774:	b809883a 	mov	r4,r23
  803778:	0806c800 	call	806c80 <__lshift>
  80377c:	1029883a 	mov	r20,r2
  803780:	d8800917 	ldw	r2,36(sp)
  803784:	1001151e 	bne	r2,zero,803bdc <_dtoa_r+0xedc>
  803788:	d8800517 	ldw	r2,20(sp)
  80378c:	0081020e 	bge	zero,r2,803b98 <_dtoa_r+0xe98>
  803790:	d8800717 	ldw	r2,28(sp)
  803794:	1000af1e 	bne	r2,zero,803a54 <_dtoa_r+0xd54>
  803798:	d8800417 	ldw	r2,16(sp)
  80379c:	10800044 	addi	r2,r2,1
  8037a0:	d8800415 	stw	r2,16(sp)
  8037a4:	dc800517 	ldw	r18,20(sp)
  8037a8:	dd400117 	ldw	r21,4(sp)
  8037ac:	04400044 	movi	r17,1
  8037b0:	00000706 	br	8037d0 <_dtoa_r+0xad0>
  8037b4:	e00b883a 	mov	r5,fp
  8037b8:	000f883a 	mov	r7,zero
  8037bc:	01800284 	movi	r6,10
  8037c0:	b809883a 	mov	r4,r23
  8037c4:	080641c0 	call	80641c <__multadd>
  8037c8:	1039883a 	mov	fp,r2
  8037cc:	8c400044 	addi	r17,r17,1
  8037d0:	a00b883a 	mov	r5,r20
  8037d4:	e009883a 	mov	r4,fp
  8037d8:	0802ae00 	call	802ae0 <quorem>
  8037dc:	14c00c04 	addi	r19,r2,48
  8037e0:	ac45883a 	add	r2,r21,r17
  8037e4:	14ffffc5 	stb	r19,-1(r2)
  8037e8:	8cbff216 	blt	r17,r18,8037b4 <_dtoa_r+0xab4>
  8037ec:	d8800517 	ldw	r2,20(sp)
  8037f0:	0081510e 	bge	zero,r2,803d38 <_dtoa_r+0x1038>
  8037f4:	d8c00117 	ldw	r3,4(sp)
  8037f8:	0023883a 	mov	r17,zero
  8037fc:	18ab883a 	add	r21,r3,r2
  803800:	e00b883a 	mov	r5,fp
  803804:	01800044 	movi	r6,1
  803808:	b809883a 	mov	r4,r23
  80380c:	0806c800 	call	806c80 <__lshift>
  803810:	1009883a 	mov	r4,r2
  803814:	a00b883a 	mov	r5,r20
  803818:	1039883a 	mov	fp,r2
  80381c:	0806e080 	call	806e08 <__mcmp>
  803820:	a93fffc3 	ldbu	r4,-1(r21)
  803824:	0081490e 	bge	zero,r2,803d4c <_dtoa_r+0x104c>
  803828:	d9400117 	ldw	r5,4(sp)
  80382c:	00000306 	br	80383c <_dtoa_r+0xb3c>
  803830:	19415426 	beq	r3,r5,803d84 <_dtoa_r+0x1084>
  803834:	193fffc3 	ldbu	r4,-1(r3)
  803838:	182b883a 	mov	r21,r3
  80383c:	20803fcc 	andi	r2,r4,255
  803840:	1080201c 	xori	r2,r2,128
  803844:	10bfe004 	addi	r2,r2,-128
  803848:	10800e60 	cmpeqi	r2,r2,57
  80384c:	a8ffffc4 	addi	r3,r21,-1
  803850:	103ff71e 	bne	r2,zero,803830 <_dtoa_r+0xb30>
  803854:	21000044 	addi	r4,r4,1
  803858:	19000005 	stb	r4,0(r3)
  80385c:	a00b883a 	mov	r5,r20
  803860:	b809883a 	mov	r4,r23
  803864:	08063f80 	call	8063f8 <_Bfree>
  803868:	80000826 	beq	r16,zero,80388c <_dtoa_r+0xb8c>
  80386c:	88000426 	beq	r17,zero,803880 <_dtoa_r+0xb80>
  803870:	8c000326 	beq	r17,r16,803880 <_dtoa_r+0xb80>
  803874:	880b883a 	mov	r5,r17
  803878:	b809883a 	mov	r4,r23
  80387c:	08063f80 	call	8063f8 <_Bfree>
  803880:	800b883a 	mov	r5,r16
  803884:	b809883a 	mov	r4,r23
  803888:	08063f80 	call	8063f8 <_Bfree>
  80388c:	e00b883a 	mov	r5,fp
  803890:	b809883a 	mov	r4,r23
  803894:	08063f80 	call	8063f8 <_Bfree>
  803898:	d8801f17 	ldw	r2,124(sp)
  80389c:	d8c00417 	ldw	r3,16(sp)
  8038a0:	a8000005 	stb	zero,0(r21)
  8038a4:	10c00015 	stw	r3,0(r2)
  8038a8:	d8802117 	ldw	r2,132(sp)
  8038ac:	103d4626 	beq	r2,zero,802dc8 <_dtoa_r+0xc8>
  8038b0:	15400015 	stw	r21,0(r2)
  8038b4:	003d4406 	br	802dc8 <_dtoa_r+0xc8>
  8038b8:	d8000915 	stw	zero,36(sp)
  8038bc:	b0002416 	blt	r22,zero,803950 <_dtoa_r+0xc50>
  8038c0:	d8000615 	stw	zero,24(sp)
  8038c4:	d8800317 	ldw	r2,12(sp)
  8038c8:	d8c00217 	ldw	r3,8(sp)
  8038cc:	d8000815 	stw	zero,32(sp)
  8038d0:	b0ad883a 	add	r22,r22,r2
  8038d4:	d8800415 	stw	r2,16(sp)
  8038d8:	188002a8 	cmpgeui	r2,r3,10
  8038dc:	103db326 	beq	r2,zero,802fac <_dtoa_r+0x2ac>
  8038e0:	00800044 	movi	r2,1
  8038e4:	d8800715 	stw	r2,28(sp)
  8038e8:	00bfffc4 	movi	r2,-1
  8038ec:	04000044 	movi	r16,1
  8038f0:	d8000215 	stw	zero,8(sp)
  8038f4:	d8800515 	stw	r2,20(sp)
  8038f8:	d8001e15 	stw	zero,120(sp)
  8038fc:	d8800517 	ldw	r2,20(sp)
  803900:	b8001115 	stw	zero,68(r23)
  803904:	000b883a 	mov	r5,zero
  803908:	d8800b15 	stw	r2,44(sp)
  80390c:	003dc406 	br	803020 <_dtoa_r+0x320>
  803910:	188000e0 	cmpeqi	r2,r3,3
  803914:	d8000715 	stw	zero,28(sp)
  803918:	1002ac26 	beq	r2,zero,8043cc <_dtoa_r+0x16cc>
  80391c:	d8801e17 	ldw	r2,120(sp)
  803920:	d8c00417 	ldw	r3,16(sp)
  803924:	10c5883a 	add	r2,r2,r3
  803928:	d8800b15 	stw	r2,44(sp)
  80392c:	10800044 	addi	r2,r2,1
  803930:	d8800515 	stw	r2,20(sp)
  803934:	100d883a 	mov	r6,r2
  803938:	00bdae16 	blt	zero,r2,802ff4 <_dtoa_r+0x2f4>
  80393c:	01800044 	movi	r6,1
  803940:	003dac06 	br	802ff4 <_dtoa_r+0x2f4>
  803944:	00800044 	movi	r2,1
  803948:	d8800915 	stw	r2,36(sp)
  80394c:	b03d890e 	bge	r22,zero,802f74 <_dtoa_r+0x274>
  803950:	00800044 	movi	r2,1
  803954:	1405c83a 	sub	r2,r2,r16
  803958:	d8800615 	stw	r2,24(sp)
  80395c:	002d883a 	mov	r22,zero
  803960:	003d8506 	br	802f78 <_dtoa_r+0x278>
  803964:	a809883a 	mov	r4,r21
  803968:	080d7e40 	call	80d7e4 <__floatsidf>
  80396c:	900d883a 	mov	r6,r18
  803970:	b00f883a 	mov	r7,r22
  803974:	1009883a 	mov	r4,r2
  803978:	180b883a 	mov	r5,r3
  80397c:	080c4600 	call	80c460 <__eqdf2>
  803980:	103d6926 	beq	r2,zero,802f28 <_dtoa_r+0x228>
  803984:	a8bfffc4 	addi	r2,r21,-1
  803988:	d8800315 	stw	r2,12(sp)
  80398c:	003d6606 	br	802f28 <_dtoa_r+0x228>
  803990:	00802074 	movhi	r2,129
  803994:	10844204 	addi	r2,r2,4360
  803998:	d8800115 	stw	r2,4(sp)
  80399c:	003d0a06 	br	802dc8 <_dtoa_r+0xc8>
  8039a0:	dd000817 	ldw	r20,32(sp)
  8039a4:	dc800617 	ldw	r18,24(sp)
  8039a8:	0021883a 	mov	r16,zero
  8039ac:	003f3206 	br	803678 <_dtoa_r+0x978>
  8039b0:	e00b883a 	mov	r5,fp
  8039b4:	100d883a 	mov	r6,r2
  8039b8:	b809883a 	mov	r4,r23
  8039bc:	0806c800 	call	806c80 <__lshift>
  8039c0:	1039883a 	mov	fp,r2
  8039c4:	003f6806 	br	803768 <_dtoa_r+0xa68>
  8039c8:	00800704 	movi	r2,28
  8039cc:	003f5f06 	br	80374c <_dtoa_r+0xa4c>
  8039d0:	01000804 	movi	r4,32
  8039d4:	2089c83a 	sub	r4,r4,r2
  8039d8:	9908983a 	sll	r4,r19,r4
  8039dc:	003d1d06 	br	802e54 <_dtoa_r+0x154>
  8039e0:	04000044 	movi	r16,1
  8039e4:	003d7606 	br	802fc0 <_dtoa_r+0x2c0>
  8039e8:	100b883a 	mov	r5,r2
  8039ec:	b809883a 	mov	r4,r23
  8039f0:	0806b380 	call	806b38 <__pow5mult>
  8039f4:	d8c00217 	ldw	r3,8(sp)
  8039f8:	1029883a 	mov	r20,r2
  8039fc:	18c00090 	cmplti	r3,r3,2
  803a00:	1801511e 	bne	r3,zero,803f48 <_dtoa_r+0x1248>
  803a04:	0023883a 	mov	r17,zero
  803a08:	a0800417 	ldw	r2,16(r20)
  803a0c:	10800104 	addi	r2,r2,4
  803a10:	100490ba 	slli	r2,r2,2
  803a14:	a085883a 	add	r2,r20,r2
  803a18:	11000017 	ldw	r4,0(r2)
  803a1c:	08066b00 	call	8066b0 <__hi0bits>
  803a20:	00c00804 	movi	r3,32
  803a24:	1885c83a 	sub	r2,r3,r2
  803a28:	003f3f06 	br	803728 <_dtoa_r+0xa28>
  803a2c:	800b883a 	mov	r5,r16
  803a30:	000f883a 	mov	r7,zero
  803a34:	01800284 	movi	r6,10
  803a38:	b809883a 	mov	r4,r23
  803a3c:	080641c0 	call	80641c <__multadd>
  803a40:	1021883a 	mov	r16,r2
  803a44:	d8800b17 	ldw	r2,44(sp)
  803a48:	00824b0e 	bge	zero,r2,804378 <_dtoa_r+0x1678>
  803a4c:	dd400415 	stw	r21,16(sp)
  803a50:	d8800515 	stw	r2,20(sp)
  803a54:	0480ac16 	blt	zero,r18,803d08 <_dtoa_r+0x1008>
  803a58:	8801731e 	bne	r17,zero,804028 <_dtoa_r+0x1328>
  803a5c:	8025883a 	mov	r18,r16
  803a60:	dd800117 	ldw	r22,4(sp)
  803a64:	d9000517 	ldw	r4,20(sp)
  803a68:	98c0004c 	andi	r3,r19,1
  803a6c:	b0bfffc4 	addi	r2,r22,-1
  803a70:	1105883a 	add	r2,r2,r4
  803a74:	d8800515 	stw	r2,20(sp)
  803a78:	d8800217 	ldw	r2,8(sp)
  803a7c:	d8c00815 	stw	r3,32(sp)
  803a80:	1884b03a 	or	r2,r3,r2
  803a84:	d8800715 	stw	r2,28(sp)
  803a88:	00002906 	br	803b30 <_dtoa_r+0xe30>
  803a8c:	e009883a 	mov	r4,fp
  803a90:	0806e080 	call	806e08 <__mcmp>
  803a94:	980b883a 	mov	r5,r19
  803a98:	b809883a 	mov	r4,r23
  803a9c:	d8800315 	stw	r2,12(sp)
  803aa0:	08063f80 	call	8063f8 <_Bfree>
  803aa4:	d8800317 	ldw	r2,12(sp)
  803aa8:	1000021e 	bne	r2,zero,803ab4 <_dtoa_r+0xdb4>
  803aac:	d8c00717 	ldw	r3,28(sp)
  803ab0:	18022326 	beq	r3,zero,804340 <_dtoa_r+0x1640>
  803ab4:	b4c00044 	addi	r19,r22,1
  803ab8:	88012916 	blt	r17,zero,803f60 <_dtoa_r+0x1260>
  803abc:	d8c00217 	ldw	r3,8(sp)
  803ac0:	88e2b03a 	or	r17,r17,r3
  803ac4:	d8c00817 	ldw	r3,32(sp)
  803ac8:	1c62b03a 	or	r17,r3,r17
  803acc:	88012426 	beq	r17,zero,803f60 <_dtoa_r+0x1260>
  803ad0:	00816f16 	blt	zero,r2,804090 <_dtoa_r+0x1390>
  803ad4:	d8800517 	ldw	r2,20(sp)
  803ad8:	b5400005 	stb	r21,0(r22)
  803adc:	15817926 	beq	r2,r22,8040c4 <_dtoa_r+0x13c4>
  803ae0:	e00b883a 	mov	r5,fp
  803ae4:	000f883a 	mov	r7,zero
  803ae8:	01800284 	movi	r6,10
  803aec:	b809883a 	mov	r4,r23
  803af0:	080641c0 	call	80641c <__multadd>
  803af4:	1039883a 	mov	fp,r2
  803af8:	800b883a 	mov	r5,r16
  803afc:	000f883a 	mov	r7,zero
  803b00:	01800284 	movi	r6,10
  803b04:	b809883a 	mov	r4,r23
  803b08:	84801f26 	beq	r16,r18,803b88 <_dtoa_r+0xe88>
  803b0c:	080641c0 	call	80641c <__multadd>
  803b10:	900b883a 	mov	r5,r18
  803b14:	000f883a 	mov	r7,zero
  803b18:	01800284 	movi	r6,10
  803b1c:	b809883a 	mov	r4,r23
  803b20:	1021883a 	mov	r16,r2
  803b24:	080641c0 	call	80641c <__multadd>
  803b28:	1025883a 	mov	r18,r2
  803b2c:	982d883a 	mov	r22,r19
  803b30:	a00b883a 	mov	r5,r20
  803b34:	e009883a 	mov	r4,fp
  803b38:	0802ae00 	call	802ae0 <quorem>
  803b3c:	800b883a 	mov	r5,r16
  803b40:	e009883a 	mov	r4,fp
  803b44:	102b883a 	mov	r21,r2
  803b48:	d8800615 	stw	r2,24(sp)
  803b4c:	0806e080 	call	806e08 <__mcmp>
  803b50:	a00b883a 	mov	r5,r20
  803b54:	900d883a 	mov	r6,r18
  803b58:	b809883a 	mov	r4,r23
  803b5c:	1023883a 	mov	r17,r2
  803b60:	0806e600 	call	806e60 <__mdiff>
  803b64:	1027883a 	mov	r19,r2
  803b68:	10800317 	ldw	r2,12(r2)
  803b6c:	ad400c04 	addi	r21,r21,48
  803b70:	980b883a 	mov	r5,r19
  803b74:	103fc526 	beq	r2,zero,803a8c <_dtoa_r+0xd8c>
  803b78:	b809883a 	mov	r4,r23
  803b7c:	08063f80 	call	8063f8 <_Bfree>
  803b80:	00800044 	movi	r2,1
  803b84:	003fcb06 	br	803ab4 <_dtoa_r+0xdb4>
  803b88:	080641c0 	call	80641c <__multadd>
  803b8c:	1021883a 	mov	r16,r2
  803b90:	1025883a 	mov	r18,r2
  803b94:	003fe506 	br	803b2c <_dtoa_r+0xe2c>
  803b98:	d8800217 	ldw	r2,8(sp)
  803b9c:	108000d0 	cmplti	r2,r2,3
  803ba0:	10003e26 	beq	r2,zero,803c9c <_dtoa_r+0xf9c>
  803ba4:	d8800717 	ldw	r2,28(sp)
  803ba8:	103faa1e 	bne	r2,zero,803a54 <_dtoa_r+0xd54>
  803bac:	a00b883a 	mov	r5,r20
  803bb0:	e009883a 	mov	r4,fp
  803bb4:	0802ae00 	call	802ae0 <quorem>
  803bb8:	14c00c04 	addi	r19,r2,48
  803bbc:	d8800117 	ldw	r2,4(sp)
  803bc0:	0023883a 	mov	r17,zero
  803bc4:	15400044 	addi	r21,r2,1
  803bc8:	14c00005 	stb	r19,0(r2)
  803bcc:	d8800417 	ldw	r2,16(sp)
  803bd0:	10800044 	addi	r2,r2,1
  803bd4:	d8800415 	stw	r2,16(sp)
  803bd8:	003f0906 	br	803800 <_dtoa_r+0xb00>
  803bdc:	a00b883a 	mov	r5,r20
  803be0:	e009883a 	mov	r4,fp
  803be4:	0806e080 	call	806e08 <__mcmp>
  803be8:	103ee70e 	bge	r2,zero,803788 <_dtoa_r+0xa88>
  803bec:	e00b883a 	mov	r5,fp
  803bf0:	000f883a 	mov	r7,zero
  803bf4:	01800284 	movi	r6,10
  803bf8:	b809883a 	mov	r4,r23
  803bfc:	080641c0 	call	80641c <__multadd>
  803c00:	d8c00417 	ldw	r3,16(sp)
  803c04:	1039883a 	mov	fp,r2
  803c08:	d8800717 	ldw	r2,28(sp)
  803c0c:	1d7fffc4 	addi	r21,r3,-1
  803c10:	103f861e 	bne	r2,zero,803a2c <_dtoa_r+0xd2c>
  803c14:	d8800b17 	ldw	r2,44(sp)
  803c18:	0081d20e 	bge	zero,r2,804364 <_dtoa_r+0x1664>
  803c1c:	d8800515 	stw	r2,20(sp)
  803c20:	003ee006 	br	8037a4 <_dtoa_r+0xaa4>
  803c24:	00802074 	movhi	r2,129
  803c28:	1007883a 	mov	r3,r2
  803c2c:	18c44b04 	addi	r3,r3,4396
  803c30:	00802074 	movhi	r2,129
  803c34:	d8c00115 	stw	r3,4(sp)
  803c38:	10844bc4 	addi	r2,r2,4399
  803c3c:	003ded06 	br	8033f4 <_dtoa_r+0x6f4>
  803c40:	00800044 	movi	r2,1
  803c44:	d8800715 	stw	r2,28(sp)
  803c48:	003f3406 	br	80391c <_dtoa_r+0xc1c>
  803c4c:	983eb21e 	bne	r19,zero,803718 <_dtoa_r+0xa18>
  803c50:	00800434 	movhi	r2,16
  803c54:	10bfffc4 	addi	r2,r2,-1
  803c58:	8884703a 	and	r2,r17,r2
  803c5c:	103eae1e 	bne	r2,zero,803718 <_dtoa_r+0xa18>
  803c60:	8c5ffc2c 	andhi	r17,r17,32752
  803c64:	883eac26 	beq	r17,zero,803718 <_dtoa_r+0xa18>
  803c68:	d8800617 	ldw	r2,24(sp)
  803c6c:	b5800044 	addi	r22,r22,1
  803c70:	04400044 	movi	r17,1
  803c74:	10800044 	addi	r2,r2,1
  803c78:	d8800615 	stw	r2,24(sp)
  803c7c:	003ea706 	br	80371c <_dtoa_r+0xa1c>
  803c80:	00800044 	movi	r2,1
  803c84:	d8800515 	stw	r2,20(sp)
  803c88:	d8801e15 	stw	r2,120(sp)
  803c8c:	003f1b06 	br	8038fc <_dtoa_r+0xbfc>
  803c90:	d8800b17 	ldw	r2,44(sp)
  803c94:	dd400415 	stw	r21,16(sp)
  803c98:	d8800515 	stw	r2,20(sp)
  803c9c:	d8800517 	ldw	r2,20(sp)
  803ca0:	103e081e 	bne	r2,zero,8034c4 <_dtoa_r+0x7c4>
  803ca4:	a00b883a 	mov	r5,r20
  803ca8:	b809883a 	mov	r4,r23
  803cac:	000f883a 	mov	r7,zero
  803cb0:	01800144 	movi	r6,5
  803cb4:	080641c0 	call	80641c <__multadd>
  803cb8:	100b883a 	mov	r5,r2
  803cbc:	e009883a 	mov	r4,fp
  803cc0:	1029883a 	mov	r20,r2
  803cc4:	0806e080 	call	806e08 <__mcmp>
  803cc8:	00bdfe0e 	bge	zero,r2,8034c4 <_dtoa_r+0x7c4>
  803ccc:	d8c00117 	ldw	r3,4(sp)
  803cd0:	00800c44 	movi	r2,49
  803cd4:	18800005 	stb	r2,0(r3)
  803cd8:	d8800417 	ldw	r2,16(sp)
  803cdc:	1d400044 	addi	r21,r3,1
  803ce0:	14400044 	addi	r17,r2,1
  803ce4:	a00b883a 	mov	r5,r20
  803ce8:	b809883a 	mov	r4,r23
  803cec:	08063f80 	call	8063f8 <_Bfree>
  803cf0:	88800044 	addi	r2,r17,1
  803cf4:	d8800415 	stw	r2,16(sp)
  803cf8:	803ee11e 	bne	r16,zero,803880 <_dtoa_r+0xb80>
  803cfc:	003ee306 	br	80388c <_dtoa_r+0xb8c>
  803d00:	b005883a 	mov	r2,r22
  803d04:	003e6006 	br	803688 <_dtoa_r+0x988>
  803d08:	800b883a 	mov	r5,r16
  803d0c:	900d883a 	mov	r6,r18
  803d10:	b809883a 	mov	r4,r23
  803d14:	0806c800 	call	806c80 <__lshift>
  803d18:	1021883a 	mov	r16,r2
  803d1c:	003f4e06 	br	803a58 <_dtoa_r+0xd58>
  803d20:	1529c83a 	sub	r20,r2,r20
  803d24:	003e4906 	br	80364c <_dtoa_r+0x94c>
  803d28:	dcc00c15 	stw	r19,48(sp)
  803d2c:	8825883a 	mov	r18,r17
  803d30:	05400084 	movi	r21,2
  803d34:	003cdf06 	br	8030b4 <_dtoa_r+0x3b4>
  803d38:	00800044 	movi	r2,1
  803d3c:	003ead06 	br	8037f4 <_dtoa_r+0xaf4>
  803d40:	00800044 	movi	r2,1
  803d44:	d8800715 	stw	r2,28(sp)
  803d48:	003ca506 	br	802fe0 <_dtoa_r+0x2e0>
  803d4c:	1000021e 	bne	r2,zero,803d58 <_dtoa_r+0x1058>
  803d50:	98c0004c 	andi	r3,r19,1
  803d54:	183eb41e 	bne	r3,zero,803828 <_dtoa_r+0xb28>
  803d58:	2005883a 	mov	r2,r4
  803d5c:	00000206 	br	803d68 <_dtoa_r+0x1068>
  803d60:	a8bfff83 	ldbu	r2,-2(r21)
  803d64:	182b883a 	mov	r21,r3
  803d68:	10803fcc 	andi	r2,r2,255
  803d6c:	1080201c 	xori	r2,r2,128
  803d70:	10bfe004 	addi	r2,r2,-128
  803d74:	10800c18 	cmpnei	r2,r2,48
  803d78:	a8ffffc4 	addi	r3,r21,-1
  803d7c:	103ff826 	beq	r2,zero,803d60 <_dtoa_r+0x1060>
  803d80:	003eb606 	br	80385c <_dtoa_r+0xb5c>
  803d84:	d8c00117 	ldw	r3,4(sp)
  803d88:	00800c44 	movi	r2,49
  803d8c:	18800005 	stb	r2,0(r3)
  803d90:	d8800417 	ldw	r2,16(sp)
  803d94:	10800044 	addi	r2,r2,1
  803d98:	d8800415 	stw	r2,16(sp)
  803d9c:	003eaf06 	br	80385c <_dtoa_r+0xb5c>
  803da0:	d8c00a17 	ldw	r3,40(sp)
  803da4:	18011826 	beq	r3,zero,804208 <_dtoa_r+0x1508>
  803da8:	d8c00617 	ldw	r3,24(sp)
  803dac:	10810cc4 	addi	r2,r2,1075
  803db0:	b0ad883a 	add	r22,r22,r2
  803db4:	1885883a 	add	r2,r3,r2
  803db8:	dd000817 	ldw	r20,32(sp)
  803dbc:	1825883a 	mov	r18,r3
  803dc0:	d8800615 	stw	r2,24(sp)
  803dc4:	003e2806 	br	803668 <_dtoa_r+0x968>
  803dc8:	a809883a 	mov	r4,r21
  803dcc:	080d7e40 	call	80d7e4 <__floatsidf>
  803dd0:	800d883a 	mov	r6,r16
  803dd4:	900f883a 	mov	r7,r18
  803dd8:	1009883a 	mov	r4,r2
  803ddc:	180b883a 	mov	r5,r3
  803de0:	080c6b00 	call	80c6b0 <__muldf3>
  803de4:	000d883a 	mov	r6,zero
  803de8:	01d00734 	movhi	r7,16412
  803dec:	1009883a 	mov	r4,r2
  803df0:	180b883a 	mov	r5,r3
  803df4:	080b2400 	call	80b240 <__adddf3>
  803df8:	1029883a 	mov	r20,r2
  803dfc:	00bf3034 	movhi	r2,64704
  803e00:	1885883a 	add	r2,r3,r2
  803e04:	d8800c15 	stw	r2,48(sp)
  803e08:	8009883a 	mov	r4,r16
  803e0c:	900b883a 	mov	r5,r18
  803e10:	000d883a 	mov	r6,zero
  803e14:	01d00534 	movhi	r7,16404
  803e18:	080ce5c0 	call	80ce5c <__subdf3>
  803e1c:	dd400c17 	ldw	r21,48(sp)
  803e20:	a00d883a 	mov	r6,r20
  803e24:	1009883a 	mov	r4,r2
  803e28:	a80f883a 	mov	r7,r21
  803e2c:	180b883a 	mov	r5,r3
  803e30:	1025883a 	mov	r18,r2
  803e34:	1821883a 	mov	r16,r3
  803e38:	080c4e00 	call	80c4e0 <__gedf2>
  803e3c:	00812f16 	blt	zero,r2,8042fc <_dtoa_r+0x15fc>
  803e40:	a9e0003c 	xorhi	r7,r21,32768
  803e44:	a00d883a 	mov	r6,r20
  803e48:	9009883a 	mov	r4,r18
  803e4c:	800b883a 	mov	r5,r16
  803e50:	080c5c80 	call	80c5c8 <__ledf2>
  803e54:	103d7d0e 	bge	r2,zero,80344c <_dtoa_r+0x74c>
  803e58:	0029883a 	mov	r20,zero
  803e5c:	0021883a 	mov	r16,zero
  803e60:	003d9806 	br	8034c4 <_dtoa_r+0x7c4>
  803e64:	d9800817 	ldw	r6,32(sp)
  803e68:	e00b883a 	mov	r5,fp
  803e6c:	b809883a 	mov	r4,r23
  803e70:	0806b380 	call	806b38 <__pow5mult>
  803e74:	1039883a 	mov	fp,r2
  803e78:	003e1e06 	br	8036f4 <_dtoa_r+0x9f4>
  803e7c:	d8800417 	ldw	r2,16(sp)
  803e80:	1000ed26 	beq	r2,zero,804238 <_dtoa_r+0x1538>
  803e84:	00a9c83a 	sub	r20,zero,r2
  803e88:	a08003cc 	andi	r2,r20,15
  803e8c:	100690fa 	slli	r3,r2,3
  803e90:	00802074 	movhi	r2,129
  803e94:	10848b04 	addi	r2,r2,4652
  803e98:	10c5883a 	add	r2,r2,r3
  803e9c:	11800017 	ldw	r6,0(r2)
  803ea0:	11c00117 	ldw	r7,4(r2)
  803ea4:	a029d13a 	srai	r20,r20,4
  803ea8:	9809883a 	mov	r4,r19
  803eac:	880b883a 	mov	r5,r17
  803eb0:	080c6b00 	call	80c6b0 <__muldf3>
  803eb4:	1021883a 	mov	r16,r2
  803eb8:	1825883a 	mov	r18,r3
  803ebc:	a0013826 	beq	r20,zero,8043a0 <_dtoa_r+0x16a0>
  803ec0:	02002074 	movhi	r8,129
  803ec4:	05400084 	movi	r21,2
  803ec8:	42048104 	addi	r8,r8,4612
  803ecc:	1009883a 	mov	r4,r2
  803ed0:	9805883a 	mov	r2,r19
  803ed4:	180b883a 	mov	r5,r3
  803ed8:	dc000c15 	stw	r16,48(sp)
  803edc:	8827883a 	mov	r19,r17
  803ee0:	0007883a 	mov	r3,zero
  803ee4:	a823883a 	mov	r17,r21
  803ee8:	4021883a 	mov	r16,r8
  803eec:	102b883a 	mov	r21,r2
  803ef0:	a180004c 	andi	r6,r20,1
  803ef4:	30000726 	beq	r6,zero,803f14 <_dtoa_r+0x1214>
  803ef8:	81800017 	ldw	r6,0(r16)
  803efc:	81c00117 	ldw	r7,4(r16)
  803f00:	8c400044 	addi	r17,r17,1
  803f04:	080c6b00 	call	80c6b0 <__muldf3>
  803f08:	180b883a 	mov	r5,r3
  803f0c:	1009883a 	mov	r4,r2
  803f10:	00c00044 	movi	r3,1
  803f14:	a029d07a 	srai	r20,r20,1
  803f18:	84000204 	addi	r16,r16,8
  803f1c:	a03ff41e 	bne	r20,zero,803ef0 <_dtoa_r+0x11f0>
  803f20:	a805883a 	mov	r2,r21
  803f24:	18c03fcc 	andi	r3,r3,255
  803f28:	882b883a 	mov	r21,r17
  803f2c:	dc000c17 	ldw	r16,48(sp)
  803f30:	9823883a 	mov	r17,r19
  803f34:	1027883a 	mov	r19,r2
  803f38:	183c7726 	beq	r3,zero,803118 <_dtoa_r+0x418>
  803f3c:	2021883a 	mov	r16,r4
  803f40:	2825883a 	mov	r18,r5
  803f44:	003c7406 	br	803118 <_dtoa_r+0x418>
  803f48:	983eae1e 	bne	r19,zero,803a04 <_dtoa_r+0xd04>
  803f4c:	00800434 	movhi	r2,16
  803f50:	10bfffc4 	addi	r2,r2,-1
  803f54:	8884703a 	and	r2,r17,r2
  803f58:	103f4126 	beq	r2,zero,803c60 <_dtoa_r+0xf60>
  803f5c:	003ea906 	br	803a04 <_dtoa_r+0xd04>
  803f60:	9807883a 	mov	r3,r19
  803f64:	a827883a 	mov	r19,r21
  803f68:	182b883a 	mov	r21,r3
  803f6c:	d8c00417 	ldw	r3,16(sp)
  803f70:	18c00044 	addi	r3,r3,1
  803f74:	d8c00415 	stw	r3,16(sp)
  803f78:	00800d0e 	bge	zero,r2,803fb0 <_dtoa_r+0x12b0>
  803f7c:	e00b883a 	mov	r5,fp
  803f80:	b809883a 	mov	r4,r23
  803f84:	01800044 	movi	r6,1
  803f88:	0806c800 	call	806c80 <__lshift>
  803f8c:	a00b883a 	mov	r5,r20
  803f90:	1009883a 	mov	r4,r2
  803f94:	1039883a 	mov	fp,r2
  803f98:	0806e080 	call	806e08 <__mcmp>
  803f9c:	0080df0e 	bge	zero,r2,80431c <_dtoa_r+0x161c>
  803fa0:	98c00e60 	cmpeqi	r3,r19,57
  803fa4:	1800ce1e 	bne	r3,zero,8042e0 <_dtoa_r+0x15e0>
  803fa8:	d8800617 	ldw	r2,24(sp)
  803fac:	14c00c44 	addi	r19,r2,49
  803fb0:	8023883a 	mov	r17,r16
  803fb4:	b4c00005 	stb	r19,0(r22)
  803fb8:	9021883a 	mov	r16,r18
  803fbc:	003e2706 	br	80385c <_dtoa_r+0xb5c>
  803fc0:	b82b883a 	mov	r21,r23
  803fc4:	ddc00217 	ldw	r23,8(sp)
  803fc8:	200d883a 	mov	r6,r4
  803fcc:	280f883a 	mov	r7,r5
  803fd0:	080b2400 	call	80b240 <__adddf3>
  803fd4:	180b883a 	mov	r5,r3
  803fd8:	800d883a 	mov	r6,r16
  803fdc:	900f883a 	mov	r7,r18
  803fe0:	1009883a 	mov	r4,r2
  803fe4:	1823883a 	mov	r17,r3
  803fe8:	1027883a 	mov	r19,r2
  803fec:	080c4e00 	call	80c4e0 <__gedf2>
  803ff0:	d8c00417 	ldw	r3,16(sp)
  803ff4:	18c00044 	addi	r3,r3,1
  803ff8:	d8c00415 	stw	r3,16(sp)
  803ffc:	00808c16 	blt	zero,r2,804230 <_dtoa_r+0x1530>
  804000:	800d883a 	mov	r6,r16
  804004:	900f883a 	mov	r7,r18
  804008:	9809883a 	mov	r4,r19
  80400c:	880b883a 	mov	r5,r17
  804010:	080c4600 	call	80c460 <__eqdf2>
  804014:	1000021e 	bne	r2,zero,804020 <_dtoa_r+0x1320>
  804018:	ad40004c 	andi	r21,r21,1
  80401c:	a800841e 	bne	r21,zero,804230 <_dtoa_r+0x1530>
  804020:	a02b883a 	mov	r21,r20
  804024:	003e1906 	br	80388c <_dtoa_r+0xb8c>
  804028:	81400117 	ldw	r5,4(r16)
  80402c:	b809883a 	mov	r4,r23
  804030:	08063540 	call	806354 <_Balloc>
  804034:	1023883a 	mov	r17,r2
  804038:	1000f326 	beq	r2,zero,804408 <_dtoa_r+0x1708>
  80403c:	81800417 	ldw	r6,16(r16)
  804040:	81400304 	addi	r5,r16,12
  804044:	11000304 	addi	r4,r2,12
  804048:	31800084 	addi	r6,r6,2
  80404c:	300c90ba 	slli	r6,r6,2
  804050:	08060380 	call	806038 <memcpy>
  804054:	01800044 	movi	r6,1
  804058:	880b883a 	mov	r5,r17
  80405c:	b809883a 	mov	r4,r23
  804060:	0806c800 	call	806c80 <__lshift>
  804064:	1025883a 	mov	r18,r2
  804068:	003e7d06 	br	803a60 <_dtoa_r+0xd60>
  80406c:	e00b883a 	mov	r5,fp
  804070:	b809883a 	mov	r4,r23
  804074:	0806b380 	call	806b38 <__pow5mult>
  804078:	1039883a 	mov	fp,r2
  80407c:	003d9d06 	br	8036f4 <_dtoa_r+0x9f4>
  804080:	d8800617 	ldw	r2,24(sp)
  804084:	d8c00517 	ldw	r3,20(sp)
  804088:	10e5c83a 	sub	r18,r2,r3
  80408c:	003d7606 	br	803668 <_dtoa_r+0x968>
  804090:	d8c00417 	ldw	r3,16(sp)
  804094:	9805883a 	mov	r2,r19
  804098:	a827883a 	mov	r19,r21
  80409c:	18c00044 	addi	r3,r3,1
  8040a0:	102b883a 	mov	r21,r2
  8040a4:	d8c00415 	stw	r3,16(sp)
  8040a8:	98800e58 	cmpnei	r2,r19,57
  8040ac:	10008c26 	beq	r2,zero,8042e0 <_dtoa_r+0x15e0>
  8040b0:	98c00044 	addi	r3,r19,1
  8040b4:	8023883a 	mov	r17,r16
  8040b8:	b0c00005 	stb	r3,0(r22)
  8040bc:	9021883a 	mov	r16,r18
  8040c0:	003de606 	br	80385c <_dtoa_r+0xb5c>
  8040c4:	9805883a 	mov	r2,r19
  8040c8:	a827883a 	mov	r19,r21
  8040cc:	102b883a 	mov	r21,r2
  8040d0:	d8800417 	ldw	r2,16(sp)
  8040d4:	8023883a 	mov	r17,r16
  8040d8:	9021883a 	mov	r16,r18
  8040dc:	10800044 	addi	r2,r2,1
  8040e0:	d8800415 	stw	r2,16(sp)
  8040e4:	003dc606 	br	803800 <_dtoa_r+0xb00>
  8040e8:	d9400c17 	ldw	r5,48(sp)
  8040ec:	a009883a 	mov	r4,r20
  8040f0:	080c6b00 	call	80c6b0 <__muldf3>
  8040f4:	d9800d17 	ldw	r6,52(sp)
  8040f8:	d9400117 	ldw	r5,4(sp)
  8040fc:	d9001017 	ldw	r4,64(sp)
  804100:	d8800c15 	stw	r2,48(sp)
  804104:	d8c00d15 	stw	r3,52(sp)
  804108:	29000005 	stb	r4,0(r5)
  80410c:	31000058 	cmpnei	r4,r6,1
  804110:	29a9883a 	add	r20,r5,r6
  804114:	2000a026 	beq	r4,zero,804398 <_dtoa_r+0x1698>
  804118:	dc400e15 	stw	r17,56(sp)
  80411c:	8009883a 	mov	r4,r16
  804120:	900b883a 	mov	r5,r18
  804124:	a823883a 	mov	r17,r21
  804128:	000d883a 	mov	r6,zero
  80412c:	01d00934 	movhi	r7,16420
  804130:	080c6b00 	call	80c6b0 <__muldf3>
  804134:	180b883a 	mov	r5,r3
  804138:	1009883a 	mov	r4,r2
  80413c:	1825883a 	mov	r18,r3
  804140:	102b883a 	mov	r21,r2
  804144:	080d7640 	call	80d764 <__fixdfsi>
  804148:	1009883a 	mov	r4,r2
  80414c:	1021883a 	mov	r16,r2
  804150:	080d7e40 	call	80d7e4 <__floatsidf>
  804154:	a809883a 	mov	r4,r21
  804158:	900b883a 	mov	r5,r18
  80415c:	100d883a 	mov	r6,r2
  804160:	180f883a 	mov	r7,r3
  804164:	8c400044 	addi	r17,r17,1
  804168:	84000c04 	addi	r16,r16,48
  80416c:	080ce5c0 	call	80ce5c <__subdf3>
  804170:	8c3fffc5 	stb	r16,-1(r17)
  804174:	1009883a 	mov	r4,r2
  804178:	180b883a 	mov	r5,r3
  80417c:	a47fea1e 	bne	r20,r17,804128 <_dtoa_r+0x1428>
  804180:	dc400e17 	ldw	r17,56(sp)
  804184:	1021883a 	mov	r16,r2
  804188:	1825883a 	mov	r18,r3
  80418c:	d9000c17 	ldw	r4,48(sp)
  804190:	d9400d17 	ldw	r5,52(sp)
  804194:	000d883a 	mov	r6,zero
  804198:	01cff834 	movhi	r7,16352
  80419c:	080b2400 	call	80b240 <__adddf3>
  8041a0:	800d883a 	mov	r6,r16
  8041a4:	900f883a 	mov	r7,r18
  8041a8:	1009883a 	mov	r4,r2
  8041ac:	180b883a 	mov	r5,r3
  8041b0:	080c5c80 	call	80c5c8 <__ledf2>
  8041b4:	10005416 	blt	r2,zero,804308 <_dtoa_r+0x1608>
  8041b8:	d9800c17 	ldw	r6,48(sp)
  8041bc:	d9c00d17 	ldw	r7,52(sp)
  8041c0:	0009883a 	mov	r4,zero
  8041c4:	014ff834 	movhi	r5,16352
  8041c8:	080ce5c0 	call	80ce5c <__subdf3>
  8041cc:	800d883a 	mov	r6,r16
  8041d0:	900f883a 	mov	r7,r18
  8041d4:	1009883a 	mov	r4,r2
  8041d8:	180b883a 	mov	r5,r3
  8041dc:	080c4e00 	call	80c4e0 <__gedf2>
  8041e0:	00bc9a0e 	bge	zero,r2,80344c <_dtoa_r+0x74c>
  8041e4:	a0bfffc7 	ldb	r2,-1(r20)
  8041e8:	a02b883a 	mov	r21,r20
  8041ec:	a53fffc4 	addi	r20,r20,-1
  8041f0:	10800c20 	cmpeqi	r2,r2,48
  8041f4:	103ffb1e 	bne	r2,zero,8041e4 <_dtoa_r+0x14e4>
  8041f8:	d8801117 	ldw	r2,68(sp)
  8041fc:	10800044 	addi	r2,r2,1
  804200:	d8800415 	stw	r2,16(sp)
  804204:	003da106 	br	80388c <_dtoa_r+0xb8c>
  804208:	d8c01217 	ldw	r3,72(sp)
  80420c:	d9000617 	ldw	r4,24(sp)
  804210:	00800d84 	movi	r2,54
  804214:	10c5c83a 	sub	r2,r2,r3
  804218:	b0ad883a 	add	r22,r22,r2
  80421c:	2085883a 	add	r2,r4,r2
  804220:	dd000817 	ldw	r20,32(sp)
  804224:	2025883a 	mov	r18,r4
  804228:	d8800615 	stw	r2,24(sp)
  80422c:	003d0e06 	br	803668 <_dtoa_r+0x968>
  804230:	d9000117 	ldw	r4,4(sp)
  804234:	003c4b06 	br	803364 <_dtoa_r+0x664>
  804238:	9821883a 	mov	r16,r19
  80423c:	8825883a 	mov	r18,r17
  804240:	05400084 	movi	r21,2
  804244:	003bb406 	br	803118 <_dtoa_r+0x418>
  804248:	d8800517 	ldw	r2,20(sp)
  80424c:	103ede26 	beq	r2,zero,803dc8 <_dtoa_r+0x10c8>
  804250:	d8800b17 	ldw	r2,44(sp)
  804254:	00bc7d0e 	bge	zero,r2,80344c <_dtoa_r+0x74c>
  804258:	900b883a 	mov	r5,r18
  80425c:	8009883a 	mov	r4,r16
  804260:	000d883a 	mov	r6,zero
  804264:	01d00934 	movhi	r7,16420
  804268:	080c6b00 	call	80c6b0 <__muldf3>
  80426c:	a9000044 	addi	r4,r21,1
  804270:	1021883a 	mov	r16,r2
  804274:	1825883a 	mov	r18,r3
  804278:	080d7e40 	call	80d7e4 <__floatsidf>
  80427c:	800d883a 	mov	r6,r16
  804280:	900f883a 	mov	r7,r18
  804284:	1009883a 	mov	r4,r2
  804288:	180b883a 	mov	r5,r3
  80428c:	080c6b00 	call	80c6b0 <__muldf3>
  804290:	1009883a 	mov	r4,r2
  804294:	000d883a 	mov	r6,zero
  804298:	01d00734 	movhi	r7,16412
  80429c:	180b883a 	mov	r5,r3
  8042a0:	080b2400 	call	80b240 <__adddf3>
  8042a4:	d9000417 	ldw	r4,16(sp)
  8042a8:	1029883a 	mov	r20,r2
  8042ac:	00bf3034 	movhi	r2,64704
  8042b0:	1887883a 	add	r3,r3,r2
  8042b4:	d8800b17 	ldw	r2,44(sp)
  8042b8:	213fffc4 	addi	r4,r4,-1
  8042bc:	d9001115 	stw	r4,68(sp)
  8042c0:	d8c00c15 	stw	r3,48(sp)
  8042c4:	d8800d15 	stw	r2,52(sp)
  8042c8:	003bb106 	br	803190 <_dtoa_r+0x490>
  8042cc:	d8800417 	ldw	r2,16(sp)
  8042d0:	00c00c44 	movi	r3,49
  8042d4:	10800044 	addi	r2,r2,1
  8042d8:	d8800415 	stw	r2,16(sp)
  8042dc:	003c2a06 	br	803388 <_dtoa_r+0x688>
  8042e0:	00800e44 	movi	r2,57
  8042e4:	8023883a 	mov	r17,r16
  8042e8:	d9400117 	ldw	r5,4(sp)
  8042ec:	b0800005 	stb	r2,0(r22)
  8042f0:	9021883a 	mov	r16,r18
  8042f4:	01000e44 	movi	r4,57
  8042f8:	003d5006 	br	80383c <_dtoa_r+0xb3c>
  8042fc:	0029883a 	mov	r20,zero
  804300:	0021883a 	mov	r16,zero
  804304:	003e7106 	br	803ccc <_dtoa_r+0xfcc>
  804308:	d8801117 	ldw	r2,68(sp)
  80430c:	d9000117 	ldw	r4,4(sp)
  804310:	10800044 	addi	r2,r2,1
  804314:	d8800415 	stw	r2,16(sp)
  804318:	003c1206 	br	803364 <_dtoa_r+0x664>
  80431c:	103f241e 	bne	r2,zero,803fb0 <_dtoa_r+0x12b0>
  804320:	9880004c 	andi	r2,r19,1
  804324:	103f1e1e 	bne	r2,zero,803fa0 <_dtoa_r+0x12a0>
  804328:	003f2106 	br	803fb0 <_dtoa_r+0x12b0>
  80432c:	d8801117 	ldw	r2,68(sp)
  804330:	ddc00d17 	ldw	r23,52(sp)
  804334:	10800044 	addi	r2,r2,1
  804338:	d8800415 	stw	r2,16(sp)
  80433c:	003d5306 	br	80388c <_dtoa_r+0xb8c>
  804340:	d8c00417 	ldw	r3,16(sp)
  804344:	a8800e60 	cmpeqi	r2,r21,57
  804348:	a827883a 	mov	r19,r21
  80434c:	18c00044 	addi	r3,r3,1
  804350:	d8c00415 	stw	r3,16(sp)
  804354:	b5400044 	addi	r21,r22,1
  804358:	103fe11e 	bne	r2,zero,8042e0 <_dtoa_r+0x15e0>
  80435c:	047f1216 	blt	zero,r17,803fa8 <_dtoa_r+0x12a8>
  804360:	003f1306 	br	803fb0 <_dtoa_r+0x12b0>
  804364:	d8800217 	ldw	r2,8(sp)
  804368:	108000c8 	cmpgei	r2,r2,3
  80436c:	103e481e 	bne	r2,zero,803c90 <_dtoa_r+0xf90>
  804370:	dd400415 	stw	r21,16(sp)
  804374:	003e0d06 	br	803bac <_dtoa_r+0xeac>
  804378:	d8800217 	ldw	r2,8(sp)
  80437c:	108000c8 	cmpgei	r2,r2,3
  804380:	103e431e 	bne	r2,zero,803c90 <_dtoa_r+0xf90>
  804384:	d8800b17 	ldw	r2,44(sp)
  804388:	dd400415 	stw	r21,16(sp)
  80438c:	d8800515 	stw	r2,20(sp)
  804390:	04bdb10e 	bge	zero,r18,803a58 <_dtoa_r+0xd58>
  804394:	003e5c06 	br	803d08 <_dtoa_r+0x1008>
  804398:	a829883a 	mov	r20,r21
  80439c:	003f7b06 	br	80418c <_dtoa_r+0x148c>
  8043a0:	05400084 	movi	r21,2
  8043a4:	003b5c06 	br	803118 <_dtoa_r+0x418>
  8043a8:	01c02074 	movhi	r7,129
  8043ac:	01002074 	movhi	r4,129
  8043b0:	39c44f04 	addi	r7,r7,4412
  8043b4:	000d883a 	mov	r6,zero
  8043b8:	01406a84 	movi	r5,426
  8043bc:	21045404 	addi	r4,r4,4432
  8043c0:	08095340 	call	809534 <__assert_func>
  8043c4:	000b883a 	mov	r5,zero
  8043c8:	003b1506 	br	803020 <_dtoa_r+0x320>
  8043cc:	b8001115 	stw	zero,68(r23)
  8043d0:	000b883a 	mov	r5,zero
  8043d4:	b809883a 	mov	r4,r23
  8043d8:	08063540 	call	806354 <_Balloc>
  8043dc:	d8800115 	stw	r2,4(sp)
  8043e0:	103ff126 	beq	r2,zero,8043a8 <_dtoa_r+0x16a8>
  8043e4:	d8800117 	ldw	r2,4(sp)
  8043e8:	d8001e15 	stw	zero,120(sp)
  8043ec:	b8801015 	stw	r2,64(r23)
  8043f0:	00bfffc4 	movi	r2,-1
  8043f4:	d8800515 	stw	r2,20(sp)
  8043f8:	d8800b15 	stw	r2,44(sp)
  8043fc:	00800044 	movi	r2,1
  804400:	d8800715 	stw	r2,28(sp)
  804404:	003c1106 	br	80344c <_dtoa_r+0x74c>
  804408:	01c02074 	movhi	r7,129
  80440c:	01002074 	movhi	r4,129
  804410:	39c44f04 	addi	r7,r7,4412
  804414:	000d883a 	mov	r6,zero
  804418:	0140ba84 	movi	r5,746
  80441c:	21045404 	addi	r4,r4,4432
  804420:	08095340 	call	809534 <__assert_func>
  804424:	00802074 	movhi	r2,129
  804428:	10844c04 	addi	r2,r2,4400
  80442c:	d8800115 	stw	r2,4(sp)
  804430:	003a6506 	br	802dc8 <_dtoa_r+0xc8>
  804434:	18c00120 	cmpeqi	r3,r3,4
  804438:	183cc91e 	bne	r3,zero,803760 <_dtoa_r+0xa60>
  80443c:	00c00f04 	movi	r3,60
  804440:	1885c83a 	sub	r2,r3,r2
  804444:	003cc106 	br	80374c <_dtoa_r+0xa4c>

00804448 <__sflush_r>:
  804448:	2880030b 	ldhu	r2,12(r5)
  80444c:	defffb04 	addi	sp,sp,-20
  804450:	dcc00315 	stw	r19,12(sp)
  804454:	dc000015 	stw	r16,0(sp)
  804458:	dfc00415 	stw	ra,16(sp)
  80445c:	dc800215 	stw	r18,8(sp)
  804460:	dc400115 	stw	r17,4(sp)
  804464:	10c0020c 	andi	r3,r2,8
  804468:	2821883a 	mov	r16,r5
  80446c:	2027883a 	mov	r19,r4
  804470:	18003f1e 	bne	r3,zero,804570 <__sflush_r+0x128>
  804474:	28c00117 	ldw	r3,4(r5)
  804478:	10820014 	ori	r2,r2,2048
  80447c:	2880030d 	sth	r2,12(r5)
  804480:	00c0550e 	bge	zero,r3,8045d8 <__sflush_r+0x190>
  804484:	82000a17 	ldw	r8,40(r16)
  804488:	40003126 	beq	r8,zero,804550 <__sflush_r+0x108>
  80448c:	9c400017 	ldw	r17,0(r19)
  804490:	1104000c 	andi	r4,r2,4096
  804494:	98000015 	stw	zero,0(r19)
  804498:	81400717 	ldw	r5,28(r16)
  80449c:	1007883a 	mov	r3,r2
  8044a0:	2000521e 	bne	r4,zero,8045ec <__sflush_r+0x1a4>
  8044a4:	01c00044 	movi	r7,1
  8044a8:	000d883a 	mov	r6,zero
  8044ac:	9809883a 	mov	r4,r19
  8044b0:	403ee83a 	callr	r8
  8044b4:	10ffffd8 	cmpnei	r3,r2,-1
  8044b8:	18005826 	beq	r3,zero,80461c <__sflush_r+0x1d4>
  8044bc:	80c0030b 	ldhu	r3,12(r16)
  8044c0:	82000a17 	ldw	r8,40(r16)
  8044c4:	81400717 	ldw	r5,28(r16)
  8044c8:	18c0010c 	andi	r3,r3,4
  8044cc:	18000626 	beq	r3,zero,8044e8 <__sflush_r+0xa0>
  8044d0:	81000117 	ldw	r4,4(r16)
  8044d4:	80c00c17 	ldw	r3,48(r16)
  8044d8:	1105c83a 	sub	r2,r2,r4
  8044dc:	18000226 	beq	r3,zero,8044e8 <__sflush_r+0xa0>
  8044e0:	80c00f17 	ldw	r3,60(r16)
  8044e4:	10c5c83a 	sub	r2,r2,r3
  8044e8:	100d883a 	mov	r6,r2
  8044ec:	000f883a 	mov	r7,zero
  8044f0:	9809883a 	mov	r4,r19
  8044f4:	403ee83a 	callr	r8
  8044f8:	10ffffd8 	cmpnei	r3,r2,-1
  8044fc:	18003d1e 	bne	r3,zero,8045f4 <__sflush_r+0x1ac>
  804500:	99000017 	ldw	r4,0(r19)
  804504:	80c0030b 	ldhu	r3,12(r16)
  804508:	20004e26 	beq	r4,zero,804644 <__sflush_r+0x1fc>
  80450c:	21400760 	cmpeqi	r5,r4,29
  804510:	2800021e 	bne	r5,zero,80451c <__sflush_r+0xd4>
  804514:	210005a0 	cmpeqi	r4,r4,22
  804518:	20002c26 	beq	r4,zero,8045cc <__sflush_r+0x184>
  80451c:	80800417 	ldw	r2,16(r16)
  804520:	18fdffcc 	andi	r3,r3,63487
  804524:	80c0030d 	sth	r3,12(r16)
  804528:	80000115 	stw	zero,4(r16)
  80452c:	80800015 	stw	r2,0(r16)
  804530:	81400c17 	ldw	r5,48(r16)
  804534:	9c400015 	stw	r17,0(r19)
  804538:	28000526 	beq	r5,zero,804550 <__sflush_r+0x108>
  80453c:	80801004 	addi	r2,r16,64
  804540:	28800226 	beq	r5,r2,80454c <__sflush_r+0x104>
  804544:	9809883a 	mov	r4,r19
  804548:	0804c1c0 	call	804c1c <_free_r>
  80454c:	80000c15 	stw	zero,48(r16)
  804550:	0005883a 	mov	r2,zero
  804554:	dfc00417 	ldw	ra,16(sp)
  804558:	dcc00317 	ldw	r19,12(sp)
  80455c:	dc800217 	ldw	r18,8(sp)
  804560:	dc400117 	ldw	r17,4(sp)
  804564:	dc000017 	ldw	r16,0(sp)
  804568:	dec00504 	addi	sp,sp,20
  80456c:	f800283a 	ret
  804570:	2c800417 	ldw	r18,16(r5)
  804574:	903ff626 	beq	r18,zero,804550 <__sflush_r+0x108>
  804578:	2c400017 	ldw	r17,0(r5)
  80457c:	108000cc 	andi	r2,r2,3
  804580:	2c800015 	stw	r18,0(r5)
  804584:	8ca3c83a 	sub	r17,r17,r18
  804588:	1000161e 	bne	r2,zero,8045e4 <__sflush_r+0x19c>
  80458c:	28800517 	ldw	r2,20(r5)
  804590:	80800215 	stw	r2,8(r16)
  804594:	04400316 	blt	zero,r17,8045a4 <__sflush_r+0x15c>
  804598:	003fed06 	br	804550 <__sflush_r+0x108>
  80459c:	90a5883a 	add	r18,r18,r2
  8045a0:	047feb0e 	bge	zero,r17,804550 <__sflush_r+0x108>
  8045a4:	80800917 	ldw	r2,36(r16)
  8045a8:	81400717 	ldw	r5,28(r16)
  8045ac:	880f883a 	mov	r7,r17
  8045b0:	900d883a 	mov	r6,r18
  8045b4:	9809883a 	mov	r4,r19
  8045b8:	103ee83a 	callr	r2
  8045bc:	88a3c83a 	sub	r17,r17,r2
  8045c0:	00bff616 	blt	zero,r2,80459c <__sflush_r+0x154>
  8045c4:	80c0030b 	ldhu	r3,12(r16)
  8045c8:	00bfffc4 	movi	r2,-1
  8045cc:	18c01014 	ori	r3,r3,64
  8045d0:	80c0030d 	sth	r3,12(r16)
  8045d4:	003fdf06 	br	804554 <__sflush_r+0x10c>
  8045d8:	28c00f17 	ldw	r3,60(r5)
  8045dc:	00ffa916 	blt	zero,r3,804484 <__sflush_r+0x3c>
  8045e0:	003fdb06 	br	804550 <__sflush_r+0x108>
  8045e4:	0005883a 	mov	r2,zero
  8045e8:	003fe906 	br	804590 <__sflush_r+0x148>
  8045ec:	80801417 	ldw	r2,80(r16)
  8045f0:	003fb506 	br	8044c8 <__sflush_r+0x80>
  8045f4:	80c0030b 	ldhu	r3,12(r16)
  8045f8:	81000417 	ldw	r4,16(r16)
  8045fc:	80000115 	stw	zero,4(r16)
  804600:	197dffcc 	andi	r5,r3,63487
  804604:	8140030d 	sth	r5,12(r16)
  804608:	81000015 	stw	r4,0(r16)
  80460c:	18c4000c 	andi	r3,r3,4096
  804610:	183fc726 	beq	r3,zero,804530 <__sflush_r+0xe8>
  804614:	80801415 	stw	r2,80(r16)
  804618:	003fc506 	br	804530 <__sflush_r+0xe8>
  80461c:	98c00017 	ldw	r3,0(r19)
  804620:	183fa626 	beq	r3,zero,8044bc <__sflush_r+0x74>
  804624:	19000760 	cmpeqi	r4,r3,29
  804628:	20000e1e 	bne	r4,zero,804664 <__sflush_r+0x21c>
  80462c:	18c00598 	cmpnei	r3,r3,22
  804630:	18000c26 	beq	r3,zero,804664 <__sflush_r+0x21c>
  804634:	80c0030b 	ldhu	r3,12(r16)
  804638:	18c01014 	ori	r3,r3,64
  80463c:	80c0030d 	sth	r3,12(r16)
  804640:	003fc406 	br	804554 <__sflush_r+0x10c>
  804644:	81000417 	ldw	r4,16(r16)
  804648:	197dffcc 	andi	r5,r3,63487
  80464c:	8140030d 	sth	r5,12(r16)
  804650:	80000115 	stw	zero,4(r16)
  804654:	81000015 	stw	r4,0(r16)
  804658:	18c4000c 	andi	r3,r3,4096
  80465c:	183fb426 	beq	r3,zero,804530 <__sflush_r+0xe8>
  804660:	003fec06 	br	804614 <__sflush_r+0x1cc>
  804664:	9c400015 	stw	r17,0(r19)
  804668:	0005883a 	mov	r2,zero
  80466c:	003fb906 	br	804554 <__sflush_r+0x10c>

00804670 <_fflush_r>:
  804670:	defffd04 	addi	sp,sp,-12
  804674:	dc000115 	stw	r16,4(sp)
  804678:	dfc00215 	stw	ra,8(sp)
  80467c:	2021883a 	mov	r16,r4
  804680:	20000226 	beq	r4,zero,80468c <_fflush_r+0x1c>
  804684:	20800e17 	ldw	r2,56(r4)
  804688:	10000726 	beq	r2,zero,8046a8 <_fflush_r+0x38>
  80468c:	2880030f 	ldh	r2,12(r5)
  804690:	10000a1e 	bne	r2,zero,8046bc <_fflush_r+0x4c>
  804694:	0005883a 	mov	r2,zero
  804698:	dfc00217 	ldw	ra,8(sp)
  80469c:	dc000117 	ldw	r16,4(sp)
  8046a0:	dec00304 	addi	sp,sp,12
  8046a4:	f800283a 	ret
  8046a8:	d9400015 	stw	r5,0(sp)
  8046ac:	0804ab80 	call	804ab8 <__sinit>
  8046b0:	d9400017 	ldw	r5,0(sp)
  8046b4:	2880030f 	ldh	r2,12(r5)
  8046b8:	103ff626 	beq	r2,zero,804694 <_fflush_r+0x24>
  8046bc:	8009883a 	mov	r4,r16
  8046c0:	dfc00217 	ldw	ra,8(sp)
  8046c4:	dc000117 	ldw	r16,4(sp)
  8046c8:	dec00304 	addi	sp,sp,12
  8046cc:	08044481 	jmpi	804448 <__sflush_r>

008046d0 <fflush>:
  8046d0:	20001726 	beq	r4,zero,804730 <fflush+0x60>
  8046d4:	00802074 	movhi	r2,129
  8046d8:	200b883a 	mov	r5,r4
  8046dc:	110ce817 	ldw	r4,13216(r2)
  8046e0:	20000226 	beq	r4,zero,8046ec <fflush+0x1c>
  8046e4:	20800e17 	ldw	r2,56(r4)
  8046e8:	10000526 	beq	r2,zero,804700 <fflush+0x30>
  8046ec:	2880030f 	ldh	r2,12(r5)
  8046f0:	1000021e 	bne	r2,zero,8046fc <fflush+0x2c>
  8046f4:	0005883a 	mov	r2,zero
  8046f8:	f800283a 	ret
  8046fc:	08044481 	jmpi	804448 <__sflush_r>
  804700:	defffd04 	addi	sp,sp,-12
  804704:	d9400115 	stw	r5,4(sp)
  804708:	d9000015 	stw	r4,0(sp)
  80470c:	dfc00215 	stw	ra,8(sp)
  804710:	0804ab80 	call	804ab8 <__sinit>
  804714:	d9400117 	ldw	r5,4(sp)
  804718:	d9000017 	ldw	r4,0(sp)
  80471c:	2880030f 	ldh	r2,12(r5)
  804720:	10000826 	beq	r2,zero,804744 <fflush+0x74>
  804724:	dfc00217 	ldw	ra,8(sp)
  804728:	dec00304 	addi	sp,sp,12
  80472c:	08044481 	jmpi	804448 <__sflush_r>
  804730:	00802074 	movhi	r2,129
  804734:	110ce717 	ldw	r4,13212(r2)
  804738:	01402034 	movhi	r5,128
  80473c:	29519c04 	addi	r5,r5,18032
  804740:	08054781 	jmpi	805478 <_fwalk_reent>
  804744:	0005883a 	mov	r2,zero
  804748:	dfc00217 	ldw	ra,8(sp)
  80474c:	dec00304 	addi	sp,sp,12
  804750:	f800283a 	ret

00804754 <__fp_lock>:
  804754:	0005883a 	mov	r2,zero
  804758:	f800283a 	ret

0080475c <_cleanup_r>:
  80475c:	01402074 	movhi	r5,129
  804760:	2965cc04 	addi	r5,r5,-26832
  804764:	08054781 	jmpi	805478 <_fwalk_reent>

00804768 <__fp_unlock>:
  804768:	0005883a 	mov	r2,zero
  80476c:	f800283a 	ret

00804770 <__sinit.part.0>:
  804770:	00c02034 	movhi	r3,128
  804774:	20800117 	ldw	r2,4(r4)
  804778:	18d1d704 	addi	r3,r3,18268
  80477c:	20c00f15 	stw	r3,60(r4)
  804780:	2140bb04 	addi	r5,r4,748
  804784:	00c000c4 	movi	r3,3
  804788:	20c0b915 	stw	r3,740(r4)
  80478c:	2140ba15 	stw	r5,744(r4)
  804790:	2000b815 	stw	zero,736(r4)
  804794:	10001705 	stb	zero,92(r2)
  804798:	10001745 	stb	zero,93(r2)
  80479c:	10001785 	stb	zero,94(r2)
  8047a0:	100017c5 	stb	zero,95(r2)
  8047a4:	10001805 	stb	zero,96(r2)
  8047a8:	10001845 	stb	zero,97(r2)
  8047ac:	10001885 	stb	zero,98(r2)
  8047b0:	100018c5 	stb	zero,99(r2)
  8047b4:	00c00104 	movi	r3,4
  8047b8:	10c00315 	stw	r3,12(r2)
  8047bc:	02002034 	movhi	r8,128
  8047c0:	20c00217 	ldw	r3,8(r4)
  8047c4:	01c02034 	movhi	r7,128
  8047c8:	01802034 	movhi	r6,128
  8047cc:	01402034 	movhi	r5,128
  8047d0:	421f2b04 	addi	r8,r8,31916
  8047d4:	39df4204 	addi	r7,r7,32008
  8047d8:	319f6204 	addi	r6,r6,32136
  8047dc:	295f7904 	addi	r5,r5,32228
  8047e0:	02400074 	movhi	r9,1
  8047e4:	10001915 	stw	zero,100(r2)
  8047e8:	10000015 	stw	zero,0(r2)
  8047ec:	10000115 	stw	zero,4(r2)
  8047f0:	10000215 	stw	zero,8(r2)
  8047f4:	10000415 	stw	zero,16(r2)
  8047f8:	10000515 	stw	zero,20(r2)
  8047fc:	10000615 	stw	zero,24(r2)
  804800:	10800715 	stw	r2,28(r2)
  804804:	12000815 	stw	r8,32(r2)
  804808:	11c00915 	stw	r7,36(r2)
  80480c:	11800a15 	stw	r6,40(r2)
  804810:	11400b15 	stw	r5,44(r2)
  804814:	4a400284 	addi	r9,r9,10
  804818:	1a400315 	stw	r9,12(r3)
  80481c:	18001915 	stw	zero,100(r3)
  804820:	18000015 	stw	zero,0(r3)
  804824:	18000115 	stw	zero,4(r3)
  804828:	18000215 	stw	zero,8(r3)
  80482c:	18000415 	stw	zero,16(r3)
  804830:	18001705 	stb	zero,92(r3)
  804834:	18001745 	stb	zero,93(r3)
  804838:	18001785 	stb	zero,94(r3)
  80483c:	180017c5 	stb	zero,95(r3)
  804840:	18001805 	stb	zero,96(r3)
  804844:	18001845 	stb	zero,97(r3)
  804848:	18001885 	stb	zero,98(r3)
  80484c:	180018c5 	stb	zero,99(r3)
  804850:	20800317 	ldw	r2,12(r4)
  804854:	024000b4 	movhi	r9,2
  804858:	18000515 	stw	zero,20(r3)
  80485c:	18000615 	stw	zero,24(r3)
  804860:	18c00715 	stw	r3,28(r3)
  804864:	1a000815 	stw	r8,32(r3)
  804868:	19c00915 	stw	r7,36(r3)
  80486c:	19800a15 	stw	r6,40(r3)
  804870:	19400b15 	stw	r5,44(r3)
  804874:	4a400484 	addi	r9,r9,18
  804878:	10001915 	stw	zero,100(r2)
  80487c:	10000015 	stw	zero,0(r2)
  804880:	10000115 	stw	zero,4(r2)
  804884:	10000215 	stw	zero,8(r2)
  804888:	12400315 	stw	r9,12(r2)
  80488c:	10000415 	stw	zero,16(r2)
  804890:	10000515 	stw	zero,20(r2)
  804894:	10000615 	stw	zero,24(r2)
  804898:	10001705 	stb	zero,92(r2)
  80489c:	10001745 	stb	zero,93(r2)
  8048a0:	10001785 	stb	zero,94(r2)
  8048a4:	100017c5 	stb	zero,95(r2)
  8048a8:	10001805 	stb	zero,96(r2)
  8048ac:	10001845 	stb	zero,97(r2)
  8048b0:	10001885 	stb	zero,98(r2)
  8048b4:	100018c5 	stb	zero,99(r2)
  8048b8:	10800715 	stw	r2,28(r2)
  8048bc:	12000815 	stw	r8,32(r2)
  8048c0:	11c00915 	stw	r7,36(r2)
  8048c4:	11800a15 	stw	r6,40(r2)
  8048c8:	11400b15 	stw	r5,44(r2)
  8048cc:	00800044 	movi	r2,1
  8048d0:	20800e15 	stw	r2,56(r4)
  8048d4:	f800283a 	ret

008048d8 <__sfmoreglue>:
  8048d8:	defffc04 	addi	sp,sp,-16
  8048dc:	dc800215 	stw	r18,8(sp)
  8048e0:	2825883a 	mov	r18,r5
  8048e4:	dc000015 	stw	r16,0(sp)
  8048e8:	01401a04 	movi	r5,104
  8048ec:	2021883a 	mov	r16,r4
  8048f0:	913fffc4 	addi	r4,r18,-1
  8048f4:	dfc00315 	stw	ra,12(sp)
  8048f8:	dc400115 	stw	r17,4(sp)
  8048fc:	080b2180 	call	80b218 <__mulsi3>
  804900:	8009883a 	mov	r4,r16
  804904:	11401d04 	addi	r5,r2,116
  804908:	1023883a 	mov	r17,r2
  80490c:	08057880 	call	805788 <_malloc_r>
  804910:	1021883a 	mov	r16,r2
  804914:	10000726 	beq	r2,zero,804934 <__sfmoreglue+0x5c>
  804918:	11000304 	addi	r4,r2,12
  80491c:	10000015 	stw	zero,0(r2)
  804920:	14800115 	stw	r18,4(r2)
  804924:	11000215 	stw	r4,8(r2)
  804928:	89801a04 	addi	r6,r17,104
  80492c:	000b883a 	mov	r5,zero
  804930:	08062640 	call	806264 <memset>
  804934:	8005883a 	mov	r2,r16
  804938:	dfc00317 	ldw	ra,12(sp)
  80493c:	dc800217 	ldw	r18,8(sp)
  804940:	dc400117 	ldw	r17,4(sp)
  804944:	dc000017 	ldw	r16,0(sp)
  804948:	dec00404 	addi	sp,sp,16
  80494c:	f800283a 	ret

00804950 <__sfp>:
  804950:	defffb04 	addi	sp,sp,-20
  804954:	00802074 	movhi	r2,129
  804958:	dc000015 	stw	r16,0(sp)
  80495c:	140ce717 	ldw	r16,13212(r2)
  804960:	dc400115 	stw	r17,4(sp)
  804964:	dfc00415 	stw	ra,16(sp)
  804968:	80800e17 	ldw	r2,56(r16)
  80496c:	dcc00315 	stw	r19,12(sp)
  804970:	dc800215 	stw	r18,8(sp)
  804974:	2023883a 	mov	r17,r4
  804978:	10003126 	beq	r2,zero,804a40 <__sfp+0xf0>
  80497c:	8100ba17 	ldw	r4,744(r16)
  804980:	8140b917 	ldw	r5,740(r16)
  804984:	04c00104 	movi	r19,4
  804988:	8400b804 	addi	r16,r16,736
  80498c:	297fffc4 	addi	r5,r5,-1
  804990:	2800050e 	bge	r5,zero,8049a8 <__sfp+0x58>
  804994:	00002406 	br	804a28 <__sfp+0xd8>
  804998:	297fffc4 	addi	r5,r5,-1
  80499c:	28bfffd8 	cmpnei	r2,r5,-1
  8049a0:	21001a04 	addi	r4,r4,104
  8049a4:	10002026 	beq	r2,zero,804a28 <__sfp+0xd8>
  8049a8:	2080030f 	ldh	r2,12(r4)
  8049ac:	103ffa1e 	bne	r2,zero,804998 <__sfp+0x48>
  8049b0:	00bffff4 	movhi	r2,65535
  8049b4:	10800044 	addi	r2,r2,1
  8049b8:	20001915 	stw	zero,100(r4)
  8049bc:	20000015 	stw	zero,0(r4)
  8049c0:	20000115 	stw	zero,4(r4)
  8049c4:	20000215 	stw	zero,8(r4)
  8049c8:	20800315 	stw	r2,12(r4)
  8049cc:	20000415 	stw	zero,16(r4)
  8049d0:	20000515 	stw	zero,20(r4)
  8049d4:	20000615 	stw	zero,24(r4)
  8049d8:	20001705 	stb	zero,92(r4)
  8049dc:	20001745 	stb	zero,93(r4)
  8049e0:	20001785 	stb	zero,94(r4)
  8049e4:	200017c5 	stb	zero,95(r4)
  8049e8:	20001805 	stb	zero,96(r4)
  8049ec:	20001845 	stb	zero,97(r4)
  8049f0:	20001885 	stb	zero,98(r4)
  8049f4:	200018c5 	stb	zero,99(r4)
  8049f8:	20000c15 	stw	zero,48(r4)
  8049fc:	20000d15 	stw	zero,52(r4)
  804a00:	20001115 	stw	zero,68(r4)
  804a04:	20001215 	stw	zero,72(r4)
  804a08:	2005883a 	mov	r2,r4
  804a0c:	dfc00417 	ldw	ra,16(sp)
  804a10:	dcc00317 	ldw	r19,12(sp)
  804a14:	dc800217 	ldw	r18,8(sp)
  804a18:	dc400117 	ldw	r17,4(sp)
  804a1c:	dc000017 	ldw	r16,0(sp)
  804a20:	dec00504 	addi	sp,sp,20
  804a24:	f800283a 	ret
  804a28:	80800017 	ldw	r2,0(r16)
  804a2c:	10000726 	beq	r2,zero,804a4c <__sfp+0xfc>
  804a30:	11000217 	ldw	r4,8(r2)
  804a34:	11400117 	ldw	r5,4(r2)
  804a38:	1021883a 	mov	r16,r2
  804a3c:	003fd306 	br	80498c <__sfp+0x3c>
  804a40:	8009883a 	mov	r4,r16
  804a44:	08047700 	call	804770 <__sinit.part.0>
  804a48:	003fcc06 	br	80497c <__sfp+0x2c>
  804a4c:	01406b04 	movi	r5,428
  804a50:	8809883a 	mov	r4,r17
  804a54:	08057880 	call	805788 <_malloc_r>
  804a58:	1025883a 	mov	r18,r2
  804a5c:	10000c26 	beq	r2,zero,804a90 <__sfp+0x140>
  804a60:	11000304 	addi	r4,r2,12
  804a64:	11000215 	stw	r4,8(r2)
  804a68:	000b883a 	mov	r5,zero
  804a6c:	10000015 	stw	zero,0(r2)
  804a70:	14c00115 	stw	r19,4(r2)
  804a74:	01806804 	movi	r6,416
  804a78:	08062640 	call	806264 <memset>
  804a7c:	1009883a 	mov	r4,r2
  804a80:	84800015 	stw	r18,0(r16)
  804a84:	014000c4 	movi	r5,3
  804a88:	9021883a 	mov	r16,r18
  804a8c:	003fc606 	br	8049a8 <__sfp+0x58>
  804a90:	80000015 	stw	zero,0(r16)
  804a94:	00800304 	movi	r2,12
  804a98:	88800015 	stw	r2,0(r17)
  804a9c:	0009883a 	mov	r4,zero
  804aa0:	003fd906 	br	804a08 <__sfp+0xb8>

00804aa4 <_cleanup>:
  804aa4:	00802074 	movhi	r2,129
  804aa8:	110ce717 	ldw	r4,13212(r2)
  804aac:	01402074 	movhi	r5,129
  804ab0:	2965cc04 	addi	r5,r5,-26832
  804ab4:	08054781 	jmpi	805478 <_fwalk_reent>

00804ab8 <__sinit>:
  804ab8:	20800e17 	ldw	r2,56(r4)
  804abc:	10000126 	beq	r2,zero,804ac4 <__sinit+0xc>
  804ac0:	f800283a 	ret
  804ac4:	08047701 	jmpi	804770 <__sinit.part.0>

00804ac8 <__sfp_lock_acquire>:
  804ac8:	f800283a 	ret

00804acc <__sfp_lock_release>:
  804acc:	f800283a 	ret

00804ad0 <__sinit_lock_acquire>:
  804ad0:	f800283a 	ret

00804ad4 <__sinit_lock_release>:
  804ad4:	f800283a 	ret

00804ad8 <__fp_lock_all>:
  804ad8:	00802074 	movhi	r2,129
  804adc:	110ce817 	ldw	r4,13216(r2)
  804ae0:	01402034 	movhi	r5,128
  804ae4:	2951d504 	addi	r5,r5,18260
  804ae8:	08053e01 	jmpi	8053e0 <_fwalk>

00804aec <__fp_unlock_all>:
  804aec:	00802074 	movhi	r2,129
  804af0:	110ce817 	ldw	r4,13216(r2)
  804af4:	01402034 	movhi	r5,128
  804af8:	2951da04 	addi	r5,r5,18280
  804afc:	08053e01 	jmpi	8053e0 <_fwalk>

00804b00 <_malloc_trim_r>:
  804b00:	defffb04 	addi	sp,sp,-20
  804b04:	dcc00315 	stw	r19,12(sp)
  804b08:	04c02074 	movhi	r19,129
  804b0c:	dc800215 	stw	r18,8(sp)
  804b10:	dc400115 	stw	r17,4(sp)
  804b14:	dc000015 	stw	r16,0(sp)
  804b18:	dfc00415 	stw	ra,16(sp)
  804b1c:	2821883a 	mov	r16,r5
  804b20:	9cc6d104 	addi	r19,r19,6980
  804b24:	2025883a 	mov	r18,r4
  804b28:	080e4040 	call	80e404 <__malloc_lock>
  804b2c:	98800217 	ldw	r2,8(r19)
  804b30:	14400117 	ldw	r17,4(r2)
  804b34:	00bfff04 	movi	r2,-4
  804b38:	88a2703a 	and	r17,r17,r2
  804b3c:	8c21c83a 	sub	r16,r17,r16
  804b40:	8403fbc4 	addi	r16,r16,4079
  804b44:	8020d33a 	srli	r16,r16,12
  804b48:	843fffc4 	addi	r16,r16,-1
  804b4c:	8020933a 	slli	r16,r16,12
  804b50:	80840008 	cmpgei	r2,r16,4096
  804b54:	10000626 	beq	r2,zero,804b70 <_malloc_trim_r+0x70>
  804b58:	000b883a 	mov	r5,zero
  804b5c:	9009883a 	mov	r4,r18
  804b60:	0807c540 	call	807c54 <_sbrk_r>
  804b64:	98c00217 	ldw	r3,8(r19)
  804b68:	1c47883a 	add	r3,r3,r17
  804b6c:	10c00a26 	beq	r2,r3,804b98 <_malloc_trim_r+0x98>
  804b70:	9009883a 	mov	r4,r18
  804b74:	080e4280 	call	80e428 <__malloc_unlock>
  804b78:	0005883a 	mov	r2,zero
  804b7c:	dfc00417 	ldw	ra,16(sp)
  804b80:	dcc00317 	ldw	r19,12(sp)
  804b84:	dc800217 	ldw	r18,8(sp)
  804b88:	dc400117 	ldw	r17,4(sp)
  804b8c:	dc000017 	ldw	r16,0(sp)
  804b90:	dec00504 	addi	sp,sp,20
  804b94:	f800283a 	ret
  804b98:	040bc83a 	sub	r5,zero,r16
  804b9c:	9009883a 	mov	r4,r18
  804ba0:	0807c540 	call	807c54 <_sbrk_r>
  804ba4:	10bfffd8 	cmpnei	r2,r2,-1
  804ba8:	10000d26 	beq	r2,zero,804be0 <_malloc_trim_r+0xe0>
  804bac:	00802074 	movhi	r2,129
  804bb0:	10943917 	ldw	r2,20708(r2)
  804bb4:	98c00217 	ldw	r3,8(r19)
  804bb8:	8c23c83a 	sub	r17,r17,r16
  804bbc:	8c400054 	ori	r17,r17,1
  804bc0:	1421c83a 	sub	r16,r2,r16
  804bc4:	1c400115 	stw	r17,4(r3)
  804bc8:	00802074 	movhi	r2,129
  804bcc:	9009883a 	mov	r4,r18
  804bd0:	14143915 	stw	r16,20708(r2)
  804bd4:	080e4280 	call	80e428 <__malloc_unlock>
  804bd8:	00800044 	movi	r2,1
  804bdc:	003fe706 	br	804b7c <_malloc_trim_r+0x7c>
  804be0:	000b883a 	mov	r5,zero
  804be4:	9009883a 	mov	r4,r18
  804be8:	0807c540 	call	807c54 <_sbrk_r>
  804bec:	99000217 	ldw	r4,8(r19)
  804bf0:	1107c83a 	sub	r3,r2,r4
  804bf4:	19400410 	cmplti	r5,r3,16
  804bf8:	283fdd1e 	bne	r5,zero,804b70 <_malloc_trim_r+0x70>
  804bfc:	01402074 	movhi	r5,129
  804c00:	294ce917 	ldw	r5,13220(r5)
  804c04:	18c00054 	ori	r3,r3,1
  804c08:	20c00115 	stw	r3,4(r4)
  804c0c:	1145c83a 	sub	r2,r2,r5
  804c10:	01402074 	movhi	r5,129
  804c14:	28943915 	stw	r2,20708(r5)
  804c18:	003fd506 	br	804b70 <_malloc_trim_r+0x70>

00804c1c <_free_r>:
  804c1c:	28004f26 	beq	r5,zero,804d5c <_free_r+0x140>
  804c20:	defffd04 	addi	sp,sp,-12
  804c24:	dc400115 	stw	r17,4(sp)
  804c28:	dc000015 	stw	r16,0(sp)
  804c2c:	2023883a 	mov	r17,r4
  804c30:	2821883a 	mov	r16,r5
  804c34:	dfc00215 	stw	ra,8(sp)
  804c38:	080e4040 	call	80e404 <__malloc_lock>
  804c3c:	81ffff17 	ldw	r7,-4(r16)
  804c40:	00bfff84 	movi	r2,-2
  804c44:	80fffe04 	addi	r3,r16,-8
  804c48:	3884703a 	and	r2,r7,r2
  804c4c:	01002074 	movhi	r4,129
  804c50:	188d883a 	add	r6,r3,r2
  804c54:	2106d104 	addi	r4,r4,6980
  804c58:	31400117 	ldw	r5,4(r6)
  804c5c:	22000217 	ldw	r8,8(r4)
  804c60:	027fff04 	movi	r9,-4
  804c64:	2a4a703a 	and	r5,r5,r9
  804c68:	41806426 	beq	r8,r6,804dfc <_free_r+0x1e0>
  804c6c:	31400115 	stw	r5,4(r6)
  804c70:	39c0004c 	andi	r7,r7,1
  804c74:	3151883a 	add	r8,r6,r5
  804c78:	3800281e 	bne	r7,zero,804d1c <_free_r+0x100>
  804c7c:	82bffe17 	ldw	r10,-8(r16)
  804c80:	42000117 	ldw	r8,4(r8)
  804c84:	01c02074 	movhi	r7,129
  804c88:	1a87c83a 	sub	r3,r3,r10
  804c8c:	1a400217 	ldw	r9,8(r3)
  804c90:	39c6d304 	addi	r7,r7,6988
  804c94:	1285883a 	add	r2,r2,r10
  804c98:	4200004c 	andi	r8,r8,1
  804c9c:	49c04c26 	beq	r9,r7,804dd0 <_free_r+0x1b4>
  804ca0:	1a800317 	ldw	r10,12(r3)
  804ca4:	4a800315 	stw	r10,12(r9)
  804ca8:	52400215 	stw	r9,8(r10)
  804cac:	40007126 	beq	r8,zero,804e74 <_free_r+0x258>
  804cb0:	11400054 	ori	r5,r2,1
  804cb4:	19400115 	stw	r5,4(r3)
  804cb8:	30800015 	stw	r2,0(r6)
  804cbc:	11408028 	cmpgeui	r5,r2,512
  804cc0:	28002c1e 	bne	r5,zero,804d74 <_free_r+0x158>
  804cc4:	100ad0fa 	srli	r5,r2,3
  804cc8:	100cd17a 	srli	r6,r2,5
  804ccc:	00800044 	movi	r2,1
  804cd0:	29400044 	addi	r5,r5,1
  804cd4:	280a90fa 	slli	r5,r5,3
  804cd8:	21c00117 	ldw	r7,4(r4)
  804cdc:	1184983a 	sll	r2,r2,r6
  804ce0:	214b883a 	add	r5,r4,r5
  804ce4:	29800017 	ldw	r6,0(r5)
  804ce8:	11c4b03a 	or	r2,r2,r7
  804cec:	29fffe04 	addi	r7,r5,-8
  804cf0:	19c00315 	stw	r7,12(r3)
  804cf4:	19800215 	stw	r6,8(r3)
  804cf8:	20800115 	stw	r2,4(r4)
  804cfc:	28c00015 	stw	r3,0(r5)
  804d00:	30c00315 	stw	r3,12(r6)
  804d04:	8809883a 	mov	r4,r17
  804d08:	dfc00217 	ldw	ra,8(sp)
  804d0c:	dc400117 	ldw	r17,4(sp)
  804d10:	dc000017 	ldw	r16,0(sp)
  804d14:	dec00304 	addi	sp,sp,12
  804d18:	080e4281 	jmpi	80e428 <__malloc_unlock>
  804d1c:	41c00117 	ldw	r7,4(r8)
  804d20:	39c0004c 	andi	r7,r7,1
  804d24:	38000e1e 	bne	r7,zero,804d60 <_free_r+0x144>
  804d28:	01c02074 	movhi	r7,129
  804d2c:	1145883a 	add	r2,r2,r5
  804d30:	39c6d304 	addi	r7,r7,6988
  804d34:	31400217 	ldw	r5,8(r6)
  804d38:	12400054 	ori	r9,r2,1
  804d3c:	1891883a 	add	r8,r3,r2
  804d40:	29c05226 	beq	r5,r7,804e8c <_free_r+0x270>
  804d44:	31800317 	ldw	r6,12(r6)
  804d48:	29800315 	stw	r6,12(r5)
  804d4c:	31400215 	stw	r5,8(r6)
  804d50:	1a400115 	stw	r9,4(r3)
  804d54:	40800015 	stw	r2,0(r8)
  804d58:	003fd806 	br	804cbc <_free_r+0xa0>
  804d5c:	f800283a 	ret
  804d60:	11400054 	ori	r5,r2,1
  804d64:	817fff15 	stw	r5,-4(r16)
  804d68:	30800015 	stw	r2,0(r6)
  804d6c:	11408028 	cmpgeui	r5,r2,512
  804d70:	283fd426 	beq	r5,zero,804cc4 <_free_r+0xa8>
  804d74:	100ad27a 	srli	r5,r2,9
  804d78:	29800168 	cmpgeui	r6,r5,5
  804d7c:	3000341e 	bne	r6,zero,804e50 <_free_r+0x234>
  804d80:	100ad1ba 	srli	r5,r2,6
  804d84:	29800e44 	addi	r6,r5,57
  804d88:	300c90fa 	slli	r6,r6,3
  804d8c:	29c00e04 	addi	r7,r5,56
  804d90:	218d883a 	add	r6,r4,r6
  804d94:	31400017 	ldw	r5,0(r6)
  804d98:	31bffe04 	addi	r6,r6,-8
  804d9c:	31404226 	beq	r6,r5,804ea8 <_free_r+0x28c>
  804da0:	01ffff04 	movi	r7,-4
  804da4:	29000117 	ldw	r4,4(r5)
  804da8:	21c8703a 	and	r4,r4,r7
  804dac:	1100022e 	bgeu	r2,r4,804db8 <_free_r+0x19c>
  804db0:	29400217 	ldw	r5,8(r5)
  804db4:	317ffb1e 	bne	r6,r5,804da4 <_free_r+0x188>
  804db8:	29800317 	ldw	r6,12(r5)
  804dbc:	19800315 	stw	r6,12(r3)
  804dc0:	19400215 	stw	r5,8(r3)
  804dc4:	30c00215 	stw	r3,8(r6)
  804dc8:	28c00315 	stw	r3,12(r5)
  804dcc:	003fcd06 	br	804d04 <_free_r+0xe8>
  804dd0:	40004d1e 	bne	r8,zero,804f08 <_free_r+0x2ec>
  804dd4:	31000317 	ldw	r4,12(r6)
  804dd8:	31800217 	ldw	r6,8(r6)
  804ddc:	2885883a 	add	r2,r5,r2
  804de0:	11400054 	ori	r5,r2,1
  804de4:	31000315 	stw	r4,12(r6)
  804de8:	21800215 	stw	r6,8(r4)
  804dec:	19400115 	stw	r5,4(r3)
  804df0:	1887883a 	add	r3,r3,r2
  804df4:	18800015 	stw	r2,0(r3)
  804df8:	003fc206 	br	804d04 <_free_r+0xe8>
  804dfc:	39c0004c 	andi	r7,r7,1
  804e00:	1145883a 	add	r2,r2,r5
  804e04:	3800071e 	bne	r7,zero,804e24 <_free_r+0x208>
  804e08:	81fffe17 	ldw	r7,-8(r16)
  804e0c:	19c7c83a 	sub	r3,r3,r7
  804e10:	19400317 	ldw	r5,12(r3)
  804e14:	19800217 	ldw	r6,8(r3)
  804e18:	11c5883a 	add	r2,r2,r7
  804e1c:	31400315 	stw	r5,12(r6)
  804e20:	29800215 	stw	r6,8(r5)
  804e24:	01402074 	movhi	r5,129
  804e28:	11800054 	ori	r6,r2,1
  804e2c:	294cea17 	ldw	r5,13224(r5)
  804e30:	19800115 	stw	r6,4(r3)
  804e34:	20c00215 	stw	r3,8(r4)
  804e38:	117fb236 	bltu	r2,r5,804d04 <_free_r+0xe8>
  804e3c:	00802074 	movhi	r2,129
  804e40:	11542d17 	ldw	r5,20660(r2)
  804e44:	8809883a 	mov	r4,r17
  804e48:	0804b000 	call	804b00 <_malloc_trim_r>
  804e4c:	003fad06 	br	804d04 <_free_r+0xe8>
  804e50:	29800568 	cmpgeui	r6,r5,21
  804e54:	30000926 	beq	r6,zero,804e7c <_free_r+0x260>
  804e58:	29801568 	cmpgeui	r6,r5,85
  804e5c:	3000191e 	bne	r6,zero,804ec4 <_free_r+0x2a8>
  804e60:	100ad33a 	srli	r5,r2,12
  804e64:	29801bc4 	addi	r6,r5,111
  804e68:	300c90fa 	slli	r6,r6,3
  804e6c:	29c01b84 	addi	r7,r5,110
  804e70:	003fc706 	br	804d90 <_free_r+0x174>
  804e74:	1145883a 	add	r2,r2,r5
  804e78:	003fae06 	br	804d34 <_free_r+0x118>
  804e7c:	29801704 	addi	r6,r5,92
  804e80:	300c90fa 	slli	r6,r6,3
  804e84:	29c016c4 	addi	r7,r5,91
  804e88:	003fc106 	br	804d90 <_free_r+0x174>
  804e8c:	20c00515 	stw	r3,20(r4)
  804e90:	20c00415 	stw	r3,16(r4)
  804e94:	19c00315 	stw	r7,12(r3)
  804e98:	19c00215 	stw	r7,8(r3)
  804e9c:	1a400115 	stw	r9,4(r3)
  804ea0:	40800015 	stw	r2,0(r8)
  804ea4:	003f9706 	br	804d04 <_free_r+0xe8>
  804ea8:	380fd0ba 	srai	r7,r7,2
  804eac:	00800044 	movi	r2,1
  804eb0:	22000117 	ldw	r8,4(r4)
  804eb4:	11ce983a 	sll	r7,r2,r7
  804eb8:	3a0eb03a 	or	r7,r7,r8
  804ebc:	21c00115 	stw	r7,4(r4)
  804ec0:	003fbe06 	br	804dbc <_free_r+0x1a0>
  804ec4:	29805568 	cmpgeui	r6,r5,341
  804ec8:	3000051e 	bne	r6,zero,804ee0 <_free_r+0x2c4>
  804ecc:	100ad3fa 	srli	r5,r2,15
  804ed0:	29801e04 	addi	r6,r5,120
  804ed4:	300c90fa 	slli	r6,r6,3
  804ed8:	29c01dc4 	addi	r7,r5,119
  804edc:	003fac06 	br	804d90 <_free_r+0x174>
  804ee0:	29415568 	cmpgeui	r5,r5,1365
  804ee4:	2800051e 	bne	r5,zero,804efc <_free_r+0x2e0>
  804ee8:	100ad4ba 	srli	r5,r2,18
  804eec:	29801f44 	addi	r6,r5,125
  804ef0:	300c90fa 	slli	r6,r6,3
  804ef4:	29c01f04 	addi	r7,r5,124
  804ef8:	003fa506 	br	804d90 <_free_r+0x174>
  804efc:	0180fe04 	movi	r6,1016
  804f00:	01c01f84 	movi	r7,126
  804f04:	003fa206 	br	804d90 <_free_r+0x174>
  804f08:	11000054 	ori	r4,r2,1
  804f0c:	19000115 	stw	r4,4(r3)
  804f10:	30800015 	stw	r2,0(r6)
  804f14:	003f7b06 	br	804d04 <_free_r+0xe8>

00804f18 <__sfvwrite_r>:
  804f18:	30800217 	ldw	r2,8(r6)
  804f1c:	1000a326 	beq	r2,zero,8051ac <__sfvwrite_r+0x294>
  804f20:	29c0030b 	ldhu	r7,12(r5)
  804f24:	defff404 	addi	sp,sp,-48
  804f28:	ddc00915 	stw	r23,36(sp)
  804f2c:	dd400715 	stw	r21,28(sp)
  804f30:	dc000215 	stw	r16,8(sp)
  804f34:	dfc00b15 	stw	ra,44(sp)
  804f38:	df000a15 	stw	fp,40(sp)
  804f3c:	dd800815 	stw	r22,32(sp)
  804f40:	dd000615 	stw	r20,24(sp)
  804f44:	dcc00515 	stw	r19,20(sp)
  804f48:	dc800415 	stw	r18,16(sp)
  804f4c:	dc400315 	stw	r17,12(sp)
  804f50:	3880020c 	andi	r2,r7,8
  804f54:	302f883a 	mov	r23,r6
  804f58:	202b883a 	mov	r21,r4
  804f5c:	2821883a 	mov	r16,r5
  804f60:	10002226 	beq	r2,zero,804fec <__sfvwrite_r+0xd4>
  804f64:	28800417 	ldw	r2,16(r5)
  804f68:	10002026 	beq	r2,zero,804fec <__sfvwrite_r+0xd4>
  804f6c:	3880008c 	andi	r2,r7,2
  804f70:	bc400017 	ldw	r17,0(r23)
  804f74:	10002526 	beq	r2,zero,80500c <__sfvwrite_r+0xf4>
  804f78:	80800917 	ldw	r2,36(r16)
  804f7c:	81400717 	ldw	r5,28(r16)
  804f80:	05200034 	movhi	r20,32768
  804f84:	0027883a 	mov	r19,zero
  804f88:	0025883a 	mov	r18,zero
  804f8c:	a53f0004 	addi	r20,r20,-1024
  804f90:	980d883a 	mov	r6,r19
  804f94:	a809883a 	mov	r4,r21
  804f98:	90001026 	beq	r18,zero,804fdc <__sfvwrite_r+0xc4>
  804f9c:	900f883a 	mov	r7,r18
  804fa0:	a480012e 	bgeu	r20,r18,804fa8 <__sfvwrite_r+0x90>
  804fa4:	a00f883a 	mov	r7,r20
  804fa8:	103ee83a 	callr	r2
  804fac:	00807a0e 	bge	zero,r2,805198 <__sfvwrite_r+0x280>
  804fb0:	b9000217 	ldw	r4,8(r23)
  804fb4:	98a7883a 	add	r19,r19,r2
  804fb8:	90a5c83a 	sub	r18,r18,r2
  804fbc:	2085c83a 	sub	r2,r4,r2
  804fc0:	b8800215 	stw	r2,8(r23)
  804fc4:	10006326 	beq	r2,zero,805154 <__sfvwrite_r+0x23c>
  804fc8:	80800917 	ldw	r2,36(r16)
  804fcc:	81400717 	ldw	r5,28(r16)
  804fd0:	980d883a 	mov	r6,r19
  804fd4:	a809883a 	mov	r4,r21
  804fd8:	903ff01e 	bne	r18,zero,804f9c <__sfvwrite_r+0x84>
  804fdc:	8cc00017 	ldw	r19,0(r17)
  804fe0:	8c800117 	ldw	r18,4(r17)
  804fe4:	8c400204 	addi	r17,r17,8
  804fe8:	003fe906 	br	804f90 <__sfvwrite_r+0x78>
  804fec:	800b883a 	mov	r5,r16
  804ff0:	a809883a 	mov	r4,r21
  804ff4:	080297c0 	call	80297c <__swsetup_r>
  804ff8:	1000f71e 	bne	r2,zero,8053d8 <__sfvwrite_r+0x4c0>
  804ffc:	81c0030b 	ldhu	r7,12(r16)
  805000:	bc400017 	ldw	r17,0(r23)
  805004:	3880008c 	andi	r2,r7,2
  805008:	103fdb1e 	bne	r2,zero,804f78 <__sfvwrite_r+0x60>
  80500c:	3880004c 	andi	r2,r7,1
  805010:	84800217 	ldw	r18,8(r16)
  805014:	82000017 	ldw	r8,0(r16)
  805018:	1000661e 	bne	r2,zero,8051b4 <__sfvwrite_r+0x29c>
  80501c:	00a00034 	movhi	r2,32768
  805020:	10bfff84 	addi	r2,r2,-2
  805024:	00e00034 	movhi	r3,32768
  805028:	d8800015 	stw	r2,0(sp)
  80502c:	18bfffc4 	addi	r2,r3,-1
  805030:	0039883a 	mov	fp,zero
  805034:	0027883a 	mov	r19,zero
  805038:	d8800115 	stw	r2,4(sp)
  80503c:	98004126 	beq	r19,zero,805144 <__sfvwrite_r+0x22c>
  805040:	3880800c 	andi	r2,r7,512
  805044:	10009726 	beq	r2,zero,8052a4 <__sfvwrite_r+0x38c>
  805048:	902d883a 	mov	r22,r18
  80504c:	9c80be36 	bltu	r19,r18,805348 <__sfvwrite_r+0x430>
  805050:	3881200c 	andi	r2,r7,1152
  805054:	10002626 	beq	r2,zero,8050f0 <__sfvwrite_r+0x1d8>
  805058:	81800517 	ldw	r6,20(r16)
  80505c:	81400417 	ldw	r5,16(r16)
  805060:	98800044 	addi	r2,r19,1
  805064:	3189883a 	add	r4,r6,r6
  805068:	2189883a 	add	r4,r4,r6
  80506c:	2028d7fa 	srli	r20,r4,31
  805070:	4165c83a 	sub	r18,r8,r5
  805074:	1485883a 	add	r2,r2,r18
  805078:	a109883a 	add	r4,r20,r4
  80507c:	2029d07a 	srai	r20,r4,1
  805080:	a00d883a 	mov	r6,r20
  805084:	a080022e 	bgeu	r20,r2,805090 <__sfvwrite_r+0x178>
  805088:	1029883a 	mov	r20,r2
  80508c:	100d883a 	mov	r6,r2
  805090:	39c1000c 	andi	r7,r7,1024
  805094:	3800c026 	beq	r7,zero,805398 <__sfvwrite_r+0x480>
  805098:	a809883a 	mov	r4,r21
  80509c:	300b883a 	mov	r5,r6
  8050a0:	08057880 	call	805788 <_malloc_r>
  8050a4:	1009883a 	mov	r4,r2
  8050a8:	1000c726 	beq	r2,zero,8053c8 <__sfvwrite_r+0x4b0>
  8050ac:	81400417 	ldw	r5,16(r16)
  8050b0:	900d883a 	mov	r6,r18
  8050b4:	08060380 	call	806038 <memcpy>
  8050b8:	1009883a 	mov	r4,r2
  8050bc:	8080030b 	ldhu	r2,12(r16)
  8050c0:	00fedfc4 	movi	r3,-1153
  8050c4:	10c4703a 	and	r2,r2,r3
  8050c8:	10802014 	ori	r2,r2,128
  8050cc:	8080030d 	sth	r2,12(r16)
  8050d0:	2491883a 	add	r8,r4,r18
  8050d4:	a485c83a 	sub	r2,r20,r18
  8050d8:	81000415 	stw	r4,16(r16)
  8050dc:	82000015 	stw	r8,0(r16)
  8050e0:	85000515 	stw	r20,20(r16)
  8050e4:	9825883a 	mov	r18,r19
  8050e8:	80800215 	stw	r2,8(r16)
  8050ec:	982d883a 	mov	r22,r19
  8050f0:	4009883a 	mov	r4,r8
  8050f4:	b00d883a 	mov	r6,r22
  8050f8:	e00b883a 	mov	r5,fp
  8050fc:	08061380 	call	806138 <memmove>
  805100:	81000217 	ldw	r4,8(r16)
  805104:	80800017 	ldw	r2,0(r16)
  805108:	9829883a 	mov	r20,r19
  80510c:	24a5c83a 	sub	r18,r4,r18
  805110:	1585883a 	add	r2,r2,r22
  805114:	84800215 	stw	r18,8(r16)
  805118:	80800015 	stw	r2,0(r16)
  80511c:	0027883a 	mov	r19,zero
  805120:	b8800217 	ldw	r2,8(r23)
  805124:	e539883a 	add	fp,fp,r20
  805128:	1529c83a 	sub	r20,r2,r20
  80512c:	bd000215 	stw	r20,8(r23)
  805130:	a0000826 	beq	r20,zero,805154 <__sfvwrite_r+0x23c>
  805134:	81c0030b 	ldhu	r7,12(r16)
  805138:	84800217 	ldw	r18,8(r16)
  80513c:	82000017 	ldw	r8,0(r16)
  805140:	983fbf1e 	bne	r19,zero,805040 <__sfvwrite_r+0x128>
  805144:	8f000017 	ldw	fp,0(r17)
  805148:	8cc00117 	ldw	r19,4(r17)
  80514c:	8c400204 	addi	r17,r17,8
  805150:	003fba06 	br	80503c <__sfvwrite_r+0x124>
  805154:	0005883a 	mov	r2,zero
  805158:	dfc00b17 	ldw	ra,44(sp)
  80515c:	df000a17 	ldw	fp,40(sp)
  805160:	ddc00917 	ldw	r23,36(sp)
  805164:	dd800817 	ldw	r22,32(sp)
  805168:	dd400717 	ldw	r21,28(sp)
  80516c:	dd000617 	ldw	r20,24(sp)
  805170:	dcc00517 	ldw	r19,20(sp)
  805174:	dc800417 	ldw	r18,16(sp)
  805178:	dc400317 	ldw	r17,12(sp)
  80517c:	dc000217 	ldw	r16,8(sp)
  805180:	dec00c04 	addi	sp,sp,48
  805184:	f800283a 	ret
  805188:	800b883a 	mov	r5,r16
  80518c:	a809883a 	mov	r4,r21
  805190:	08046700 	call	804670 <_fflush_r>
  805194:	10002026 	beq	r2,zero,805218 <__sfvwrite_r+0x300>
  805198:	8080030b 	ldhu	r2,12(r16)
  80519c:	10801014 	ori	r2,r2,64
  8051a0:	8080030d 	sth	r2,12(r16)
  8051a4:	00bfffc4 	movi	r2,-1
  8051a8:	003feb06 	br	805158 <__sfvwrite_r+0x240>
  8051ac:	0005883a 	mov	r2,zero
  8051b0:	f800283a 	ret
  8051b4:	002d883a 	mov	r22,zero
  8051b8:	0027883a 	mov	r19,zero
  8051bc:	0005883a 	mov	r2,zero
  8051c0:	0039883a 	mov	fp,zero
  8051c4:	b0001d26 	beq	r22,zero,80523c <__sfvwrite_r+0x324>
  8051c8:	10002026 	beq	r2,zero,80524c <__sfvwrite_r+0x334>
  8051cc:	9829883a 	mov	r20,r19
  8051d0:	b500012e 	bgeu	r22,r20,8051d8 <__sfvwrite_r+0x2c0>
  8051d4:	b029883a 	mov	r20,r22
  8051d8:	80800417 	ldw	r2,16(r16)
  8051dc:	81c00517 	ldw	r7,20(r16)
  8051e0:	1200022e 	bgeu	r2,r8,8051ec <__sfvwrite_r+0x2d4>
  8051e4:	3ca5883a 	add	r18,r7,r18
  8051e8:	95002216 	blt	r18,r20,805274 <__sfvwrite_r+0x35c>
  8051ec:	a1c05916 	blt	r20,r7,805354 <__sfvwrite_r+0x43c>
  8051f0:	80800917 	ldw	r2,36(r16)
  8051f4:	81400717 	ldw	r5,28(r16)
  8051f8:	e00d883a 	mov	r6,fp
  8051fc:	a809883a 	mov	r4,r21
  805200:	103ee83a 	callr	r2
  805204:	1025883a 	mov	r18,r2
  805208:	00bfe30e 	bge	zero,r2,805198 <__sfvwrite_r+0x280>
  80520c:	9ca7c83a 	sub	r19,r19,r18
  805210:	983fdd26 	beq	r19,zero,805188 <__sfvwrite_r+0x270>
  805214:	00800044 	movi	r2,1
  805218:	b9800217 	ldw	r6,8(r23)
  80521c:	e4b9883a 	add	fp,fp,r18
  805220:	b4adc83a 	sub	r22,r22,r18
  805224:	34a5c83a 	sub	r18,r6,r18
  805228:	bc800215 	stw	r18,8(r23)
  80522c:	903fc926 	beq	r18,zero,805154 <__sfvwrite_r+0x23c>
  805230:	84800217 	ldw	r18,8(r16)
  805234:	82000017 	ldw	r8,0(r16)
  805238:	b03fe31e 	bne	r22,zero,8051c8 <__sfvwrite_r+0x2b0>
  80523c:	8d800117 	ldw	r22,4(r17)
  805240:	8f000017 	ldw	fp,0(r17)
  805244:	8c400204 	addi	r17,r17,8
  805248:	b03ffc26 	beq	r22,zero,80523c <__sfvwrite_r+0x324>
  80524c:	b00d883a 	mov	r6,r22
  805250:	01400284 	movi	r5,10
  805254:	e009883a 	mov	r4,fp
  805258:	da000015 	stw	r8,0(sp)
  80525c:	0805f680 	call	805f68 <memchr>
  805260:	da000017 	ldw	r8,0(sp)
  805264:	10004926 	beq	r2,zero,80538c <__sfvwrite_r+0x474>
  805268:	10800044 	addi	r2,r2,1
  80526c:	1727c83a 	sub	r19,r2,fp
  805270:	003fd606 	br	8051cc <__sfvwrite_r+0x2b4>
  805274:	e00b883a 	mov	r5,fp
  805278:	4009883a 	mov	r4,r8
  80527c:	900d883a 	mov	r6,r18
  805280:	08061380 	call	806138 <memmove>
  805284:	80800017 	ldw	r2,0(r16)
  805288:	800b883a 	mov	r5,r16
  80528c:	a809883a 	mov	r4,r21
  805290:	1485883a 	add	r2,r2,r18
  805294:	80800015 	stw	r2,0(r16)
  805298:	08046700 	call	804670 <_fflush_r>
  80529c:	103fdb26 	beq	r2,zero,80520c <__sfvwrite_r+0x2f4>
  8052a0:	003fbd06 	br	805198 <__sfvwrite_r+0x280>
  8052a4:	80800417 	ldw	r2,16(r16)
  8052a8:	12001436 	bltu	r2,r8,8052fc <__sfvwrite_r+0x3e4>
  8052ac:	85000517 	ldw	r20,20(r16)
  8052b0:	9d001236 	bltu	r19,r20,8052fc <__sfvwrite_r+0x3e4>
  8052b4:	d8800017 	ldw	r2,0(sp)
  8052b8:	14c0322e 	bgeu	r2,r19,805384 <__sfvwrite_r+0x46c>
  8052bc:	d9000117 	ldw	r4,4(sp)
  8052c0:	a00b883a 	mov	r5,r20
  8052c4:	080b0640 	call	80b064 <__divsi3>
  8052c8:	a00b883a 	mov	r5,r20
  8052cc:	1009883a 	mov	r4,r2
  8052d0:	080b2180 	call	80b218 <__mulsi3>
  8052d4:	82000917 	ldw	r8,36(r16)
  8052d8:	81400717 	ldw	r5,28(r16)
  8052dc:	100f883a 	mov	r7,r2
  8052e0:	e00d883a 	mov	r6,fp
  8052e4:	a809883a 	mov	r4,r21
  8052e8:	403ee83a 	callr	r8
  8052ec:	1029883a 	mov	r20,r2
  8052f0:	00bfa90e 	bge	zero,r2,805198 <__sfvwrite_r+0x280>
  8052f4:	9d27c83a 	sub	r19,r19,r20
  8052f8:	003f8906 	br	805120 <__sfvwrite_r+0x208>
  8052fc:	9029883a 	mov	r20,r18
  805300:	9c80012e 	bgeu	r19,r18,805308 <__sfvwrite_r+0x3f0>
  805304:	9829883a 	mov	r20,r19
  805308:	4009883a 	mov	r4,r8
  80530c:	a00d883a 	mov	r6,r20
  805310:	e00b883a 	mov	r5,fp
  805314:	08061380 	call	806138 <memmove>
  805318:	80800217 	ldw	r2,8(r16)
  80531c:	81000017 	ldw	r4,0(r16)
  805320:	1505c83a 	sub	r2,r2,r20
  805324:	2509883a 	add	r4,r4,r20
  805328:	80800215 	stw	r2,8(r16)
  80532c:	81000015 	stw	r4,0(r16)
  805330:	103ff01e 	bne	r2,zero,8052f4 <__sfvwrite_r+0x3dc>
  805334:	800b883a 	mov	r5,r16
  805338:	a809883a 	mov	r4,r21
  80533c:	08046700 	call	804670 <_fflush_r>
  805340:	103fec26 	beq	r2,zero,8052f4 <__sfvwrite_r+0x3dc>
  805344:	003f9406 	br	805198 <__sfvwrite_r+0x280>
  805348:	9825883a 	mov	r18,r19
  80534c:	982d883a 	mov	r22,r19
  805350:	003f6706 	br	8050f0 <__sfvwrite_r+0x1d8>
  805354:	4009883a 	mov	r4,r8
  805358:	a00d883a 	mov	r6,r20
  80535c:	e00b883a 	mov	r5,fp
  805360:	08061380 	call	806138 <memmove>
  805364:	81000217 	ldw	r4,8(r16)
  805368:	80800017 	ldw	r2,0(r16)
  80536c:	a025883a 	mov	r18,r20
  805370:	2509c83a 	sub	r4,r4,r20
  805374:	1505883a 	add	r2,r2,r20
  805378:	81000215 	stw	r4,8(r16)
  80537c:	80800015 	stw	r2,0(r16)
  805380:	003fa206 	br	80520c <__sfvwrite_r+0x2f4>
  805384:	9809883a 	mov	r4,r19
  805388:	003fcd06 	br	8052c0 <__sfvwrite_r+0x3a8>
  80538c:	b5000044 	addi	r20,r22,1
  805390:	a027883a 	mov	r19,r20
  805394:	003f8e06 	br	8051d0 <__sfvwrite_r+0x2b8>
  805398:	a809883a 	mov	r4,r21
  80539c:	08076f00 	call	8076f0 <_realloc_r>
  8053a0:	1009883a 	mov	r4,r2
  8053a4:	103f4a1e 	bne	r2,zero,8050d0 <__sfvwrite_r+0x1b8>
  8053a8:	81400417 	ldw	r5,16(r16)
  8053ac:	a809883a 	mov	r4,r21
  8053b0:	0804c1c0 	call	804c1c <_free_r>
  8053b4:	8080030b 	ldhu	r2,12(r16)
  8053b8:	00c00304 	movi	r3,12
  8053bc:	a8c00015 	stw	r3,0(r21)
  8053c0:	10bfdfcc 	andi	r2,r2,65407
  8053c4:	003f7506 	br	80519c <__sfvwrite_r+0x284>
  8053c8:	00c00304 	movi	r3,12
  8053cc:	8080030b 	ldhu	r2,12(r16)
  8053d0:	a8c00015 	stw	r3,0(r21)
  8053d4:	003f7106 	br	80519c <__sfvwrite_r+0x284>
  8053d8:	00bfffc4 	movi	r2,-1
  8053dc:	003f5e06 	br	805158 <__sfvwrite_r+0x240>

008053e0 <_fwalk>:
  8053e0:	defffa04 	addi	sp,sp,-24
  8053e4:	dd000415 	stw	r20,16(sp)
  8053e8:	dcc00315 	stw	r19,12(sp)
  8053ec:	dc800215 	stw	r18,8(sp)
  8053f0:	dfc00515 	stw	ra,20(sp)
  8053f4:	dc400115 	stw	r17,4(sp)
  8053f8:	dc000015 	stw	r16,0(sp)
  8053fc:	2827883a 	mov	r19,r5
  805400:	2480b804 	addi	r18,r4,736
  805404:	0029883a 	mov	r20,zero
  805408:	94400117 	ldw	r17,4(r18)
  80540c:	94000217 	ldw	r16,8(r18)
  805410:	8c7fffc4 	addi	r17,r17,-1
  805414:	88000d16 	blt	r17,zero,80544c <_fwalk+0x6c>
  805418:	8080030b 	ldhu	r2,12(r16)
  80541c:	8c7fffc4 	addi	r17,r17,-1
  805420:	108000b0 	cmpltui	r2,r2,2
  805424:	1000061e 	bne	r2,zero,805440 <_fwalk+0x60>
  805428:	8080038f 	ldh	r2,14(r16)
  80542c:	8009883a 	mov	r4,r16
  805430:	10bfffe0 	cmpeqi	r2,r2,-1
  805434:	1000021e 	bne	r2,zero,805440 <_fwalk+0x60>
  805438:	983ee83a 	callr	r19
  80543c:	a0a8b03a 	or	r20,r20,r2
  805440:	88bfffd8 	cmpnei	r2,r17,-1
  805444:	84001a04 	addi	r16,r16,104
  805448:	103ff31e 	bne	r2,zero,805418 <_fwalk+0x38>
  80544c:	94800017 	ldw	r18,0(r18)
  805450:	903fed1e 	bne	r18,zero,805408 <_fwalk+0x28>
  805454:	a005883a 	mov	r2,r20
  805458:	dfc00517 	ldw	ra,20(sp)
  80545c:	dd000417 	ldw	r20,16(sp)
  805460:	dcc00317 	ldw	r19,12(sp)
  805464:	dc800217 	ldw	r18,8(sp)
  805468:	dc400117 	ldw	r17,4(sp)
  80546c:	dc000017 	ldw	r16,0(sp)
  805470:	dec00604 	addi	sp,sp,24
  805474:	f800283a 	ret

00805478 <_fwalk_reent>:
  805478:	defff904 	addi	sp,sp,-28
  80547c:	dd400515 	stw	r21,20(sp)
  805480:	dd000415 	stw	r20,16(sp)
  805484:	dcc00315 	stw	r19,12(sp)
  805488:	dc800215 	stw	r18,8(sp)
  80548c:	dfc00615 	stw	ra,24(sp)
  805490:	dc400115 	stw	r17,4(sp)
  805494:	dc000015 	stw	r16,0(sp)
  805498:	202b883a 	mov	r21,r4
  80549c:	2827883a 	mov	r19,r5
  8054a0:	2480b804 	addi	r18,r4,736
  8054a4:	0029883a 	mov	r20,zero
  8054a8:	94400117 	ldw	r17,4(r18)
  8054ac:	94000217 	ldw	r16,8(r18)
  8054b0:	8c7fffc4 	addi	r17,r17,-1
  8054b4:	88000e16 	blt	r17,zero,8054f0 <_fwalk_reent+0x78>
  8054b8:	8080030b 	ldhu	r2,12(r16)
  8054bc:	8c7fffc4 	addi	r17,r17,-1
  8054c0:	108000b0 	cmpltui	r2,r2,2
  8054c4:	1000071e 	bne	r2,zero,8054e4 <_fwalk_reent+0x6c>
  8054c8:	8080038f 	ldh	r2,14(r16)
  8054cc:	800b883a 	mov	r5,r16
  8054d0:	a809883a 	mov	r4,r21
  8054d4:	10bfffe0 	cmpeqi	r2,r2,-1
  8054d8:	1000021e 	bne	r2,zero,8054e4 <_fwalk_reent+0x6c>
  8054dc:	983ee83a 	callr	r19
  8054e0:	a0a8b03a 	or	r20,r20,r2
  8054e4:	88bfffd8 	cmpnei	r2,r17,-1
  8054e8:	84001a04 	addi	r16,r16,104
  8054ec:	103ff21e 	bne	r2,zero,8054b8 <_fwalk_reent+0x40>
  8054f0:	94800017 	ldw	r18,0(r18)
  8054f4:	903fec1e 	bne	r18,zero,8054a8 <_fwalk_reent+0x30>
  8054f8:	a005883a 	mov	r2,r20
  8054fc:	dfc00617 	ldw	ra,24(sp)
  805500:	dd400517 	ldw	r21,20(sp)
  805504:	dd000417 	ldw	r20,16(sp)
  805508:	dcc00317 	ldw	r19,12(sp)
  80550c:	dc800217 	ldw	r18,8(sp)
  805510:	dc400117 	ldw	r17,4(sp)
  805514:	dc000017 	ldw	r16,0(sp)
  805518:	dec00704 	addi	sp,sp,28
  80551c:	f800283a 	ret

00805520 <__localeconv_l>:
  805520:	20803c04 	addi	r2,r4,240
  805524:	f800283a 	ret

00805528 <_localeconv_r>:
  805528:	00802074 	movhi	r2,129
  80552c:	10880f04 	addi	r2,r2,8252
  805530:	f800283a 	ret

00805534 <localeconv>:
  805534:	00802074 	movhi	r2,129
  805538:	10880f04 	addi	r2,r2,8252
  80553c:	f800283a 	ret

00805540 <__smakebuf_r>:
  805540:	2880030b 	ldhu	r2,12(r5)
  805544:	deffe804 	addi	sp,sp,-96
  805548:	dc001215 	stw	r16,72(sp)
  80554c:	dfc01715 	stw	ra,92(sp)
  805550:	dd001615 	stw	r20,88(sp)
  805554:	dcc01515 	stw	r19,84(sp)
  805558:	dc801415 	stw	r18,80(sp)
  80555c:	dc401315 	stw	r17,76(sp)
  805560:	10c0008c 	andi	r3,r2,2
  805564:	2821883a 	mov	r16,r5
  805568:	18000d26 	beq	r3,zero,8055a0 <__smakebuf_r+0x60>
  80556c:	288010c4 	addi	r2,r5,67
  805570:	28800015 	stw	r2,0(r5)
  805574:	28800415 	stw	r2,16(r5)
  805578:	00800044 	movi	r2,1
  80557c:	28800515 	stw	r2,20(r5)
  805580:	dfc01717 	ldw	ra,92(sp)
  805584:	dd001617 	ldw	r20,88(sp)
  805588:	dcc01517 	ldw	r19,84(sp)
  80558c:	dc801417 	ldw	r18,80(sp)
  805590:	dc401317 	ldw	r17,76(sp)
  805594:	dc001217 	ldw	r16,72(sp)
  805598:	dec01804 	addi	sp,sp,96
  80559c:	f800283a 	ret
  8055a0:	2940038f 	ldh	r5,14(r5)
  8055a4:	2023883a 	mov	r17,r4
  8055a8:	28002816 	blt	r5,zero,80564c <__smakebuf_r+0x10c>
  8055ac:	d80d883a 	mov	r6,sp
  8055b0:	0809a680 	call	809a68 <_fstat_r>
  8055b4:	10002416 	blt	r2,zero,805648 <__smakebuf_r+0x108>
  8055b8:	d8800117 	ldw	r2,4(sp)
  8055bc:	10bc000c 	andi	r2,r2,61440
  8055c0:	10880018 	cmpnei	r2,r2,8192
  8055c4:	1000461e 	bne	r2,zero,8056e0 <__smakebuf_r+0x1a0>
  8055c8:	8140038f 	ldh	r5,14(r16)
  8055cc:	8809883a 	mov	r4,r17
  8055d0:	0809ac80 	call	809ac8 <_isatty_r>
  8055d4:	10003e26 	beq	r2,zero,8056d0 <__smakebuf_r+0x190>
  8055d8:	8080030b 	ldhu	r2,12(r16)
  8055dc:	80c010c4 	addi	r3,r16,67
  8055e0:	80c00015 	stw	r3,0(r16)
  8055e4:	10800054 	ori	r2,r2,1
  8055e8:	8080030d 	sth	r2,12(r16)
  8055ec:	00800044 	movi	r2,1
  8055f0:	80c00415 	stw	r3,16(r16)
  8055f4:	80800515 	stw	r2,20(r16)
  8055f8:	04c00044 	movi	r19,1
  8055fc:	05010004 	movi	r20,1024
  805600:	04820004 	movi	r18,2048
  805604:	a00b883a 	mov	r5,r20
  805608:	8809883a 	mov	r4,r17
  80560c:	08057880 	call	805788 <_malloc_r>
  805610:	10001726 	beq	r2,zero,805670 <__smakebuf_r+0x130>
  805614:	80c0030b 	ldhu	r3,12(r16)
  805618:	01002034 	movhi	r4,128
  80561c:	2111d704 	addi	r4,r4,18268
  805620:	89000f15 	stw	r4,60(r17)
  805624:	18c02014 	ori	r3,r3,128
  805628:	80c0030d 	sth	r3,12(r16)
  80562c:	80800015 	stw	r2,0(r16)
  805630:	80800415 	stw	r2,16(r16)
  805634:	85000515 	stw	r20,20(r16)
  805638:	98001d1e 	bne	r19,zero,8056b0 <__smakebuf_r+0x170>
  80563c:	90c6b03a 	or	r3,r18,r3
  805640:	80c0030d 	sth	r3,12(r16)
  805644:	003fce06 	br	805580 <__smakebuf_r+0x40>
  805648:	8080030b 	ldhu	r2,12(r16)
  80564c:	1080200c 	andi	r2,r2,128
  805650:	0027883a 	mov	r19,zero
  805654:	10001326 	beq	r2,zero,8056a4 <__smakebuf_r+0x164>
  805658:	05001004 	movi	r20,64
  80565c:	a00b883a 	mov	r5,r20
  805660:	8809883a 	mov	r4,r17
  805664:	0025883a 	mov	r18,zero
  805668:	08057880 	call	805788 <_malloc_r>
  80566c:	103fe91e 	bne	r2,zero,805614 <__smakebuf_r+0xd4>
  805670:	8080030b 	ldhu	r2,12(r16)
  805674:	10c0800c 	andi	r3,r2,512
  805678:	183fc11e 	bne	r3,zero,805580 <__smakebuf_r+0x40>
  80567c:	00ffff04 	movi	r3,-4
  805680:	10c4703a 	and	r2,r2,r3
  805684:	10800094 	ori	r2,r2,2
  805688:	80c010c4 	addi	r3,r16,67
  80568c:	8080030d 	sth	r2,12(r16)
  805690:	00800044 	movi	r2,1
  805694:	80c00015 	stw	r3,0(r16)
  805698:	80c00415 	stw	r3,16(r16)
  80569c:	80800515 	stw	r2,20(r16)
  8056a0:	003fb706 	br	805580 <__smakebuf_r+0x40>
  8056a4:	05010004 	movi	r20,1024
  8056a8:	0025883a 	mov	r18,zero
  8056ac:	003fd506 	br	805604 <__smakebuf_r+0xc4>
  8056b0:	8140038f 	ldh	r5,14(r16)
  8056b4:	8809883a 	mov	r4,r17
  8056b8:	0809ac80 	call	809ac8 <_isatty_r>
  8056bc:	80c0030b 	ldhu	r3,12(r16)
  8056c0:	103fde26 	beq	r2,zero,80563c <__smakebuf_r+0xfc>
  8056c4:	18ffff0c 	andi	r3,r3,65532
  8056c8:	18c00054 	ori	r3,r3,1
  8056cc:	003fdb06 	br	80563c <__smakebuf_r+0xfc>
  8056d0:	04c00044 	movi	r19,1
  8056d4:	05010004 	movi	r20,1024
  8056d8:	04820004 	movi	r18,2048
  8056dc:	003fc906 	br	805604 <__smakebuf_r+0xc4>
  8056e0:	0027883a 	mov	r19,zero
  8056e4:	05010004 	movi	r20,1024
  8056e8:	04820004 	movi	r18,2048
  8056ec:	003fc506 	br	805604 <__smakebuf_r+0xc4>

008056f0 <__swhatbuf_r>:
  8056f0:	deffea04 	addi	sp,sp,-88
  8056f4:	dc001215 	stw	r16,72(sp)
  8056f8:	2821883a 	mov	r16,r5
  8056fc:	2940038f 	ldh	r5,14(r5)
  805700:	dc801415 	stw	r18,80(sp)
  805704:	dc401315 	stw	r17,76(sp)
  805708:	dfc01515 	stw	ra,84(sp)
  80570c:	3023883a 	mov	r17,r6
  805710:	3825883a 	mov	r18,r7
  805714:	28001016 	blt	r5,zero,805758 <__swhatbuf_r+0x68>
  805718:	d80d883a 	mov	r6,sp
  80571c:	0809a680 	call	809a68 <_fstat_r>
  805720:	10000d16 	blt	r2,zero,805758 <__swhatbuf_r+0x68>
  805724:	d8c00117 	ldw	r3,4(sp)
  805728:	00820004 	movi	r2,2048
  80572c:	18fc000c 	andi	r3,r3,61440
  805730:	18c80020 	cmpeqi	r3,r3,8192
  805734:	90c00015 	stw	r3,0(r18)
  805738:	00c10004 	movi	r3,1024
  80573c:	88c00015 	stw	r3,0(r17)
  805740:	dfc01517 	ldw	ra,84(sp)
  805744:	dc801417 	ldw	r18,80(sp)
  805748:	dc401317 	ldw	r17,76(sp)
  80574c:	dc001217 	ldw	r16,72(sp)
  805750:	dec01604 	addi	sp,sp,88
  805754:	f800283a 	ret
  805758:	8080030b 	ldhu	r2,12(r16)
  80575c:	90000015 	stw	zero,0(r18)
  805760:	1080200c 	andi	r2,r2,128
  805764:	10000426 	beq	r2,zero,805778 <__swhatbuf_r+0x88>
  805768:	00801004 	movi	r2,64
  80576c:	88800015 	stw	r2,0(r17)
  805770:	0005883a 	mov	r2,zero
  805774:	003ff206 	br	805740 <__swhatbuf_r+0x50>
  805778:	00810004 	movi	r2,1024
  80577c:	88800015 	stw	r2,0(r17)
  805780:	0005883a 	mov	r2,zero
  805784:	003fee06 	br	805740 <__swhatbuf_r+0x50>

00805788 <_malloc_r>:
  805788:	defff604 	addi	sp,sp,-40
  80578c:	dc400115 	stw	r17,4(sp)
  805790:	2c4002c4 	addi	r17,r5,11
  805794:	dc800215 	stw	r18,8(sp)
  805798:	dfc00915 	stw	ra,36(sp)
  80579c:	df000815 	stw	fp,32(sp)
  8057a0:	ddc00715 	stw	r23,28(sp)
  8057a4:	dd800615 	stw	r22,24(sp)
  8057a8:	dd400515 	stw	r21,20(sp)
  8057ac:	dd000415 	stw	r20,16(sp)
  8057b0:	dcc00315 	stw	r19,12(sp)
  8057b4:	dc000015 	stw	r16,0(sp)
  8057b8:	888005e8 	cmpgeui	r2,r17,23
  8057bc:	2025883a 	mov	r18,r4
  8057c0:	10001b1e 	bne	r2,zero,805830 <_malloc_r+0xa8>
  8057c4:	29400468 	cmpgeui	r5,r5,17
  8057c8:	2800821e 	bne	r5,zero,8059d4 <_malloc_r+0x24c>
  8057cc:	080e4040 	call	80e404 <__malloc_lock>
  8057d0:	04400404 	movi	r17,16
  8057d4:	00800604 	movi	r2,24
  8057d8:	01c00084 	movi	r7,2
  8057dc:	04c02074 	movhi	r19,129
  8057e0:	9cc6d104 	addi	r19,r19,6980
  8057e4:	9885883a 	add	r2,r19,r2
  8057e8:	14000117 	ldw	r16,4(r2)
  8057ec:	10fffe04 	addi	r3,r2,-8
  8057f0:	80c08b26 	beq	r16,r3,805a20 <_malloc_r+0x298>
  8057f4:	80800117 	ldw	r2,4(r16)
  8057f8:	81000317 	ldw	r4,12(r16)
  8057fc:	00ffff04 	movi	r3,-4
  805800:	10c4703a 	and	r2,r2,r3
  805804:	81400217 	ldw	r5,8(r16)
  805808:	8085883a 	add	r2,r16,r2
  80580c:	10c00117 	ldw	r3,4(r2)
  805810:	29000315 	stw	r4,12(r5)
  805814:	21400215 	stw	r5,8(r4)
  805818:	18c00054 	ori	r3,r3,1
  80581c:	10c00115 	stw	r3,4(r2)
  805820:	9009883a 	mov	r4,r18
  805824:	080e4280 	call	80e428 <__malloc_unlock>
  805828:	80800204 	addi	r2,r16,8
  80582c:	00006c06 	br	8059e0 <_malloc_r+0x258>
  805830:	00bffe04 	movi	r2,-8
  805834:	88a2703a 	and	r17,r17,r2
  805838:	88006616 	blt	r17,zero,8059d4 <_malloc_r+0x24c>
  80583c:	89406536 	bltu	r17,r5,8059d4 <_malloc_r+0x24c>
  805840:	080e4040 	call	80e404 <__malloc_lock>
  805844:	88807e28 	cmpgeui	r2,r17,504
  805848:	10012226 	beq	r2,zero,805cd4 <_malloc_r+0x54c>
  80584c:	8804d27a 	srli	r2,r17,9
  805850:	10006f26 	beq	r2,zero,805a10 <_malloc_r+0x288>
  805854:	10c00168 	cmpgeui	r3,r2,5
  805858:	1800fe1e 	bne	r3,zero,805c54 <_malloc_r+0x4cc>
  80585c:	8804d1ba 	srli	r2,r17,6
  805860:	11c00e44 	addi	r7,r2,57
  805864:	380890fa 	slli	r4,r7,3
  805868:	12000e04 	addi	r8,r2,56
  80586c:	04c02074 	movhi	r19,129
  805870:	9cc6d104 	addi	r19,r19,6980
  805874:	9909883a 	add	r4,r19,r4
  805878:	24000117 	ldw	r16,4(r4)
  80587c:	213ffe04 	addi	r4,r4,-8
  805880:	24000b26 	beq	r4,r16,8058b0 <_malloc_r+0x128>
  805884:	01bfff04 	movi	r6,-4
  805888:	00000306 	br	805898 <_malloc_r+0x110>
  80588c:	1800d60e 	bge	r3,zero,805be8 <_malloc_r+0x460>
  805890:	84000317 	ldw	r16,12(r16)
  805894:	24000626 	beq	r4,r16,8058b0 <_malloc_r+0x128>
  805898:	80800117 	ldw	r2,4(r16)
  80589c:	1184703a 	and	r2,r2,r6
  8058a0:	1447c83a 	sub	r3,r2,r17
  8058a4:	19400408 	cmpgei	r5,r3,16
  8058a8:	283ff826 	beq	r5,zero,80588c <_malloc_r+0x104>
  8058ac:	400f883a 	mov	r7,r8
  8058b0:	9c000417 	ldw	r16,16(r19)
  8058b4:	02402074 	movhi	r9,129
  8058b8:	4a46d304 	addi	r9,r9,6988
  8058bc:	82405f26 	beq	r16,r9,805a3c <_malloc_r+0x2b4>
  8058c0:	80c00117 	ldw	r3,4(r16)
  8058c4:	00bfff04 	movi	r2,-4
  8058c8:	1884703a 	and	r2,r3,r2
  8058cc:	1447c83a 	sub	r3,r2,r17
  8058d0:	19000410 	cmplti	r4,r3,16
  8058d4:	20010a26 	beq	r4,zero,805d00 <_malloc_r+0x578>
  8058d8:	9a400515 	stw	r9,20(r19)
  8058dc:	9a400415 	stw	r9,16(r19)
  8058e0:	1800ff0e 	bge	r3,zero,805ce0 <_malloc_r+0x558>
  8058e4:	10c08028 	cmpgeui	r3,r2,512
  8058e8:	1800c11e 	bne	r3,zero,805bf0 <_malloc_r+0x468>
  8058ec:	1006d0fa 	srli	r3,r2,3
  8058f0:	1008d17a 	srli	r4,r2,5
  8058f4:	00800044 	movi	r2,1
  8058f8:	18c00044 	addi	r3,r3,1
  8058fc:	180690fa 	slli	r3,r3,3
  805900:	99400117 	ldw	r5,4(r19)
  805904:	1104983a 	sll	r2,r2,r4
  805908:	98c7883a 	add	r3,r19,r3
  80590c:	19000017 	ldw	r4,0(r3)
  805910:	1144b03a 	or	r2,r2,r5
  805914:	197ffe04 	addi	r5,r3,-8
  805918:	81400315 	stw	r5,12(r16)
  80591c:	81000215 	stw	r4,8(r16)
  805920:	98800115 	stw	r2,4(r19)
  805924:	1c000015 	stw	r16,0(r3)
  805928:	24000315 	stw	r16,12(r4)
  80592c:	3807d0ba 	srai	r3,r7,2
  805930:	01000044 	movi	r4,1
  805934:	20c8983a 	sll	r4,r4,r3
  805938:	11004536 	bltu	r2,r4,805a50 <_malloc_r+0x2c8>
  80593c:	2086703a 	and	r3,r4,r2
  805940:	18000a1e 	bne	r3,zero,80596c <_malloc_r+0x1e4>
  805944:	00ffff04 	movi	r3,-4
  805948:	2109883a 	add	r4,r4,r4
  80594c:	38ce703a 	and	r7,r7,r3
  805950:	2086703a 	and	r3,r4,r2
  805954:	39c00104 	addi	r7,r7,4
  805958:	1800041e 	bne	r3,zero,80596c <_malloc_r+0x1e4>
  80595c:	2109883a 	add	r4,r4,r4
  805960:	2086703a 	and	r3,r4,r2
  805964:	39c00104 	addi	r7,r7,4
  805968:	183ffc26 	beq	r3,zero,80595c <_malloc_r+0x1d4>
  80596c:	02bfff04 	movi	r10,-4
  805970:	381690fa 	slli	r11,r7,3
  805974:	3819883a 	mov	r12,r7
  805978:	9ad7883a 	add	r11,r19,r11
  80597c:	5811883a 	mov	r8,r11
  805980:	40800317 	ldw	r2,12(r8)
  805984:	4080bc26 	beq	r8,r2,805c78 <_malloc_r+0x4f0>
  805988:	10c00117 	ldw	r3,4(r2)
  80598c:	1021883a 	mov	r16,r2
  805990:	10800317 	ldw	r2,12(r2)
  805994:	1a86703a 	and	r3,r3,r10
  805998:	1c4bc83a 	sub	r5,r3,r17
  80599c:	29800410 	cmplti	r6,r5,16
  8059a0:	3000ba26 	beq	r6,zero,805c8c <_malloc_r+0x504>
  8059a4:	283ff716 	blt	r5,zero,805984 <_malloc_r+0x1fc>
  8059a8:	80c7883a 	add	r3,r16,r3
  8059ac:	19400117 	ldw	r5,4(r3)
  8059b0:	81800217 	ldw	r6,8(r16)
  8059b4:	9009883a 	mov	r4,r18
  8059b8:	29400054 	ori	r5,r5,1
  8059bc:	19400115 	stw	r5,4(r3)
  8059c0:	30800315 	stw	r2,12(r6)
  8059c4:	11800215 	stw	r6,8(r2)
  8059c8:	080e4280 	call	80e428 <__malloc_unlock>
  8059cc:	80800204 	addi	r2,r16,8
  8059d0:	00000306 	br	8059e0 <_malloc_r+0x258>
  8059d4:	00800304 	movi	r2,12
  8059d8:	90800015 	stw	r2,0(r18)
  8059dc:	0005883a 	mov	r2,zero
  8059e0:	dfc00917 	ldw	ra,36(sp)
  8059e4:	df000817 	ldw	fp,32(sp)
  8059e8:	ddc00717 	ldw	r23,28(sp)
  8059ec:	dd800617 	ldw	r22,24(sp)
  8059f0:	dd400517 	ldw	r21,20(sp)
  8059f4:	dd000417 	ldw	r20,16(sp)
  8059f8:	dcc00317 	ldw	r19,12(sp)
  8059fc:	dc800217 	ldw	r18,8(sp)
  805a00:	dc400117 	ldw	r17,4(sp)
  805a04:	dc000017 	ldw	r16,0(sp)
  805a08:	dec00a04 	addi	sp,sp,40
  805a0c:	f800283a 	ret
  805a10:	01008004 	movi	r4,512
  805a14:	01c01004 	movi	r7,64
  805a18:	02000fc4 	movi	r8,63
  805a1c:	003f9306 	br	80586c <_malloc_r+0xe4>
  805a20:	14000317 	ldw	r16,12(r2)
  805a24:	39c00084 	addi	r7,r7,2
  805a28:	143f721e 	bne	r2,r16,8057f4 <_malloc_r+0x6c>
  805a2c:	9c000417 	ldw	r16,16(r19)
  805a30:	02402074 	movhi	r9,129
  805a34:	4a46d304 	addi	r9,r9,6988
  805a38:	827fa11e 	bne	r16,r9,8058c0 <_malloc_r+0x138>
  805a3c:	3807d0ba 	srai	r3,r7,2
  805a40:	01000044 	movi	r4,1
  805a44:	98800117 	ldw	r2,4(r19)
  805a48:	20c8983a 	sll	r4,r4,r3
  805a4c:	113fbb2e 	bgeu	r2,r4,80593c <_malloc_r+0x1b4>
  805a50:	9c000217 	ldw	r16,8(r19)
  805a54:	00bfff04 	movi	r2,-4
  805a58:	85400117 	ldw	r21,4(r16)
  805a5c:	a8ac703a 	and	r22,r21,r2
  805a60:	b4400336 	bltu	r22,r17,805a70 <_malloc_r+0x2e8>
  805a64:	b445c83a 	sub	r2,r22,r17
  805a68:	10c00408 	cmpgei	r3,r2,16
  805a6c:	1800541e 	bne	r3,zero,805bc0 <_malloc_r+0x438>
  805a70:	00802074 	movhi	r2,129
  805a74:	108ce917 	ldw	r2,13220(r2)
  805a78:	00c02074 	movhi	r3,129
  805a7c:	1d542d17 	ldw	r21,20660(r3)
  805a80:	10bfffd8 	cmpnei	r2,r2,-1
  805a84:	85b9883a 	add	fp,r16,r22
  805a88:	8d6b883a 	add	r21,r17,r21
  805a8c:	1000d626 	beq	r2,zero,805de8 <_malloc_r+0x660>
  805a90:	ad4403c4 	addi	r21,r21,4111
  805a94:	00bc0004 	movi	r2,-4096
  805a98:	a8aa703a 	and	r21,r21,r2
  805a9c:	a80b883a 	mov	r5,r21
  805aa0:	9009883a 	mov	r4,r18
  805aa4:	0807c540 	call	807c54 <_sbrk_r>
  805aa8:	102f883a 	mov	r23,r2
  805aac:	10bfffd8 	cmpnei	r2,r2,-1
  805ab0:	1000a826 	beq	r2,zero,805d54 <_malloc_r+0x5cc>
  805ab4:	bf00a636 	bltu	r23,fp,805d50 <_malloc_r+0x5c8>
  805ab8:	00802074 	movhi	r2,129
  805abc:	15143917 	ldw	r20,20708(r2)
  805ac0:	ad29883a 	add	r20,r21,r20
  805ac4:	15143915 	stw	r20,20708(r2)
  805ac8:	a007883a 	mov	r3,r20
  805acc:	e5c0ec26 	beq	fp,r23,805e80 <_malloc_r+0x6f8>
  805ad0:	00802074 	movhi	r2,129
  805ad4:	108ce917 	ldw	r2,13220(r2)
  805ad8:	10bfffd8 	cmpnei	r2,r2,-1
  805adc:	1000ef26 	beq	r2,zero,805e9c <_malloc_r+0x714>
  805ae0:	bf39c83a 	sub	fp,r23,fp
  805ae4:	e0c7883a 	add	r3,fp,r3
  805ae8:	00802074 	movhi	r2,129
  805aec:	10d43915 	stw	r3,20708(r2)
  805af0:	bf0001cc 	andi	fp,r23,7
  805af4:	e000c526 	beq	fp,zero,805e0c <_malloc_r+0x684>
  805af8:	bf2fc83a 	sub	r23,r23,fp
  805afc:	bdc00204 	addi	r23,r23,8
  805b00:	05040204 	movi	r20,4104
  805b04:	a729c83a 	sub	r20,r20,fp
  805b08:	bd6b883a 	add	r21,r23,r21
  805b0c:	a569c83a 	sub	r20,r20,r21
  805b10:	a503ffcc 	andi	r20,r20,4095
  805b14:	a00b883a 	mov	r5,r20
  805b18:	9009883a 	mov	r4,r18
  805b1c:	0807c540 	call	807c54 <_sbrk_r>
  805b20:	10ffffe0 	cmpeqi	r3,r2,-1
  805b24:	1800f31e 	bne	r3,zero,805ef4 <_malloc_r+0x76c>
  805b28:	15c5c83a 	sub	r2,r2,r23
  805b2c:	152b883a 	add	r21,r2,r20
  805b30:	00802074 	movhi	r2,129
  805b34:	11543917 	ldw	r5,20708(r2)
  805b38:	9dc00215 	stw	r23,8(r19)
  805b3c:	ad400054 	ori	r21,r21,1
  805b40:	a169883a 	add	r20,r20,r5
  805b44:	15143915 	stw	r20,20708(r2)
  805b48:	bd400115 	stw	r21,4(r23)
  805b4c:	84c0d626 	beq	r16,r19,805ea8 <_malloc_r+0x720>
  805b50:	b0800428 	cmpgeui	r2,r22,16
  805b54:	1000d626 	beq	r2,zero,805eb0 <_malloc_r+0x728>
  805b58:	80c00117 	ldw	r3,4(r16)
  805b5c:	013ffe04 	movi	r4,-8
  805b60:	b0bffd04 	addi	r2,r22,-12
  805b64:	1104703a 	and	r2,r2,r4
  805b68:	18c0004c 	andi	r3,r3,1
  805b6c:	1886b03a 	or	r3,r3,r2
  805b70:	80c00115 	stw	r3,4(r16)
  805b74:	01000144 	movi	r4,5
  805b78:	8087883a 	add	r3,r16,r2
  805b7c:	19000115 	stw	r4,4(r3)
  805b80:	19000215 	stw	r4,8(r3)
  805b84:	10800428 	cmpgeui	r2,r2,16
  805b88:	1000df1e 	bne	r2,zero,805f08 <_malloc_r+0x780>
  805b8c:	bd400117 	ldw	r21,4(r23)
  805b90:	b821883a 	mov	r16,r23
  805b94:	00802074 	movhi	r2,129
  805b98:	10942c17 	ldw	r2,20656(r2)
  805b9c:	1500022e 	bgeu	r2,r20,805ba8 <_malloc_r+0x420>
  805ba0:	00802074 	movhi	r2,129
  805ba4:	15142c15 	stw	r20,20656(r2)
  805ba8:	00802074 	movhi	r2,129
  805bac:	10942b17 	ldw	r2,20652(r2)
  805bb0:	15006a2e 	bgeu	r2,r20,805d5c <_malloc_r+0x5d4>
  805bb4:	00802074 	movhi	r2,129
  805bb8:	15142b15 	stw	r20,20652(r2)
  805bbc:	00006706 	br	805d5c <_malloc_r+0x5d4>
  805bc0:	88c00054 	ori	r3,r17,1
  805bc4:	80c00115 	stw	r3,4(r16)
  805bc8:	8463883a 	add	r17,r16,r17
  805bcc:	10800054 	ori	r2,r2,1
  805bd0:	9c400215 	stw	r17,8(r19)
  805bd4:	88800115 	stw	r2,4(r17)
  805bd8:	9009883a 	mov	r4,r18
  805bdc:	080e4280 	call	80e428 <__malloc_unlock>
  805be0:	80800204 	addi	r2,r16,8
  805be4:	003f7e06 	br	8059e0 <_malloc_r+0x258>
  805be8:	81000317 	ldw	r4,12(r16)
  805bec:	003f0506 	br	805804 <_malloc_r+0x7c>
  805bf0:	1006d27a 	srli	r3,r2,9
  805bf4:	19000168 	cmpgeui	r4,r3,5
  805bf8:	20005026 	beq	r4,zero,805d3c <_malloc_r+0x5b4>
  805bfc:	19000568 	cmpgeui	r4,r3,21
  805c00:	20008c1e 	bne	r4,zero,805e34 <_malloc_r+0x6ac>
  805c04:	19401704 	addi	r5,r3,92
  805c08:	280a90fa 	slli	r5,r5,3
  805c0c:	190016c4 	addi	r4,r3,91
  805c10:	994b883a 	add	r5,r19,r5
  805c14:	28c00017 	ldw	r3,0(r5)
  805c18:	297ffe04 	addi	r5,r5,-8
  805c1c:	28c07426 	beq	r5,r3,805df0 <_malloc_r+0x668>
  805c20:	01bfff04 	movi	r6,-4
  805c24:	19000117 	ldw	r4,4(r3)
  805c28:	2188703a 	and	r4,r4,r6
  805c2c:	1100022e 	bgeu	r2,r4,805c38 <_malloc_r+0x4b0>
  805c30:	18c00217 	ldw	r3,8(r3)
  805c34:	28fffb1e 	bne	r5,r3,805c24 <_malloc_r+0x49c>
  805c38:	19400317 	ldw	r5,12(r3)
  805c3c:	98800117 	ldw	r2,4(r19)
  805c40:	81400315 	stw	r5,12(r16)
  805c44:	80c00215 	stw	r3,8(r16)
  805c48:	2c000215 	stw	r16,8(r5)
  805c4c:	1c000315 	stw	r16,12(r3)
  805c50:	003f3606 	br	80592c <_malloc_r+0x1a4>
  805c54:	10c00568 	cmpgeui	r3,r2,21
  805c58:	18004a26 	beq	r3,zero,805d84 <_malloc_r+0x5fc>
  805c5c:	10c01568 	cmpgeui	r3,r2,85
  805c60:	18007b1e 	bne	r3,zero,805e50 <_malloc_r+0x6c8>
  805c64:	8804d33a 	srli	r2,r17,12
  805c68:	11c01bc4 	addi	r7,r2,111
  805c6c:	380890fa 	slli	r4,r7,3
  805c70:	12001b84 	addi	r8,r2,110
  805c74:	003efd06 	br	80586c <_malloc_r+0xe4>
  805c78:	63000044 	addi	r12,r12,1
  805c7c:	608000cc 	andi	r2,r12,3
  805c80:	42000204 	addi	r8,r8,8
  805c84:	103f3e1e 	bne	r2,zero,805980 <_malloc_r+0x1f8>
  805c88:	00004506 	br	805da0 <_malloc_r+0x618>
  805c8c:	81000217 	ldw	r4,8(r16)
  805c90:	89800054 	ori	r6,r17,1
  805c94:	81800115 	stw	r6,4(r16)
  805c98:	20800315 	stw	r2,12(r4)
  805c9c:	11000215 	stw	r4,8(r2)
  805ca0:	8463883a 	add	r17,r16,r17
  805ca4:	9c400515 	stw	r17,20(r19)
  805ca8:	9c400415 	stw	r17,16(r19)
  805cac:	28800054 	ori	r2,r5,1
  805cb0:	88800115 	stw	r2,4(r17)
  805cb4:	8a400315 	stw	r9,12(r17)
  805cb8:	8a400215 	stw	r9,8(r17)
  805cbc:	80c7883a 	add	r3,r16,r3
  805cc0:	19400015 	stw	r5,0(r3)
  805cc4:	9009883a 	mov	r4,r18
  805cc8:	080e4280 	call	80e428 <__malloc_unlock>
  805ccc:	80800204 	addi	r2,r16,8
  805cd0:	003f4306 	br	8059e0 <_malloc_r+0x258>
  805cd4:	880ed0fa 	srli	r7,r17,3
  805cd8:	88800204 	addi	r2,r17,8
  805cdc:	003ebf06 	br	8057dc <_malloc_r+0x54>
  805ce0:	8085883a 	add	r2,r16,r2
  805ce4:	10c00117 	ldw	r3,4(r2)
  805ce8:	9009883a 	mov	r4,r18
  805cec:	18c00054 	ori	r3,r3,1
  805cf0:	10c00115 	stw	r3,4(r2)
  805cf4:	080e4280 	call	80e428 <__malloc_unlock>
  805cf8:	80800204 	addi	r2,r16,8
  805cfc:	003f3806 	br	8059e0 <_malloc_r+0x258>
  805d00:	89000054 	ori	r4,r17,1
  805d04:	81000115 	stw	r4,4(r16)
  805d08:	8463883a 	add	r17,r16,r17
  805d0c:	9c400515 	stw	r17,20(r19)
  805d10:	9c400415 	stw	r17,16(r19)
  805d14:	19000054 	ori	r4,r3,1
  805d18:	89000115 	stw	r4,4(r17)
  805d1c:	8085883a 	add	r2,r16,r2
  805d20:	8a400315 	stw	r9,12(r17)
  805d24:	8a400215 	stw	r9,8(r17)
  805d28:	10c00015 	stw	r3,0(r2)
  805d2c:	9009883a 	mov	r4,r18
  805d30:	080e4280 	call	80e428 <__malloc_unlock>
  805d34:	80800204 	addi	r2,r16,8
  805d38:	003f2906 	br	8059e0 <_malloc_r+0x258>
  805d3c:	1006d1ba 	srli	r3,r2,6
  805d40:	19400e44 	addi	r5,r3,57
  805d44:	280a90fa 	slli	r5,r5,3
  805d48:	19000e04 	addi	r4,r3,56
  805d4c:	003fb006 	br	805c10 <_malloc_r+0x488>
  805d50:	84c04626 	beq	r16,r19,805e6c <_malloc_r+0x6e4>
  805d54:	9c000217 	ldw	r16,8(r19)
  805d58:	85400117 	ldw	r21,4(r16)
  805d5c:	00bfff04 	movi	r2,-4
  805d60:	a8aa703a 	and	r21,r21,r2
  805d64:	ac45c83a 	sub	r2,r21,r17
  805d68:	ac400236 	bltu	r21,r17,805d74 <_malloc_r+0x5ec>
  805d6c:	10c00408 	cmpgei	r3,r2,16
  805d70:	183f931e 	bne	r3,zero,805bc0 <_malloc_r+0x438>
  805d74:	9009883a 	mov	r4,r18
  805d78:	080e4280 	call	80e428 <__malloc_unlock>
  805d7c:	0005883a 	mov	r2,zero
  805d80:	003f1706 	br	8059e0 <_malloc_r+0x258>
  805d84:	11c01704 	addi	r7,r2,92
  805d88:	380890fa 	slli	r4,r7,3
  805d8c:	120016c4 	addi	r8,r2,91
  805d90:	003eb606 	br	80586c <_malloc_r+0xe4>
  805d94:	58800217 	ldw	r2,8(r11)
  805d98:	39ffffc4 	addi	r7,r7,-1
  805d9c:	12c0701e 	bne	r2,r11,805f60 <_malloc_r+0x7d8>
  805da0:	388000cc 	andi	r2,r7,3
  805da4:	5afffe04 	addi	r11,r11,-8
  805da8:	103ffa1e 	bne	r2,zero,805d94 <_malloc_r+0x60c>
  805dac:	98c00117 	ldw	r3,4(r19)
  805db0:	0104303a 	nor	r2,zero,r4
  805db4:	10c4703a 	and	r2,r2,r3
  805db8:	98800115 	stw	r2,4(r19)
  805dbc:	2109883a 	add	r4,r4,r4
  805dc0:	113f2336 	bltu	r2,r4,805a50 <_malloc_r+0x2c8>
  805dc4:	203f2226 	beq	r4,zero,805a50 <_malloc_r+0x2c8>
  805dc8:	2086703a 	and	r3,r4,r2
  805dcc:	1800041e 	bne	r3,zero,805de0 <_malloc_r+0x658>
  805dd0:	2109883a 	add	r4,r4,r4
  805dd4:	2086703a 	and	r3,r4,r2
  805dd8:	63000104 	addi	r12,r12,4
  805ddc:	183ffc26 	beq	r3,zero,805dd0 <_malloc_r+0x648>
  805de0:	600f883a 	mov	r7,r12
  805de4:	003ee206 	br	805970 <_malloc_r+0x1e8>
  805de8:	ad400404 	addi	r21,r21,16
  805dec:	003f2b06 	br	805a9c <_malloc_r+0x314>
  805df0:	2009d0ba 	srai	r4,r4,2
  805df4:	00800044 	movi	r2,1
  805df8:	99800117 	ldw	r6,4(r19)
  805dfc:	1104983a 	sll	r2,r2,r4
  805e00:	1184b03a 	or	r2,r2,r6
  805e04:	98800115 	stw	r2,4(r19)
  805e08:	003f8d06 	br	805c40 <_malloc_r+0x4b8>
  805e0c:	bd69883a 	add	r20,r23,r21
  805e10:	0529c83a 	sub	r20,zero,r20
  805e14:	a503ffcc 	andi	r20,r20,4095
  805e18:	a00b883a 	mov	r5,r20
  805e1c:	9009883a 	mov	r4,r18
  805e20:	0807c540 	call	807c54 <_sbrk_r>
  805e24:	10ffffe0 	cmpeqi	r3,r2,-1
  805e28:	183f3f26 	beq	r3,zero,805b28 <_malloc_r+0x3a0>
  805e2c:	0029883a 	mov	r20,zero
  805e30:	003f3f06 	br	805b30 <_malloc_r+0x3a8>
  805e34:	19001568 	cmpgeui	r4,r3,85
  805e38:	2000201e 	bne	r4,zero,805ebc <_malloc_r+0x734>
  805e3c:	1006d33a 	srli	r3,r2,12
  805e40:	19401bc4 	addi	r5,r3,111
  805e44:	280a90fa 	slli	r5,r5,3
  805e48:	19001b84 	addi	r4,r3,110
  805e4c:	003f7006 	br	805c10 <_malloc_r+0x488>
  805e50:	10c05568 	cmpgeui	r3,r2,341
  805e54:	1800201e 	bne	r3,zero,805ed8 <_malloc_r+0x750>
  805e58:	8804d3fa 	srli	r2,r17,15
  805e5c:	11c01e04 	addi	r7,r2,120
  805e60:	380890fa 	slli	r4,r7,3
  805e64:	12001dc4 	addi	r8,r2,119
  805e68:	003e8006 	br	80586c <_malloc_r+0xe4>
  805e6c:	00802074 	movhi	r2,129
  805e70:	10d43917 	ldw	r3,20708(r2)
  805e74:	a8c7883a 	add	r3,r21,r3
  805e78:	10d43915 	stw	r3,20708(r2)
  805e7c:	003f1406 	br	805ad0 <_malloc_r+0x348>
  805e80:	e083ffcc 	andi	r2,fp,4095
  805e84:	103f121e 	bne	r2,zero,805ad0 <_malloc_r+0x348>
  805e88:	9c000217 	ldw	r16,8(r19)
  805e8c:	b56b883a 	add	r21,r22,r21
  805e90:	ad400054 	ori	r21,r21,1
  805e94:	85400115 	stw	r21,4(r16)
  805e98:	003f3e06 	br	805b94 <_malloc_r+0x40c>
  805e9c:	00802074 	movhi	r2,129
  805ea0:	15cce915 	stw	r23,13220(r2)
  805ea4:	003f1206 	br	805af0 <_malloc_r+0x368>
  805ea8:	b821883a 	mov	r16,r23
  805eac:	003f3906 	br	805b94 <_malloc_r+0x40c>
  805eb0:	00800044 	movi	r2,1
  805eb4:	b8800115 	stw	r2,4(r23)
  805eb8:	003fae06 	br	805d74 <_malloc_r+0x5ec>
  805ebc:	19005568 	cmpgeui	r4,r3,341
  805ec0:	2000191e 	bne	r4,zero,805f28 <_malloc_r+0x7a0>
  805ec4:	1006d3fa 	srli	r3,r2,15
  805ec8:	19401e04 	addi	r5,r3,120
  805ecc:	280a90fa 	slli	r5,r5,3
  805ed0:	19001dc4 	addi	r4,r3,119
  805ed4:	003f4e06 	br	805c10 <_malloc_r+0x488>
  805ed8:	10815568 	cmpgeui	r2,r2,1365
  805edc:	1000191e 	bne	r2,zero,805f44 <_malloc_r+0x7bc>
  805ee0:	8804d4ba 	srli	r2,r17,18
  805ee4:	11c01f44 	addi	r7,r2,125
  805ee8:	380890fa 	slli	r4,r7,3
  805eec:	12001f04 	addi	r8,r2,124
  805ef0:	003e5e06 	br	80586c <_malloc_r+0xe4>
  805ef4:	e73ffe04 	addi	fp,fp,-8
  805ef8:	af2b883a 	add	r21,r21,fp
  805efc:	adebc83a 	sub	r21,r21,r23
  805f00:	0029883a 	mov	r20,zero
  805f04:	003f0a06 	br	805b30 <_malloc_r+0x3a8>
  805f08:	81400204 	addi	r5,r16,8
  805f0c:	9009883a 	mov	r4,r18
  805f10:	0804c1c0 	call	804c1c <_free_r>
  805f14:	9c000217 	ldw	r16,8(r19)
  805f18:	00802074 	movhi	r2,129
  805f1c:	15143917 	ldw	r20,20708(r2)
  805f20:	85400117 	ldw	r21,4(r16)
  805f24:	003f1b06 	br	805b94 <_malloc_r+0x40c>
  805f28:	18c15568 	cmpgeui	r3,r3,1365
  805f2c:	1800091e 	bne	r3,zero,805f54 <_malloc_r+0x7cc>
  805f30:	1006d4ba 	srli	r3,r2,18
  805f34:	19401f44 	addi	r5,r3,125
  805f38:	280a90fa 	slli	r5,r5,3
  805f3c:	19001f04 	addi	r4,r3,124
  805f40:	003f3306 	br	805c10 <_malloc_r+0x488>
  805f44:	0100fe04 	movi	r4,1016
  805f48:	01c01fc4 	movi	r7,127
  805f4c:	02001f84 	movi	r8,126
  805f50:	003e4606 	br	80586c <_malloc_r+0xe4>
  805f54:	0140fe04 	movi	r5,1016
  805f58:	01001f84 	movi	r4,126
  805f5c:	003f2c06 	br	805c10 <_malloc_r+0x488>
  805f60:	98800117 	ldw	r2,4(r19)
  805f64:	003f9506 	br	805dbc <_malloc_r+0x634>

00805f68 <memchr>:
  805f68:	208000cc 	andi	r2,r4,3
  805f6c:	280f883a 	mov	r7,r5
  805f70:	10000e26 	beq	r2,zero,805fac <memchr+0x44>
  805f74:	30bfffc4 	addi	r2,r6,-1
  805f78:	30001726 	beq	r6,zero,805fd8 <memchr+0x70>
  805f7c:	29803fcc 	andi	r6,r5,255
  805f80:	00000606 	br	805f9c <memchr+0x34>
  805f84:	21000044 	addi	r4,r4,1
  805f88:	20c000cc 	andi	r3,r4,3
  805f8c:	18000826 	beq	r3,zero,805fb0 <memchr+0x48>
  805f90:	10bfffc4 	addi	r2,r2,-1
  805f94:	10ffffe0 	cmpeqi	r3,r2,-1
  805f98:	18000f1e 	bne	r3,zero,805fd8 <memchr+0x70>
  805f9c:	20c00003 	ldbu	r3,0(r4)
  805fa0:	19bff81e 	bne	r3,r6,805f84 <memchr+0x1c>
  805fa4:	2005883a 	mov	r2,r4
  805fa8:	f800283a 	ret
  805fac:	3005883a 	mov	r2,r6
  805fb0:	10c00128 	cmpgeui	r3,r2,4
  805fb4:	18000a1e 	bne	r3,zero,805fe0 <memchr+0x78>
  805fb8:	10001e26 	beq	r2,zero,806034 <memchr+0xcc>
  805fbc:	2087883a 	add	r3,r4,r2
  805fc0:	39803fcc 	andi	r6,r7,255
  805fc4:	2005883a 	mov	r2,r4
  805fc8:	11000003 	ldbu	r4,0(r2)
  805fcc:	21bff626 	beq	r4,r6,805fa8 <memchr+0x40>
  805fd0:	10800044 	addi	r2,r2,1
  805fd4:	18bffc1e 	bne	r3,r2,805fc8 <memchr+0x60>
  805fd8:	0005883a 	mov	r2,zero
  805fdc:	f800283a 	ret
  805fe0:	29403fcc 	andi	r5,r5,255
  805fe4:	280c923a 	slli	r6,r5,8
  805fe8:	027fbff4 	movhi	r9,65279
  805fec:	02202074 	movhi	r8,32897
  805ff0:	314ab03a 	or	r5,r6,r5
  805ff4:	280c943a 	slli	r6,r5,16
  805ff8:	4a7fbfc4 	addi	r9,r9,-257
  805ffc:	42202004 	addi	r8,r8,-32640
  806000:	314cb03a 	or	r6,r6,r5
  806004:	20c00017 	ldw	r3,0(r4)
  806008:	30c6f03a 	xor	r3,r6,r3
  80600c:	1a4b883a 	add	r5,r3,r9
  806010:	00c6303a 	nor	r3,zero,r3
  806014:	28c6703a 	and	r3,r5,r3
  806018:	1a06703a 	and	r3,r3,r8
  80601c:	183fe71e 	bne	r3,zero,805fbc <memchr+0x54>
  806020:	10bfff04 	addi	r2,r2,-4
  806024:	10c00128 	cmpgeui	r3,r2,4
  806028:	21000104 	addi	r4,r4,4
  80602c:	183ff51e 	bne	r3,zero,806004 <memchr+0x9c>
  806030:	003fe106 	br	805fb8 <memchr+0x50>
  806034:	f800283a 	ret

00806038 <memcpy>:
  806038:	30c00430 	cmpltui	r3,r6,16
  80603c:	2005883a 	mov	r2,r4
  806040:	18002d1e 	bne	r3,zero,8060f8 <memcpy+0xc0>
  806044:	2906b03a 	or	r3,r5,r4
  806048:	18c000cc 	andi	r3,r3,3
  80604c:	1800351e 	bne	r3,zero,806124 <memcpy+0xec>
  806050:	32fffc04 	addi	r11,r6,-16
  806054:	5816d13a 	srli	r11,r11,4
  806058:	280f883a 	mov	r7,r5
  80605c:	2007883a 	mov	r3,r4
  806060:	5ac00044 	addi	r11,r11,1
  806064:	5816913a 	slli	r11,r11,4
  806068:	22d5883a 	add	r10,r4,r11
  80606c:	39000117 	ldw	r4,4(r7)
  806070:	3a400017 	ldw	r9,0(r7)
  806074:	3a000217 	ldw	r8,8(r7)
  806078:	19000115 	stw	r4,4(r3)
  80607c:	39000317 	ldw	r4,12(r7)
  806080:	1a400015 	stw	r9,0(r3)
  806084:	1a000215 	stw	r8,8(r3)
  806088:	19000315 	stw	r4,12(r3)
  80608c:	18c00404 	addi	r3,r3,16
  806090:	39c00404 	addi	r7,r7,16
  806094:	50fff51e 	bne	r10,r3,80606c <memcpy+0x34>
  806098:	3100030c 	andi	r4,r6,12
  80609c:	2acb883a 	add	r5,r5,r11
  8060a0:	320003cc 	andi	r8,r6,15
  8060a4:	20002226 	beq	r4,zero,806130 <memcpy+0xf8>
  8060a8:	280f883a 	mov	r7,r5
  8060ac:	1813883a 	mov	r9,r3
  8060b0:	39c00104 	addi	r7,r7,4
  8060b4:	3abfff17 	ldw	r10,-4(r7)
  8060b8:	41c9c83a 	sub	r4,r8,r7
  8060bc:	2909883a 	add	r4,r5,r4
  8060c0:	4a800015 	stw	r10,0(r9)
  8060c4:	21000128 	cmpgeui	r4,r4,4
  8060c8:	4a400104 	addi	r9,r9,4
  8060cc:	203ff81e 	bne	r4,zero,8060b0 <memcpy+0x78>
  8060d0:	413fff04 	addi	r4,r8,-4
  8060d4:	2008d0ba 	srli	r4,r4,2
  8060d8:	318000cc 	andi	r6,r6,3
  8060dc:	31ffffc4 	addi	r7,r6,-1
  8060e0:	21000044 	addi	r4,r4,1
  8060e4:	200890ba 	slli	r4,r4,2
  8060e8:	1907883a 	add	r3,r3,r4
  8060ec:	290b883a 	add	r5,r5,r4
  8060f0:	3000041e 	bne	r6,zero,806104 <memcpy+0xcc>
  8060f4:	f800283a 	ret
  8060f8:	2007883a 	mov	r3,r4
  8060fc:	31ffffc4 	addi	r7,r6,-1
  806100:	303ffc26 	beq	r6,zero,8060f4 <memcpy+0xbc>
  806104:	39c00044 	addi	r7,r7,1
  806108:	19cf883a 	add	r7,r3,r7
  80610c:	29800003 	ldbu	r6,0(r5)
  806110:	18c00044 	addi	r3,r3,1
  806114:	29400044 	addi	r5,r5,1
  806118:	19bfffc5 	stb	r6,-1(r3)
  80611c:	38fffb1e 	bne	r7,r3,80610c <memcpy+0xd4>
  806120:	f800283a 	ret
  806124:	31ffffc4 	addi	r7,r6,-1
  806128:	2007883a 	mov	r3,r4
  80612c:	003ff506 	br	806104 <memcpy+0xcc>
  806130:	400d883a 	mov	r6,r8
  806134:	003ff106 	br	8060fc <memcpy+0xc4>

00806138 <memmove>:
  806138:	2005883a 	mov	r2,r4
  80613c:	29000a2e 	bgeu	r5,r4,806168 <memmove+0x30>
  806140:	2989883a 	add	r4,r5,r6
  806144:	1100082e 	bgeu	r2,r4,806168 <memmove+0x30>
  806148:	1187883a 	add	r3,r2,r6
  80614c:	30003e26 	beq	r6,zero,806248 <memmove+0x110>
  806150:	217fffc3 	ldbu	r5,-1(r4)
  806154:	18ffffc4 	addi	r3,r3,-1
  806158:	213fffc4 	addi	r4,r4,-1
  80615c:	19400005 	stb	r5,0(r3)
  806160:	10fffb1e 	bne	r2,r3,806150 <memmove+0x18>
  806164:	f800283a 	ret
  806168:	30c00430 	cmpltui	r3,r6,16
  80616c:	18000b26 	beq	r3,zero,80619c <memmove+0x64>
  806170:	1007883a 	mov	r3,r2
  806174:	31ffffc4 	addi	r7,r6,-1
  806178:	30003726 	beq	r6,zero,806258 <memmove+0x120>
  80617c:	39c00044 	addi	r7,r7,1
  806180:	29cf883a 	add	r7,r5,r7
  806184:	29800003 	ldbu	r6,0(r5)
  806188:	29400044 	addi	r5,r5,1
  80618c:	18c00044 	addi	r3,r3,1
  806190:	19bfffc5 	stb	r6,-1(r3)
  806194:	29fffb1e 	bne	r5,r7,806184 <memmove+0x4c>
  806198:	f800283a 	ret
  80619c:	2886b03a 	or	r3,r5,r2
  8061a0:	18c000cc 	andi	r3,r3,3
  8061a4:	1800291e 	bne	r3,zero,80624c <memmove+0x114>
  8061a8:	327ffc04 	addi	r9,r6,-16
  8061ac:	4812d13a 	srli	r9,r9,4
  8061b0:	280f883a 	mov	r7,r5
  8061b4:	1007883a 	mov	r3,r2
  8061b8:	4a400044 	addi	r9,r9,1
  8061bc:	4812913a 	slli	r9,r9,4
  8061c0:	1251883a 	add	r8,r2,r9
  8061c4:	39000017 	ldw	r4,0(r7)
  8061c8:	39c00404 	addi	r7,r7,16
  8061cc:	18c00404 	addi	r3,r3,16
  8061d0:	193ffc15 	stw	r4,-16(r3)
  8061d4:	393ffd17 	ldw	r4,-12(r7)
  8061d8:	193ffd15 	stw	r4,-12(r3)
  8061dc:	393ffe17 	ldw	r4,-8(r7)
  8061e0:	193ffe15 	stw	r4,-8(r3)
  8061e4:	393fff17 	ldw	r4,-4(r7)
  8061e8:	193fff15 	stw	r4,-4(r3)
  8061ec:	40fff51e 	bne	r8,r3,8061c4 <memmove+0x8c>
  8061f0:	3100030c 	andi	r4,r6,12
  8061f4:	2a4b883a 	add	r5,r5,r9
  8061f8:	320003cc 	andi	r8,r6,15
  8061fc:	20001726 	beq	r4,zero,80625c <memmove+0x124>
  806200:	2813883a 	mov	r9,r5
  806204:	180f883a 	mov	r7,r3
  806208:	4a800017 	ldw	r10,0(r9)
  80620c:	39c00104 	addi	r7,r7,4
  806210:	41c9c83a 	sub	r4,r8,r7
  806214:	1909883a 	add	r4,r3,r4
  806218:	21000128 	cmpgeui	r4,r4,4
  80621c:	3abfff15 	stw	r10,-4(r7)
  806220:	4a400104 	addi	r9,r9,4
  806224:	203ff81e 	bne	r4,zero,806208 <memmove+0xd0>
  806228:	413fff04 	addi	r4,r8,-4
  80622c:	2008d0ba 	srli	r4,r4,2
  806230:	318000cc 	andi	r6,r6,3
  806234:	21000044 	addi	r4,r4,1
  806238:	200890ba 	slli	r4,r4,2
  80623c:	1907883a 	add	r3,r3,r4
  806240:	290b883a 	add	r5,r5,r4
  806244:	003fcb06 	br	806174 <memmove+0x3c>
  806248:	f800283a 	ret
  80624c:	31ffffc4 	addi	r7,r6,-1
  806250:	1007883a 	mov	r3,r2
  806254:	003fc906 	br	80617c <memmove+0x44>
  806258:	f800283a 	ret
  80625c:	400d883a 	mov	r6,r8
  806260:	003fc406 	br	806174 <memmove+0x3c>

00806264 <memset>:
  806264:	20c000cc 	andi	r3,r4,3
  806268:	2005883a 	mov	r2,r4
  80626c:	18003626 	beq	r3,zero,806348 <memset+0xe4>
  806270:	31ffffc4 	addi	r7,r6,-1
  806274:	30003326 	beq	r6,zero,806344 <memset+0xe0>
  806278:	2811883a 	mov	r8,r5
  80627c:	2007883a 	mov	r3,r4
  806280:	00000306 	br	806290 <memset+0x2c>
  806284:	39ffffc4 	addi	r7,r7,-1
  806288:	39bfffe0 	cmpeqi	r6,r7,-1
  80628c:	30002d1e 	bne	r6,zero,806344 <memset+0xe0>
  806290:	18c00044 	addi	r3,r3,1
  806294:	198000cc 	andi	r6,r3,3
  806298:	1a3fffc5 	stb	r8,-1(r3)
  80629c:	303ff91e 	bne	r6,zero,806284 <memset+0x20>
  8062a0:	39000130 	cmpltui	r4,r7,4
  8062a4:	2000221e 	bne	r4,zero,806330 <memset+0xcc>
  8062a8:	29003fcc 	andi	r4,r5,255
  8062ac:	200c923a 	slli	r6,r4,8
  8062b0:	3a000430 	cmpltui	r8,r7,16
  8062b4:	3108b03a 	or	r4,r6,r4
  8062b8:	200c943a 	slli	r6,r4,16
  8062bc:	310cb03a 	or	r6,r6,r4
  8062c0:	40000e1e 	bne	r8,zero,8062fc <memset+0x98>
  8062c4:	393ffc04 	addi	r4,r7,-16
  8062c8:	2008d13a 	srli	r4,r4,4
  8062cc:	21000044 	addi	r4,r4,1
  8062d0:	2008913a 	slli	r4,r4,4
  8062d4:	1909883a 	add	r4,r3,r4
  8062d8:	19800015 	stw	r6,0(r3)
  8062dc:	19800115 	stw	r6,4(r3)
  8062e0:	19800215 	stw	r6,8(r3)
  8062e4:	19800315 	stw	r6,12(r3)
  8062e8:	18c00404 	addi	r3,r3,16
  8062ec:	20fffa1e 	bne	r4,r3,8062d8 <memset+0x74>
  8062f0:	3900030c 	andi	r4,r7,12
  8062f4:	39c003cc 	andi	r7,r7,15
  8062f8:	20000d26 	beq	r4,zero,806330 <memset+0xcc>
  8062fc:	1811883a 	mov	r8,r3
  806300:	42000104 	addi	r8,r8,4
  806304:	3a09c83a 	sub	r4,r7,r8
  806308:	1909883a 	add	r4,r3,r4
  80630c:	21000128 	cmpgeui	r4,r4,4
  806310:	41bfff15 	stw	r6,-4(r8)
  806314:	203ffa1e 	bne	r4,zero,806300 <memset+0x9c>
  806318:	393fff04 	addi	r4,r7,-4
  80631c:	2008d0ba 	srli	r4,r4,2
  806320:	39c000cc 	andi	r7,r7,3
  806324:	21000044 	addi	r4,r4,1
  806328:	200890ba 	slli	r4,r4,2
  80632c:	1907883a 	add	r3,r3,r4
  806330:	38000426 	beq	r7,zero,806344 <memset+0xe0>
  806334:	19cf883a 	add	r7,r3,r7
  806338:	18c00044 	addi	r3,r3,1
  80633c:	197fffc5 	stb	r5,-1(r3)
  806340:	38fffd1e 	bne	r7,r3,806338 <memset+0xd4>
  806344:	f800283a 	ret
  806348:	2007883a 	mov	r3,r4
  80634c:	300f883a 	mov	r7,r6
  806350:	003fd306 	br	8062a0 <memset+0x3c>

00806354 <_Balloc>:
  806354:	20801317 	ldw	r2,76(r4)
  806358:	defffc04 	addi	sp,sp,-16
  80635c:	dc400115 	stw	r17,4(sp)
  806360:	dc000015 	stw	r16,0(sp)
  806364:	dfc00315 	stw	ra,12(sp)
  806368:	dc800215 	stw	r18,8(sp)
  80636c:	2021883a 	mov	r16,r4
  806370:	2823883a 	mov	r17,r5
  806374:	10000e26 	beq	r2,zero,8063b0 <_Balloc+0x5c>
  806378:	880690ba 	slli	r3,r17,2
  80637c:	10c7883a 	add	r3,r2,r3
  806380:	18800017 	ldw	r2,0(r3)
  806384:	10001126 	beq	r2,zero,8063cc <_Balloc+0x78>
  806388:	11000017 	ldw	r4,0(r2)
  80638c:	19000015 	stw	r4,0(r3)
  806390:	10000415 	stw	zero,16(r2)
  806394:	10000315 	stw	zero,12(r2)
  806398:	dfc00317 	ldw	ra,12(sp)
  80639c:	dc800217 	ldw	r18,8(sp)
  8063a0:	dc400117 	ldw	r17,4(sp)
  8063a4:	dc000017 	ldw	r16,0(sp)
  8063a8:	dec00404 	addi	sp,sp,16
  8063ac:	f800283a 	ret
  8063b0:	01800844 	movi	r6,33
  8063b4:	01400104 	movi	r5,4
  8063b8:	08095ac0 	call	8095ac <_calloc_r>
  8063bc:	80801315 	stw	r2,76(r16)
  8063c0:	103fed1e 	bne	r2,zero,806378 <_Balloc+0x24>
  8063c4:	0005883a 	mov	r2,zero
  8063c8:	003ff306 	br	806398 <_Balloc+0x44>
  8063cc:	04800044 	movi	r18,1
  8063d0:	9464983a 	sll	r18,r18,r17
  8063d4:	01400044 	movi	r5,1
  8063d8:	8009883a 	mov	r4,r16
  8063dc:	91800144 	addi	r6,r18,5
  8063e0:	300c90ba 	slli	r6,r6,2
  8063e4:	08095ac0 	call	8095ac <_calloc_r>
  8063e8:	103ff626 	beq	r2,zero,8063c4 <_Balloc+0x70>
  8063ec:	14400115 	stw	r17,4(r2)
  8063f0:	14800215 	stw	r18,8(r2)
  8063f4:	003fe606 	br	806390 <_Balloc+0x3c>

008063f8 <_Bfree>:
  8063f8:	28000726 	beq	r5,zero,806418 <_Bfree+0x20>
  8063fc:	28c00117 	ldw	r3,4(r5)
  806400:	20801317 	ldw	r2,76(r4)
  806404:	180690ba 	slli	r3,r3,2
  806408:	10c5883a 	add	r2,r2,r3
  80640c:	10c00017 	ldw	r3,0(r2)
  806410:	28c00015 	stw	r3,0(r5)
  806414:	11400015 	stw	r5,0(r2)
  806418:	f800283a 	ret

0080641c <__multadd>:
  80641c:	defff704 	addi	sp,sp,-36
  806420:	dc800215 	stw	r18,8(sp)
  806424:	2c800417 	ldw	r18,16(r5)
  806428:	ddc00715 	stw	r23,28(sp)
  80642c:	dd800615 	stw	r22,24(sp)
  806430:	dd400515 	stw	r21,20(sp)
  806434:	dd000415 	stw	r20,16(sp)
  806438:	dcc00315 	stw	r19,12(sp)
  80643c:	dc400115 	stw	r17,4(sp)
  806440:	dfc00815 	stw	ra,32(sp)
  806444:	dc000015 	stw	r16,0(sp)
  806448:	2827883a 	mov	r19,r5
  80644c:	2029883a 	mov	r20,r4
  806450:	302b883a 	mov	r21,r6
  806454:	3823883a 	mov	r17,r7
  806458:	2d800504 	addi	r22,r5,20
  80645c:	002f883a 	mov	r23,zero
  806460:	b4000017 	ldw	r16,0(r22)
  806464:	a80b883a 	mov	r5,r21
  806468:	b5800104 	addi	r22,r22,4
  80646c:	813fffcc 	andi	r4,r16,65535
  806470:	080b2180 	call	80b218 <__mulsi3>
  806474:	8008d43a 	srli	r4,r16,16
  806478:	a80b883a 	mov	r5,r21
  80647c:	1461883a 	add	r16,r2,r17
  806480:	080b2180 	call	80b218 <__mulsi3>
  806484:	800ed43a 	srli	r7,r16,16
  806488:	843fffcc 	andi	r16,r16,65535
  80648c:	bdc00044 	addi	r23,r23,1
  806490:	11c5883a 	add	r2,r2,r7
  806494:	1006943a 	slli	r3,r2,16
  806498:	1022d43a 	srli	r17,r2,16
  80649c:	1c21883a 	add	r16,r3,r16
  8064a0:	b43fff15 	stw	r16,-4(r22)
  8064a4:	bcbfee16 	blt	r23,r18,806460 <__multadd+0x44>
  8064a8:	88000826 	beq	r17,zero,8064cc <__multadd+0xb0>
  8064ac:	98800217 	ldw	r2,8(r19)
  8064b0:	9080120e 	bge	r18,r2,8064fc <__multadd+0xe0>
  8064b4:	90800144 	addi	r2,r18,5
  8064b8:	100490ba 	slli	r2,r2,2
  8064bc:	94800044 	addi	r18,r18,1
  8064c0:	9885883a 	add	r2,r19,r2
  8064c4:	14400015 	stw	r17,0(r2)
  8064c8:	9c800415 	stw	r18,16(r19)
  8064cc:	9805883a 	mov	r2,r19
  8064d0:	dfc00817 	ldw	ra,32(sp)
  8064d4:	ddc00717 	ldw	r23,28(sp)
  8064d8:	dd800617 	ldw	r22,24(sp)
  8064dc:	dd400517 	ldw	r21,20(sp)
  8064e0:	dd000417 	ldw	r20,16(sp)
  8064e4:	dcc00317 	ldw	r19,12(sp)
  8064e8:	dc800217 	ldw	r18,8(sp)
  8064ec:	dc400117 	ldw	r17,4(sp)
  8064f0:	dc000017 	ldw	r16,0(sp)
  8064f4:	dec00904 	addi	sp,sp,36
  8064f8:	f800283a 	ret
  8064fc:	99400117 	ldw	r5,4(r19)
  806500:	a009883a 	mov	r4,r20
  806504:	29400044 	addi	r5,r5,1
  806508:	08063540 	call	806354 <_Balloc>
  80650c:	1021883a 	mov	r16,r2
  806510:	10001226 	beq	r2,zero,80655c <__multadd+0x140>
  806514:	99800417 	ldw	r6,16(r19)
  806518:	99400304 	addi	r5,r19,12
  80651c:	11000304 	addi	r4,r2,12
  806520:	31800084 	addi	r6,r6,2
  806524:	300c90ba 	slli	r6,r6,2
  806528:	08060380 	call	806038 <memcpy>
  80652c:	98000926 	beq	r19,zero,806554 <__multadd+0x138>
  806530:	98c00117 	ldw	r3,4(r19)
  806534:	a0801317 	ldw	r2,76(r20)
  806538:	180690ba 	slli	r3,r3,2
  80653c:	10c5883a 	add	r2,r2,r3
  806540:	10c00017 	ldw	r3,0(r2)
  806544:	98c00015 	stw	r3,0(r19)
  806548:	14c00015 	stw	r19,0(r2)
  80654c:	8027883a 	mov	r19,r16
  806550:	003fd806 	br	8064b4 <__multadd+0x98>
  806554:	8027883a 	mov	r19,r16
  806558:	003fd606 	br	8064b4 <__multadd+0x98>
  80655c:	01c02074 	movhi	r7,129
  806560:	01002074 	movhi	r4,129
  806564:	39c44f04 	addi	r7,r7,4412
  806568:	000d883a 	mov	r6,zero
  80656c:	01402d44 	movi	r5,181
  806570:	21046404 	addi	r4,r4,4496
  806574:	08095340 	call	809534 <__assert_func>

00806578 <__s2b>:
  806578:	defff904 	addi	sp,sp,-28
  80657c:	dc800215 	stw	r18,8(sp)
  806580:	dc000015 	stw	r16,0(sp)
  806584:	2025883a 	mov	r18,r4
  806588:	2821883a 	mov	r16,r5
  80658c:	39000204 	addi	r4,r7,8
  806590:	01400244 	movi	r5,9
  806594:	dcc00315 	stw	r19,12(sp)
  806598:	dc400115 	stw	r17,4(sp)
  80659c:	dfc00615 	stw	ra,24(sp)
  8065a0:	3823883a 	mov	r17,r7
  8065a4:	dd400515 	stw	r21,20(sp)
  8065a8:	dd000415 	stw	r20,16(sp)
  8065ac:	3027883a 	mov	r19,r6
  8065b0:	080b0640 	call	80b064 <__divsi3>
  8065b4:	88c00290 	cmplti	r3,r17,10
  8065b8:	1800341e 	bne	r3,zero,80668c <__s2b+0x114>
  8065bc:	00c00044 	movi	r3,1
  8065c0:	000b883a 	mov	r5,zero
  8065c4:	18c7883a 	add	r3,r3,r3
  8065c8:	29400044 	addi	r5,r5,1
  8065cc:	18bffd16 	blt	r3,r2,8065c4 <__s2b+0x4c>
  8065d0:	9009883a 	mov	r4,r18
  8065d4:	08063540 	call	806354 <_Balloc>
  8065d8:	100b883a 	mov	r5,r2
  8065dc:	10002d26 	beq	r2,zero,806694 <__s2b+0x11c>
  8065e0:	d8800717 	ldw	r2,28(sp)
  8065e4:	28800515 	stw	r2,20(r5)
  8065e8:	00800044 	movi	r2,1
  8065ec:	28800415 	stw	r2,16(r5)
  8065f0:	98800290 	cmplti	r2,r19,10
  8065f4:	1000221e 	bne	r2,zero,806680 <__s2b+0x108>
  8065f8:	85400244 	addi	r21,r16,9
  8065fc:	a829883a 	mov	r20,r21
  806600:	84e1883a 	add	r16,r16,r19
  806604:	a1c00007 	ldb	r7,0(r20)
  806608:	01800284 	movi	r6,10
  80660c:	9009883a 	mov	r4,r18
  806610:	39fff404 	addi	r7,r7,-48
  806614:	080641c0 	call	80641c <__multadd>
  806618:	a5000044 	addi	r20,r20,1
  80661c:	100b883a 	mov	r5,r2
  806620:	a43ff81e 	bne	r20,r16,806604 <__s2b+0x8c>
  806624:	9c3ffe04 	addi	r16,r19,-8
  806628:	ac21883a 	add	r16,r21,r16
  80662c:	9c400a0e 	bge	r19,r17,806658 <__s2b+0xe0>
  806630:	8ce3c83a 	sub	r17,r17,r19
  806634:	8463883a 	add	r17,r16,r17
  806638:	81c00007 	ldb	r7,0(r16)
  80663c:	01800284 	movi	r6,10
  806640:	9009883a 	mov	r4,r18
  806644:	39fff404 	addi	r7,r7,-48
  806648:	080641c0 	call	80641c <__multadd>
  80664c:	84000044 	addi	r16,r16,1
  806650:	100b883a 	mov	r5,r2
  806654:	8c3ff81e 	bne	r17,r16,806638 <__s2b+0xc0>
  806658:	2805883a 	mov	r2,r5
  80665c:	dfc00617 	ldw	ra,24(sp)
  806660:	dd400517 	ldw	r21,20(sp)
  806664:	dd000417 	ldw	r20,16(sp)
  806668:	dcc00317 	ldw	r19,12(sp)
  80666c:	dc800217 	ldw	r18,8(sp)
  806670:	dc400117 	ldw	r17,4(sp)
  806674:	dc000017 	ldw	r16,0(sp)
  806678:	dec00704 	addi	sp,sp,28
  80667c:	f800283a 	ret
  806680:	84000284 	addi	r16,r16,10
  806684:	04c00244 	movi	r19,9
  806688:	003fe806 	br	80662c <__s2b+0xb4>
  80668c:	000b883a 	mov	r5,zero
  806690:	003fcf06 	br	8065d0 <__s2b+0x58>
  806694:	01c02074 	movhi	r7,129
  806698:	01002074 	movhi	r4,129
  80669c:	39c44f04 	addi	r7,r7,4412
  8066a0:	000d883a 	mov	r6,zero
  8066a4:	01403384 	movi	r5,206
  8066a8:	21046404 	addi	r4,r4,4496
  8066ac:	08095340 	call	809534 <__assert_func>

008066b0 <__hi0bits>:
  8066b0:	20bfffec 	andhi	r2,r4,65535
  8066b4:	1000131e 	bne	r2,zero,806704 <__hi0bits+0x54>
  8066b8:	2008943a 	slli	r4,r4,16
  8066bc:	00800404 	movi	r2,16
  8066c0:	20ffc02c 	andhi	r3,r4,65280
  8066c4:	1800021e 	bne	r3,zero,8066d0 <__hi0bits+0x20>
  8066c8:	2008923a 	slli	r4,r4,8
  8066cc:	10800204 	addi	r2,r2,8
  8066d0:	20fc002c 	andhi	r3,r4,61440
  8066d4:	1800021e 	bne	r3,zero,8066e0 <__hi0bits+0x30>
  8066d8:	2008913a 	slli	r4,r4,4
  8066dc:	10800104 	addi	r2,r2,4
  8066e0:	20f0002c 	andhi	r3,r4,49152
  8066e4:	1800021e 	bne	r3,zero,8066f0 <__hi0bits+0x40>
  8066e8:	200890ba 	slli	r4,r4,2
  8066ec:	10800084 	addi	r2,r2,2
  8066f0:	20000316 	blt	r4,zero,806700 <__hi0bits+0x50>
  8066f4:	2110002c 	andhi	r4,r4,16384
  8066f8:	10800044 	addi	r2,r2,1
  8066fc:	20000326 	beq	r4,zero,80670c <__hi0bits+0x5c>
  806700:	f800283a 	ret
  806704:	0005883a 	mov	r2,zero
  806708:	003fed06 	br	8066c0 <__hi0bits+0x10>
  80670c:	00800804 	movi	r2,32
  806710:	f800283a 	ret

00806714 <__lo0bits>:
  806714:	20c00017 	ldw	r3,0(r4)
  806718:	188001cc 	andi	r2,r3,7
  80671c:	10000826 	beq	r2,zero,806740 <__lo0bits+0x2c>
  806720:	1880004c 	andi	r2,r3,1
  806724:	10001f1e 	bne	r2,zero,8067a4 <__lo0bits+0x90>
  806728:	1880008c 	andi	r2,r3,2
  80672c:	10002126 	beq	r2,zero,8067b4 <__lo0bits+0xa0>
  806730:	1806d07a 	srli	r3,r3,1
  806734:	00800044 	movi	r2,1
  806738:	20c00015 	stw	r3,0(r4)
  80673c:	f800283a 	ret
  806740:	18bfffcc 	andi	r2,r3,65535
  806744:	10001426 	beq	r2,zero,806798 <__lo0bits+0x84>
  806748:	0005883a 	mov	r2,zero
  80674c:	19403fcc 	andi	r5,r3,255
  806750:	2800021e 	bne	r5,zero,80675c <__lo0bits+0x48>
  806754:	1806d23a 	srli	r3,r3,8
  806758:	10800204 	addi	r2,r2,8
  80675c:	194003cc 	andi	r5,r3,15
  806760:	2800021e 	bne	r5,zero,80676c <__lo0bits+0x58>
  806764:	1806d13a 	srli	r3,r3,4
  806768:	10800104 	addi	r2,r2,4
  80676c:	194000cc 	andi	r5,r3,3
  806770:	2800021e 	bne	r5,zero,80677c <__lo0bits+0x68>
  806774:	1806d0ba 	srli	r3,r3,2
  806778:	10800084 	addi	r2,r2,2
  80677c:	1940004c 	andi	r5,r3,1
  806780:	2800031e 	bne	r5,zero,806790 <__lo0bits+0x7c>
  806784:	1806d07a 	srli	r3,r3,1
  806788:	10800044 	addi	r2,r2,1
  80678c:	18000726 	beq	r3,zero,8067ac <__lo0bits+0x98>
  806790:	20c00015 	stw	r3,0(r4)
  806794:	f800283a 	ret
  806798:	1806d43a 	srli	r3,r3,16
  80679c:	00800404 	movi	r2,16
  8067a0:	003fea06 	br	80674c <__lo0bits+0x38>
  8067a4:	0005883a 	mov	r2,zero
  8067a8:	f800283a 	ret
  8067ac:	00800804 	movi	r2,32
  8067b0:	f800283a 	ret
  8067b4:	1806d0ba 	srli	r3,r3,2
  8067b8:	00800084 	movi	r2,2
  8067bc:	20c00015 	stw	r3,0(r4)
  8067c0:	f800283a 	ret

008067c4 <__i2b>:
  8067c4:	20c01317 	ldw	r3,76(r4)
  8067c8:	defffd04 	addi	sp,sp,-12
  8067cc:	dc400115 	stw	r17,4(sp)
  8067d0:	dc000015 	stw	r16,0(sp)
  8067d4:	dfc00215 	stw	ra,8(sp)
  8067d8:	2021883a 	mov	r16,r4
  8067dc:	2823883a 	mov	r17,r5
  8067e0:	18000d26 	beq	r3,zero,806818 <__i2b+0x54>
  8067e4:	18800117 	ldw	r2,4(r3)
  8067e8:	10001826 	beq	r2,zero,80684c <__i2b+0x88>
  8067ec:	11000017 	ldw	r4,0(r2)
  8067f0:	19000115 	stw	r4,4(r3)
  8067f4:	00c00044 	movi	r3,1
  8067f8:	10000315 	stw	zero,12(r2)
  8067fc:	14400515 	stw	r17,20(r2)
  806800:	10c00415 	stw	r3,16(r2)
  806804:	dfc00217 	ldw	ra,8(sp)
  806808:	dc400117 	ldw	r17,4(sp)
  80680c:	dc000017 	ldw	r16,0(sp)
  806810:	dec00304 	addi	sp,sp,12
  806814:	f800283a 	ret
  806818:	01800844 	movi	r6,33
  80681c:	01400104 	movi	r5,4
  806820:	08095ac0 	call	8095ac <_calloc_r>
  806824:	80801315 	stw	r2,76(r16)
  806828:	1007883a 	mov	r3,r2
  80682c:	103fed1e 	bne	r2,zero,8067e4 <__i2b+0x20>
  806830:	01c02074 	movhi	r7,129
  806834:	01002074 	movhi	r4,129
  806838:	39c44f04 	addi	r7,r7,4412
  80683c:	000d883a 	mov	r6,zero
  806840:	01405004 	movi	r5,320
  806844:	21046404 	addi	r4,r4,4496
  806848:	08095340 	call	809534 <__assert_func>
  80684c:	01800704 	movi	r6,28
  806850:	01400044 	movi	r5,1
  806854:	8009883a 	mov	r4,r16
  806858:	08095ac0 	call	8095ac <_calloc_r>
  80685c:	103ff426 	beq	r2,zero,806830 <__i2b+0x6c>
  806860:	00c00044 	movi	r3,1
  806864:	10c00115 	stw	r3,4(r2)
  806868:	00c00084 	movi	r3,2
  80686c:	10c00215 	stw	r3,8(r2)
  806870:	003fe006 	br	8067f4 <__i2b+0x30>

00806874 <__multiply>:
  806874:	defff004 	addi	sp,sp,-64
  806878:	dd800c15 	stw	r22,48(sp)
  80687c:	dc400715 	stw	r17,28(sp)
  806880:	2d800417 	ldw	r22,16(r5)
  806884:	34400417 	ldw	r17,16(r6)
  806888:	dc800815 	stw	r18,32(sp)
  80688c:	dc000615 	stw	r16,24(sp)
  806890:	dfc00f15 	stw	ra,60(sp)
  806894:	df000e15 	stw	fp,56(sp)
  806898:	ddc00d15 	stw	r23,52(sp)
  80689c:	dd400b15 	stw	r21,44(sp)
  8068a0:	dd000a15 	stw	r20,40(sp)
  8068a4:	dcc00915 	stw	r19,36(sp)
  8068a8:	2825883a 	mov	r18,r5
  8068ac:	3021883a 	mov	r16,r6
  8068b0:	b4400516 	blt	r22,r17,8068c8 <__multiply+0x54>
  8068b4:	8807883a 	mov	r3,r17
  8068b8:	2821883a 	mov	r16,r5
  8068bc:	b023883a 	mov	r17,r22
  8068c0:	3025883a 	mov	r18,r6
  8068c4:	182d883a 	mov	r22,r3
  8068c8:	80800217 	ldw	r2,8(r16)
  8068cc:	8d87883a 	add	r3,r17,r22
  8068d0:	d8c00015 	stw	r3,0(sp)
  8068d4:	81400117 	ldw	r5,4(r16)
  8068d8:	10c0010e 	bge	r2,r3,8068e0 <__multiply+0x6c>
  8068dc:	29400044 	addi	r5,r5,1
  8068e0:	08063540 	call	806354 <_Balloc>
  8068e4:	d8800515 	stw	r2,20(sp)
  8068e8:	10008c26 	beq	r2,zero,806b1c <__multiply+0x2a8>
  8068ec:	d8800017 	ldw	r2,0(sp)
  8068f0:	102690ba 	slli	r19,r2,2
  8068f4:	d8800517 	ldw	r2,20(sp)
  8068f8:	15000504 	addi	r20,r2,20
  8068fc:	a4c5883a 	add	r2,r20,r19
  806900:	d8800115 	stw	r2,4(sp)
  806904:	a0800a2e 	bgeu	r20,r2,806930 <__multiply+0xbc>
  806908:	d8800117 	ldw	r2,4(sp)
  80690c:	d8c00517 	ldw	r3,20(sp)
  806910:	000b883a 	mov	r5,zero
  806914:	a009883a 	mov	r4,r20
  806918:	10cdc83a 	sub	r6,r2,r3
  80691c:	31bffac4 	addi	r6,r6,-21
  806920:	300cd0ba 	srli	r6,r6,2
  806924:	31800044 	addi	r6,r6,1
  806928:	300c90ba 	slli	r6,r6,2
  80692c:	08062640 	call	806264 <memset>
  806930:	b02c90ba 	slli	r22,r22,2
  806934:	882290ba 	slli	r17,r17,2
  806938:	94800504 	addi	r18,r18,20
  80693c:	80800504 	addi	r2,r16,20
  806940:	9587883a 	add	r3,r18,r22
  806944:	d8800315 	stw	r2,12(sp)
  806948:	d8c00215 	stw	r3,8(sp)
  80694c:	1463883a 	add	r17,r2,r17
  806950:	90c0542e 	bgeu	r18,r3,806aa4 <__multiply+0x230>
  806954:	80800544 	addi	r2,r16,21
  806958:	88806d36 	bltu	r17,r2,806b10 <__multiply+0x29c>
  80695c:	8c05c83a 	sub	r2,r17,r16
  806960:	10bffac4 	addi	r2,r2,-21
  806964:	1004d0ba 	srli	r2,r2,2
  806968:	10800044 	addi	r2,r2,1
  80696c:	100490ba 	slli	r2,r2,2
  806970:	d8800415 	stw	r2,16(sp)
  806974:	00000606 	br	806990 <__multiply+0x11c>
  806978:	102ad43a 	srli	r21,r2,16
  80697c:	a800271e 	bne	r21,zero,806a1c <__multiply+0x1a8>
  806980:	d8800217 	ldw	r2,8(sp)
  806984:	94800104 	addi	r18,r18,4
  806988:	a5000104 	addi	r20,r20,4
  80698c:	9080452e 	bgeu	r18,r2,806aa4 <__multiply+0x230>
  806990:	90800017 	ldw	r2,0(r18)
  806994:	15ffffcc 	andi	r23,r2,65535
  806998:	b83ff726 	beq	r23,zero,806978 <__multiply+0x104>
  80699c:	dd400317 	ldw	r21,12(sp)
  8069a0:	a02d883a 	mov	r22,r20
  8069a4:	0027883a 	mov	r19,zero
  8069a8:	af000017 	ldw	fp,0(r21)
  8069ac:	b4000017 	ldw	r16,0(r22)
  8069b0:	b80b883a 	mov	r5,r23
  8069b4:	e13fffcc 	andi	r4,fp,65535
  8069b8:	080b2180 	call	80b218 <__mulsi3>
  8069bc:	e008d43a 	srli	r4,fp,16
  8069c0:	823fffcc 	andi	r8,r16,65535
  8069c4:	1205883a 	add	r2,r2,r8
  8069c8:	b80b883a 	mov	r5,r23
  8069cc:	14e7883a 	add	r19,r2,r19
  8069d0:	8020d43a 	srli	r16,r16,16
  8069d4:	080b2180 	call	80b218 <__mulsi3>
  8069d8:	9808d43a 	srli	r4,r19,16
  8069dc:	1405883a 	add	r2,r2,r16
  8069e0:	98ffffcc 	andi	r3,r19,65535
  8069e4:	1105883a 	add	r2,r2,r4
  8069e8:	1008943a 	slli	r4,r2,16
  8069ec:	b5800104 	addi	r22,r22,4
  8069f0:	ad400104 	addi	r21,r21,4
  8069f4:	20c6b03a 	or	r3,r4,r3
  8069f8:	b0ffff15 	stw	r3,-4(r22)
  8069fc:	1026d43a 	srli	r19,r2,16
  806a00:	ac7fe936 	bltu	r21,r17,8069a8 <__multiply+0x134>
  806a04:	d8800417 	ldw	r2,16(sp)
  806a08:	a085883a 	add	r2,r20,r2
  806a0c:	14c00015 	stw	r19,0(r2)
  806a10:	90800017 	ldw	r2,0(r18)
  806a14:	102ad43a 	srli	r21,r2,16
  806a18:	a83fd926 	beq	r21,zero,806980 <__multiply+0x10c>
  806a1c:	a5c00017 	ldw	r23,0(r20)
  806a20:	dd800317 	ldw	r22,12(sp)
  806a24:	a027883a 	mov	r19,r20
  806a28:	b821883a 	mov	r16,r23
  806a2c:	0039883a 	mov	fp,zero
  806a30:	b100000b 	ldhu	r4,0(r22)
  806a34:	a80b883a 	mov	r5,r21
  806a38:	9cc00104 	addi	r19,r19,4
  806a3c:	080b2180 	call	80b218 <__mulsi3>
  806a40:	800cd43a 	srli	r6,r16,16
  806a44:	b8ffffcc 	andi	r3,r23,65535
  806a48:	b5800104 	addi	r22,r22,4
  806a4c:	118d883a 	add	r6,r2,r6
  806a50:	3739883a 	add	fp,r6,fp
  806a54:	e004943a 	slli	r2,fp,16
  806a58:	9c000017 	ldw	r16,0(r19)
  806a5c:	a80b883a 	mov	r5,r21
  806a60:	10c6b03a 	or	r3,r2,r3
  806a64:	98ffff15 	stw	r3,-4(r19)
  806a68:	b13fff8b 	ldhu	r4,-2(r22)
  806a6c:	080b2180 	call	80b218 <__mulsi3>
  806a70:	e00cd43a 	srli	r6,fp,16
  806a74:	80ffffcc 	andi	r3,r16,65535
  806a78:	10c7883a 	add	r3,r2,r3
  806a7c:	19af883a 	add	r23,r3,r6
  806a80:	b838d43a 	srli	fp,r23,16
  806a84:	b47fea36 	bltu	r22,r17,806a30 <__multiply+0x1bc>
  806a88:	d8800417 	ldw	r2,16(sp)
  806a8c:	94800104 	addi	r18,r18,4
  806a90:	a085883a 	add	r2,r20,r2
  806a94:	15c00015 	stw	r23,0(r2)
  806a98:	d8800217 	ldw	r2,8(sp)
  806a9c:	a5000104 	addi	r20,r20,4
  806aa0:	90bfbb36 	bltu	r18,r2,806990 <__multiply+0x11c>
  806aa4:	d8800017 	ldw	r2,0(sp)
  806aa8:	00800516 	blt	zero,r2,806ac0 <__multiply+0x24c>
  806aac:	00000906 	br	806ad4 <__multiply+0x260>
  806ab0:	d8800017 	ldw	r2,0(sp)
  806ab4:	10bfffc4 	addi	r2,r2,-1
  806ab8:	d8800015 	stw	r2,0(sp)
  806abc:	10000526 	beq	r2,zero,806ad4 <__multiply+0x260>
  806ac0:	d8c00117 	ldw	r3,4(sp)
  806ac4:	18bfff17 	ldw	r2,-4(r3)
  806ac8:	18ffff04 	addi	r3,r3,-4
  806acc:	d8c00115 	stw	r3,4(sp)
  806ad0:	103ff726 	beq	r2,zero,806ab0 <__multiply+0x23c>
  806ad4:	d8800517 	ldw	r2,20(sp)
  806ad8:	d8c00017 	ldw	r3,0(sp)
  806adc:	10c00415 	stw	r3,16(r2)
  806ae0:	dfc00f17 	ldw	ra,60(sp)
  806ae4:	df000e17 	ldw	fp,56(sp)
  806ae8:	ddc00d17 	ldw	r23,52(sp)
  806aec:	dd800c17 	ldw	r22,48(sp)
  806af0:	dd400b17 	ldw	r21,44(sp)
  806af4:	dd000a17 	ldw	r20,40(sp)
  806af8:	dcc00917 	ldw	r19,36(sp)
  806afc:	dc800817 	ldw	r18,32(sp)
  806b00:	dc400717 	ldw	r17,28(sp)
  806b04:	dc000617 	ldw	r16,24(sp)
  806b08:	dec01004 	addi	sp,sp,64
  806b0c:	f800283a 	ret
  806b10:	00800104 	movi	r2,4
  806b14:	d8800415 	stw	r2,16(sp)
  806b18:	003f9d06 	br	806990 <__multiply+0x11c>
  806b1c:	01c02074 	movhi	r7,129
  806b20:	01002074 	movhi	r4,129
  806b24:	39c44f04 	addi	r7,r7,4412
  806b28:	000d883a 	mov	r6,zero
  806b2c:	01405744 	movi	r5,349
  806b30:	21046404 	addi	r4,r4,4496
  806b34:	08095340 	call	809534 <__assert_func>

00806b38 <__pow5mult>:
  806b38:	defffb04 	addi	sp,sp,-20
  806b3c:	dcc00315 	stw	r19,12(sp)
  806b40:	dc000015 	stw	r16,0(sp)
  806b44:	dfc00415 	stw	ra,16(sp)
  806b48:	dc800215 	stw	r18,8(sp)
  806b4c:	dc400115 	stw	r17,4(sp)
  806b50:	308000cc 	andi	r2,r6,3
  806b54:	3021883a 	mov	r16,r6
  806b58:	2027883a 	mov	r19,r4
  806b5c:	10002d1e 	bne	r2,zero,806c14 <__pow5mult+0xdc>
  806b60:	2825883a 	mov	r18,r5
  806b64:	8021d0ba 	srai	r16,r16,2
  806b68:	80001926 	beq	r16,zero,806bd0 <__pow5mult+0x98>
  806b6c:	9c401217 	ldw	r17,72(r19)
  806b70:	8800061e 	bne	r17,zero,806b8c <__pow5mult+0x54>
  806b74:	00002f06 	br	806c34 <__pow5mult+0xfc>
  806b78:	8021d07a 	srai	r16,r16,1
  806b7c:	80001426 	beq	r16,zero,806bd0 <__pow5mult+0x98>
  806b80:	88800017 	ldw	r2,0(r17)
  806b84:	10001a26 	beq	r2,zero,806bf0 <__pow5mult+0xb8>
  806b88:	1023883a 	mov	r17,r2
  806b8c:	8080004c 	andi	r2,r16,1
  806b90:	103ff926 	beq	r2,zero,806b78 <__pow5mult+0x40>
  806b94:	880d883a 	mov	r6,r17
  806b98:	900b883a 	mov	r5,r18
  806b9c:	9809883a 	mov	r4,r19
  806ba0:	08068740 	call	806874 <__multiply>
  806ba4:	90001926 	beq	r18,zero,806c0c <__pow5mult+0xd4>
  806ba8:	91000117 	ldw	r4,4(r18)
  806bac:	98c01317 	ldw	r3,76(r19)
  806bb0:	8021d07a 	srai	r16,r16,1
  806bb4:	200890ba 	slli	r4,r4,2
  806bb8:	1907883a 	add	r3,r3,r4
  806bbc:	19000017 	ldw	r4,0(r3)
  806bc0:	91000015 	stw	r4,0(r18)
  806bc4:	1c800015 	stw	r18,0(r3)
  806bc8:	1025883a 	mov	r18,r2
  806bcc:	803fec1e 	bne	r16,zero,806b80 <__pow5mult+0x48>
  806bd0:	9005883a 	mov	r2,r18
  806bd4:	dfc00417 	ldw	ra,16(sp)
  806bd8:	dcc00317 	ldw	r19,12(sp)
  806bdc:	dc800217 	ldw	r18,8(sp)
  806be0:	dc400117 	ldw	r17,4(sp)
  806be4:	dc000017 	ldw	r16,0(sp)
  806be8:	dec00504 	addi	sp,sp,20
  806bec:	f800283a 	ret
  806bf0:	880d883a 	mov	r6,r17
  806bf4:	880b883a 	mov	r5,r17
  806bf8:	9809883a 	mov	r4,r19
  806bfc:	08068740 	call	806874 <__multiply>
  806c00:	88800015 	stw	r2,0(r17)
  806c04:	10000015 	stw	zero,0(r2)
  806c08:	003fdf06 	br	806b88 <__pow5mult+0x50>
  806c0c:	1025883a 	mov	r18,r2
  806c10:	003fd906 	br	806b78 <__pow5mult+0x40>
  806c14:	100490ba 	slli	r2,r2,2
  806c18:	00c02074 	movhi	r3,129
  806c1c:	000f883a 	mov	r7,zero
  806c20:	10c7883a 	add	r3,r2,r3
  806c24:	19847317 	ldw	r6,4556(r3)
  806c28:	080641c0 	call	80641c <__multadd>
  806c2c:	1025883a 	mov	r18,r2
  806c30:	003fcc06 	br	806b64 <__pow5mult+0x2c>
  806c34:	01400044 	movi	r5,1
  806c38:	9809883a 	mov	r4,r19
  806c3c:	08063540 	call	806354 <_Balloc>
  806c40:	1023883a 	mov	r17,r2
  806c44:	10000726 	beq	r2,zero,806c64 <__pow5mult+0x12c>
  806c48:	00809c44 	movi	r2,625
  806c4c:	88800515 	stw	r2,20(r17)
  806c50:	00800044 	movi	r2,1
  806c54:	88800415 	stw	r2,16(r17)
  806c58:	9c401215 	stw	r17,72(r19)
  806c5c:	88000015 	stw	zero,0(r17)
  806c60:	003fca06 	br	806b8c <__pow5mult+0x54>
  806c64:	01c02074 	movhi	r7,129
  806c68:	01002074 	movhi	r4,129
  806c6c:	39c44f04 	addi	r7,r7,4412
  806c70:	000d883a 	mov	r6,zero
  806c74:	01405004 	movi	r5,320
  806c78:	21046404 	addi	r4,r4,4496
  806c7c:	08095340 	call	809534 <__assert_func>

00806c80 <__lshift>:
  806c80:	defff804 	addi	sp,sp,-32
  806c84:	dd800615 	stw	r22,24(sp)
  806c88:	dc000015 	stw	r16,0(sp)
  806c8c:	302dd17a 	srai	r22,r6,5
  806c90:	2c000417 	ldw	r16,16(r5)
  806c94:	28800217 	ldw	r2,8(r5)
  806c98:	dd000415 	stw	r20,16(sp)
  806c9c:	b421883a 	add	r16,r22,r16
  806ca0:	dcc00315 	stw	r19,12(sp)
  806ca4:	dc800215 	stw	r18,8(sp)
  806ca8:	dc400115 	stw	r17,4(sp)
  806cac:	dfc00715 	stw	ra,28(sp)
  806cb0:	dd400515 	stw	r21,20(sp)
  806cb4:	85000044 	addi	r20,r16,1
  806cb8:	2827883a 	mov	r19,r5
  806cbc:	3025883a 	mov	r18,r6
  806cc0:	29400117 	ldw	r5,4(r5)
  806cc4:	2023883a 	mov	r17,r4
  806cc8:	1500030e 	bge	r2,r20,806cd8 <__lshift+0x58>
  806ccc:	1085883a 	add	r2,r2,r2
  806cd0:	29400044 	addi	r5,r5,1
  806cd4:	153ffd16 	blt	r2,r20,806ccc <__lshift+0x4c>
  806cd8:	8809883a 	mov	r4,r17
  806cdc:	08063540 	call	806354 <_Balloc>
  806ce0:	102b883a 	mov	r21,r2
  806ce4:	10004126 	beq	r2,zero,806dec <__lshift+0x16c>
  806ce8:	11000504 	addi	r4,r2,20
  806cec:	0580050e 	bge	zero,r22,806d04 <__lshift+0x84>
  806cf0:	b02c90ba 	slli	r22,r22,2
  806cf4:	000b883a 	mov	r5,zero
  806cf8:	b00d883a 	mov	r6,r22
  806cfc:	08062640 	call	806264 <memset>
  806d00:	1589883a 	add	r4,r2,r22
  806d04:	9a000417 	ldw	r8,16(r19)
  806d08:	98c00504 	addi	r3,r19,20
  806d0c:	948007cc 	andi	r18,r18,31
  806d10:	401090ba 	slli	r8,r8,2
  806d14:	1a11883a 	add	r8,r3,r8
  806d18:	90002c26 	beq	r18,zero,806dcc <__lshift+0x14c>
  806d1c:	01400804 	movi	r5,32
  806d20:	2c8bc83a 	sub	r5,r5,r18
  806d24:	2005883a 	mov	r2,r4
  806d28:	000f883a 	mov	r7,zero
  806d2c:	19800017 	ldw	r6,0(r3)
  806d30:	10800104 	addi	r2,r2,4
  806d34:	18c00104 	addi	r3,r3,4
  806d38:	348c983a 	sll	r6,r6,r18
  806d3c:	31ccb03a 	or	r6,r6,r7
  806d40:	11bfff15 	stw	r6,-4(r2)
  806d44:	19bfff17 	ldw	r6,-4(r3)
  806d48:	314ed83a 	srl	r7,r6,r5
  806d4c:	1a3ff736 	bltu	r3,r8,806d2c <__lshift+0xac>
  806d50:	98800544 	addi	r2,r19,21
  806d54:	40802336 	bltu	r8,r2,806de4 <__lshift+0x164>
  806d58:	44c7c83a 	sub	r3,r8,r19
  806d5c:	18fffac4 	addi	r3,r3,-21
  806d60:	1806d0ba 	srli	r3,r3,2
  806d64:	18c00044 	addi	r3,r3,1
  806d68:	180690ba 	slli	r3,r3,2
  806d6c:	20c9883a 	add	r4,r4,r3
  806d70:	21c00015 	stw	r7,0(r4)
  806d74:	38000126 	beq	r7,zero,806d7c <__lshift+0xfc>
  806d78:	a021883a 	mov	r16,r20
  806d7c:	ac000415 	stw	r16,16(r21)
  806d80:	98000726 	beq	r19,zero,806da0 <__lshift+0x120>
  806d84:	98c00117 	ldw	r3,4(r19)
  806d88:	88801317 	ldw	r2,76(r17)
  806d8c:	180690ba 	slli	r3,r3,2
  806d90:	10c5883a 	add	r2,r2,r3
  806d94:	10c00017 	ldw	r3,0(r2)
  806d98:	98c00015 	stw	r3,0(r19)
  806d9c:	14c00015 	stw	r19,0(r2)
  806da0:	a805883a 	mov	r2,r21
  806da4:	dfc00717 	ldw	ra,28(sp)
  806da8:	dd800617 	ldw	r22,24(sp)
  806dac:	dd400517 	ldw	r21,20(sp)
  806db0:	dd000417 	ldw	r20,16(sp)
  806db4:	dcc00317 	ldw	r19,12(sp)
  806db8:	dc800217 	ldw	r18,8(sp)
  806dbc:	dc400117 	ldw	r17,4(sp)
  806dc0:	dc000017 	ldw	r16,0(sp)
  806dc4:	dec00804 	addi	sp,sp,32
  806dc8:	f800283a 	ret
  806dcc:	18800017 	ldw	r2,0(r3)
  806dd0:	18c00104 	addi	r3,r3,4
  806dd4:	21000104 	addi	r4,r4,4
  806dd8:	20bfff15 	stw	r2,-4(r4)
  806ddc:	1a3ffb36 	bltu	r3,r8,806dcc <__lshift+0x14c>
  806de0:	003fe606 	br	806d7c <__lshift+0xfc>
  806de4:	00c00104 	movi	r3,4
  806de8:	003fe006 	br	806d6c <__lshift+0xec>
  806dec:	01c02074 	movhi	r7,129
  806df0:	01002074 	movhi	r4,129
  806df4:	39c44f04 	addi	r7,r7,4412
  806df8:	000d883a 	mov	r6,zero
  806dfc:	01407644 	movi	r5,473
  806e00:	21046404 	addi	r4,r4,4496
  806e04:	08095340 	call	809534 <__assert_func>

00806e08 <__mcmp>:
  806e08:	21800417 	ldw	r6,16(r4)
  806e0c:	28c00417 	ldw	r3,16(r5)
  806e10:	30c5c83a 	sub	r2,r6,r3
  806e14:	30c00e1e 	bne	r6,r3,806e50 <__mcmp+0x48>
  806e18:	180690ba 	slli	r3,r3,2
  806e1c:	21c00504 	addi	r7,r4,20
  806e20:	29400504 	addi	r5,r5,20
  806e24:	38c9883a 	add	r4,r7,r3
  806e28:	28c7883a 	add	r3,r5,r3
  806e2c:	00000106 	br	806e34 <__mcmp+0x2c>
  806e30:	3900082e 	bgeu	r7,r4,806e54 <__mcmp+0x4c>
  806e34:	21bfff17 	ldw	r6,-4(r4)
  806e38:	197fff17 	ldw	r5,-4(r3)
  806e3c:	213fff04 	addi	r4,r4,-4
  806e40:	18ffff04 	addi	r3,r3,-4
  806e44:	317ffa26 	beq	r6,r5,806e30 <__mcmp+0x28>
  806e48:	3140032e 	bgeu	r6,r5,806e58 <__mcmp+0x50>
  806e4c:	00bfffc4 	movi	r2,-1
  806e50:	f800283a 	ret
  806e54:	f800283a 	ret
  806e58:	00800044 	movi	r2,1
  806e5c:	f800283a 	ret

00806e60 <__mdiff>:
  806e60:	28800417 	ldw	r2,16(r5)
  806e64:	30c00417 	ldw	r3,16(r6)
  806e68:	defffc04 	addi	sp,sp,-16
  806e6c:	dc800215 	stw	r18,8(sp)
  806e70:	dc400115 	stw	r17,4(sp)
  806e74:	dc000015 	stw	r16,0(sp)
  806e78:	dfc00315 	stw	ra,12(sp)
  806e7c:	2823883a 	mov	r17,r5
  806e80:	3021883a 	mov	r16,r6
  806e84:	10e5c83a 	sub	r18,r2,r3
  806e88:	10c0641e 	bne	r2,r3,80701c <__mdiff+0x1bc>
  806e8c:	180c90ba 	slli	r6,r3,2
  806e90:	29400504 	addi	r5,r5,20
  806e94:	80c00504 	addi	r3,r16,20
  806e98:	2985883a 	add	r2,r5,r6
  806e9c:	1987883a 	add	r3,r3,r6
  806ea0:	00000106 	br	806ea8 <__mdiff+0x48>
  806ea4:	2880642e 	bgeu	r5,r2,807038 <__mdiff+0x1d8>
  806ea8:	11bfff17 	ldw	r6,-4(r2)
  806eac:	19ffff17 	ldw	r7,-4(r3)
  806eb0:	10bfff04 	addi	r2,r2,-4
  806eb4:	18ffff04 	addi	r3,r3,-4
  806eb8:	31fffa26 	beq	r6,r7,806ea4 <__mdiff+0x44>
  806ebc:	31c05236 	bltu	r6,r7,807008 <__mdiff+0x1a8>
  806ec0:	89400117 	ldw	r5,4(r17)
  806ec4:	08063540 	call	806354 <_Balloc>
  806ec8:	10006226 	beq	r2,zero,807054 <__mdiff+0x1f4>
  806ecc:	8a400417 	ldw	r9,16(r17)
  806ed0:	83000417 	ldw	r12,16(r16)
  806ed4:	8ac00504 	addi	r11,r17,20
  806ed8:	481090ba 	slli	r8,r9,2
  806edc:	601890ba 	slli	r12,r12,2
  806ee0:	81800504 	addi	r6,r16,20
  806ee4:	13400504 	addi	r13,r2,20
  806ee8:	14800315 	stw	r18,12(r2)
  806eec:	5a11883a 	add	r8,r11,r8
  806ef0:	3319883a 	add	r12,r6,r12
  806ef4:	681d883a 	mov	r14,r13
  806ef8:	5815883a 	mov	r10,r11
  806efc:	0007883a 	mov	r3,zero
  806f00:	51000017 	ldw	r4,0(r10)
  806f04:	31c00017 	ldw	r7,0(r6)
  806f08:	73800104 	addi	r14,r14,4
  806f0c:	217fffcc 	andi	r5,r4,65535
  806f10:	28cb883a 	add	r5,r5,r3
  806f14:	38ffffcc 	andi	r3,r7,65535
  806f18:	28cbc83a 	sub	r5,r5,r3
  806f1c:	380ed43a 	srli	r7,r7,16
  806f20:	2006d43a 	srli	r3,r4,16
  806f24:	2809d43a 	srai	r4,r5,16
  806f28:	297fffcc 	andi	r5,r5,65535
  806f2c:	19c7c83a 	sub	r3,r3,r7
  806f30:	1907883a 	add	r3,r3,r4
  806f34:	1808943a 	slli	r4,r3,16
  806f38:	31800104 	addi	r6,r6,4
  806f3c:	1807d43a 	srai	r3,r3,16
  806f40:	214ab03a 	or	r5,r4,r5
  806f44:	717fff15 	stw	r5,-4(r14)
  806f48:	52800104 	addi	r10,r10,4
  806f4c:	333fec36 	bltu	r6,r12,806f00 <__mdiff+0xa0>
  806f50:	640fc83a 	sub	r7,r12,r16
  806f54:	39fffac4 	addi	r7,r7,-21
  806f58:	84000544 	addi	r16,r16,21
  806f5c:	380ed0ba 	srli	r7,r7,2
  806f60:	64003336 	bltu	r12,r16,807030 <__mdiff+0x1d0>
  806f64:	380890ba 	slli	r4,r7,2
  806f68:	6909883a 	add	r4,r13,r4
  806f6c:	64002e36 	bltu	r12,r16,807028 <__mdiff+0x1c8>
  806f70:	39800044 	addi	r6,r7,1
  806f74:	300c90ba 	slli	r6,r6,2
  806f78:	5997883a 	add	r11,r11,r6
  806f7c:	699b883a 	add	r13,r13,r6
  806f80:	5a00152e 	bgeu	r11,r8,806fd8 <__mdiff+0x178>
  806f84:	680f883a 	mov	r7,r13
  806f88:	580d883a 	mov	r6,r11
  806f8c:	31000017 	ldw	r4,0(r6)
  806f90:	39c00104 	addi	r7,r7,4
  806f94:	31800104 	addi	r6,r6,4
  806f98:	217fffcc 	andi	r5,r4,65535
  806f9c:	28cb883a 	add	r5,r5,r3
  806fa0:	2815d43a 	srai	r10,r5,16
  806fa4:	2006d43a 	srli	r3,r4,16
  806fa8:	297fffcc 	andi	r5,r5,65535
  806fac:	1a87883a 	add	r3,r3,r10
  806fb0:	1814943a 	slli	r10,r3,16
  806fb4:	1807d43a 	srai	r3,r3,16
  806fb8:	514ab03a 	or	r5,r10,r5
  806fbc:	397fff15 	stw	r5,-4(r7)
  806fc0:	323ff236 	bltu	r6,r8,806f8c <__mdiff+0x12c>
  806fc4:	413fffc4 	addi	r4,r8,-1
  806fc8:	22c9c83a 	sub	r4,r4,r11
  806fcc:	2008d0ba 	srli	r4,r4,2
  806fd0:	200890ba 	slli	r4,r4,2
  806fd4:	6909883a 	add	r4,r13,r4
  806fd8:	2800041e 	bne	r5,zero,806fec <__mdiff+0x18c>
  806fdc:	20ffff17 	ldw	r3,-4(r4)
  806fe0:	4a7fffc4 	addi	r9,r9,-1
  806fe4:	213fff04 	addi	r4,r4,-4
  806fe8:	183ffc26 	beq	r3,zero,806fdc <__mdiff+0x17c>
  806fec:	12400415 	stw	r9,16(r2)
  806ff0:	dfc00317 	ldw	ra,12(sp)
  806ff4:	dc800217 	ldw	r18,8(sp)
  806ff8:	dc400117 	ldw	r17,4(sp)
  806ffc:	dc000017 	ldw	r16,0(sp)
  807000:	dec00404 	addi	sp,sp,16
  807004:	f800283a 	ret
  807008:	8805883a 	mov	r2,r17
  80700c:	04800044 	movi	r18,1
  807010:	8023883a 	mov	r17,r16
  807014:	1021883a 	mov	r16,r2
  807018:	003fa906 	br	806ec0 <__mdiff+0x60>
  80701c:	903ffa16 	blt	r18,zero,807008 <__mdiff+0x1a8>
  807020:	0025883a 	mov	r18,zero
  807024:	003fa606 	br	806ec0 <__mdiff+0x60>
  807028:	01800104 	movi	r6,4
  80702c:	003fd206 	br	806f78 <__mdiff+0x118>
  807030:	0009883a 	mov	r4,zero
  807034:	003fcc06 	br	806f68 <__mdiff+0x108>
  807038:	000b883a 	mov	r5,zero
  80703c:	08063540 	call	806354 <_Balloc>
  807040:	10000b26 	beq	r2,zero,807070 <__mdiff+0x210>
  807044:	00c00044 	movi	r3,1
  807048:	10c00415 	stw	r3,16(r2)
  80704c:	10000515 	stw	zero,20(r2)
  807050:	003fe706 	br	806ff0 <__mdiff+0x190>
  807054:	01c02074 	movhi	r7,129
  807058:	01002074 	movhi	r4,129
  80705c:	39c44f04 	addi	r7,r7,4412
  807060:	000d883a 	mov	r6,zero
  807064:	01409004 	movi	r5,576
  807068:	21046404 	addi	r4,r4,4496
  80706c:	08095340 	call	809534 <__assert_func>
  807070:	01c02074 	movhi	r7,129
  807074:	01002074 	movhi	r4,129
  807078:	39c44f04 	addi	r7,r7,4412
  80707c:	000d883a 	mov	r6,zero
  807080:	01408c84 	movi	r5,562
  807084:	21046404 	addi	r4,r4,4496
  807088:	08095340 	call	809534 <__assert_func>

0080708c <__ulp>:
  80708c:	28dffc2c 	andhi	r3,r5,32752
  807090:	017f3034 	movhi	r5,64704
  807094:	1947883a 	add	r3,r3,r5
  807098:	00c0020e 	bge	zero,r3,8070a4 <__ulp+0x18>
  80709c:	0005883a 	mov	r2,zero
  8070a0:	f800283a 	ret
  8070a4:	00c7c83a 	sub	r3,zero,r3
  8070a8:	1807d53a 	srai	r3,r3,20
  8070ac:	18800508 	cmpgei	r2,r3,20
  8070b0:	1000041e 	bne	r2,zero,8070c4 <__ulp+0x38>
  8070b4:	00800234 	movhi	r2,8
  8070b8:	10c7d83a 	sra	r3,r2,r3
  8070bc:	0005883a 	mov	r2,zero
  8070c0:	f800283a 	ret
  8070c4:	193ffb04 	addi	r4,r3,-20
  8070c8:	208007c8 	cmpgei	r2,r4,31
  8070cc:	0007883a 	mov	r3,zero
  8070d0:	1000031e 	bne	r2,zero,8070e0 <__ulp+0x54>
  8070d4:	00a00034 	movhi	r2,32768
  8070d8:	1104d83a 	srl	r2,r2,r4
  8070dc:	f800283a 	ret
  8070e0:	00800044 	movi	r2,1
  8070e4:	f800283a 	ret

008070e8 <__b2d>:
  8070e8:	defffa04 	addi	sp,sp,-24
  8070ec:	dc400115 	stw	r17,4(sp)
  8070f0:	24400417 	ldw	r17,16(r4)
  8070f4:	dc000015 	stw	r16,0(sp)
  8070f8:	24000504 	addi	r16,r4,20
  8070fc:	882290ba 	slli	r17,r17,2
  807100:	dc800215 	stw	r18,8(sp)
  807104:	dd000415 	stw	r20,16(sp)
  807108:	8463883a 	add	r17,r16,r17
  80710c:	8cbfff17 	ldw	r18,-4(r17)
  807110:	dcc00315 	stw	r19,12(sp)
  807114:	dfc00515 	stw	ra,20(sp)
  807118:	9009883a 	mov	r4,r18
  80711c:	2827883a 	mov	r19,r5
  807120:	08066b00 	call	8066b0 <__hi0bits>
  807124:	00c00804 	movi	r3,32
  807128:	1889c83a 	sub	r4,r3,r2
  80712c:	99000015 	stw	r4,0(r19)
  807130:	110002c8 	cmpgei	r4,r2,11
  807134:	8d3fff04 	addi	r20,r17,-4
  807138:	20002026 	beq	r4,zero,8071bc <__b2d+0xd4>
  80713c:	10bffd44 	addi	r2,r2,-11
  807140:	85000e2e 	bgeu	r16,r20,80717c <__b2d+0x94>
  807144:	897ffe17 	ldw	r5,-8(r17)
  807148:	10001226 	beq	r2,zero,807194 <__b2d+0xac>
  80714c:	1889c83a 	sub	r4,r3,r2
  807150:	90a4983a 	sll	r18,r18,r2
  807154:	2906d83a 	srl	r3,r5,r4
  807158:	89bffe04 	addi	r6,r17,-8
  80715c:	2884983a 	sll	r2,r5,r2
  807160:	90e4b03a 	or	r18,r18,r3
  807164:	90cffc34 	orhi	r3,r18,16368
  807168:	81800c2e 	bgeu	r16,r6,80719c <__b2d+0xb4>
  80716c:	897ffd17 	ldw	r5,-12(r17)
  807170:	2908d83a 	srl	r4,r5,r4
  807174:	1104b03a 	or	r2,r2,r4
  807178:	00000806 	br	80719c <__b2d+0xb4>
  80717c:	10000426 	beq	r2,zero,807190 <__b2d+0xa8>
  807180:	90a4983a 	sll	r18,r18,r2
  807184:	0005883a 	mov	r2,zero
  807188:	90cffc34 	orhi	r3,r18,16368
  80718c:	00000306 	br	80719c <__b2d+0xb4>
  807190:	000b883a 	mov	r5,zero
  807194:	90cffc34 	orhi	r3,r18,16368
  807198:	2805883a 	mov	r2,r5
  80719c:	dfc00517 	ldw	ra,20(sp)
  8071a0:	dd000417 	ldw	r20,16(sp)
  8071a4:	dcc00317 	ldw	r19,12(sp)
  8071a8:	dc800217 	ldw	r18,8(sp)
  8071ac:	dc400117 	ldw	r17,4(sp)
  8071b0:	dc000017 	ldw	r16,0(sp)
  8071b4:	dec00604 	addi	sp,sp,24
  8071b8:	f800283a 	ret
  8071bc:	014002c4 	movi	r5,11
  8071c0:	2889c83a 	sub	r4,r5,r2
  8071c4:	9106d83a 	srl	r3,r18,r4
  8071c8:	18cffc34 	orhi	r3,r3,16368
  8071cc:	85000536 	bltu	r16,r20,8071e4 <__b2d+0xfc>
  8071d0:	000b883a 	mov	r5,zero
  8071d4:	10800544 	addi	r2,r2,21
  8071d8:	9084983a 	sll	r2,r18,r2
  8071dc:	1144b03a 	or	r2,r2,r5
  8071e0:	003fee06 	br	80719c <__b2d+0xb4>
  8071e4:	897ffe17 	ldw	r5,-8(r17)
  8071e8:	290ad83a 	srl	r5,r5,r4
  8071ec:	003ff906 	br	8071d4 <__b2d+0xec>

008071f0 <__d2b>:
  8071f0:	defff804 	addi	sp,sp,-32
  8071f4:	dd000615 	stw	r20,24(sp)
  8071f8:	2829883a 	mov	r20,r5
  8071fc:	01400044 	movi	r5,1
  807200:	dcc00515 	stw	r19,20(sp)
  807204:	dc000215 	stw	r16,8(sp)
  807208:	dfc00715 	stw	ra,28(sp)
  80720c:	dc800415 	stw	r18,16(sp)
  807210:	dc400315 	stw	r17,12(sp)
  807214:	3021883a 	mov	r16,r6
  807218:	3827883a 	mov	r19,r7
  80721c:	08063540 	call	806354 <_Balloc>
  807220:	10004526 	beq	r2,zero,807338 <__d2b+0x148>
  807224:	8024d53a 	srli	r18,r16,20
  807228:	01800434 	movhi	r6,16
  80722c:	31bfffc4 	addi	r6,r6,-1
  807230:	9481ffcc 	andi	r18,r18,2047
  807234:	1023883a 	mov	r17,r2
  807238:	81a0703a 	and	r16,r16,r6
  80723c:	90000126 	beq	r18,zero,807244 <__d2b+0x54>
  807240:	84000434 	orhi	r16,r16,16
  807244:	dc000115 	stw	r16,4(sp)
  807248:	a0002226 	beq	r20,zero,8072d4 <__d2b+0xe4>
  80724c:	d809883a 	mov	r4,sp
  807250:	dd000015 	stw	r20,0(sp)
  807254:	08067140 	call	806714 <__lo0bits>
  807258:	d8c00117 	ldw	r3,4(sp)
  80725c:	10003326 	beq	r2,zero,80732c <__d2b+0x13c>
  807260:	01000804 	movi	r4,32
  807264:	2089c83a 	sub	r4,r4,r2
  807268:	1908983a 	sll	r4,r3,r4
  80726c:	d9400017 	ldw	r5,0(sp)
  807270:	1886d83a 	srl	r3,r3,r2
  807274:	2148b03a 	or	r4,r4,r5
  807278:	89000515 	stw	r4,20(r17)
  80727c:	d8c00115 	stw	r3,4(sp)
  807280:	88c00615 	stw	r3,24(r17)
  807284:	1800271e 	bne	r3,zero,807324 <__d2b+0x134>
  807288:	04000044 	movi	r16,1
  80728c:	8c000415 	stw	r16,16(r17)
  807290:	90001926 	beq	r18,zero,8072f8 <__d2b+0x108>
  807294:	00c00d44 	movi	r3,53
  807298:	94bef344 	addi	r18,r18,-1075
  80729c:	90a5883a 	add	r18,r18,r2
  8072a0:	1885c83a 	sub	r2,r3,r2
  8072a4:	d8c00817 	ldw	r3,32(sp)
  8072a8:	9c800015 	stw	r18,0(r19)
  8072ac:	18800015 	stw	r2,0(r3)
  8072b0:	8805883a 	mov	r2,r17
  8072b4:	dfc00717 	ldw	ra,28(sp)
  8072b8:	dd000617 	ldw	r20,24(sp)
  8072bc:	dcc00517 	ldw	r19,20(sp)
  8072c0:	dc800417 	ldw	r18,16(sp)
  8072c4:	dc400317 	ldw	r17,12(sp)
  8072c8:	dc000217 	ldw	r16,8(sp)
  8072cc:	dec00804 	addi	sp,sp,32
  8072d0:	f800283a 	ret
  8072d4:	d9000104 	addi	r4,sp,4
  8072d8:	08067140 	call	806714 <__lo0bits>
  8072dc:	00c00044 	movi	r3,1
  8072e0:	88c00415 	stw	r3,16(r17)
  8072e4:	d8c00117 	ldw	r3,4(sp)
  8072e8:	10800804 	addi	r2,r2,32
  8072ec:	04000044 	movi	r16,1
  8072f0:	88c00515 	stw	r3,20(r17)
  8072f4:	903fe71e 	bne	r18,zero,807294 <__d2b+0xa4>
  8072f8:	800690ba 	slli	r3,r16,2
  8072fc:	10bef384 	addi	r2,r2,-1074
  807300:	98800015 	stw	r2,0(r19)
  807304:	88c5883a 	add	r2,r17,r3
  807308:	11000417 	ldw	r4,16(r2)
  80730c:	8020917a 	slli	r16,r16,5
  807310:	08066b00 	call	8066b0 <__hi0bits>
  807314:	80a1c83a 	sub	r16,r16,r2
  807318:	d8800817 	ldw	r2,32(sp)
  80731c:	14000015 	stw	r16,0(r2)
  807320:	003fe306 	br	8072b0 <__d2b+0xc0>
  807324:	04000084 	movi	r16,2
  807328:	003fd806 	br	80728c <__d2b+0x9c>
  80732c:	d9000017 	ldw	r4,0(sp)
  807330:	89000515 	stw	r4,20(r17)
  807334:	003fd206 	br	807280 <__d2b+0x90>
  807338:	01c02074 	movhi	r7,129
  80733c:	01002074 	movhi	r4,129
  807340:	39c44f04 	addi	r7,r7,4412
  807344:	000d883a 	mov	r6,zero
  807348:	0140c284 	movi	r5,778
  80734c:	21046404 	addi	r4,r4,4496
  807350:	08095340 	call	809534 <__assert_func>

00807354 <__ratio>:
  807354:	defff904 	addi	sp,sp,-28
  807358:	dc400315 	stw	r17,12(sp)
  80735c:	2823883a 	mov	r17,r5
  807360:	d80b883a 	mov	r5,sp
  807364:	dfc00615 	stw	ra,24(sp)
  807368:	dcc00515 	stw	r19,20(sp)
  80736c:	dc800415 	stw	r18,16(sp)
  807370:	2027883a 	mov	r19,r4
  807374:	dc000215 	stw	r16,8(sp)
  807378:	08070e80 	call	8070e8 <__b2d>
  80737c:	d9400104 	addi	r5,sp,4
  807380:	8809883a 	mov	r4,r17
  807384:	1025883a 	mov	r18,r2
  807388:	1821883a 	mov	r16,r3
  80738c:	08070e80 	call	8070e8 <__b2d>
  807390:	89000417 	ldw	r4,16(r17)
  807394:	9a000417 	ldw	r8,16(r19)
  807398:	d9400117 	ldw	r5,4(sp)
  80739c:	100d883a 	mov	r6,r2
  8073a0:	4111c83a 	sub	r8,r8,r4
  8073a4:	d9000017 	ldw	r4,0(sp)
  8073a8:	4010917a 	slli	r8,r8,5
  8073ac:	180f883a 	mov	r7,r3
  8073b0:	2149c83a 	sub	r4,r4,r5
  8073b4:	4111883a 	add	r8,r8,r4
  8073b8:	02000c0e 	bge	zero,r8,8073ec <__ratio+0x98>
  8073bc:	4010953a 	slli	r8,r8,20
  8073c0:	4421883a 	add	r16,r8,r16
  8073c4:	9009883a 	mov	r4,r18
  8073c8:	800b883a 	mov	r5,r16
  8073cc:	080bb300 	call	80bb30 <__divdf3>
  8073d0:	dfc00617 	ldw	ra,24(sp)
  8073d4:	dcc00517 	ldw	r19,20(sp)
  8073d8:	dc800417 	ldw	r18,16(sp)
  8073dc:	dc400317 	ldw	r17,12(sp)
  8073e0:	dc000217 	ldw	r16,8(sp)
  8073e4:	dec00704 	addi	sp,sp,28
  8073e8:	f800283a 	ret
  8073ec:	4010953a 	slli	r8,r8,20
  8073f0:	1a0fc83a 	sub	r7,r3,r8
  8073f4:	003ff306 	br	8073c4 <__ratio+0x70>

008073f8 <_mprec_log10>:
  8073f8:	defffe04 	addi	sp,sp,-8
  8073fc:	dc000015 	stw	r16,0(sp)
  807400:	dfc00115 	stw	ra,4(sp)
  807404:	20800608 	cmpgei	r2,r4,24
  807408:	2021883a 	mov	r16,r4
  80740c:	10000f26 	beq	r2,zero,80744c <_mprec_log10+0x54>
  807410:	0009883a 	mov	r4,zero
  807414:	014ffc34 	movhi	r5,16368
  807418:	000d883a 	mov	r6,zero
  80741c:	01d00934 	movhi	r7,16420
  807420:	080c6b00 	call	80c6b0 <__muldf3>
  807424:	843fffc4 	addi	r16,r16,-1
  807428:	1009883a 	mov	r4,r2
  80742c:	180b883a 	mov	r5,r3
  807430:	803ff91e 	bne	r16,zero,807418 <_mprec_log10+0x20>
  807434:	2005883a 	mov	r2,r4
  807438:	2807883a 	mov	r3,r5
  80743c:	dfc00117 	ldw	ra,4(sp)
  807440:	dc000017 	ldw	r16,0(sp)
  807444:	dec00204 	addi	sp,sp,8
  807448:	f800283a 	ret
  80744c:	202090fa 	slli	r16,r4,3
  807450:	00802074 	movhi	r2,129
  807454:	10848b04 	addi	r2,r2,4652
  807458:	1421883a 	add	r16,r2,r16
  80745c:	81000017 	ldw	r4,0(r16)
  807460:	81400117 	ldw	r5,4(r16)
  807464:	003ff306 	br	807434 <_mprec_log10+0x3c>

00807468 <__copybits>:
  807468:	297fffc4 	addi	r5,r5,-1
  80746c:	280fd17a 	srai	r7,r5,5
  807470:	31400417 	ldw	r5,16(r6)
  807474:	30800504 	addi	r2,r6,20
  807478:	39c00044 	addi	r7,r7,1
  80747c:	280a90ba 	slli	r5,r5,2
  807480:	380e90ba 	slli	r7,r7,2
  807484:	114b883a 	add	r5,r2,r5
  807488:	21cf883a 	add	r7,r4,r7
  80748c:	11400c2e 	bgeu	r2,r5,8074c0 <__copybits+0x58>
  807490:	2007883a 	mov	r3,r4
  807494:	12000017 	ldw	r8,0(r2)
  807498:	10800104 	addi	r2,r2,4
  80749c:	18c00104 	addi	r3,r3,4
  8074a0:	1a3fff15 	stw	r8,-4(r3)
  8074a4:	117ffb36 	bltu	r2,r5,807494 <__copybits+0x2c>
  8074a8:	2985c83a 	sub	r2,r5,r6
  8074ac:	10bffac4 	addi	r2,r2,-21
  8074b0:	1004d0ba 	srli	r2,r2,2
  8074b4:	10800044 	addi	r2,r2,1
  8074b8:	100490ba 	slli	r2,r2,2
  8074bc:	2089883a 	add	r4,r4,r2
  8074c0:	21c0072e 	bgeu	r4,r7,8074e0 <__copybits+0x78>
  8074c4:	39bfffc4 	addi	r6,r7,-1
  8074c8:	310dc83a 	sub	r6,r6,r4
  8074cc:	300cd0ba 	srli	r6,r6,2
  8074d0:	000b883a 	mov	r5,zero
  8074d4:	31800044 	addi	r6,r6,1
  8074d8:	300c90ba 	slli	r6,r6,2
  8074dc:	08062641 	jmpi	806264 <memset>
  8074e0:	f800283a 	ret

008074e4 <__any_on>:
  8074e4:	20c00417 	ldw	r3,16(r4)
  8074e8:	280dd17a 	srai	r6,r5,5
  8074ec:	21000504 	addi	r4,r4,20
  8074f0:	1980080e 	bge	r3,r6,807514 <__any_on+0x30>
  8074f4:	180490ba 	slli	r2,r3,2
  8074f8:	2085883a 	add	r2,r4,r2
  8074fc:	20800f2e 	bgeu	r4,r2,80753c <__any_on+0x58>
  807500:	10ffff17 	ldw	r3,-4(r2)
  807504:	10bfff04 	addi	r2,r2,-4
  807508:	183ffc26 	beq	r3,zero,8074fc <__any_on+0x18>
  80750c:	00800044 	movi	r2,1
  807510:	f800283a 	ret
  807514:	300490ba 	slli	r2,r6,2
  807518:	2085883a 	add	r2,r4,r2
  80751c:	30fff70e 	bge	r6,r3,8074fc <__any_on+0x18>
  807520:	294007cc 	andi	r5,r5,31
  807524:	283ff526 	beq	r5,zero,8074fc <__any_on+0x18>
  807528:	11800017 	ldw	r6,0(r2)
  80752c:	3146d83a 	srl	r3,r6,r5
  807530:	194a983a 	sll	r5,r3,r5
  807534:	317ff51e 	bne	r6,r5,80750c <__any_on+0x28>
  807538:	003ff006 	br	8074fc <__any_on+0x18>
  80753c:	0005883a 	mov	r2,zero
  807540:	f800283a 	ret

00807544 <_putc_r>:
  807544:	defffc04 	addi	sp,sp,-16
  807548:	dc400215 	stw	r17,8(sp)
  80754c:	dfc00315 	stw	ra,12(sp)
  807550:	2023883a 	mov	r17,r4
  807554:	20000226 	beq	r4,zero,807560 <_putc_r+0x1c>
  807558:	20800e17 	ldw	r2,56(r4)
  80755c:	10000e26 	beq	r2,zero,807598 <_putc_r+0x54>
  807560:	30800217 	ldw	r2,8(r6)
  807564:	10bfffc4 	addi	r2,r2,-1
  807568:	30800215 	stw	r2,8(r6)
  80756c:	10001316 	blt	r2,zero,8075bc <_putc_r+0x78>
  807570:	30800017 	ldw	r2,0(r6)
  807574:	11400005 	stb	r5,0(r2)
  807578:	30800017 	ldw	r2,0(r6)
  80757c:	10c00044 	addi	r3,r2,1
  807580:	30c00015 	stw	r3,0(r6)
  807584:	10800003 	ldbu	r2,0(r2)
  807588:	dfc00317 	ldw	ra,12(sp)
  80758c:	dc400217 	ldw	r17,8(sp)
  807590:	dec00404 	addi	sp,sp,16
  807594:	f800283a 	ret
  807598:	d9800115 	stw	r6,4(sp)
  80759c:	d9400015 	stw	r5,0(sp)
  8075a0:	0804ab80 	call	804ab8 <__sinit>
  8075a4:	d9800117 	ldw	r6,4(sp)
  8075a8:	d9400017 	ldw	r5,0(sp)
  8075ac:	30800217 	ldw	r2,8(r6)
  8075b0:	10bfffc4 	addi	r2,r2,-1
  8075b4:	30800215 	stw	r2,8(r6)
  8075b8:	103fed0e 	bge	r2,zero,807570 <_putc_r+0x2c>
  8075bc:	30c00617 	ldw	r3,24(r6)
  8075c0:	10c00e16 	blt	r2,r3,8075fc <_putc_r+0xb8>
  8075c4:	30800017 	ldw	r2,0(r6)
  8075c8:	11400005 	stb	r5,0(r2)
  8075cc:	30c00017 	ldw	r3,0(r6)
  8075d0:	18800003 	ldbu	r2,0(r3)
  8075d4:	108002a0 	cmpeqi	r2,r2,10
  8075d8:	1000071e 	bne	r2,zero,8075f8 <_putc_r+0xb4>
  8075dc:	18800044 	addi	r2,r3,1
  8075e0:	30800015 	stw	r2,0(r6)
  8075e4:	18800003 	ldbu	r2,0(r3)
  8075e8:	dfc00317 	ldw	ra,12(sp)
  8075ec:	dc400217 	ldw	r17,8(sp)
  8075f0:	dec00404 	addi	sp,sp,16
  8075f4:	f800283a 	ret
  8075f8:	01400284 	movi	r5,10
  8075fc:	8809883a 	mov	r4,r17
  807600:	dfc00317 	ldw	ra,12(sp)
  807604:	dc400217 	ldw	r17,8(sp)
  807608:	dec00404 	addi	sp,sp,16
  80760c:	08093181 	jmpi	809318 <__swbuf_r>

00807610 <putc>:
  807610:	defffc04 	addi	sp,sp,-16
  807614:	00802074 	movhi	r2,129
  807618:	dc800215 	stw	r18,8(sp)
  80761c:	148ce817 	ldw	r18,13216(r2)
  807620:	dc400115 	stw	r17,4(sp)
  807624:	dfc00315 	stw	ra,12(sp)
  807628:	2023883a 	mov	r17,r4
  80762c:	90000226 	beq	r18,zero,807638 <putc+0x28>
  807630:	90800e17 	ldw	r2,56(r18)
  807634:	10000f26 	beq	r2,zero,807674 <putc+0x64>
  807638:	28800217 	ldw	r2,8(r5)
  80763c:	10bfffc4 	addi	r2,r2,-1
  807640:	28800215 	stw	r2,8(r5)
  807644:	10001316 	blt	r2,zero,807694 <putc+0x84>
  807648:	28800017 	ldw	r2,0(r5)
  80764c:	14400005 	stb	r17,0(r2)
  807650:	28800017 	ldw	r2,0(r5)
  807654:	10c00044 	addi	r3,r2,1
  807658:	28c00015 	stw	r3,0(r5)
  80765c:	10800003 	ldbu	r2,0(r2)
  807660:	dfc00317 	ldw	ra,12(sp)
  807664:	dc800217 	ldw	r18,8(sp)
  807668:	dc400117 	ldw	r17,4(sp)
  80766c:	dec00404 	addi	sp,sp,16
  807670:	f800283a 	ret
  807674:	9009883a 	mov	r4,r18
  807678:	d9400015 	stw	r5,0(sp)
  80767c:	0804ab80 	call	804ab8 <__sinit>
  807680:	d9400017 	ldw	r5,0(sp)
  807684:	28800217 	ldw	r2,8(r5)
  807688:	10bfffc4 	addi	r2,r2,-1
  80768c:	28800215 	stw	r2,8(r5)
  807690:	103fed0e 	bge	r2,zero,807648 <putc+0x38>
  807694:	28c00617 	ldw	r3,24(r5)
  807698:	10c00a16 	blt	r2,r3,8076c4 <putc+0xb4>
  80769c:	28800017 	ldw	r2,0(r5)
  8076a0:	14400005 	stb	r17,0(r2)
  8076a4:	28c00017 	ldw	r3,0(r5)
  8076a8:	18800003 	ldbu	r2,0(r3)
  8076ac:	108002a0 	cmpeqi	r2,r2,10
  8076b0:	10000c1e 	bne	r2,zero,8076e4 <putc+0xd4>
  8076b4:	18800044 	addi	r2,r3,1
  8076b8:	28800015 	stw	r2,0(r5)
  8076bc:	18800003 	ldbu	r2,0(r3)
  8076c0:	003fe706 	br	807660 <putc+0x50>
  8076c4:	280d883a 	mov	r6,r5
  8076c8:	880b883a 	mov	r5,r17
  8076cc:	9009883a 	mov	r4,r18
  8076d0:	dfc00317 	ldw	ra,12(sp)
  8076d4:	dc800217 	ldw	r18,8(sp)
  8076d8:	dc400117 	ldw	r17,4(sp)
  8076dc:	dec00404 	addi	sp,sp,16
  8076e0:	08093181 	jmpi	809318 <__swbuf_r>
  8076e4:	280d883a 	mov	r6,r5
  8076e8:	01400284 	movi	r5,10
  8076ec:	003ff706 	br	8076cc <putc+0xbc>

008076f0 <_realloc_r>:
  8076f0:	defff504 	addi	sp,sp,-44
  8076f4:	dc800315 	stw	r18,12(sp)
  8076f8:	dfc00a15 	stw	ra,40(sp)
  8076fc:	df000915 	stw	fp,36(sp)
  807700:	ddc00815 	stw	r23,32(sp)
  807704:	dd800715 	stw	r22,28(sp)
  807708:	dd400615 	stw	r21,24(sp)
  80770c:	dd000515 	stw	r20,20(sp)
  807710:	dcc00415 	stw	r19,16(sp)
  807714:	dc400215 	stw	r17,8(sp)
  807718:	dc000115 	stw	r16,4(sp)
  80771c:	3025883a 	mov	r18,r6
  807720:	28008b26 	beq	r5,zero,807950 <_realloc_r+0x260>
  807724:	2821883a 	mov	r16,r5
  807728:	2027883a 	mov	r19,r4
  80772c:	944002c4 	addi	r17,r18,11
  807730:	080e4040 	call	80e404 <__malloc_lock>
  807734:	888005f0 	cmpltui	r2,r17,23
  807738:	1000521e 	bne	r2,zero,807884 <_realloc_r+0x194>
  80773c:	017ffe04 	movi	r5,-8
  807740:	8962703a 	and	r17,r17,r5
  807744:	8807883a 	mov	r3,r17
  807748:	88005116 	blt	r17,zero,807890 <_realloc_r+0x1a0>
  80774c:	8c805036 	bltu	r17,r18,807890 <_realloc_r+0x1a0>
  807750:	80bfff17 	ldw	r2,-4(r16)
  807754:	017fff04 	movi	r5,-4
  807758:	857ffe04 	addi	r21,r16,-8
  80775c:	1168703a 	and	r20,r2,r5
  807760:	ad2d883a 	add	r22,r21,r20
  807764:	a0c0390e 	bge	r20,r3,80784c <_realloc_r+0x15c>
  807768:	07002074 	movhi	fp,129
  80776c:	e706d104 	addi	fp,fp,6980
  807770:	e2000217 	ldw	r8,8(fp)
  807774:	b1000117 	ldw	r4,4(r22)
  807778:	45808e26 	beq	r8,r22,8079b4 <_realloc_r+0x2c4>
  80777c:	01bfff84 	movi	r6,-2
  807780:	218c703a 	and	r6,r4,r6
  807784:	b18d883a 	add	r6,r22,r6
  807788:	31800117 	ldw	r6,4(r6)
  80778c:	3180004c 	andi	r6,r6,1
  807790:	30004f1e 	bne	r6,zero,8078d0 <_realloc_r+0x1e0>
  807794:	2148703a 	and	r4,r4,r5
  807798:	a10b883a 	add	r5,r20,r4
  80779c:	28c0bf0e 	bge	r5,r3,807a9c <_realloc_r+0x3ac>
  8077a0:	1080004c 	andi	r2,r2,1
  8077a4:	10004c1e 	bne	r2,zero,8078d8 <_realloc_r+0x1e8>
  8077a8:	81fffe17 	ldw	r7,-8(r16)
  8077ac:	00bfff04 	movi	r2,-4
  8077b0:	a9cfc83a 	sub	r7,r21,r7
  8077b4:	39400117 	ldw	r5,4(r7)
  8077b8:	288a703a 	and	r5,r5,r2
  8077bc:	b0000426 	beq	r22,zero,8077d0 <_realloc_r+0xe0>
  8077c0:	a16f883a 	add	r23,r20,r5
  8077c4:	b92f883a 	add	r23,r23,r4
  8077c8:	4580bf26 	beq	r8,r22,807ac8 <_realloc_r+0x3d8>
  8077cc:	b8c0930e 	bge	r23,r3,807a1c <_realloc_r+0x32c>
  8077d0:	38004126 	beq	r7,zero,8078d8 <_realloc_r+0x1e8>
  8077d4:	a16f883a 	add	r23,r20,r5
  8077d8:	b8c03f16 	blt	r23,r3,8078d8 <_realloc_r+0x1e8>
  8077dc:	38800317 	ldw	r2,12(r7)
  8077e0:	38c00217 	ldw	r3,8(r7)
  8077e4:	a1bfff04 	addi	r6,r20,-4
  8077e8:	31400968 	cmpgeui	r5,r6,37
  8077ec:	18800315 	stw	r2,12(r3)
  8077f0:	10c00215 	stw	r3,8(r2)
  8077f4:	39000204 	addi	r4,r7,8
  8077f8:	3ded883a 	add	r22,r7,r23
  8077fc:	2800941e 	bne	r5,zero,807a50 <_realloc_r+0x360>
  807800:	30800530 	cmpltui	r2,r6,20
  807804:	80c00017 	ldw	r3,0(r16)
  807808:	1000df1e 	bne	r2,zero,807b88 <_realloc_r+0x498>
  80780c:	38c00215 	stw	r3,8(r7)
  807810:	80c00117 	ldw	r3,4(r16)
  807814:	30800728 	cmpgeui	r2,r6,28
  807818:	38c00315 	stw	r3,12(r7)
  80781c:	1000dc1e 	bne	r2,zero,807b90 <_realloc_r+0x4a0>
  807820:	80c00217 	ldw	r3,8(r16)
  807824:	38800404 	addi	r2,r7,16
  807828:	84000204 	addi	r16,r16,8
  80782c:	10c00015 	stw	r3,0(r2)
  807830:	80c00117 	ldw	r3,4(r16)
  807834:	b829883a 	mov	r20,r23
  807838:	382b883a 	mov	r21,r7
  80783c:	10c00115 	stw	r3,4(r2)
  807840:	80c00217 	ldw	r3,8(r16)
  807844:	2021883a 	mov	r16,r4
  807848:	10c00215 	stw	r3,8(r2)
  80784c:	a9800117 	ldw	r6,4(r21)
  807850:	a445c83a 	sub	r2,r20,r17
  807854:	10c00430 	cmpltui	r3,r2,16
  807858:	3180004c 	andi	r6,r6,1
  80785c:	18004926 	beq	r3,zero,807984 <_realloc_r+0x294>
  807860:	a18cb03a 	or	r6,r20,r6
  807864:	a9800115 	stw	r6,4(r21)
  807868:	b0800117 	ldw	r2,4(r22)
  80786c:	10800054 	ori	r2,r2,1
  807870:	b0800115 	stw	r2,4(r22)
  807874:	9809883a 	mov	r4,r19
  807878:	080e4280 	call	80e428 <__malloc_unlock>
  80787c:	8025883a 	mov	r18,r16
  807880:	00000606 	br	80789c <_realloc_r+0x1ac>
  807884:	04400404 	movi	r17,16
  807888:	00c00404 	movi	r3,16
  80788c:	8cbfb02e 	bgeu	r17,r18,807750 <_realloc_r+0x60>
  807890:	00800304 	movi	r2,12
  807894:	98800015 	stw	r2,0(r19)
  807898:	0025883a 	mov	r18,zero
  80789c:	9005883a 	mov	r2,r18
  8078a0:	dfc00a17 	ldw	ra,40(sp)
  8078a4:	df000917 	ldw	fp,36(sp)
  8078a8:	ddc00817 	ldw	r23,32(sp)
  8078ac:	dd800717 	ldw	r22,28(sp)
  8078b0:	dd400617 	ldw	r21,24(sp)
  8078b4:	dd000517 	ldw	r20,20(sp)
  8078b8:	dcc00417 	ldw	r19,16(sp)
  8078bc:	dc800317 	ldw	r18,12(sp)
  8078c0:	dc400217 	ldw	r17,8(sp)
  8078c4:	dc000117 	ldw	r16,4(sp)
  8078c8:	dec00b04 	addi	sp,sp,44
  8078cc:	f800283a 	ret
  8078d0:	1080004c 	andi	r2,r2,1
  8078d4:	10006c26 	beq	r2,zero,807a88 <_realloc_r+0x398>
  8078d8:	900b883a 	mov	r5,r18
  8078dc:	9809883a 	mov	r4,r19
  8078e0:	08057880 	call	805788 <_malloc_r>
  8078e4:	1025883a 	mov	r18,r2
  8078e8:	10001626 	beq	r2,zero,807944 <_realloc_r+0x254>
  8078ec:	80bfff17 	ldw	r2,-4(r16)
  8078f0:	013fff84 	movi	r4,-2
  8078f4:	90fffe04 	addi	r3,r18,-8
  8078f8:	1104703a 	and	r2,r2,r4
  8078fc:	a885883a 	add	r2,r21,r2
  807900:	10c05b26 	beq	r2,r3,807a70 <_realloc_r+0x380>
  807904:	a1bfff04 	addi	r6,r20,-4
  807908:	30800968 	cmpgeui	r2,r6,37
  80790c:	10006a1e 	bne	r2,zero,807ab8 <_realloc_r+0x3c8>
  807910:	30800530 	cmpltui	r2,r6,20
  807914:	81000017 	ldw	r4,0(r16)
  807918:	10003726 	beq	r2,zero,8079f8 <_realloc_r+0x308>
  80791c:	9005883a 	mov	r2,r18
  807920:	8007883a 	mov	r3,r16
  807924:	11000015 	stw	r4,0(r2)
  807928:	19000117 	ldw	r4,4(r3)
  80792c:	11000115 	stw	r4,4(r2)
  807930:	18c00217 	ldw	r3,8(r3)
  807934:	10c00215 	stw	r3,8(r2)
  807938:	800b883a 	mov	r5,r16
  80793c:	9809883a 	mov	r4,r19
  807940:	0804c1c0 	call	804c1c <_free_r>
  807944:	9809883a 	mov	r4,r19
  807948:	080e4280 	call	80e428 <__malloc_unlock>
  80794c:	003fd306 	br	80789c <_realloc_r+0x1ac>
  807950:	300b883a 	mov	r5,r6
  807954:	dfc00a17 	ldw	ra,40(sp)
  807958:	df000917 	ldw	fp,36(sp)
  80795c:	ddc00817 	ldw	r23,32(sp)
  807960:	dd800717 	ldw	r22,28(sp)
  807964:	dd400617 	ldw	r21,24(sp)
  807968:	dd000517 	ldw	r20,20(sp)
  80796c:	dcc00417 	ldw	r19,16(sp)
  807970:	dc800317 	ldw	r18,12(sp)
  807974:	dc400217 	ldw	r17,8(sp)
  807978:	dc000117 	ldw	r16,4(sp)
  80797c:	dec00b04 	addi	sp,sp,44
  807980:	08057881 	jmpi	805788 <_malloc_r>
  807984:	344cb03a 	or	r6,r6,r17
  807988:	a9800115 	stw	r6,4(r21)
  80798c:	ac4b883a 	add	r5,r21,r17
  807990:	10800054 	ori	r2,r2,1
  807994:	28800115 	stw	r2,4(r5)
  807998:	b0800117 	ldw	r2,4(r22)
  80799c:	29400204 	addi	r5,r5,8
  8079a0:	9809883a 	mov	r4,r19
  8079a4:	10800054 	ori	r2,r2,1
  8079a8:	b0800115 	stw	r2,4(r22)
  8079ac:	0804c1c0 	call	804c1c <_free_r>
  8079b0:	003fb006 	br	807874 <_realloc_r+0x184>
  8079b4:	2148703a 	and	r4,r4,r5
  8079b8:	a10b883a 	add	r5,r20,r4
  8079bc:	89800404 	addi	r6,r17,16
  8079c0:	29bf7716 	blt	r5,r6,8077a0 <_realloc_r+0xb0>
  8079c4:	ac6b883a 	add	r21,r21,r17
  8079c8:	2c45c83a 	sub	r2,r5,r17
  8079cc:	e5400215 	stw	r21,8(fp)
  8079d0:	10800054 	ori	r2,r2,1
  8079d4:	a8800115 	stw	r2,4(r21)
  8079d8:	80bfff17 	ldw	r2,-4(r16)
  8079dc:	9809883a 	mov	r4,r19
  8079e0:	8025883a 	mov	r18,r16
  8079e4:	1080004c 	andi	r2,r2,1
  8079e8:	1462b03a 	or	r17,r2,r17
  8079ec:	847fff15 	stw	r17,-4(r16)
  8079f0:	080e4280 	call	80e428 <__malloc_unlock>
  8079f4:	003fa906 	br	80789c <_realloc_r+0x1ac>
  8079f8:	91000015 	stw	r4,0(r18)
  8079fc:	80c00117 	ldw	r3,4(r16)
  807a00:	30800728 	cmpgeui	r2,r6,28
  807a04:	90c00115 	stw	r3,4(r18)
  807a08:	1000551e 	bne	r2,zero,807b60 <_realloc_r+0x470>
  807a0c:	81000217 	ldw	r4,8(r16)
  807a10:	80c00204 	addi	r3,r16,8
  807a14:	90800204 	addi	r2,r18,8
  807a18:	003fc206 	br	807924 <_realloc_r+0x234>
  807a1c:	b0800317 	ldw	r2,12(r22)
  807a20:	b0c00217 	ldw	r3,8(r22)
  807a24:	a1bfff04 	addi	r6,r20,-4
  807a28:	31400968 	cmpgeui	r5,r6,37
  807a2c:	18800315 	stw	r2,12(r3)
  807a30:	10c00215 	stw	r3,8(r2)
  807a34:	38c00217 	ldw	r3,8(r7)
  807a38:	38800317 	ldw	r2,12(r7)
  807a3c:	39000204 	addi	r4,r7,8
  807a40:	3ded883a 	add	r22,r7,r23
  807a44:	18800315 	stw	r2,12(r3)
  807a48:	10c00215 	stw	r3,8(r2)
  807a4c:	283f6c26 	beq	r5,zero,807800 <_realloc_r+0x110>
  807a50:	800b883a 	mov	r5,r16
  807a54:	d9c00015 	stw	r7,0(sp)
  807a58:	08061380 	call	806138 <memmove>
  807a5c:	d9c00017 	ldw	r7,0(sp)
  807a60:	1021883a 	mov	r16,r2
  807a64:	b829883a 	mov	r20,r23
  807a68:	382b883a 	mov	r21,r7
  807a6c:	003f7706 	br	80784c <_realloc_r+0x15c>
  807a70:	90bfff17 	ldw	r2,-4(r18)
  807a74:	00ffff04 	movi	r3,-4
  807a78:	10c4703a 	and	r2,r2,r3
  807a7c:	a0a9883a 	add	r20,r20,r2
  807a80:	ad2d883a 	add	r22,r21,r20
  807a84:	003f7106 	br	80784c <_realloc_r+0x15c>
  807a88:	81fffe17 	ldw	r7,-8(r16)
  807a8c:	a9cfc83a 	sub	r7,r21,r7
  807a90:	38800117 	ldw	r2,4(r7)
  807a94:	114a703a 	and	r5,r2,r5
  807a98:	003f4d06 	br	8077d0 <_realloc_r+0xe0>
  807a9c:	b0800317 	ldw	r2,12(r22)
  807aa0:	b0c00217 	ldw	r3,8(r22)
  807aa4:	2829883a 	mov	r20,r5
  807aa8:	a96d883a 	add	r22,r21,r5
  807aac:	18800315 	stw	r2,12(r3)
  807ab0:	10c00215 	stw	r3,8(r2)
  807ab4:	003f6506 	br	80784c <_realloc_r+0x15c>
  807ab8:	800b883a 	mov	r5,r16
  807abc:	9009883a 	mov	r4,r18
  807ac0:	08061380 	call	806138 <memmove>
  807ac4:	003f9c06 	br	807938 <_realloc_r+0x248>
  807ac8:	88800404 	addi	r2,r17,16
  807acc:	b8bf4016 	blt	r23,r2,8077d0 <_realloc_r+0xe0>
  807ad0:	38800317 	ldw	r2,12(r7)
  807ad4:	38c00217 	ldw	r3,8(r7)
  807ad8:	a1bfff04 	addi	r6,r20,-4
  807adc:	31000968 	cmpgeui	r4,r6,37
  807ae0:	18800315 	stw	r2,12(r3)
  807ae4:	10c00215 	stw	r3,8(r2)
  807ae8:	3c800204 	addi	r18,r7,8
  807aec:	20003b1e 	bne	r4,zero,807bdc <_realloc_r+0x4ec>
  807af0:	30800530 	cmpltui	r2,r6,20
  807af4:	80c00017 	ldw	r3,0(r16)
  807af8:	1000361e 	bne	r2,zero,807bd4 <_realloc_r+0x4e4>
  807afc:	38c00215 	stw	r3,8(r7)
  807b00:	80c00117 	ldw	r3,4(r16)
  807b04:	30800728 	cmpgeui	r2,r6,28
  807b08:	38c00315 	stw	r3,12(r7)
  807b0c:	1000401e 	bne	r2,zero,807c10 <_realloc_r+0x520>
  807b10:	80c00217 	ldw	r3,8(r16)
  807b14:	38800404 	addi	r2,r7,16
  807b18:	84000204 	addi	r16,r16,8
  807b1c:	10c00015 	stw	r3,0(r2)
  807b20:	80c00117 	ldw	r3,4(r16)
  807b24:	10c00115 	stw	r3,4(r2)
  807b28:	80c00217 	ldw	r3,8(r16)
  807b2c:	10c00215 	stw	r3,8(r2)
  807b30:	3c47883a 	add	r3,r7,r17
  807b34:	bc45c83a 	sub	r2,r23,r17
  807b38:	e0c00215 	stw	r3,8(fp)
  807b3c:	10800054 	ori	r2,r2,1
  807b40:	18800115 	stw	r2,4(r3)
  807b44:	38800117 	ldw	r2,4(r7)
  807b48:	9809883a 	mov	r4,r19
  807b4c:	1080004c 	andi	r2,r2,1
  807b50:	1462b03a 	or	r17,r2,r17
  807b54:	3c400115 	stw	r17,4(r7)
  807b58:	080e4280 	call	80e428 <__malloc_unlock>
  807b5c:	003f4f06 	br	80789c <_realloc_r+0x1ac>
  807b60:	80800217 	ldw	r2,8(r16)
  807b64:	31800920 	cmpeqi	r6,r6,36
  807b68:	90800215 	stw	r2,8(r18)
  807b6c:	80800317 	ldw	r2,12(r16)
  807b70:	90800315 	stw	r2,12(r18)
  807b74:	81000417 	ldw	r4,16(r16)
  807b78:	30000f1e 	bne	r6,zero,807bb8 <_realloc_r+0x4c8>
  807b7c:	80c00404 	addi	r3,r16,16
  807b80:	90800404 	addi	r2,r18,16
  807b84:	003f6706 	br	807924 <_realloc_r+0x234>
  807b88:	2005883a 	mov	r2,r4
  807b8c:	003f2706 	br	80782c <_realloc_r+0x13c>
  807b90:	80800217 	ldw	r2,8(r16)
  807b94:	31800920 	cmpeqi	r6,r6,36
  807b98:	38800415 	stw	r2,16(r7)
  807b9c:	80800317 	ldw	r2,12(r16)
  807ba0:	38800515 	stw	r2,20(r7)
  807ba4:	80c00417 	ldw	r3,16(r16)
  807ba8:	3000121e 	bne	r6,zero,807bf4 <_realloc_r+0x504>
  807bac:	38800604 	addi	r2,r7,24
  807bb0:	84000404 	addi	r16,r16,16
  807bb4:	003f1d06 	br	80782c <_realloc_r+0x13c>
  807bb8:	91000415 	stw	r4,16(r18)
  807bbc:	81000517 	ldw	r4,20(r16)
  807bc0:	80c00604 	addi	r3,r16,24
  807bc4:	90800604 	addi	r2,r18,24
  807bc8:	91000515 	stw	r4,20(r18)
  807bcc:	81000617 	ldw	r4,24(r16)
  807bd0:	003f5406 	br	807924 <_realloc_r+0x234>
  807bd4:	9005883a 	mov	r2,r18
  807bd8:	003fd006 	br	807b1c <_realloc_r+0x42c>
  807bdc:	800b883a 	mov	r5,r16
  807be0:	9009883a 	mov	r4,r18
  807be4:	d9c00015 	stw	r7,0(sp)
  807be8:	08061380 	call	806138 <memmove>
  807bec:	d9c00017 	ldw	r7,0(sp)
  807bf0:	003fcf06 	br	807b30 <_realloc_r+0x440>
  807bf4:	84000604 	addi	r16,r16,24
  807bf8:	38c00615 	stw	r3,24(r7)
  807bfc:	80ffff17 	ldw	r3,-4(r16)
  807c00:	38800804 	addi	r2,r7,32
  807c04:	38c00715 	stw	r3,28(r7)
  807c08:	80c00017 	ldw	r3,0(r16)
  807c0c:	003f0706 	br	80782c <_realloc_r+0x13c>
  807c10:	80800217 	ldw	r2,8(r16)
  807c14:	31800920 	cmpeqi	r6,r6,36
  807c18:	38800415 	stw	r2,16(r7)
  807c1c:	80800317 	ldw	r2,12(r16)
  807c20:	38800515 	stw	r2,20(r7)
  807c24:	80c00417 	ldw	r3,16(r16)
  807c28:	3000031e 	bne	r6,zero,807c38 <_realloc_r+0x548>
  807c2c:	38800604 	addi	r2,r7,24
  807c30:	84000404 	addi	r16,r16,16
  807c34:	003fb906 	br	807b1c <_realloc_r+0x42c>
  807c38:	84000604 	addi	r16,r16,24
  807c3c:	38c00615 	stw	r3,24(r7)
  807c40:	80ffff17 	ldw	r3,-4(r16)
  807c44:	38800804 	addi	r2,r7,32
  807c48:	38c00715 	stw	r3,28(r7)
  807c4c:	80c00017 	ldw	r3,0(r16)
  807c50:	003fb206 	br	807b1c <_realloc_r+0x42c>

00807c54 <_sbrk_r>:
  807c54:	defffe04 	addi	sp,sp,-8
  807c58:	dc000015 	stw	r16,0(sp)
  807c5c:	00802074 	movhi	r2,129
  807c60:	2021883a 	mov	r16,r4
  807c64:	2809883a 	mov	r4,r5
  807c68:	dfc00115 	stw	ra,4(sp)
  807c6c:	10142e15 	stw	zero,20664(r2)
  807c70:	080e6000 	call	80e600 <sbrk>
  807c74:	10ffffd8 	cmpnei	r3,r2,-1
  807c78:	18000426 	beq	r3,zero,807c8c <_sbrk_r+0x38>
  807c7c:	dfc00117 	ldw	ra,4(sp)
  807c80:	dc000017 	ldw	r16,0(sp)
  807c84:	dec00204 	addi	sp,sp,8
  807c88:	f800283a 	ret
  807c8c:	00c02074 	movhi	r3,129
  807c90:	18d42e17 	ldw	r3,20664(r3)
  807c94:	183ff926 	beq	r3,zero,807c7c <_sbrk_r+0x28>
  807c98:	80c00015 	stw	r3,0(r16)
  807c9c:	dfc00117 	ldw	ra,4(sp)
  807ca0:	dc000017 	ldw	r16,0(sp)
  807ca4:	dec00204 	addi	sp,sp,8
  807ca8:	f800283a 	ret

00807cac <__sread>:
  807cac:	defffe04 	addi	sp,sp,-8
  807cb0:	dc000015 	stw	r16,0(sp)
  807cb4:	2821883a 	mov	r16,r5
  807cb8:	2940038f 	ldh	r5,14(r5)
  807cbc:	dfc00115 	stw	ra,4(sp)
  807cc0:	0809cc80 	call	809cc8 <_read_r>
  807cc4:	10000716 	blt	r2,zero,807ce4 <__sread+0x38>
  807cc8:	80c01417 	ldw	r3,80(r16)
  807ccc:	1887883a 	add	r3,r3,r2
  807cd0:	80c01415 	stw	r3,80(r16)
  807cd4:	dfc00117 	ldw	ra,4(sp)
  807cd8:	dc000017 	ldw	r16,0(sp)
  807cdc:	dec00204 	addi	sp,sp,8
  807ce0:	f800283a 	ret
  807ce4:	80c0030b 	ldhu	r3,12(r16)
  807ce8:	18fbffcc 	andi	r3,r3,61439
  807cec:	80c0030d 	sth	r3,12(r16)
  807cf0:	dfc00117 	ldw	ra,4(sp)
  807cf4:	dc000017 	ldw	r16,0(sp)
  807cf8:	dec00204 	addi	sp,sp,8
  807cfc:	f800283a 	ret

00807d00 <__seofread>:
  807d00:	0005883a 	mov	r2,zero
  807d04:	f800283a 	ret

00807d08 <__swrite>:
  807d08:	2880030b 	ldhu	r2,12(r5)
  807d0c:	defffb04 	addi	sp,sp,-20
  807d10:	dcc00315 	stw	r19,12(sp)
  807d14:	dc800215 	stw	r18,8(sp)
  807d18:	dc400115 	stw	r17,4(sp)
  807d1c:	dc000015 	stw	r16,0(sp)
  807d20:	dfc00415 	stw	ra,16(sp)
  807d24:	10c0400c 	andi	r3,r2,256
  807d28:	2821883a 	mov	r16,r5
  807d2c:	2023883a 	mov	r17,r4
  807d30:	2940038f 	ldh	r5,14(r5)
  807d34:	3025883a 	mov	r18,r6
  807d38:	3827883a 	mov	r19,r7
  807d3c:	18000c1e 	bne	r3,zero,807d70 <__swrite+0x68>
  807d40:	10bbffcc 	andi	r2,r2,61439
  807d44:	980f883a 	mov	r7,r19
  807d48:	900d883a 	mov	r6,r18
  807d4c:	8809883a 	mov	r4,r17
  807d50:	8080030d 	sth	r2,12(r16)
  807d54:	dfc00417 	ldw	ra,16(sp)
  807d58:	dcc00317 	ldw	r19,12(sp)
  807d5c:	dc800217 	ldw	r18,8(sp)
  807d60:	dc400117 	ldw	r17,4(sp)
  807d64:	dc000017 	ldw	r16,0(sp)
  807d68:	dec00504 	addi	sp,sp,20
  807d6c:	08094781 	jmpi	809478 <_write_r>
  807d70:	01c00084 	movi	r7,2
  807d74:	000d883a 	mov	r6,zero
  807d78:	0809c140 	call	809c14 <_lseek_r>
  807d7c:	8080030b 	ldhu	r2,12(r16)
  807d80:	8140038f 	ldh	r5,14(r16)
  807d84:	003fee06 	br	807d40 <__swrite+0x38>

00807d88 <__sseek>:
  807d88:	defffe04 	addi	sp,sp,-8
  807d8c:	dc000015 	stw	r16,0(sp)
  807d90:	2821883a 	mov	r16,r5
  807d94:	2940038f 	ldh	r5,14(r5)
  807d98:	dfc00115 	stw	ra,4(sp)
  807d9c:	0809c140 	call	809c14 <_lseek_r>
  807da0:	10ffffd8 	cmpnei	r3,r2,-1
  807da4:	18000826 	beq	r3,zero,807dc8 <__sseek+0x40>
  807da8:	80c0030b 	ldhu	r3,12(r16)
  807dac:	80801415 	stw	r2,80(r16)
  807db0:	18c40014 	ori	r3,r3,4096
  807db4:	80c0030d 	sth	r3,12(r16)
  807db8:	dfc00117 	ldw	ra,4(sp)
  807dbc:	dc000017 	ldw	r16,0(sp)
  807dc0:	dec00204 	addi	sp,sp,8
  807dc4:	f800283a 	ret
  807dc8:	80c0030b 	ldhu	r3,12(r16)
  807dcc:	18fbffcc 	andi	r3,r3,61439
  807dd0:	80c0030d 	sth	r3,12(r16)
  807dd4:	dfc00117 	ldw	ra,4(sp)
  807dd8:	dc000017 	ldw	r16,0(sp)
  807ddc:	dec00204 	addi	sp,sp,8
  807de0:	f800283a 	ret

00807de4 <__sclose>:
  807de4:	2940038f 	ldh	r5,14(r5)
  807de8:	08094dc1 	jmpi	8094dc <_close_r>

00807dec <__sprint_r.part.0>:
  807dec:	28801917 	ldw	r2,100(r5)
  807df0:	defff604 	addi	sp,sp,-40
  807df4:	dcc00315 	stw	r19,12(sp)
  807df8:	dfc00915 	stw	ra,36(sp)
  807dfc:	df000815 	stw	fp,32(sp)
  807e00:	ddc00715 	stw	r23,28(sp)
  807e04:	dd800615 	stw	r22,24(sp)
  807e08:	dd400515 	stw	r21,20(sp)
  807e0c:	dd000415 	stw	r20,16(sp)
  807e10:	dc800215 	stw	r18,8(sp)
  807e14:	dc400115 	stw	r17,4(sp)
  807e18:	dc000015 	stw	r16,0(sp)
  807e1c:	1088000c 	andi	r2,r2,8192
  807e20:	3027883a 	mov	r19,r6
  807e24:	10002c26 	beq	r2,zero,807ed8 <__sprint_r.part.0+0xec>
  807e28:	30800217 	ldw	r2,8(r6)
  807e2c:	35000017 	ldw	r20,0(r6)
  807e30:	2821883a 	mov	r16,r5
  807e34:	2023883a 	mov	r17,r4
  807e38:	05bfff04 	movi	r22,-4
  807e3c:	10002426 	beq	r2,zero,807ed0 <__sprint_r.part.0+0xe4>
  807e40:	a5400117 	ldw	r21,4(r20)
  807e44:	a5c00017 	ldw	r23,0(r20)
  807e48:	a824d0ba 	srli	r18,r21,2
  807e4c:	90001b26 	beq	r18,zero,807ebc <__sprint_r.part.0+0xd0>
  807e50:	0039883a 	mov	fp,zero
  807e54:	00000206 	br	807e60 <__sprint_r.part.0+0x74>
  807e58:	bdc00104 	addi	r23,r23,4
  807e5c:	97001626 	beq	r18,fp,807eb8 <__sprint_r.part.0+0xcc>
  807e60:	b9400017 	ldw	r5,0(r23)
  807e64:	800d883a 	mov	r6,r16
  807e68:	8809883a 	mov	r4,r17
  807e6c:	08099cc0 	call	8099cc <_fputwc_r>
  807e70:	10bfffe0 	cmpeqi	r2,r2,-1
  807e74:	e7000044 	addi	fp,fp,1
  807e78:	103ff726 	beq	r2,zero,807e58 <__sprint_r.part.0+0x6c>
  807e7c:	00bfffc4 	movi	r2,-1
  807e80:	98000215 	stw	zero,8(r19)
  807e84:	98000115 	stw	zero,4(r19)
  807e88:	dfc00917 	ldw	ra,36(sp)
  807e8c:	df000817 	ldw	fp,32(sp)
  807e90:	ddc00717 	ldw	r23,28(sp)
  807e94:	dd800617 	ldw	r22,24(sp)
  807e98:	dd400517 	ldw	r21,20(sp)
  807e9c:	dd000417 	ldw	r20,16(sp)
  807ea0:	dcc00317 	ldw	r19,12(sp)
  807ea4:	dc800217 	ldw	r18,8(sp)
  807ea8:	dc400117 	ldw	r17,4(sp)
  807eac:	dc000017 	ldw	r16,0(sp)
  807eb0:	dec00a04 	addi	sp,sp,40
  807eb4:	f800283a 	ret
  807eb8:	98800217 	ldw	r2,8(r19)
  807ebc:	adaa703a 	and	r21,r21,r22
  807ec0:	1545c83a 	sub	r2,r2,r21
  807ec4:	98800215 	stw	r2,8(r19)
  807ec8:	a5000204 	addi	r20,r20,8
  807ecc:	103fdc1e 	bne	r2,zero,807e40 <__sprint_r.part.0+0x54>
  807ed0:	0005883a 	mov	r2,zero
  807ed4:	003fea06 	br	807e80 <__sprint_r.part.0+0x94>
  807ed8:	0804f180 	call	804f18 <__sfvwrite_r>
  807edc:	003fe806 	br	807e80 <__sprint_r.part.0+0x94>

00807ee0 <__sprint_r>:
  807ee0:	30c00217 	ldw	r3,8(r6)
  807ee4:	18000126 	beq	r3,zero,807eec <__sprint_r+0xc>
  807ee8:	0807dec1 	jmpi	807dec <__sprint_r.part.0>
  807eec:	30000115 	stw	zero,4(r6)
  807ef0:	0005883a 	mov	r2,zero
  807ef4:	f800283a 	ret

00807ef8 <___vfiprintf_internal_r>:
  807ef8:	deffcf04 	addi	sp,sp,-196
  807efc:	dd802d15 	stw	r22,180(sp)
  807f00:	dd402c15 	stw	r21,176(sp)
  807f04:	dd002b15 	stw	r20,172(sp)
  807f08:	dfc03015 	stw	ra,192(sp)
  807f0c:	df002f15 	stw	fp,188(sp)
  807f10:	ddc02e15 	stw	r23,184(sp)
  807f14:	dcc02a15 	stw	r19,168(sp)
  807f18:	dc802915 	stw	r18,164(sp)
  807f1c:	dc402815 	stw	r17,160(sp)
  807f20:	dc002715 	stw	r16,156(sp)
  807f24:	d9c00415 	stw	r7,16(sp)
  807f28:	202d883a 	mov	r22,r4
  807f2c:	282b883a 	mov	r21,r5
  807f30:	3029883a 	mov	r20,r6
  807f34:	20000226 	beq	r4,zero,807f40 <___vfiprintf_internal_r+0x48>
  807f38:	20800e17 	ldw	r2,56(r4)
  807f3c:	1001bd26 	beq	r2,zero,808634 <___vfiprintf_internal_r+0x73c>
  807f40:	a880030b 	ldhu	r2,12(r21)
  807f44:	10c8000c 	andi	r3,r2,8192
  807f48:	1800061e 	bne	r3,zero,807f64 <___vfiprintf_internal_r+0x6c>
  807f4c:	a8c01917 	ldw	r3,100(r21)
  807f50:	0137ffc4 	movi	r4,-8193
  807f54:	10880014 	ori	r2,r2,8192
  807f58:	1906703a 	and	r3,r3,r4
  807f5c:	a880030d 	sth	r2,12(r21)
  807f60:	a8c01915 	stw	r3,100(r21)
  807f64:	10c0020c 	andi	r3,r2,8
  807f68:	18010826 	beq	r3,zero,80838c <___vfiprintf_internal_r+0x494>
  807f6c:	a8c00417 	ldw	r3,16(r21)
  807f70:	18010626 	beq	r3,zero,80838c <___vfiprintf_internal_r+0x494>
  807f74:	1080068c 	andi	r2,r2,26
  807f78:	10800298 	cmpnei	r2,r2,10
  807f7c:	10010b26 	beq	r2,zero,8083ac <___vfiprintf_internal_r+0x4b4>
  807f80:	dc801704 	addi	r18,sp,92
  807f84:	dc800a15 	stw	r18,40(sp)
  807f88:	d8000c15 	stw	zero,48(sp)
  807f8c:	d8000b15 	stw	zero,44(sp)
  807f90:	9021883a 	mov	r16,r18
  807f94:	d8000515 	stw	zero,20(sp)
  807f98:	d8000115 	stw	zero,4(sp)
  807f9c:	a0800007 	ldb	r2,0(r20)
  807fa0:	1000e826 	beq	r2,zero,808344 <___vfiprintf_internal_r+0x44c>
  807fa4:	a023883a 	mov	r17,r20
  807fa8:	00000306 	br	807fb8 <___vfiprintf_internal_r+0xc0>
  807fac:	88800047 	ldb	r2,1(r17)
  807fb0:	8c400044 	addi	r17,r17,1
  807fb4:	10013326 	beq	r2,zero,808484 <___vfiprintf_internal_r+0x58c>
  807fb8:	10800958 	cmpnei	r2,r2,37
  807fbc:	103ffb1e 	bne	r2,zero,807fac <___vfiprintf_internal_r+0xb4>
  807fc0:	8d27c83a 	sub	r19,r17,r20
  807fc4:	8d01311e 	bne	r17,r20,80848c <___vfiprintf_internal_r+0x594>
  807fc8:	88800003 	ldbu	r2,0(r17)
  807fcc:	10803fcc 	andi	r2,r2,255
  807fd0:	1080201c 	xori	r2,r2,128
  807fd4:	10bfe004 	addi	r2,r2,-128
  807fd8:	1000da26 	beq	r2,zero,808344 <___vfiprintf_internal_r+0x44c>
  807fdc:	88800047 	ldb	r2,1(r17)
  807fe0:	8d000044 	addi	r20,r17,1
  807fe4:	d8000945 	stb	zero,37(sp)
  807fe8:	000b883a 	mov	r5,zero
  807fec:	000d883a 	mov	r6,zero
  807ff0:	023fffc4 	movi	r8,-1
  807ff4:	0023883a 	mov	r17,zero
  807ff8:	001b883a 	mov	r13,zero
  807ffc:	a5000044 	addi	r20,r20,1
  808000:	10fff804 	addi	r3,r2,-32
  808004:	19001668 	cmpgeui	r4,r3,89
  808008:	20006c1e 	bne	r4,zero,8081bc <___vfiprintf_internal_r+0x2c4>
  80800c:	180690ba 	slli	r3,r3,2
  808010:	01002074 	movhi	r4,129
  808014:	1909883a 	add	r4,r3,r4
  808018:	20e00817 	ldw	r3,-32736(r4)
  80801c:	1800683a 	jmp	r3
  808020:	0080895c 	xori	r2,zero,549
  808024:	008081bc 	xorhi	r2,zero,518
  808028:	008081bc 	xorhi	r2,zero,518
  80802c:	00808950 	cmplti	r2,zero,549
  808030:	008081bc 	xorhi	r2,zero,518
  808034:	008081bc 	xorhi	r2,zero,518
  808038:	008081bc 	xorhi	r2,zero,518
  80803c:	008081bc 	xorhi	r2,zero,518
  808040:	008081bc 	xorhi	r2,zero,518
  808044:	008081bc 	xorhi	r2,zero,518
  808048:	00808928 	cmpgeui	r2,zero,548
  80804c:	00808918 	cmpnei	r2,zero,548
  808050:	008081bc 	xorhi	r2,zero,518
  808054:	00808900 	call	80890 <__alt_mem_sdram-0x77f770>
  808058:	008088b4 	movhi	r2,546
  80805c:	008081bc 	xorhi	r2,zero,518
  808060:	008088a8 	cmpgeui	r2,zero,546
  808064:	00808184 	movi	r2,518
  808068:	00808184 	movi	r2,518
  80806c:	00808184 	movi	r2,518
  808070:	00808184 	movi	r2,518
  808074:	00808184 	movi	r2,518
  808078:	00808184 	movi	r2,518
  80807c:	00808184 	movi	r2,518
  808080:	00808184 	movi	r2,518
  808084:	00808184 	movi	r2,518
  808088:	008081bc 	xorhi	r2,zero,518
  80808c:	008081bc 	xorhi	r2,zero,518
  808090:	008081bc 	xorhi	r2,zero,518
  808094:	008081bc 	xorhi	r2,zero,518
  808098:	008081bc 	xorhi	r2,zero,518
  80809c:	008081bc 	xorhi	r2,zero,518
  8080a0:	008081bc 	xorhi	r2,zero,518
  8080a4:	008081bc 	xorhi	r2,zero,518
  8080a8:	008081bc 	xorhi	r2,zero,518
  8080ac:	008081bc 	xorhi	r2,zero,518
  8080b0:	008087a4 	muli	r2,zero,542
  8080b4:	008081bc 	xorhi	r2,zero,518
  8080b8:	008081bc 	xorhi	r2,zero,518
  8080bc:	008081bc 	xorhi	r2,zero,518
  8080c0:	008081bc 	xorhi	r2,zero,518
  8080c4:	008081bc 	xorhi	r2,zero,518
  8080c8:	008081bc 	xorhi	r2,zero,518
  8080cc:	008081bc 	xorhi	r2,zero,518
  8080d0:	008081bc 	xorhi	r2,zero,518
  8080d4:	008081bc 	xorhi	r2,zero,518
  8080d8:	008081bc 	xorhi	r2,zero,518
  8080dc:	0080841c 	xori	r2,zero,528
  8080e0:	008081bc 	xorhi	r2,zero,518
  8080e4:	008081bc 	xorhi	r2,zero,518
  8080e8:	008081bc 	xorhi	r2,zero,518
  8080ec:	008081bc 	xorhi	r2,zero,518
  8080f0:	008081bc 	xorhi	r2,zero,518
  8080f4:	008083f4 	movhi	r2,527
  8080f8:	008081bc 	xorhi	r2,zero,518
  8080fc:	008081bc 	xorhi	r2,zero,518
  808100:	008089b0 	cmpltui	r2,zero,550
  808104:	008081bc 	xorhi	r2,zero,518
  808108:	008081bc 	xorhi	r2,zero,518
  80810c:	008081bc 	xorhi	r2,zero,518
  808110:	008081bc 	xorhi	r2,zero,518
  808114:	008081bc 	xorhi	r2,zero,518
  808118:	008081bc 	xorhi	r2,zero,518
  80811c:	008081bc 	xorhi	r2,zero,518
  808120:	008081bc 	xorhi	r2,zero,518
  808124:	008081bc 	xorhi	r2,zero,518
  808128:	008081bc 	xorhi	r2,zero,518
  80812c:	00808988 	cmpgei	r2,zero,550
  808130:	0080863c 	xorhi	r2,zero,536
  808134:	008081bc 	xorhi	r2,zero,518
  808138:	008081bc 	xorhi	r2,zero,518
  80813c:	008081bc 	xorhi	r2,zero,518
  808140:	008086b0 	cmpltui	r2,zero,538
  808144:	0080863c 	xorhi	r2,zero,536
  808148:	008081bc 	xorhi	r2,zero,518
  80814c:	008081bc 	xorhi	r2,zero,518
  808150:	00808a34 	movhi	r2,552
  808154:	008081bc 	xorhi	r2,zero,518
  808158:	008089f8 	rdprs	r2,zero,551
  80815c:	00808420 	cmpeqi	r2,zero,528
  808160:	00808768 	cmpgeui	r2,zero,541
  808164:	0080875c 	xori	r2,zero,541
  808168:	008081bc 	xorhi	r2,zero,518
  80816c:	00808704 	movi	r2,540
  808170:	008081bc 	xorhi	r2,zero,518
  808174:	008083f8 	rdprs	r2,zero,527
  808178:	008081bc 	xorhi	r2,zero,518
  80817c:	008081bc 	xorhi	r2,zero,518
  808180:	008086bc 	xorhi	r2,zero,538
  808184:	0023883a 	mov	r17,zero
  808188:	113ff404 	addi	r4,r2,-48
  80818c:	880690ba 	slli	r3,r17,2
  808190:	a0800007 	ldb	r2,0(r20)
  808194:	a5000044 	addi	r20,r20,1
  808198:	1c63883a 	add	r17,r3,r17
  80819c:	8c63883a 	add	r17,r17,r17
  8081a0:	2463883a 	add	r17,r4,r17
  8081a4:	113ff404 	addi	r4,r2,-48
  8081a8:	20c002b0 	cmpltui	r3,r4,10
  8081ac:	183ff71e 	bne	r3,zero,80818c <___vfiprintf_internal_r+0x294>
  8081b0:	10fff804 	addi	r3,r2,-32
  8081b4:	19001668 	cmpgeui	r4,r3,89
  8081b8:	203f9426 	beq	r4,zero,80800c <___vfiprintf_internal_r+0x114>
  8081bc:	29403fcc 	andi	r5,r5,255
  8081c0:	2803ed1e 	bne	r5,zero,809178 <___vfiprintf_internal_r+0x1280>
  8081c4:	10005f26 	beq	r2,zero,808344 <___vfiprintf_internal_r+0x44c>
  8081c8:	d8800d05 	stb	r2,52(sp)
  8081cc:	d8000945 	stb	zero,37(sp)
  8081d0:	05c00044 	movi	r23,1
  8081d4:	07000044 	movi	fp,1
  8081d8:	dcc00d04 	addi	r19,sp,52
  8081dc:	db400015 	stw	r13,0(sp)
  8081e0:	0011883a 	mov	r8,zero
  8081e4:	d8800017 	ldw	r2,0(sp)
  8081e8:	1380008c 	andi	r14,r2,2
  8081ec:	70000126 	beq	r14,zero,8081f4 <___vfiprintf_internal_r+0x2fc>
  8081f0:	bdc00084 	addi	r23,r23,2
  8081f4:	d8800017 	ldw	r2,0(sp)
  8081f8:	d9000b17 	ldw	r4,44(sp)
  8081fc:	1340210c 	andi	r13,r2,132
  808200:	21800044 	addi	r6,r4,1
  808204:	d8800c17 	ldw	r2,48(sp)
  808208:	300b883a 	mov	r5,r6
  80820c:	6800021e 	bne	r13,zero,808218 <___vfiprintf_internal_r+0x320>
  808210:	8dc7c83a 	sub	r3,r17,r23
  808214:	00c2e216 	blt	zero,r3,808da0 <___vfiprintf_internal_r+0xea8>
  808218:	d8c00947 	ldb	r3,37(sp)
  80821c:	81800204 	addi	r6,r16,8
  808220:	18000d26 	beq	r3,zero,808258 <___vfiprintf_internal_r+0x360>
  808224:	d8c00944 	addi	r3,sp,37
  808228:	10800044 	addi	r2,r2,1
  80822c:	80c00015 	stw	r3,0(r16)
  808230:	00c00044 	movi	r3,1
  808234:	80c00115 	stw	r3,4(r16)
  808238:	d8800c15 	stw	r2,48(sp)
  80823c:	d9400b15 	stw	r5,44(sp)
  808240:	28c00208 	cmpgei	r3,r5,8
  808244:	18029a1e 	bne	r3,zero,808cb0 <___vfiprintf_internal_r+0xdb8>
  808248:	2809883a 	mov	r4,r5
  80824c:	3021883a 	mov	r16,r6
  808250:	29400044 	addi	r5,r5,1
  808254:	31800204 	addi	r6,r6,8
  808258:	70001826 	beq	r14,zero,8082bc <___vfiprintf_internal_r+0x3c4>
  80825c:	d8c00984 	addi	r3,sp,38
  808260:	10800084 	addi	r2,r2,2
  808264:	80c00015 	stw	r3,0(r16)
  808268:	00c00084 	movi	r3,2
  80826c:	80c00115 	stw	r3,4(r16)
  808270:	d8800c15 	stw	r2,48(sp)
  808274:	d9400b15 	stw	r5,44(sp)
  808278:	28c00208 	cmpgei	r3,r5,8
  80827c:	1802a426 	beq	r3,zero,808d10 <___vfiprintf_internal_r+0xe18>
  808280:	10032226 	beq	r2,zero,808f0c <___vfiprintf_internal_r+0x1014>
  808284:	d9800a04 	addi	r6,sp,40
  808288:	a80b883a 	mov	r5,r21
  80828c:	b009883a 	mov	r4,r22
  808290:	da000315 	stw	r8,12(sp)
  808294:	db400215 	stw	r13,8(sp)
  808298:	0807dec0 	call	807dec <__sprint_r.part.0>
  80829c:	10002b1e 	bne	r2,zero,80834c <___vfiprintf_internal_r+0x454>
  8082a0:	d9000b17 	ldw	r4,44(sp)
  8082a4:	d8800c17 	ldw	r2,48(sp)
  8082a8:	da000317 	ldw	r8,12(sp)
  8082ac:	db400217 	ldw	r13,8(sp)
  8082b0:	d9801904 	addi	r6,sp,100
  8082b4:	21400044 	addi	r5,r4,1
  8082b8:	9021883a 	mov	r16,r18
  8082bc:	6b402018 	cmpnei	r13,r13,128
  8082c0:	6801e526 	beq	r13,zero,808a58 <___vfiprintf_internal_r+0xb60>
  8082c4:	4711c83a 	sub	r8,r8,fp
  8082c8:	02022416 	blt	zero,r8,808b5c <___vfiprintf_internal_r+0xc64>
  8082cc:	e085883a 	add	r2,fp,r2
  8082d0:	d9400b15 	stw	r5,44(sp)
  8082d4:	84c00015 	stw	r19,0(r16)
  8082d8:	87000115 	stw	fp,4(r16)
  8082dc:	d8800c15 	stw	r2,48(sp)
  8082e0:	29400210 	cmplti	r5,r5,8
  8082e4:	2800081e 	bne	r5,zero,808308 <___vfiprintf_internal_r+0x410>
  8082e8:	10009826 	beq	r2,zero,80854c <___vfiprintf_internal_r+0x654>
  8082ec:	d9800a04 	addi	r6,sp,40
  8082f0:	a80b883a 	mov	r5,r21
  8082f4:	b009883a 	mov	r4,r22
  8082f8:	0807dec0 	call	807dec <__sprint_r.part.0>
  8082fc:	1000131e 	bne	r2,zero,80834c <___vfiprintf_internal_r+0x454>
  808300:	d8800c17 	ldw	r2,48(sp)
  808304:	900d883a 	mov	r6,r18
  808308:	d8c00017 	ldw	r3,0(sp)
  80830c:	1cc0010c 	andi	r19,r3,4
  808310:	98000226 	beq	r19,zero,80831c <___vfiprintf_internal_r+0x424>
  808314:	8de1c83a 	sub	r16,r17,r23
  808318:	04009316 	blt	zero,r16,808568 <___vfiprintf_internal_r+0x670>
  80831c:	8dc0010e 	bge	r17,r23,808324 <___vfiprintf_internal_r+0x42c>
  808320:	b823883a 	mov	r17,r23
  808324:	d8c00117 	ldw	r3,4(sp)
  808328:	1c47883a 	add	r3,r3,r17
  80832c:	d8c00115 	stw	r3,4(sp)
  808330:	1002551e 	bne	r2,zero,808c88 <___vfiprintf_internal_r+0xd90>
  808334:	a0800007 	ldb	r2,0(r20)
  808338:	d8000b15 	stw	zero,44(sp)
  80833c:	9021883a 	mov	r16,r18
  808340:	103f181e 	bne	r2,zero,807fa4 <___vfiprintf_internal_r+0xac>
  808344:	d8800c17 	ldw	r2,48(sp)
  808348:	10038d1e 	bne	r2,zero,809180 <___vfiprintf_internal_r+0x1288>
  80834c:	a880030b 	ldhu	r2,12(r21)
  808350:	1080100c 	andi	r2,r2,64
  808354:	1003a51e 	bne	r2,zero,8091ec <___vfiprintf_internal_r+0x12f4>
  808358:	d8800117 	ldw	r2,4(sp)
  80835c:	dfc03017 	ldw	ra,192(sp)
  808360:	df002f17 	ldw	fp,188(sp)
  808364:	ddc02e17 	ldw	r23,184(sp)
  808368:	dd802d17 	ldw	r22,180(sp)
  80836c:	dd402c17 	ldw	r21,176(sp)
  808370:	dd002b17 	ldw	r20,172(sp)
  808374:	dcc02a17 	ldw	r19,168(sp)
  808378:	dc802917 	ldw	r18,164(sp)
  80837c:	dc402817 	ldw	r17,160(sp)
  808380:	dc002717 	ldw	r16,156(sp)
  808384:	dec03104 	addi	sp,sp,196
  808388:	f800283a 	ret
  80838c:	a80b883a 	mov	r5,r21
  808390:	b009883a 	mov	r4,r22
  808394:	080297c0 	call	80297c <__swsetup_r>
  808398:	1003941e 	bne	r2,zero,8091ec <___vfiprintf_internal_r+0x12f4>
  80839c:	a880030b 	ldhu	r2,12(r21)
  8083a0:	1080068c 	andi	r2,r2,26
  8083a4:	10800298 	cmpnei	r2,r2,10
  8083a8:	103ef51e 	bne	r2,zero,807f80 <___vfiprintf_internal_r+0x88>
  8083ac:	a880038f 	ldh	r2,14(r21)
  8083b0:	103ef316 	blt	r2,zero,807f80 <___vfiprintf_internal_r+0x88>
  8083b4:	d9c00417 	ldw	r7,16(sp)
  8083b8:	a00d883a 	mov	r6,r20
  8083bc:	a80b883a 	mov	r5,r21
  8083c0:	b009883a 	mov	r4,r22
  8083c4:	dfc03017 	ldw	ra,192(sp)
  8083c8:	df002f17 	ldw	fp,188(sp)
  8083cc:	ddc02e17 	ldw	r23,184(sp)
  8083d0:	dd802d17 	ldw	r22,180(sp)
  8083d4:	dd402c17 	ldw	r21,176(sp)
  8083d8:	dd002b17 	ldw	r20,172(sp)
  8083dc:	dcc02a17 	ldw	r19,168(sp)
  8083e0:	dc802917 	ldw	r18,164(sp)
  8083e4:	dc402817 	ldw	r17,160(sp)
  8083e8:	dc002717 	ldw	r16,156(sp)
  8083ec:	dec03104 	addi	sp,sp,196
  8083f0:	08092581 	jmpi	809258 <__sbprintf>
  8083f4:	6b400414 	ori	r13,r13,16
  8083f8:	6880080c 	andi	r2,r13,32
  8083fc:	10004726 	beq	r2,zero,80851c <___vfiprintf_internal_r+0x624>
  808400:	d8c00417 	ldw	r3,16(sp)
  808404:	00800044 	movi	r2,1
  808408:	1dc00017 	ldw	r23,0(r3)
  80840c:	1f000117 	ldw	fp,4(r3)
  808410:	18c00204 	addi	r3,r3,8
  808414:	d8c00415 	stw	r3,16(sp)
  808418:	00000906 	br	808440 <___vfiprintf_internal_r+0x548>
  80841c:	6b400414 	ori	r13,r13,16
  808420:	6880080c 	andi	r2,r13,32
  808424:	10003126 	beq	r2,zero,8084ec <___vfiprintf_internal_r+0x5f4>
  808428:	d8c00417 	ldw	r3,16(sp)
  80842c:	0005883a 	mov	r2,zero
  808430:	1dc00017 	ldw	r23,0(r3)
  808434:	1f000117 	ldw	fp,4(r3)
  808438:	18c00204 	addi	r3,r3,8
  80843c:	d8c00415 	stw	r3,16(sp)
  808440:	d8000945 	stb	zero,37(sp)
  808444:	40ffffe0 	cmpeqi	r3,r8,-1
  808448:	001d883a 	mov	r14,zero
  80844c:	1800f01e 	bne	r3,zero,808810 <___vfiprintf_internal_r+0x918>
  808450:	04ffdfc4 	movi	r19,-129
  808454:	6cc8703a 	and	r4,r13,r19
  808458:	bf06b03a 	or	r3,r23,fp
  80845c:	d9000015 	stw	r4,0(sp)
  808460:	1802301e 	bne	r3,zero,808d24 <___vfiprintf_internal_r+0xe2c>
  808464:	4001f31e 	bne	r8,zero,808c34 <___vfiprintf_internal_r+0xd3c>
  808468:	10029e1e 	bne	r2,zero,808ee4 <___vfiprintf_internal_r+0xfec>
  80846c:	6f00004c 	andi	fp,r13,1
  808470:	e002bc26 	beq	fp,zero,808f64 <___vfiprintf_internal_r+0x106c>
  808474:	00800c04 	movi	r2,48
  808478:	d88016c5 	stb	r2,91(sp)
  80847c:	dcc016c4 	addi	r19,sp,91
  808480:	00010006 	br	808884 <___vfiprintf_internal_r+0x98c>
  808484:	8d27c83a 	sub	r19,r17,r20
  808488:	8d3fae26 	beq	r17,r20,808344 <___vfiprintf_internal_r+0x44c>
  80848c:	d8c00c17 	ldw	r3,48(sp)
  808490:	d8800b17 	ldw	r2,44(sp)
  808494:	85000015 	stw	r20,0(r16)
  808498:	98c7883a 	add	r3,r19,r3
  80849c:	10800044 	addi	r2,r2,1
  8084a0:	d8800b15 	stw	r2,44(sp)
  8084a4:	84c00115 	stw	r19,4(r16)
  8084a8:	d8c00c15 	stw	r3,48(sp)
  8084ac:	10800208 	cmpgei	r2,r2,8
  8084b0:	1000061e 	bne	r2,zero,8084cc <___vfiprintf_internal_r+0x5d4>
  8084b4:	84000204 	addi	r16,r16,8
  8084b8:	d8c00117 	ldw	r3,4(sp)
  8084bc:	88800003 	ldbu	r2,0(r17)
  8084c0:	1cc7883a 	add	r3,r3,r19
  8084c4:	d8c00115 	stw	r3,4(sp)
  8084c8:	003ec006 	br	807fcc <___vfiprintf_internal_r+0xd4>
  8084cc:	18028126 	beq	r3,zero,808ed4 <___vfiprintf_internal_r+0xfdc>
  8084d0:	d9800a04 	addi	r6,sp,40
  8084d4:	a80b883a 	mov	r5,r21
  8084d8:	b009883a 	mov	r4,r22
  8084dc:	0807dec0 	call	807dec <__sprint_r.part.0>
  8084e0:	103f9a1e 	bne	r2,zero,80834c <___vfiprintf_internal_r+0x454>
  8084e4:	9021883a 	mov	r16,r18
  8084e8:	003ff306 	br	8084b8 <___vfiprintf_internal_r+0x5c0>
  8084ec:	d9000417 	ldw	r4,16(sp)
  8084f0:	6880040c 	andi	r2,r13,16
  8084f4:	20c00104 	addi	r3,r4,4
  8084f8:	1002ac1e 	bne	r2,zero,808fac <___vfiprintf_internal_r+0x10b4>
  8084fc:	6880100c 	andi	r2,r13,64
  808500:	1002fb26 	beq	r2,zero,8090f0 <___vfiprintf_internal_r+0x11f8>
  808504:	d8800417 	ldw	r2,16(sp)
  808508:	0039883a 	mov	fp,zero
  80850c:	d8c00415 	stw	r3,16(sp)
  808510:	15c0000b 	ldhu	r23,0(r2)
  808514:	0005883a 	mov	r2,zero
  808518:	003fc906 	br	808440 <___vfiprintf_internal_r+0x548>
  80851c:	d9000417 	ldw	r4,16(sp)
  808520:	6880040c 	andi	r2,r13,16
  808524:	20c00104 	addi	r3,r4,4
  808528:	1002af1e 	bne	r2,zero,808fe8 <___vfiprintf_internal_r+0x10f0>
  80852c:	6880100c 	andi	r2,r13,64
  808530:	1002fb26 	beq	r2,zero,809120 <___vfiprintf_internal_r+0x1228>
  808534:	d8800417 	ldw	r2,16(sp)
  808538:	0039883a 	mov	fp,zero
  80853c:	d8c00415 	stw	r3,16(sp)
  808540:	15c0000b 	ldhu	r23,0(r2)
  808544:	00800044 	movi	r2,1
  808548:	003fbd06 	br	808440 <___vfiprintf_internal_r+0x548>
  80854c:	d8c00017 	ldw	r3,0(sp)
  808550:	d8000b15 	stw	zero,44(sp)
  808554:	1cc0010c 	andi	r19,r3,4
  808558:	98024c26 	beq	r19,zero,808e8c <___vfiprintf_internal_r+0xf94>
  80855c:	8de1c83a 	sub	r16,r17,r23
  808560:	04024a0e 	bge	zero,r16,808e8c <___vfiprintf_internal_r+0xf94>
  808564:	900d883a 	mov	r6,r18
  808568:	80c00450 	cmplti	r3,r16,17
  80856c:	d9000b17 	ldw	r4,44(sp)
  808570:	01c02074 	movhi	r7,129
  808574:	18031a1e 	bne	r3,zero,8091e0 <___vfiprintf_internal_r+0x12e8>
  808578:	39c4c104 	addi	r7,r7,4868
  80857c:	04c00404 	movi	r19,16
  808580:	00000606 	br	80859c <___vfiprintf_internal_r+0x6a4>
  808584:	21400084 	addi	r5,r4,2
  808588:	31800204 	addi	r6,r6,8
  80858c:	1809883a 	mov	r4,r3
  808590:	843ffc04 	addi	r16,r16,-16
  808594:	80c00448 	cmpgei	r3,r16,17
  808598:	18001726 	beq	r3,zero,8085f8 <___vfiprintf_internal_r+0x700>
  80859c:	20c00044 	addi	r3,r4,1
  8085a0:	10800404 	addi	r2,r2,16
  8085a4:	31c00015 	stw	r7,0(r6)
  8085a8:	34c00115 	stw	r19,4(r6)
  8085ac:	d8800c15 	stw	r2,48(sp)
  8085b0:	d8c00b15 	stw	r3,44(sp)
  8085b4:	19400208 	cmpgei	r5,r3,8
  8085b8:	283ff226 	beq	r5,zero,808584 <___vfiprintf_internal_r+0x68c>
  8085bc:	d9800a04 	addi	r6,sp,40
  8085c0:	a80b883a 	mov	r5,r21
  8085c4:	b009883a 	mov	r4,r22
  8085c8:	10011f26 	beq	r2,zero,808a48 <___vfiprintf_internal_r+0xb50>
  8085cc:	d9c00015 	stw	r7,0(sp)
  8085d0:	0807dec0 	call	807dec <__sprint_r.part.0>
  8085d4:	103f5d1e 	bne	r2,zero,80834c <___vfiprintf_internal_r+0x454>
  8085d8:	d9000b17 	ldw	r4,44(sp)
  8085dc:	843ffc04 	addi	r16,r16,-16
  8085e0:	80c00448 	cmpgei	r3,r16,17
  8085e4:	d8800c17 	ldw	r2,48(sp)
  8085e8:	d9c00017 	ldw	r7,0(sp)
  8085ec:	900d883a 	mov	r6,r18
  8085f0:	21400044 	addi	r5,r4,1
  8085f4:	183fe91e 	bne	r3,zero,80859c <___vfiprintf_internal_r+0x6a4>
  8085f8:	1405883a 	add	r2,r2,r16
  8085fc:	d9400b15 	stw	r5,44(sp)
  808600:	31c00015 	stw	r7,0(r6)
  808604:	34000115 	stw	r16,4(r6)
  808608:	d8800c15 	stw	r2,48(sp)
  80860c:	29400210 	cmplti	r5,r5,8
  808610:	283f421e 	bne	r5,zero,80831c <___vfiprintf_internal_r+0x424>
  808614:	10021d26 	beq	r2,zero,808e8c <___vfiprintf_internal_r+0xf94>
  808618:	d9800a04 	addi	r6,sp,40
  80861c:	a80b883a 	mov	r5,r21
  808620:	b009883a 	mov	r4,r22
  808624:	0807dec0 	call	807dec <__sprint_r.part.0>
  808628:	103f481e 	bne	r2,zero,80834c <___vfiprintf_internal_r+0x454>
  80862c:	d8800c17 	ldw	r2,48(sp)
  808630:	003f3a06 	br	80831c <___vfiprintf_internal_r+0x424>
  808634:	0804ab80 	call	804ab8 <__sinit>
  808638:	003e4106 	br	807f40 <___vfiprintf_internal_r+0x48>
  80863c:	29403fcc 	andi	r5,r5,255
  808640:	2802da1e 	bne	r5,zero,8091ac <___vfiprintf_internal_r+0x12b4>
  808644:	6880080c 	andi	r2,r13,32
  808648:	10005b26 	beq	r2,zero,8087b8 <___vfiprintf_internal_r+0x8c0>
  80864c:	d8c00417 	ldw	r3,16(sp)
  808650:	18800117 	ldw	r2,4(r3)
  808654:	1dc00017 	ldw	r23,0(r3)
  808658:	18c00204 	addi	r3,r3,8
  80865c:	d8c00415 	stw	r3,16(sp)
  808660:	1039883a 	mov	fp,r2
  808664:	10006016 	blt	r2,zero,8087e8 <___vfiprintf_internal_r+0x8f0>
  808668:	40bfffd8 	cmpnei	r2,r8,-1
  80866c:	db800943 	ldbu	r14,37(sp)
  808670:	10000626 	beq	r2,zero,80868c <___vfiprintf_internal_r+0x794>
  808674:	04ffdfc4 	movi	r19,-129
  808678:	6cc6703a 	and	r3,r13,r19
  80867c:	bf04b03a 	or	r2,r23,fp
  808680:	d8c00015 	stw	r3,0(sp)
  808684:	10021626 	beq	r2,zero,808ee0 <___vfiprintf_internal_r+0xfe8>
  808688:	db400017 	ldw	r13,0(sp)
  80868c:	e001a71e 	bne	fp,zero,808d2c <___vfiprintf_internal_r+0xe34>
  808690:	b88002a8 	cmpgeui	r2,r23,10
  808694:	1001a51e 	bne	r2,zero,808d2c <___vfiprintf_internal_r+0xe34>
  808698:	bdc00c04 	addi	r23,r23,48
  80869c:	ddc016c5 	stb	r23,91(sp)
  8086a0:	db400015 	stw	r13,0(sp)
  8086a4:	07000044 	movi	fp,1
  8086a8:	dcc016c4 	addi	r19,sp,91
  8086ac:	00007506 	br	808884 <___vfiprintf_internal_r+0x98c>
  8086b0:	a0800007 	ldb	r2,0(r20)
  8086b4:	6b401014 	ori	r13,r13,64
  8086b8:	003e5006 	br	807ffc <___vfiprintf_internal_r+0x104>
  8086bc:	29403fcc 	andi	r5,r5,255
  8086c0:	2802bc1e 	bne	r5,zero,8091b4 <___vfiprintf_internal_r+0x12bc>
  8086c4:	00c02074 	movhi	r3,129
  8086c8:	18c43604 	addi	r3,r3,4312
  8086cc:	d8c00515 	stw	r3,20(sp)
  8086d0:	68c0080c 	andi	r3,r13,32
  8086d4:	1800bd26 	beq	r3,zero,8089cc <___vfiprintf_internal_r+0xad4>
  8086d8:	d8c00417 	ldw	r3,16(sp)
  8086dc:	1dc00017 	ldw	r23,0(r3)
  8086e0:	1f000117 	ldw	fp,4(r3)
  8086e4:	18c00204 	addi	r3,r3,8
  8086e8:	d8c00415 	stw	r3,16(sp)
  8086ec:	68c0004c 	andi	r3,r13,1
  8086f0:	18000226 	beq	r3,zero,8086fc <___vfiprintf_internal_r+0x804>
  8086f4:	bf06b03a 	or	r3,r23,fp
  8086f8:	1802261e 	bne	r3,zero,808f94 <___vfiprintf_internal_r+0x109c>
  8086fc:	00800084 	movi	r2,2
  808700:	003f4f06 	br	808440 <___vfiprintf_internal_r+0x548>
  808704:	d8800417 	ldw	r2,16(sp)
  808708:	d8000945 	stb	zero,37(sp)
  80870c:	14c00017 	ldw	r19,0(r2)
  808710:	10c00104 	addi	r3,r2,4
  808714:	98026926 	beq	r19,zero,8090bc <___vfiprintf_internal_r+0x11c4>
  808718:	40bfffe0 	cmpeqi	r2,r8,-1
  80871c:	1002411e 	bne	r2,zero,809024 <___vfiprintf_internal_r+0x112c>
  808720:	400d883a 	mov	r6,r8
  808724:	000b883a 	mov	r5,zero
  808728:	9809883a 	mov	r4,r19
  80872c:	d8c00315 	stw	r3,12(sp)
  808730:	db400215 	stw	r13,8(sp)
  808734:	da000015 	stw	r8,0(sp)
  808738:	0805f680 	call	805f68 <memchr>
  80873c:	da000017 	ldw	r8,0(sp)
  808740:	db400217 	ldw	r13,8(sp)
  808744:	d8c00317 	ldw	r3,12(sp)
  808748:	10029426 	beq	r2,zero,80919c <___vfiprintf_internal_r+0x12a4>
  80874c:	14f9c83a 	sub	fp,r2,r19
  808750:	e02f883a 	mov	r23,fp
  808754:	d8c00415 	stw	r3,16(sp)
  808758:	003ea006 	br	8081dc <___vfiprintf_internal_r+0x2e4>
  80875c:	a0800007 	ldb	r2,0(r20)
  808760:	6b400814 	ori	r13,r13,32
  808764:	003e2506 	br	807ffc <___vfiprintf_internal_r+0x104>
  808768:	d8c00417 	ldw	r3,16(sp)
  80876c:	00800c04 	movi	r2,48
  808770:	d8800985 	stb	r2,38(sp)
  808774:	00801e04 	movi	r2,120
  808778:	01002074 	movhi	r4,129
  80877c:	d88009c5 	stb	r2,39(sp)
  808780:	18800104 	addi	r2,r3,4
  808784:	d8800415 	stw	r2,16(sp)
  808788:	20843604 	addi	r2,r4,4312
  80878c:	d8800515 	stw	r2,20(sp)
  808790:	1dc00017 	ldw	r23,0(r3)
  808794:	0039883a 	mov	fp,zero
  808798:	6b400094 	ori	r13,r13,2
  80879c:	00800084 	movi	r2,2
  8087a0:	003f2706 	br	808440 <___vfiprintf_internal_r+0x548>
  8087a4:	29403fcc 	andi	r5,r5,255
  8087a8:	2802841e 	bne	r5,zero,8091bc <___vfiprintf_internal_r+0x12c4>
  8087ac:	6b400414 	ori	r13,r13,16
  8087b0:	6880080c 	andi	r2,r13,32
  8087b4:	103fa51e 	bne	r2,zero,80864c <___vfiprintf_internal_r+0x754>
  8087b8:	d9000417 	ldw	r4,16(sp)
  8087bc:	6880040c 	andi	r2,r13,16
  8087c0:	20c00104 	addi	r3,r4,4
  8087c4:	1001ee1e 	bne	r2,zero,808f80 <___vfiprintf_internal_r+0x1088>
  8087c8:	6880100c 	andi	r2,r13,64
  8087cc:	10024e26 	beq	r2,zero,809108 <___vfiprintf_internal_r+0x1210>
  8087d0:	d8800417 	ldw	r2,16(sp)
  8087d4:	d8c00415 	stw	r3,16(sp)
  8087d8:	15c0000f 	ldh	r23,0(r2)
  8087dc:	b839d7fa 	srai	fp,r23,31
  8087e0:	e005883a 	mov	r2,fp
  8087e4:	103fa00e 	bge	r2,zero,808668 <___vfiprintf_internal_r+0x770>
  8087e8:	b804c03a 	cmpne	r2,r23,zero
  8087ec:	0739c83a 	sub	fp,zero,fp
  8087f0:	e0b9c83a 	sub	fp,fp,r2
  8087f4:	00800b44 	movi	r2,45
  8087f8:	d8800945 	stb	r2,37(sp)
  8087fc:	40ffffe0 	cmpeqi	r3,r8,-1
  808800:	05efc83a 	sub	r23,zero,r23
  808804:	03800b44 	movi	r14,45
  808808:	00800044 	movi	r2,1
  80880c:	183f1026 	beq	r3,zero,808450 <___vfiprintf_internal_r+0x558>
  808810:	10c00060 	cmpeqi	r3,r2,1
  808814:	183f9d1e 	bne	r3,zero,80868c <___vfiprintf_internal_r+0x794>
  808818:	108000a0 	cmpeqi	r2,r2,2
  80881c:	10010a1e 	bne	r2,zero,808c48 <___vfiprintf_internal_r+0xd50>
  808820:	9027883a 	mov	r19,r18
  808824:	e008977a 	slli	r4,fp,29
  808828:	b806d0fa 	srli	r3,r23,3
  80882c:	e038d0fa 	srli	fp,fp,3
  808830:	b88001cc 	andi	r2,r23,7
  808834:	10800c04 	addi	r2,r2,48
  808838:	20eeb03a 	or	r23,r4,r3
  80883c:	98bfffc5 	stb	r2,-1(r19)
  808840:	bf06b03a 	or	r3,r23,fp
  808844:	980b883a 	mov	r5,r19
  808848:	9cffffc4 	addi	r19,r19,-1
  80884c:	183ff51e 	bne	r3,zero,808824 <___vfiprintf_internal_r+0x92c>
  808850:	68c0004c 	andi	r3,r13,1
  808854:	18010926 	beq	r3,zero,808c7c <___vfiprintf_internal_r+0xd84>
  808858:	10803fcc 	andi	r2,r2,255
  80885c:	1080201c 	xori	r2,r2,128
  808860:	10bfe004 	addi	r2,r2,-128
  808864:	10800c18 	cmpnei	r2,r2,48
  808868:	10010426 	beq	r2,zero,808c7c <___vfiprintf_internal_r+0xd84>
  80886c:	297fff84 	addi	r5,r5,-2
  808870:	00800c04 	movi	r2,48
  808874:	98bfffc5 	stb	r2,-1(r19)
  808878:	9179c83a 	sub	fp,r18,r5
  80887c:	db400015 	stw	r13,0(sp)
  808880:	2827883a 	mov	r19,r5
  808884:	402f883a 	mov	r23,r8
  808888:	4700010e 	bge	r8,fp,808890 <___vfiprintf_internal_r+0x998>
  80888c:	e02f883a 	mov	r23,fp
  808890:	73803fcc 	andi	r14,r14,255
  808894:	7380201c 	xori	r14,r14,128
  808898:	73bfe004 	addi	r14,r14,-128
  80889c:	703e5126 	beq	r14,zero,8081e4 <___vfiprintf_internal_r+0x2ec>
  8088a0:	bdc00044 	addi	r23,r23,1
  8088a4:	003e4f06 	br	8081e4 <___vfiprintf_internal_r+0x2ec>
  8088a8:	a0800007 	ldb	r2,0(r20)
  8088ac:	6b402014 	ori	r13,r13,128
  8088b0:	003dd206 	br	807ffc <___vfiprintf_internal_r+0x104>
  8088b4:	a0800007 	ldb	r2,0(r20)
  8088b8:	a0c00044 	addi	r3,r20,1
  8088bc:	11000aa0 	cmpeqi	r4,r2,42
  8088c0:	2002521e 	bne	r4,zero,80920c <___vfiprintf_internal_r+0x1314>
  8088c4:	113ff404 	addi	r4,r2,-48
  8088c8:	21c002b0 	cmpltui	r7,r4,10
  8088cc:	1829883a 	mov	r20,r3
  8088d0:	0011883a 	mov	r8,zero
  8088d4:	383dca26 	beq	r7,zero,808000 <___vfiprintf_internal_r+0x108>
  8088d8:	400690ba 	slli	r3,r8,2
  8088dc:	a0800007 	ldb	r2,0(r20)
  8088e0:	a5000044 	addi	r20,r20,1
  8088e4:	1a11883a 	add	r8,r3,r8
  8088e8:	4211883a 	add	r8,r8,r8
  8088ec:	4111883a 	add	r8,r8,r4
  8088f0:	113ff404 	addi	r4,r2,-48
  8088f4:	20c002b0 	cmpltui	r3,r4,10
  8088f8:	183ff71e 	bne	r3,zero,8088d8 <___vfiprintf_internal_r+0x9e0>
  8088fc:	003dc006 	br	808000 <___vfiprintf_internal_r+0x108>
  808900:	a0800003 	ldbu	r2,0(r20)
  808904:	10803fcc 	andi	r2,r2,255
  808908:	1080201c 	xori	r2,r2,128
  80890c:	6b400114 	ori	r13,r13,4
  808910:	10bfe004 	addi	r2,r2,-128
  808914:	003db906 	br	807ffc <___vfiprintf_internal_r+0x104>
  808918:	a0800007 	ldb	r2,0(r20)
  80891c:	01400044 	movi	r5,1
  808920:	01800ac4 	movi	r6,43
  808924:	003db506 	br	807ffc <___vfiprintf_internal_r+0x104>
  808928:	d8c00417 	ldw	r3,16(sp)
  80892c:	a0800003 	ldbu	r2,0(r20)
  808930:	1c400017 	ldw	r17,0(r3)
  808934:	18c00104 	addi	r3,r3,4
  808938:	8801b716 	blt	r17,zero,809018 <___vfiprintf_internal_r+0x1120>
  80893c:	d8c00415 	stw	r3,16(sp)
  808940:	10803fcc 	andi	r2,r2,255
  808944:	1080201c 	xori	r2,r2,128
  808948:	10bfe004 	addi	r2,r2,-128
  80894c:	003dab06 	br	807ffc <___vfiprintf_internal_r+0x104>
  808950:	a0800007 	ldb	r2,0(r20)
  808954:	6b400054 	ori	r13,r13,1
  808958:	003da806 	br	807ffc <___vfiprintf_internal_r+0x104>
  80895c:	30c03fcc 	andi	r3,r6,255
  808960:	18c0201c 	xori	r3,r3,128
  808964:	18ffe004 	addi	r3,r3,-128
  808968:	a0800003 	ldbu	r2,0(r20)
  80896c:	183ff41e 	bne	r3,zero,808940 <___vfiprintf_internal_r+0xa48>
  808970:	10803fcc 	andi	r2,r2,255
  808974:	1080201c 	xori	r2,r2,128
  808978:	01400044 	movi	r5,1
  80897c:	01800804 	movi	r6,32
  808980:	10bfe004 	addi	r2,r2,-128
  808984:	003d9d06 	br	807ffc <___vfiprintf_internal_r+0x104>
  808988:	d8c00417 	ldw	r3,16(sp)
  80898c:	d8000945 	stb	zero,37(sp)
  808990:	05c00044 	movi	r23,1
  808994:	18800017 	ldw	r2,0(r3)
  808998:	18c00104 	addi	r3,r3,4
  80899c:	d8c00415 	stw	r3,16(sp)
  8089a0:	d8800d05 	stb	r2,52(sp)
  8089a4:	07000044 	movi	fp,1
  8089a8:	dcc00d04 	addi	r19,sp,52
  8089ac:	003e0b06 	br	8081dc <___vfiprintf_internal_r+0x2e4>
  8089b0:	29403fcc 	andi	r5,r5,255
  8089b4:	2802061e 	bne	r5,zero,8091d0 <___vfiprintf_internal_r+0x12d8>
  8089b8:	00c02074 	movhi	r3,129
  8089bc:	18c43b04 	addi	r3,r3,4332
  8089c0:	d8c00515 	stw	r3,20(sp)
  8089c4:	68c0080c 	andi	r3,r13,32
  8089c8:	183f431e 	bne	r3,zero,8086d8 <___vfiprintf_internal_r+0x7e0>
  8089cc:	d9400417 	ldw	r5,16(sp)
  8089d0:	68c0040c 	andi	r3,r13,16
  8089d4:	29000104 	addi	r4,r5,4
  8089d8:	18017f1e 	bne	r3,zero,808fd8 <___vfiprintf_internal_r+0x10e0>
  8089dc:	68c0100c 	andi	r3,r13,64
  8089e0:	1801be26 	beq	r3,zero,8090dc <___vfiprintf_internal_r+0x11e4>
  8089e4:	d8c00417 	ldw	r3,16(sp)
  8089e8:	0039883a 	mov	fp,zero
  8089ec:	d9000415 	stw	r4,16(sp)
  8089f0:	1dc0000b 	ldhu	r23,0(r3)
  8089f4:	003f3d06 	br	8086ec <___vfiprintf_internal_r+0x7f4>
  8089f8:	29403fcc 	andi	r5,r5,255
  8089fc:	2801f61e 	bne	r5,zero,8091d8 <___vfiprintf_internal_r+0x12e0>
  808a00:	d9000417 	ldw	r4,16(sp)
  808a04:	6880080c 	andi	r2,r13,32
  808a08:	20c00017 	ldw	r3,0(r4)
  808a0c:	21000104 	addi	r4,r4,4
  808a10:	10016b1e 	bne	r2,zero,808fc0 <___vfiprintf_internal_r+0x10c8>
  808a14:	6880040c 	andi	r2,r13,16
  808a18:	1001951e 	bne	r2,zero,809070 <___vfiprintf_internal_r+0x1178>
  808a1c:	6b40100c 	andi	r13,r13,64
  808a20:	68019326 	beq	r13,zero,809070 <___vfiprintf_internal_r+0x1178>
  808a24:	d8800117 	ldw	r2,4(sp)
  808a28:	d9000415 	stw	r4,16(sp)
  808a2c:	1880000d 	sth	r2,0(r3)
  808a30:	003d5a06 	br	807f9c <___vfiprintf_internal_r+0xa4>
  808a34:	a0800007 	ldb	r2,0(r20)
  808a38:	10c01b18 	cmpnei	r3,r2,108
  808a3c:	18019826 	beq	r3,zero,8090a0 <___vfiprintf_internal_r+0x11a8>
  808a40:	6b400414 	ori	r13,r13,16
  808a44:	003d6d06 	br	807ffc <___vfiprintf_internal_r+0x104>
  808a48:	01400044 	movi	r5,1
  808a4c:	0009883a 	mov	r4,zero
  808a50:	900d883a 	mov	r6,r18
  808a54:	003ece06 	br	808590 <___vfiprintf_internal_r+0x698>
  808a58:	8dc7c83a 	sub	r3,r17,r23
  808a5c:	00fe190e 	bge	zero,r3,8082c4 <___vfiprintf_internal_r+0x3cc>
  808a60:	19c00450 	cmplti	r7,r3,17
  808a64:	3801e41e 	bne	r7,zero,8091f8 <___vfiprintf_internal_r+0x1300>
  808a68:	01c02074 	movhi	r7,129
  808a6c:	39c4bd04 	addi	r7,r7,4852
  808a70:	03400404 	movi	r13,16
  808a74:	00000606 	br	808a90 <___vfiprintf_internal_r+0xb98>
  808a78:	23800084 	addi	r14,r4,2
  808a7c:	84000204 	addi	r16,r16,8
  808a80:	2809883a 	mov	r4,r5
  808a84:	18fffc04 	addi	r3,r3,-16
  808a88:	19400448 	cmpgei	r5,r3,17
  808a8c:	28001c26 	beq	r5,zero,808b00 <___vfiprintf_internal_r+0xc08>
  808a90:	21400044 	addi	r5,r4,1
  808a94:	10800404 	addi	r2,r2,16
  808a98:	81c00015 	stw	r7,0(r16)
  808a9c:	83400115 	stw	r13,4(r16)
  808aa0:	d8800c15 	stw	r2,48(sp)
  808aa4:	d9400b15 	stw	r5,44(sp)
  808aa8:	29800208 	cmpgei	r6,r5,8
  808aac:	303ff226 	beq	r6,zero,808a78 <___vfiprintf_internal_r+0xb80>
  808ab0:	d9800a04 	addi	r6,sp,40
  808ab4:	a80b883a 	mov	r5,r21
  808ab8:	b009883a 	mov	r4,r22
  808abc:	10007826 	beq	r2,zero,808ca0 <___vfiprintf_internal_r+0xda8>
  808ac0:	d9c00615 	stw	r7,24(sp)
  808ac4:	d8c00315 	stw	r3,12(sp)
  808ac8:	da000215 	stw	r8,8(sp)
  808acc:	0807dec0 	call	807dec <__sprint_r.part.0>
  808ad0:	103e1e1e 	bne	r2,zero,80834c <___vfiprintf_internal_r+0x454>
  808ad4:	d8c00317 	ldw	r3,12(sp)
  808ad8:	d9000b17 	ldw	r4,44(sp)
  808adc:	d8800c17 	ldw	r2,48(sp)
  808ae0:	18fffc04 	addi	r3,r3,-16
  808ae4:	19400448 	cmpgei	r5,r3,17
  808ae8:	d9c00617 	ldw	r7,24(sp)
  808aec:	da000217 	ldw	r8,8(sp)
  808af0:	9021883a 	mov	r16,r18
  808af4:	23800044 	addi	r14,r4,1
  808af8:	03400404 	movi	r13,16
  808afc:	283fe41e 	bne	r5,zero,808a90 <___vfiprintf_internal_r+0xb98>
  808b00:	83400204 	addi	r13,r16,8
  808b04:	10c5883a 	add	r2,r2,r3
  808b08:	80c00115 	stw	r3,4(r16)
  808b0c:	81c00015 	stw	r7,0(r16)
  808b10:	d8800c15 	stw	r2,48(sp)
  808b14:	db800b15 	stw	r14,44(sp)
  808b18:	70c00208 	cmpgei	r3,r14,8
  808b1c:	18011326 	beq	r3,zero,808f6c <___vfiprintf_internal_r+0x1074>
  808b20:	10018826 	beq	r2,zero,809144 <___vfiprintf_internal_r+0x124c>
  808b24:	d9800a04 	addi	r6,sp,40
  808b28:	a80b883a 	mov	r5,r21
  808b2c:	b009883a 	mov	r4,r22
  808b30:	da000215 	stw	r8,8(sp)
  808b34:	0807dec0 	call	807dec <__sprint_r.part.0>
  808b38:	103e041e 	bne	r2,zero,80834c <___vfiprintf_internal_r+0x454>
  808b3c:	da000217 	ldw	r8,8(sp)
  808b40:	d9000b17 	ldw	r4,44(sp)
  808b44:	d8800c17 	ldw	r2,48(sp)
  808b48:	4711c83a 	sub	r8,r8,fp
  808b4c:	d9801904 	addi	r6,sp,100
  808b50:	21400044 	addi	r5,r4,1
  808b54:	9021883a 	mov	r16,r18
  808b58:	023ddc0e 	bge	zero,r8,8082cc <___vfiprintf_internal_r+0x3d4>
  808b5c:	40c00450 	cmplti	r3,r8,17
  808b60:	01c02074 	movhi	r7,129
  808b64:	1801741e 	bne	r3,zero,809138 <___vfiprintf_internal_r+0x1240>
  808b68:	39c4bd04 	addi	r7,r7,4852
  808b6c:	03400404 	movi	r13,16
  808b70:	00000606 	br	808b8c <___vfiprintf_internal_r+0xc94>
  808b74:	21400084 	addi	r5,r4,2
  808b78:	84000204 	addi	r16,r16,8
  808b7c:	1809883a 	mov	r4,r3
  808b80:	423ffc04 	addi	r8,r8,-16
  808b84:	40c00448 	cmpgei	r3,r8,17
  808b88:	18001a26 	beq	r3,zero,808bf4 <___vfiprintf_internal_r+0xcfc>
  808b8c:	20c00044 	addi	r3,r4,1
  808b90:	10800404 	addi	r2,r2,16
  808b94:	81c00015 	stw	r7,0(r16)
  808b98:	83400115 	stw	r13,4(r16)
  808b9c:	d8800c15 	stw	r2,48(sp)
  808ba0:	d8c00b15 	stw	r3,44(sp)
  808ba4:	19400208 	cmpgei	r5,r3,8
  808ba8:	283ff226 	beq	r5,zero,808b74 <___vfiprintf_internal_r+0xc7c>
  808bac:	d9800a04 	addi	r6,sp,40
  808bb0:	a80b883a 	mov	r5,r21
  808bb4:	b009883a 	mov	r4,r22
  808bb8:	10001a26 	beq	r2,zero,808c24 <___vfiprintf_internal_r+0xd2c>
  808bbc:	d9c00315 	stw	r7,12(sp)
  808bc0:	da000215 	stw	r8,8(sp)
  808bc4:	0807dec0 	call	807dec <__sprint_r.part.0>
  808bc8:	103de01e 	bne	r2,zero,80834c <___vfiprintf_internal_r+0x454>
  808bcc:	da000217 	ldw	r8,8(sp)
  808bd0:	d9000b17 	ldw	r4,44(sp)
  808bd4:	d8800c17 	ldw	r2,48(sp)
  808bd8:	423ffc04 	addi	r8,r8,-16
  808bdc:	40c00448 	cmpgei	r3,r8,17
  808be0:	d9c00317 	ldw	r7,12(sp)
  808be4:	9021883a 	mov	r16,r18
  808be8:	21400044 	addi	r5,r4,1
  808bec:	03400404 	movi	r13,16
  808bf0:	183fe61e 	bne	r3,zero,808b8c <___vfiprintf_internal_r+0xc94>
  808bf4:	81000204 	addi	r4,r16,8
  808bf8:	1205883a 	add	r2,r2,r8
  808bfc:	81c00015 	stw	r7,0(r16)
  808c00:	82000115 	stw	r8,4(r16)
  808c04:	d8800c15 	stw	r2,48(sp)
  808c08:	d9400b15 	stw	r5,44(sp)
  808c0c:	28c00208 	cmpgei	r3,r5,8
  808c10:	1800a41e 	bne	r3,zero,808ea4 <___vfiprintf_internal_r+0xfac>
  808c14:	29400044 	addi	r5,r5,1
  808c18:	21800204 	addi	r6,r4,8
  808c1c:	2021883a 	mov	r16,r4
  808c20:	003daa06 	br	8082cc <___vfiprintf_internal_r+0x3d4>
  808c24:	01400044 	movi	r5,1
  808c28:	0009883a 	mov	r4,zero
  808c2c:	9021883a 	mov	r16,r18
  808c30:	003fd306 	br	808b80 <___vfiprintf_internal_r+0xc88>
  808c34:	10c00060 	cmpeqi	r3,r2,1
  808c38:	1801561e 	bne	r3,zero,809194 <___vfiprintf_internal_r+0x129c>
  808c3c:	108000a0 	cmpeqi	r2,r2,2
  808c40:	db400017 	ldw	r13,0(sp)
  808c44:	103ef626 	beq	r2,zero,808820 <___vfiprintf_internal_r+0x928>
  808c48:	9027883a 	mov	r19,r18
  808c4c:	d9000517 	ldw	r4,20(sp)
  808c50:	b88003cc 	andi	r2,r23,15
  808c54:	e006973a 	slli	r3,fp,28
  808c58:	b82ed13a 	srli	r23,r23,4
  808c5c:	2085883a 	add	r2,r4,r2
  808c60:	10800003 	ldbu	r2,0(r2)
  808c64:	e038d13a 	srli	fp,fp,4
  808c68:	1deeb03a 	or	r23,r3,r23
  808c6c:	98bfffc5 	stb	r2,-1(r19)
  808c70:	bf04b03a 	or	r2,r23,fp
  808c74:	9cffffc4 	addi	r19,r19,-1
  808c78:	103ff41e 	bne	r2,zero,808c4c <___vfiprintf_internal_r+0xd54>
  808c7c:	94f9c83a 	sub	fp,r18,r19
  808c80:	db400015 	stw	r13,0(sp)
  808c84:	003eff06 	br	808884 <___vfiprintf_internal_r+0x98c>
  808c88:	d9800a04 	addi	r6,sp,40
  808c8c:	a80b883a 	mov	r5,r21
  808c90:	b009883a 	mov	r4,r22
  808c94:	0807dec0 	call	807dec <__sprint_r.part.0>
  808c98:	103da626 	beq	r2,zero,808334 <___vfiprintf_internal_r+0x43c>
  808c9c:	003dab06 	br	80834c <___vfiprintf_internal_r+0x454>
  808ca0:	03800044 	movi	r14,1
  808ca4:	0009883a 	mov	r4,zero
  808ca8:	9021883a 	mov	r16,r18
  808cac:	003f7506 	br	808a84 <___vfiprintf_internal_r+0xb8c>
  808cb0:	10009026 	beq	r2,zero,808ef4 <___vfiprintf_internal_r+0xffc>
  808cb4:	d9800a04 	addi	r6,sp,40
  808cb8:	a80b883a 	mov	r5,r21
  808cbc:	b009883a 	mov	r4,r22
  808cc0:	da000615 	stw	r8,24(sp)
  808cc4:	db400315 	stw	r13,12(sp)
  808cc8:	db800215 	stw	r14,8(sp)
  808ccc:	0807dec0 	call	807dec <__sprint_r.part.0>
  808cd0:	103d9e1e 	bne	r2,zero,80834c <___vfiprintf_internal_r+0x454>
  808cd4:	d9000b17 	ldw	r4,44(sp)
  808cd8:	d8800c17 	ldw	r2,48(sp)
  808cdc:	da000617 	ldw	r8,24(sp)
  808ce0:	db400317 	ldw	r13,12(sp)
  808ce4:	db800217 	ldw	r14,8(sp)
  808ce8:	d9801904 	addi	r6,sp,100
  808cec:	21400044 	addi	r5,r4,1
  808cf0:	9021883a 	mov	r16,r18
  808cf4:	003d5806 	br	808258 <___vfiprintf_internal_r+0x360>
  808cf8:	d8800984 	addi	r2,sp,38
  808cfc:	d8801715 	stw	r2,92(sp)
  808d00:	00800084 	movi	r2,2
  808d04:	d8801815 	stw	r2,96(sp)
  808d08:	d9801904 	addi	r6,sp,100
  808d0c:	01400044 	movi	r5,1
  808d10:	3021883a 	mov	r16,r6
  808d14:	2809883a 	mov	r4,r5
  808d18:	21400044 	addi	r5,r4,1
  808d1c:	81800204 	addi	r6,r16,8
  808d20:	003d6606 	br	8082bc <___vfiprintf_internal_r+0x3c4>
  808d24:	db400017 	ldw	r13,0(sp)
  808d28:	003eb906 	br	808810 <___vfiprintf_internal_r+0x918>
  808d2c:	9027883a 	mov	r19,r18
  808d30:	b809883a 	mov	r4,r23
  808d34:	e00b883a 	mov	r5,fp
  808d38:	01800284 	movi	r6,10
  808d3c:	000f883a 	mov	r7,zero
  808d40:	db800315 	stw	r14,12(sp)
  808d44:	da000215 	stw	r8,8(sp)
  808d48:	db400015 	stw	r13,0(sp)
  808d4c:	080aaa00 	call	80aaa0 <__umoddi3>
  808d50:	10800c04 	addi	r2,r2,48
  808d54:	b809883a 	mov	r4,r23
  808d58:	e00b883a 	mov	r5,fp
  808d5c:	98bfffc5 	stb	r2,-1(r19)
  808d60:	01800284 	movi	r6,10
  808d64:	000f883a 	mov	r7,zero
  808d68:	080a4800 	call	80a480 <__udivdi3>
  808d6c:	e009883a 	mov	r4,fp
  808d70:	b80b883a 	mov	r5,r23
  808d74:	db400017 	ldw	r13,0(sp)
  808d78:	da000217 	ldw	r8,8(sp)
  808d7c:	db800317 	ldw	r14,12(sp)
  808d80:	9cffffc4 	addi	r19,r19,-1
  808d84:	102f883a 	mov	r23,r2
  808d88:	1839883a 	mov	fp,r3
  808d8c:	203fe81e 	bne	r4,zero,808d30 <___vfiprintf_internal_r+0xe38>
  808d90:	294002a8 	cmpgeui	r5,r5,10
  808d94:	283fe61e 	bne	r5,zero,808d30 <___vfiprintf_internal_r+0xe38>
  808d98:	94f9c83a 	sub	fp,r18,r19
  808d9c:	003eb906 	br	808884 <___vfiprintf_internal_r+0x98c>
  808da0:	19400450 	cmplti	r5,r3,17
  808da4:	01c02074 	movhi	r7,129
  808da8:	2801061e 	bne	r5,zero,8091c4 <___vfiprintf_internal_r+0x12cc>
  808dac:	39c4c104 	addi	r7,r7,4868
  808db0:	03c00404 	movi	r15,16
  808db4:	00000706 	br	808dd4 <___vfiprintf_internal_r+0xedc>
  808db8:	27c00084 	addi	ra,r4,2
  808dbc:	84000204 	addi	r16,r16,8
  808dc0:	3009883a 	mov	r4,r6
  808dc4:	18fffc04 	addi	r3,r3,-16
  808dc8:	19400448 	cmpgei	r5,r3,17
  808dcc:	28002026 	beq	r5,zero,808e50 <___vfiprintf_internal_r+0xf58>
  808dd0:	21800044 	addi	r6,r4,1
  808dd4:	10800404 	addi	r2,r2,16
  808dd8:	81c00015 	stw	r7,0(r16)
  808ddc:	83c00115 	stw	r15,4(r16)
  808de0:	d8800c15 	stw	r2,48(sp)
  808de4:	d9800b15 	stw	r6,44(sp)
  808de8:	31400208 	cmpgei	r5,r6,8
  808dec:	283ff226 	beq	r5,zero,808db8 <___vfiprintf_internal_r+0xec0>
  808df0:	d9800a04 	addi	r6,sp,40
  808df4:	a80b883a 	mov	r5,r21
  808df8:	b009883a 	mov	r4,r22
  808dfc:	10001f26 	beq	r2,zero,808e7c <___vfiprintf_internal_r+0xf84>
  808e00:	d9c00815 	stw	r7,32(sp)
  808e04:	d8c00715 	stw	r3,28(sp)
  808e08:	da000615 	stw	r8,24(sp)
  808e0c:	db400315 	stw	r13,12(sp)
  808e10:	db800215 	stw	r14,8(sp)
  808e14:	0807dec0 	call	807dec <__sprint_r.part.0>
  808e18:	103d4c1e 	bne	r2,zero,80834c <___vfiprintf_internal_r+0x454>
  808e1c:	d8c00717 	ldw	r3,28(sp)
  808e20:	d9000b17 	ldw	r4,44(sp)
  808e24:	d8800c17 	ldw	r2,48(sp)
  808e28:	18fffc04 	addi	r3,r3,-16
  808e2c:	19400448 	cmpgei	r5,r3,17
  808e30:	d9c00817 	ldw	r7,32(sp)
  808e34:	da000617 	ldw	r8,24(sp)
  808e38:	db400317 	ldw	r13,12(sp)
  808e3c:	db800217 	ldw	r14,8(sp)
  808e40:	9021883a 	mov	r16,r18
  808e44:	27c00044 	addi	ra,r4,1
  808e48:	03c00404 	movi	r15,16
  808e4c:	283fe01e 	bne	r5,zero,808dd0 <___vfiprintf_internal_r+0xed8>
  808e50:	10c5883a 	add	r2,r2,r3
  808e54:	80c00115 	stw	r3,4(r16)
  808e58:	81c00015 	stw	r7,0(r16)
  808e5c:	d8800c15 	stw	r2,48(sp)
  808e60:	dfc00b15 	stw	ra,44(sp)
  808e64:	f8c00208 	cmpgei	r3,ra,8
  808e68:	18002d1e 	bne	r3,zero,808f20 <___vfiprintf_internal_r+0x1028>
  808e6c:	84000204 	addi	r16,r16,8
  808e70:	f9400044 	addi	r5,ra,1
  808e74:	f809883a 	mov	r4,ra
  808e78:	003ce706 	br	808218 <___vfiprintf_internal_r+0x320>
  808e7c:	0009883a 	mov	r4,zero
  808e80:	07c00044 	movi	ra,1
  808e84:	9021883a 	mov	r16,r18
  808e88:	003fce06 	br	808dc4 <___vfiprintf_internal_r+0xecc>
  808e8c:	8dc0010e 	bge	r17,r23,808e94 <___vfiprintf_internal_r+0xf9c>
  808e90:	b823883a 	mov	r17,r23
  808e94:	d8800117 	ldw	r2,4(sp)
  808e98:	1445883a 	add	r2,r2,r17
  808e9c:	d8800115 	stw	r2,4(sp)
  808ea0:	003d2406 	br	808334 <___vfiprintf_internal_r+0x43c>
  808ea4:	10007626 	beq	r2,zero,809080 <___vfiprintf_internal_r+0x1188>
  808ea8:	d9800a04 	addi	r6,sp,40
  808eac:	a80b883a 	mov	r5,r21
  808eb0:	b009883a 	mov	r4,r22
  808eb4:	0807dec0 	call	807dec <__sprint_r.part.0>
  808eb8:	103d241e 	bne	r2,zero,80834c <___vfiprintf_internal_r+0x454>
  808ebc:	d9400b17 	ldw	r5,44(sp)
  808ec0:	d8800c17 	ldw	r2,48(sp)
  808ec4:	d9801904 	addi	r6,sp,100
  808ec8:	29400044 	addi	r5,r5,1
  808ecc:	9021883a 	mov	r16,r18
  808ed0:	003cfe06 	br	8082cc <___vfiprintf_internal_r+0x3d4>
  808ed4:	d8000b15 	stw	zero,44(sp)
  808ed8:	9021883a 	mov	r16,r18
  808edc:	003d7606 	br	8084b8 <___vfiprintf_internal_r+0x5c0>
  808ee0:	4000ac1e 	bne	r8,zero,809194 <___vfiprintf_internal_r+0x129c>
  808ee4:	0011883a 	mov	r8,zero
  808ee8:	0039883a 	mov	fp,zero
  808eec:	9027883a 	mov	r19,r18
  808ef0:	003e6406 	br	808884 <___vfiprintf_internal_r+0x98c>
  808ef4:	7000411e 	bne	r14,zero,808ffc <___vfiprintf_internal_r+0x1104>
  808ef8:	0009883a 	mov	r4,zero
  808efc:	d9801904 	addi	r6,sp,100
  808f00:	01400044 	movi	r5,1
  808f04:	9021883a 	mov	r16,r18
  808f08:	003cec06 	br	8082bc <___vfiprintf_internal_r+0x3c4>
  808f0c:	d9801904 	addi	r6,sp,100
  808f10:	01400044 	movi	r5,1
  808f14:	0009883a 	mov	r4,zero
  808f18:	9021883a 	mov	r16,r18
  808f1c:	003ce706 	br	8082bc <___vfiprintf_internal_r+0x3c4>
  808f20:	10004a26 	beq	r2,zero,80904c <___vfiprintf_internal_r+0x1154>
  808f24:	d9800a04 	addi	r6,sp,40
  808f28:	a80b883a 	mov	r5,r21
  808f2c:	b009883a 	mov	r4,r22
  808f30:	da000615 	stw	r8,24(sp)
  808f34:	db400315 	stw	r13,12(sp)
  808f38:	db800215 	stw	r14,8(sp)
  808f3c:	0807dec0 	call	807dec <__sprint_r.part.0>
  808f40:	103d021e 	bne	r2,zero,80834c <___vfiprintf_internal_r+0x454>
  808f44:	d9000b17 	ldw	r4,44(sp)
  808f48:	d8800c17 	ldw	r2,48(sp)
  808f4c:	da000617 	ldw	r8,24(sp)
  808f50:	db400317 	ldw	r13,12(sp)
  808f54:	db800217 	ldw	r14,8(sp)
  808f58:	9021883a 	mov	r16,r18
  808f5c:	21400044 	addi	r5,r4,1
  808f60:	003cad06 	br	808218 <___vfiprintf_internal_r+0x320>
  808f64:	9027883a 	mov	r19,r18
  808f68:	003e4606 	br	808884 <___vfiprintf_internal_r+0x98c>
  808f6c:	71400044 	addi	r5,r14,1
  808f70:	69800204 	addi	r6,r13,8
  808f74:	7009883a 	mov	r4,r14
  808f78:	6821883a 	mov	r16,r13
  808f7c:	003cd106 	br	8082c4 <___vfiprintf_internal_r+0x3cc>
  808f80:	25c00017 	ldw	r23,0(r4)
  808f84:	d8c00415 	stw	r3,16(sp)
  808f88:	b839d7fa 	srai	fp,r23,31
  808f8c:	e005883a 	mov	r2,fp
  808f90:	003db406 	br	808664 <___vfiprintf_internal_r+0x76c>
  808f94:	00c00c04 	movi	r3,48
  808f98:	d88009c5 	stb	r2,39(sp)
  808f9c:	d8c00985 	stb	r3,38(sp)
  808fa0:	6b400094 	ori	r13,r13,2
  808fa4:	00800084 	movi	r2,2
  808fa8:	003d2506 	br	808440 <___vfiprintf_internal_r+0x548>
  808fac:	25c00017 	ldw	r23,0(r4)
  808fb0:	0039883a 	mov	fp,zero
  808fb4:	d8c00415 	stw	r3,16(sp)
  808fb8:	0005883a 	mov	r2,zero
  808fbc:	003d2006 	br	808440 <___vfiprintf_internal_r+0x548>
  808fc0:	d9400117 	ldw	r5,4(sp)
  808fc4:	d9000415 	stw	r4,16(sp)
  808fc8:	2805d7fa 	srai	r2,r5,31
  808fcc:	19400015 	stw	r5,0(r3)
  808fd0:	18800115 	stw	r2,4(r3)
  808fd4:	003bf106 	br	807f9c <___vfiprintf_internal_r+0xa4>
  808fd8:	2dc00017 	ldw	r23,0(r5)
  808fdc:	0039883a 	mov	fp,zero
  808fe0:	d9000415 	stw	r4,16(sp)
  808fe4:	003dc106 	br	8086ec <___vfiprintf_internal_r+0x7f4>
  808fe8:	25c00017 	ldw	r23,0(r4)
  808fec:	0039883a 	mov	fp,zero
  808ff0:	d8c00415 	stw	r3,16(sp)
  808ff4:	00800044 	movi	r2,1
  808ff8:	003d1106 	br	808440 <___vfiprintf_internal_r+0x548>
  808ffc:	d8800984 	addi	r2,sp,38
  809000:	d8801715 	stw	r2,92(sp)
  809004:	00800084 	movi	r2,2
  809008:	d8801815 	stw	r2,96(sp)
  80900c:	dc001904 	addi	r16,sp,100
  809010:	01000044 	movi	r4,1
  809014:	003f4006 	br	808d18 <___vfiprintf_internal_r+0xe20>
  809018:	0463c83a 	sub	r17,zero,r17
  80901c:	d8c00415 	stw	r3,16(sp)
  809020:	003e3806 	br	808904 <___vfiprintf_internal_r+0xa0c>
  809024:	9809883a 	mov	r4,r19
  809028:	d8c00215 	stw	r3,8(sp)
  80902c:	db400015 	stw	r13,0(sp)
  809030:	08007040 	call	800704 <strlen>
  809034:	d8c00217 	ldw	r3,8(sp)
  809038:	db400017 	ldw	r13,0(sp)
  80903c:	1039883a 	mov	fp,r2
  809040:	102f883a 	mov	r23,r2
  809044:	d8c00415 	stw	r3,16(sp)
  809048:	003c6406 	br	8081dc <___vfiprintf_internal_r+0x2e4>
  80904c:	d8c00947 	ldb	r3,37(sp)
  809050:	18004326 	beq	r3,zero,809160 <___vfiprintf_internal_r+0x1268>
  809054:	d8800944 	addi	r2,sp,37
  809058:	d8801715 	stw	r2,92(sp)
  80905c:	00800044 	movi	r2,1
  809060:	d8801815 	stw	r2,96(sp)
  809064:	d9801904 	addi	r6,sp,100
  809068:	01400044 	movi	r5,1
  80906c:	003c7606 	br	808248 <___vfiprintf_internal_r+0x350>
  809070:	d8800117 	ldw	r2,4(sp)
  809074:	18800015 	stw	r2,0(r3)
  809078:	d9000415 	stw	r4,16(sp)
  80907c:	003bc706 	br	807f9c <___vfiprintf_internal_r+0xa4>
  809080:	00c00044 	movi	r3,1
  809084:	e005883a 	mov	r2,fp
  809088:	dcc01715 	stw	r19,92(sp)
  80908c:	df001815 	stw	fp,96(sp)
  809090:	df000c15 	stw	fp,48(sp)
  809094:	d8c00b15 	stw	r3,44(sp)
  809098:	d9801904 	addi	r6,sp,100
  80909c:	003c9a06 	br	808308 <___vfiprintf_internal_r+0x410>
  8090a0:	a0800043 	ldbu	r2,1(r20)
  8090a4:	6b400814 	ori	r13,r13,32
  8090a8:	a5000044 	addi	r20,r20,1
  8090ac:	10803fcc 	andi	r2,r2,255
  8090b0:	1080201c 	xori	r2,r2,128
  8090b4:	10bfe004 	addi	r2,r2,-128
  8090b8:	003bd006 	br	807ffc <___vfiprintf_internal_r+0x104>
  8090bc:	408001f0 	cmpltui	r2,r8,7
  8090c0:	4039883a 	mov	fp,r8
  8090c4:	10002426 	beq	r2,zero,809158 <___vfiprintf_internal_r+0x1260>
  8090c8:	04c02074 	movhi	r19,129
  8090cc:	e02f883a 	mov	r23,fp
  8090d0:	d8c00415 	stw	r3,16(sp)
  8090d4:	9cc44004 	addi	r19,r19,4352
  8090d8:	003c4006 	br	8081dc <___vfiprintf_internal_r+0x2e4>
  8090dc:	d8c00417 	ldw	r3,16(sp)
  8090e0:	0039883a 	mov	fp,zero
  8090e4:	d9000415 	stw	r4,16(sp)
  8090e8:	1dc00017 	ldw	r23,0(r3)
  8090ec:	003d7f06 	br	8086ec <___vfiprintf_internal_r+0x7f4>
  8090f0:	d8800417 	ldw	r2,16(sp)
  8090f4:	0039883a 	mov	fp,zero
  8090f8:	d8c00415 	stw	r3,16(sp)
  8090fc:	15c00017 	ldw	r23,0(r2)
  809100:	0005883a 	mov	r2,zero
  809104:	003cce06 	br	808440 <___vfiprintf_internal_r+0x548>
  809108:	d8800417 	ldw	r2,16(sp)
  80910c:	d8c00415 	stw	r3,16(sp)
  809110:	15c00017 	ldw	r23,0(r2)
  809114:	b839d7fa 	srai	fp,r23,31
  809118:	e005883a 	mov	r2,fp
  80911c:	003d5106 	br	808664 <___vfiprintf_internal_r+0x76c>
  809120:	d8800417 	ldw	r2,16(sp)
  809124:	0039883a 	mov	fp,zero
  809128:	d8c00415 	stw	r3,16(sp)
  80912c:	15c00017 	ldw	r23,0(r2)
  809130:	00800044 	movi	r2,1
  809134:	003cc206 	br	808440 <___vfiprintf_internal_r+0x548>
  809138:	3009883a 	mov	r4,r6
  80913c:	39c4bd04 	addi	r7,r7,4852
  809140:	003ead06 	br	808bf8 <___vfiprintf_internal_r+0xd00>
  809144:	d9801904 	addi	r6,sp,100
  809148:	01400044 	movi	r5,1
  80914c:	0009883a 	mov	r4,zero
  809150:	9021883a 	mov	r16,r18
  809154:	003c5b06 	br	8082c4 <___vfiprintf_internal_r+0x3cc>
  809158:	07000184 	movi	fp,6
  80915c:	003fda06 	br	8090c8 <___vfiprintf_internal_r+0x11d0>
  809160:	703ee51e 	bne	r14,zero,808cf8 <___vfiprintf_internal_r+0xe00>
  809164:	0009883a 	mov	r4,zero
  809168:	d9801904 	addi	r6,sp,100
  80916c:	01400044 	movi	r5,1
  809170:	9021883a 	mov	r16,r18
  809174:	003c5306 	br	8082c4 <___vfiprintf_internal_r+0x3cc>
  809178:	d9800945 	stb	r6,37(sp)
  80917c:	003c1106 	br	8081c4 <___vfiprintf_internal_r+0x2cc>
  809180:	d9800a04 	addi	r6,sp,40
  809184:	a80b883a 	mov	r5,r21
  809188:	b009883a 	mov	r4,r22
  80918c:	0807dec0 	call	807dec <__sprint_r.part.0>
  809190:	003c6e06 	br	80834c <___vfiprintf_internal_r+0x454>
  809194:	db400017 	ldw	r13,0(sp)
  809198:	003d3f06 	br	808698 <___vfiprintf_internal_r+0x7a0>
  80919c:	402f883a 	mov	r23,r8
  8091a0:	d8c00415 	stw	r3,16(sp)
  8091a4:	4039883a 	mov	fp,r8
  8091a8:	003c0c06 	br	8081dc <___vfiprintf_internal_r+0x2e4>
  8091ac:	d9800945 	stb	r6,37(sp)
  8091b0:	003d2406 	br	808644 <___vfiprintf_internal_r+0x74c>
  8091b4:	d9800945 	stb	r6,37(sp)
  8091b8:	003d4206 	br	8086c4 <___vfiprintf_internal_r+0x7cc>
  8091bc:	d9800945 	stb	r6,37(sp)
  8091c0:	003d7a06 	br	8087ac <___vfiprintf_internal_r+0x8b4>
  8091c4:	303f883a 	mov	ra,r6
  8091c8:	39c4c104 	addi	r7,r7,4868
  8091cc:	003f2006 	br	808e50 <___vfiprintf_internal_r+0xf58>
  8091d0:	d9800945 	stb	r6,37(sp)
  8091d4:	003df806 	br	8089b8 <___vfiprintf_internal_r+0xac0>
  8091d8:	d9800945 	stb	r6,37(sp)
  8091dc:	003e0806 	br	808a00 <___vfiprintf_internal_r+0xb08>
  8091e0:	21400044 	addi	r5,r4,1
  8091e4:	39c4c104 	addi	r7,r7,4868
  8091e8:	003d0306 	br	8085f8 <___vfiprintf_internal_r+0x700>
  8091ec:	00bfffc4 	movi	r2,-1
  8091f0:	d8800115 	stw	r2,4(sp)
  8091f4:	003c5806 	br	808358 <___vfiprintf_internal_r+0x460>
  8091f8:	01c02074 	movhi	r7,129
  8091fc:	301b883a 	mov	r13,r6
  809200:	281d883a 	mov	r14,r5
  809204:	39c4bd04 	addi	r7,r7,4852
  809208:	003e3e06 	br	808b04 <___vfiprintf_internal_r+0xc0c>
  80920c:	d8800417 	ldw	r2,16(sp)
  809210:	12000017 	ldw	r8,0(r2)
  809214:	11000104 	addi	r4,r2,4
  809218:	4000010e 	bge	r8,zero,809220 <___vfiprintf_internal_r+0x1328>
  80921c:	023fffc4 	movi	r8,-1
  809220:	a0800043 	ldbu	r2,1(r20)
  809224:	d9000415 	stw	r4,16(sp)
  809228:	1829883a 	mov	r20,r3
  80922c:	10803fcc 	andi	r2,r2,255
  809230:	1080201c 	xori	r2,r2,128
  809234:	10bfe004 	addi	r2,r2,-128
  809238:	003b7006 	br	807ffc <___vfiprintf_internal_r+0x104>

0080923c <__vfiprintf_internal>:
  80923c:	00c02074 	movhi	r3,129
  809240:	2005883a 	mov	r2,r4
  809244:	190ce817 	ldw	r4,13216(r3)
  809248:	300f883a 	mov	r7,r6
  80924c:	280d883a 	mov	r6,r5
  809250:	100b883a 	mov	r5,r2
  809254:	0807ef81 	jmpi	807ef8 <___vfiprintf_internal_r>

00809258 <__sbprintf>:
  809258:	2880030b 	ldhu	r2,12(r5)
  80925c:	2b001917 	ldw	r12,100(r5)
  809260:	2ac0038b 	ldhu	r11,14(r5)
  809264:	2a800717 	ldw	r10,28(r5)
  809268:	2a400917 	ldw	r9,36(r5)
  80926c:	defee204 	addi	sp,sp,-1144
  809270:	da001a04 	addi	r8,sp,104
  809274:	00c10004 	movi	r3,1024
  809278:	dc011a15 	stw	r16,1128(sp)
  80927c:	10bfff4c 	andi	r2,r2,65533
  809280:	2821883a 	mov	r16,r5
  809284:	d80b883a 	mov	r5,sp
  809288:	dc811c15 	stw	r18,1136(sp)
  80928c:	dc411b15 	stw	r17,1132(sp)
  809290:	dfc11d15 	stw	ra,1140(sp)
  809294:	2025883a 	mov	r18,r4
  809298:	d880030d 	sth	r2,12(sp)
  80929c:	db001915 	stw	r12,100(sp)
  8092a0:	dac0038d 	sth	r11,14(sp)
  8092a4:	da800715 	stw	r10,28(sp)
  8092a8:	da400915 	stw	r9,36(sp)
  8092ac:	da000015 	stw	r8,0(sp)
  8092b0:	da000415 	stw	r8,16(sp)
  8092b4:	d8c00215 	stw	r3,8(sp)
  8092b8:	d8c00515 	stw	r3,20(sp)
  8092bc:	d8000615 	stw	zero,24(sp)
  8092c0:	0807ef80 	call	807ef8 <___vfiprintf_internal_r>
  8092c4:	1023883a 	mov	r17,r2
  8092c8:	10000d0e 	bge	r2,zero,809300 <__sbprintf+0xa8>
  8092cc:	d880030b 	ldhu	r2,12(sp)
  8092d0:	1080100c 	andi	r2,r2,64
  8092d4:	10000326 	beq	r2,zero,8092e4 <__sbprintf+0x8c>
  8092d8:	8080030b 	ldhu	r2,12(r16)
  8092dc:	10801014 	ori	r2,r2,64
  8092e0:	8080030d 	sth	r2,12(r16)
  8092e4:	8805883a 	mov	r2,r17
  8092e8:	dfc11d17 	ldw	ra,1140(sp)
  8092ec:	dc811c17 	ldw	r18,1136(sp)
  8092f0:	dc411b17 	ldw	r17,1132(sp)
  8092f4:	dc011a17 	ldw	r16,1128(sp)
  8092f8:	dec11e04 	addi	sp,sp,1144
  8092fc:	f800283a 	ret
  809300:	d80b883a 	mov	r5,sp
  809304:	9009883a 	mov	r4,r18
  809308:	08046700 	call	804670 <_fflush_r>
  80930c:	103fef26 	beq	r2,zero,8092cc <__sbprintf+0x74>
  809310:	047fffc4 	movi	r17,-1
  809314:	003fed06 	br	8092cc <__sbprintf+0x74>

00809318 <__swbuf_r>:
  809318:	defffb04 	addi	sp,sp,-20
  80931c:	dcc00315 	stw	r19,12(sp)
  809320:	dc400115 	stw	r17,4(sp)
  809324:	dc000015 	stw	r16,0(sp)
  809328:	dfc00415 	stw	ra,16(sp)
  80932c:	dc800215 	stw	r18,8(sp)
  809330:	2027883a 	mov	r19,r4
  809334:	2823883a 	mov	r17,r5
  809338:	3021883a 	mov	r16,r6
  80933c:	20000226 	beq	r4,zero,809348 <__swbuf_r+0x30>
  809340:	20800e17 	ldw	r2,56(r4)
  809344:	10003e26 	beq	r2,zero,809440 <__swbuf_r+0x128>
  809348:	80800617 	ldw	r2,24(r16)
  80934c:	80c0030b 	ldhu	r3,12(r16)
  809350:	80800215 	stw	r2,8(r16)
  809354:	1880020c 	andi	r2,r3,8
  809358:	10001f26 	beq	r2,zero,8093d8 <__swbuf_r+0xc0>
  80935c:	80800417 	ldw	r2,16(r16)
  809360:	10001d26 	beq	r2,zero,8093d8 <__swbuf_r+0xc0>
  809364:	1948000c 	andi	r5,r3,8192
  809368:	8c803fcc 	andi	r18,r17,255
  80936c:	28002326 	beq	r5,zero,8093fc <__swbuf_r+0xe4>
  809370:	80c00017 	ldw	r3,0(r16)
  809374:	81000517 	ldw	r4,20(r16)
  809378:	1885c83a 	sub	r2,r3,r2
  80937c:	1100290e 	bge	r2,r4,809424 <__swbuf_r+0x10c>
  809380:	10800044 	addi	r2,r2,1
  809384:	81400217 	ldw	r5,8(r16)
  809388:	19000044 	addi	r4,r3,1
  80938c:	81000015 	stw	r4,0(r16)
  809390:	297fffc4 	addi	r5,r5,-1
  809394:	81400215 	stw	r5,8(r16)
  809398:	1c400005 	stb	r17,0(r3)
  80939c:	80c00517 	ldw	r3,20(r16)
  8093a0:	18802926 	beq	r3,r2,809448 <__swbuf_r+0x130>
  8093a4:	8080030b 	ldhu	r2,12(r16)
  8093a8:	1080004c 	andi	r2,r2,1
  8093ac:	10000226 	beq	r2,zero,8093b8 <__swbuf_r+0xa0>
  8093b0:	90800298 	cmpnei	r2,r18,10
  8093b4:	10002426 	beq	r2,zero,809448 <__swbuf_r+0x130>
  8093b8:	9005883a 	mov	r2,r18
  8093bc:	dfc00417 	ldw	ra,16(sp)
  8093c0:	dcc00317 	ldw	r19,12(sp)
  8093c4:	dc800217 	ldw	r18,8(sp)
  8093c8:	dc400117 	ldw	r17,4(sp)
  8093cc:	dc000017 	ldw	r16,0(sp)
  8093d0:	dec00504 	addi	sp,sp,20
  8093d4:	f800283a 	ret
  8093d8:	800b883a 	mov	r5,r16
  8093dc:	9809883a 	mov	r4,r19
  8093e0:	080297c0 	call	80297c <__swsetup_r>
  8093e4:	10001c1e 	bne	r2,zero,809458 <__swbuf_r+0x140>
  8093e8:	80c0030b 	ldhu	r3,12(r16)
  8093ec:	80800417 	ldw	r2,16(r16)
  8093f0:	8c803fcc 	andi	r18,r17,255
  8093f4:	1948000c 	andi	r5,r3,8192
  8093f8:	283fdd1e 	bne	r5,zero,809370 <__swbuf_r+0x58>
  8093fc:	81001917 	ldw	r4,100(r16)
  809400:	18c80014 	ori	r3,r3,8192
  809404:	0177ffc4 	movi	r5,-8193
  809408:	2148703a 	and	r4,r4,r5
  80940c:	80c0030d 	sth	r3,12(r16)
  809410:	80c00017 	ldw	r3,0(r16)
  809414:	81001915 	stw	r4,100(r16)
  809418:	81000517 	ldw	r4,20(r16)
  80941c:	1885c83a 	sub	r2,r3,r2
  809420:	113fd716 	blt	r2,r4,809380 <__swbuf_r+0x68>
  809424:	800b883a 	mov	r5,r16
  809428:	9809883a 	mov	r4,r19
  80942c:	08046700 	call	804670 <_fflush_r>
  809430:	1000091e 	bne	r2,zero,809458 <__swbuf_r+0x140>
  809434:	80c00017 	ldw	r3,0(r16)
  809438:	00800044 	movi	r2,1
  80943c:	003fd106 	br	809384 <__swbuf_r+0x6c>
  809440:	0804ab80 	call	804ab8 <__sinit>
  809444:	003fc006 	br	809348 <__swbuf_r+0x30>
  809448:	800b883a 	mov	r5,r16
  80944c:	9809883a 	mov	r4,r19
  809450:	08046700 	call	804670 <_fflush_r>
  809454:	103fd826 	beq	r2,zero,8093b8 <__swbuf_r+0xa0>
  809458:	04bfffc4 	movi	r18,-1
  80945c:	003fd606 	br	8093b8 <__swbuf_r+0xa0>

00809460 <__swbuf>:
  809460:	00c02074 	movhi	r3,129
  809464:	2005883a 	mov	r2,r4
  809468:	190ce817 	ldw	r4,13216(r3)
  80946c:	280d883a 	mov	r6,r5
  809470:	100b883a 	mov	r5,r2
  809474:	08093181 	jmpi	809318 <__swbuf_r>

00809478 <_write_r>:
  809478:	2807883a 	mov	r3,r5
  80947c:	defffe04 	addi	sp,sp,-8
  809480:	dc000015 	stw	r16,0(sp)
  809484:	300b883a 	mov	r5,r6
  809488:	00802074 	movhi	r2,129
  80948c:	380d883a 	mov	r6,r7
  809490:	2021883a 	mov	r16,r4
  809494:	1809883a 	mov	r4,r3
  809498:	dfc00115 	stw	ra,4(sp)
  80949c:	10142e15 	stw	zero,20664(r2)
  8094a0:	080e6f40 	call	80e6f4 <write>
  8094a4:	10ffffd8 	cmpnei	r3,r2,-1
  8094a8:	18000426 	beq	r3,zero,8094bc <_write_r+0x44>
  8094ac:	dfc00117 	ldw	ra,4(sp)
  8094b0:	dc000017 	ldw	r16,0(sp)
  8094b4:	dec00204 	addi	sp,sp,8
  8094b8:	f800283a 	ret
  8094bc:	00c02074 	movhi	r3,129
  8094c0:	18d42e17 	ldw	r3,20664(r3)
  8094c4:	183ff926 	beq	r3,zero,8094ac <_write_r+0x34>
  8094c8:	80c00015 	stw	r3,0(r16)
  8094cc:	dfc00117 	ldw	ra,4(sp)
  8094d0:	dc000017 	ldw	r16,0(sp)
  8094d4:	dec00204 	addi	sp,sp,8
  8094d8:	f800283a 	ret

008094dc <_close_r>:
  8094dc:	defffe04 	addi	sp,sp,-8
  8094e0:	dc000015 	stw	r16,0(sp)
  8094e4:	00802074 	movhi	r2,129
  8094e8:	2021883a 	mov	r16,r4
  8094ec:	2809883a 	mov	r4,r5
  8094f0:	dfc00115 	stw	ra,4(sp)
  8094f4:	10142e15 	stw	zero,20664(r2)
  8094f8:	080d9bc0 	call	80d9bc <close>
  8094fc:	10ffffd8 	cmpnei	r3,r2,-1
  809500:	18000426 	beq	r3,zero,809514 <_close_r+0x38>
  809504:	dfc00117 	ldw	ra,4(sp)
  809508:	dc000017 	ldw	r16,0(sp)
  80950c:	dec00204 	addi	sp,sp,8
  809510:	f800283a 	ret
  809514:	00c02074 	movhi	r3,129
  809518:	18d42e17 	ldw	r3,20664(r3)
  80951c:	183ff926 	beq	r3,zero,809504 <_close_r+0x28>
  809520:	80c00015 	stw	r3,0(r16)
  809524:	dfc00117 	ldw	ra,4(sp)
  809528:	dc000017 	ldw	r16,0(sp)
  80952c:	dec00204 	addi	sp,sp,8
  809530:	f800283a 	ret

00809534 <__assert_func>:
  809534:	00802074 	movhi	r2,129
  809538:	120ce817 	ldw	r8,13216(r2)
  80953c:	defffc04 	addi	sp,sp,-16
  809540:	3807883a 	mov	r3,r7
  809544:	3005883a 	mov	r2,r6
  809548:	dfc00315 	stw	ra,12(sp)
  80954c:	42400317 	ldw	r9,12(r8)
  809550:	200f883a 	mov	r7,r4
  809554:	2811883a 	mov	r8,r5
  809558:	180d883a 	mov	r6,r3
  80955c:	10000a26 	beq	r2,zero,809588 <__assert_func+0x54>
  809560:	00c02074 	movhi	r3,129
  809564:	18c4c504 	addi	r3,r3,4884
  809568:	01402074 	movhi	r5,129
  80956c:	2944c904 	addi	r5,r5,4900
  809570:	4809883a 	mov	r4,r9
  809574:	d8c00115 	stw	r3,4(sp)
  809578:	da000015 	stw	r8,0(sp)
  80957c:	d8800215 	stw	r2,8(sp)
  809580:	08098300 	call	809830 <fiprintf>
  809584:	0809f180 	call	809f18 <abort>
  809588:	00c02074 	movhi	r3,129
  80958c:	18c4c804 	addi	r3,r3,4896
  809590:	1805883a 	mov	r2,r3
  809594:	003ff406 	br	809568 <__assert_func+0x34>

00809598 <__assert>:
  809598:	deffff04 	addi	sp,sp,-4
  80959c:	300f883a 	mov	r7,r6
  8095a0:	000d883a 	mov	r6,zero
  8095a4:	dfc00015 	stw	ra,0(sp)
  8095a8:	08095340 	call	809534 <__assert_func>

008095ac <_calloc_r>:
  8095ac:	defffe04 	addi	sp,sp,-8
  8095b0:	dc000015 	stw	r16,0(sp)
  8095b4:	2021883a 	mov	r16,r4
  8095b8:	2809883a 	mov	r4,r5
  8095bc:	300b883a 	mov	r5,r6
  8095c0:	dfc00115 	stw	ra,4(sp)
  8095c4:	080b2180 	call	80b218 <__mulsi3>
  8095c8:	8009883a 	mov	r4,r16
  8095cc:	100b883a 	mov	r5,r2
  8095d0:	08057880 	call	805788 <_malloc_r>
  8095d4:	1009883a 	mov	r4,r2
  8095d8:	10000c26 	beq	r2,zero,80960c <_calloc_r+0x60>
  8095dc:	11bfff17 	ldw	r6,-4(r2)
  8095e0:	00bfff04 	movi	r2,-4
  8095e4:	308c703a 	and	r6,r6,r2
  8095e8:	31bfff04 	addi	r6,r6,-4
  8095ec:	30800968 	cmpgeui	r2,r6,37
  8095f0:	1000151e 	bne	r2,zero,809648 <_calloc_r+0x9c>
  8095f4:	30800530 	cmpltui	r2,r6,20
  8095f8:	10000926 	beq	r2,zero,809620 <_calloc_r+0x74>
  8095fc:	2005883a 	mov	r2,r4
  809600:	10000015 	stw	zero,0(r2)
  809604:	10000115 	stw	zero,4(r2)
  809608:	10000215 	stw	zero,8(r2)
  80960c:	2005883a 	mov	r2,r4
  809610:	dfc00117 	ldw	ra,4(sp)
  809614:	dc000017 	ldw	r16,0(sp)
  809618:	dec00204 	addi	sp,sp,8
  80961c:	f800283a 	ret
  809620:	20000015 	stw	zero,0(r4)
  809624:	20000115 	stw	zero,4(r4)
  809628:	30800728 	cmpgeui	r2,r6,28
  80962c:	10000a26 	beq	r2,zero,809658 <_calloc_r+0xac>
  809630:	20000215 	stw	zero,8(r4)
  809634:	20000315 	stw	zero,12(r4)
  809638:	31800920 	cmpeqi	r6,r6,36
  80963c:	3000081e 	bne	r6,zero,809660 <_calloc_r+0xb4>
  809640:	20800404 	addi	r2,r4,16
  809644:	003fee06 	br	809600 <_calloc_r+0x54>
  809648:	000b883a 	mov	r5,zero
  80964c:	08062640 	call	806264 <memset>
  809650:	1009883a 	mov	r4,r2
  809654:	003fed06 	br	80960c <_calloc_r+0x60>
  809658:	20800204 	addi	r2,r4,8
  80965c:	003fe806 	br	809600 <_calloc_r+0x54>
  809660:	20000415 	stw	zero,16(r4)
  809664:	20800604 	addi	r2,r4,24
  809668:	20000515 	stw	zero,20(r4)
  80966c:	003fe406 	br	809600 <_calloc_r+0x54>

00809670 <_fclose_r.part.0>:
  809670:	defffc04 	addi	sp,sp,-16
  809674:	dc800215 	stw	r18,8(sp)
  809678:	dc400115 	stw	r17,4(sp)
  80967c:	dc000015 	stw	r16,0(sp)
  809680:	dfc00315 	stw	ra,12(sp)
  809684:	2821883a 	mov	r16,r5
  809688:	2023883a 	mov	r17,r4
  80968c:	08044480 	call	804448 <__sflush_r>
  809690:	80c00b17 	ldw	r3,44(r16)
  809694:	1025883a 	mov	r18,r2
  809698:	18000426 	beq	r3,zero,8096ac <_fclose_r.part.0+0x3c>
  80969c:	81400717 	ldw	r5,28(r16)
  8096a0:	8809883a 	mov	r4,r17
  8096a4:	183ee83a 	callr	r3
  8096a8:	10001916 	blt	r2,zero,809710 <_fclose_r.part.0+0xa0>
  8096ac:	8080030b 	ldhu	r2,12(r16)
  8096b0:	1080200c 	andi	r2,r2,128
  8096b4:	10001a1e 	bne	r2,zero,809720 <_fclose_r.part.0+0xb0>
  8096b8:	81400c17 	ldw	r5,48(r16)
  8096bc:	28000526 	beq	r5,zero,8096d4 <_fclose_r.part.0+0x64>
  8096c0:	80801004 	addi	r2,r16,64
  8096c4:	28800226 	beq	r5,r2,8096d0 <_fclose_r.part.0+0x60>
  8096c8:	8809883a 	mov	r4,r17
  8096cc:	0804c1c0 	call	804c1c <_free_r>
  8096d0:	80000c15 	stw	zero,48(r16)
  8096d4:	81401117 	ldw	r5,68(r16)
  8096d8:	28000326 	beq	r5,zero,8096e8 <_fclose_r.part.0+0x78>
  8096dc:	8809883a 	mov	r4,r17
  8096e0:	0804c1c0 	call	804c1c <_free_r>
  8096e4:	80001115 	stw	zero,68(r16)
  8096e8:	0804ac80 	call	804ac8 <__sfp_lock_acquire>
  8096ec:	8000030d 	sth	zero,12(r16)
  8096f0:	0804acc0 	call	804acc <__sfp_lock_release>
  8096f4:	9005883a 	mov	r2,r18
  8096f8:	dfc00317 	ldw	ra,12(sp)
  8096fc:	dc800217 	ldw	r18,8(sp)
  809700:	dc400117 	ldw	r17,4(sp)
  809704:	dc000017 	ldw	r16,0(sp)
  809708:	dec00404 	addi	sp,sp,16
  80970c:	f800283a 	ret
  809710:	8080030b 	ldhu	r2,12(r16)
  809714:	04bfffc4 	movi	r18,-1
  809718:	1080200c 	andi	r2,r2,128
  80971c:	103fe626 	beq	r2,zero,8096b8 <_fclose_r.part.0+0x48>
  809720:	81400417 	ldw	r5,16(r16)
  809724:	8809883a 	mov	r4,r17
  809728:	0804c1c0 	call	804c1c <_free_r>
  80972c:	003fe206 	br	8096b8 <_fclose_r.part.0+0x48>

00809730 <_fclose_r>:
  809730:	28001926 	beq	r5,zero,809798 <_fclose_r+0x68>
  809734:	defffd04 	addi	sp,sp,-12
  809738:	dc000115 	stw	r16,4(sp)
  80973c:	dfc00215 	stw	ra,8(sp)
  809740:	2021883a 	mov	r16,r4
  809744:	20000226 	beq	r4,zero,809750 <_fclose_r+0x20>
  809748:	20800e17 	ldw	r2,56(r4)
  80974c:	10000c26 	beq	r2,zero,809780 <_fclose_r+0x50>
  809750:	2880030f 	ldh	r2,12(r5)
  809754:	1000051e 	bne	r2,zero,80976c <_fclose_r+0x3c>
  809758:	0005883a 	mov	r2,zero
  80975c:	dfc00217 	ldw	ra,8(sp)
  809760:	dc000117 	ldw	r16,4(sp)
  809764:	dec00304 	addi	sp,sp,12
  809768:	f800283a 	ret
  80976c:	8009883a 	mov	r4,r16
  809770:	dfc00217 	ldw	ra,8(sp)
  809774:	dc000117 	ldw	r16,4(sp)
  809778:	dec00304 	addi	sp,sp,12
  80977c:	08096701 	jmpi	809670 <_fclose_r.part.0>
  809780:	d9400015 	stw	r5,0(sp)
  809784:	0804ab80 	call	804ab8 <__sinit>
  809788:	d9400017 	ldw	r5,0(sp)
  80978c:	2880030f 	ldh	r2,12(r5)
  809790:	103ff126 	beq	r2,zero,809758 <_fclose_r+0x28>
  809794:	003ff506 	br	80976c <_fclose_r+0x3c>
  809798:	0005883a 	mov	r2,zero
  80979c:	f800283a 	ret

008097a0 <fclose>:
  8097a0:	20000826 	beq	r4,zero,8097c4 <fclose+0x24>
  8097a4:	00802074 	movhi	r2,129
  8097a8:	200b883a 	mov	r5,r4
  8097ac:	110ce817 	ldw	r4,13216(r2)
  8097b0:	20000226 	beq	r4,zero,8097bc <fclose+0x1c>
  8097b4:	20800e17 	ldw	r2,56(r4)
  8097b8:	10000526 	beq	r2,zero,8097d0 <fclose+0x30>
  8097bc:	2880030f 	ldh	r2,12(r5)
  8097c0:	1000021e 	bne	r2,zero,8097cc <fclose+0x2c>
  8097c4:	0005883a 	mov	r2,zero
  8097c8:	f800283a 	ret
  8097cc:	08096701 	jmpi	809670 <_fclose_r.part.0>
  8097d0:	defffd04 	addi	sp,sp,-12
  8097d4:	d9400115 	stw	r5,4(sp)
  8097d8:	d9000015 	stw	r4,0(sp)
  8097dc:	dfc00215 	stw	ra,8(sp)
  8097e0:	0804ab80 	call	804ab8 <__sinit>
  8097e4:	d9400117 	ldw	r5,4(sp)
  8097e8:	d9000017 	ldw	r4,0(sp)
  8097ec:	2880030f 	ldh	r2,12(r5)
  8097f0:	10000326 	beq	r2,zero,809800 <fclose+0x60>
  8097f4:	dfc00217 	ldw	ra,8(sp)
  8097f8:	dec00304 	addi	sp,sp,12
  8097fc:	08096701 	jmpi	809670 <_fclose_r.part.0>
  809800:	0005883a 	mov	r2,zero
  809804:	dfc00217 	ldw	ra,8(sp)
  809808:	dec00304 	addi	sp,sp,12
  80980c:	f800283a 	ret

00809810 <_fiprintf_r>:
  809810:	defffe04 	addi	sp,sp,-8
  809814:	dfc00015 	stw	ra,0(sp)
  809818:	d9c00115 	stw	r7,4(sp)
  80981c:	d9c00104 	addi	r7,sp,4
  809820:	0809de40 	call	809de4 <_vfiprintf_r>
  809824:	dfc00017 	ldw	ra,0(sp)
  809828:	dec00204 	addi	sp,sp,8
  80982c:	f800283a 	ret

00809830 <fiprintf>:
  809830:	defffd04 	addi	sp,sp,-12
  809834:	2005883a 	mov	r2,r4
  809838:	dfc00015 	stw	ra,0(sp)
  80983c:	d9800115 	stw	r6,4(sp)
  809840:	d9c00215 	stw	r7,8(sp)
  809844:	00c02074 	movhi	r3,129
  809848:	190ce817 	ldw	r4,13216(r3)
  80984c:	280d883a 	mov	r6,r5
  809850:	d9c00104 	addi	r7,sp,4
  809854:	100b883a 	mov	r5,r2
  809858:	0809de40 	call	809de4 <_vfiprintf_r>
  80985c:	dfc00017 	ldw	ra,0(sp)
  809860:	dec00304 	addi	sp,sp,12
  809864:	f800283a 	ret

00809868 <__fputwc>:
  809868:	defff904 	addi	sp,sp,-28
  80986c:	dcc00415 	stw	r19,16(sp)
  809870:	dc800315 	stw	r18,12(sp)
  809874:	dc000115 	stw	r16,4(sp)
  809878:	dfc00615 	stw	ra,24(sp)
  80987c:	dd000515 	stw	r20,20(sp)
  809880:	dc400215 	stw	r17,8(sp)
  809884:	2025883a 	mov	r18,r4
  809888:	2827883a 	mov	r19,r5
  80988c:	3021883a 	mov	r16,r6
  809890:	0809b940 	call	809b94 <__locale_mb_cur_max>
  809894:	10800058 	cmpnei	r2,r2,1
  809898:	1000071e 	bne	r2,zero,8098b8 <__fputwc+0x50>
  80989c:	98bfffc4 	addi	r2,r19,-1
  8098a0:	10803fe8 	cmpgeui	r2,r2,255
  8098a4:	1000041e 	bne	r2,zero,8098b8 <__fputwc+0x50>
  8098a8:	980b883a 	mov	r5,r19
  8098ac:	dcc000c5 	stb	r19,3(sp)
  8098b0:	05000044 	movi	r20,1
  8098b4:	00000a06 	br	8098e0 <__fputwc+0x78>
  8098b8:	81c01704 	addi	r7,r16,92
  8098bc:	980d883a 	mov	r6,r19
  8098c0:	d94000c4 	addi	r5,sp,3
  8098c4:	9009883a 	mov	r4,r18
  8098c8:	0809de80 	call	809de8 <_wcrtomb_r>
  8098cc:	1029883a 	mov	r20,r2
  8098d0:	10bfffd8 	cmpnei	r2,r2,-1
  8098d4:	10003926 	beq	r2,zero,8099bc <__fputwc+0x154>
  8098d8:	a0001f26 	beq	r20,zero,809958 <__fputwc+0xf0>
  8098dc:	d94000c3 	ldbu	r5,3(sp)
  8098e0:	0023883a 	mov	r17,zero
  8098e4:	00000a06 	br	809910 <__fputwc+0xa8>
  8098e8:	80800017 	ldw	r2,0(r16)
  8098ec:	11400005 	stb	r5,0(r2)
  8098f0:	80c00017 	ldw	r3,0(r16)
  8098f4:	18c00044 	addi	r3,r3,1
  8098f8:	80c00015 	stw	r3,0(r16)
  8098fc:	8c400044 	addi	r17,r17,1
  809900:	d88000c4 	addi	r2,sp,3
  809904:	1447883a 	add	r3,r2,r17
  809908:	8d00132e 	bgeu	r17,r20,809958 <__fputwc+0xf0>
  80990c:	19400003 	ldbu	r5,0(r3)
  809910:	80c00217 	ldw	r3,8(r16)
  809914:	18ffffc4 	addi	r3,r3,-1
  809918:	80c00215 	stw	r3,8(r16)
  80991c:	183ff20e 	bge	r3,zero,8098e8 <__fputwc+0x80>
  809920:	80800617 	ldw	r2,24(r16)
  809924:	18801616 	blt	r3,r2,809980 <__fputwc+0x118>
  809928:	80800017 	ldw	r2,0(r16)
  80992c:	11400005 	stb	r5,0(r2)
  809930:	80800017 	ldw	r2,0(r16)
  809934:	10c00003 	ldbu	r3,0(r2)
  809938:	10800044 	addi	r2,r2,1
  80993c:	18c002a0 	cmpeqi	r3,r3,10
  809940:	1800171e 	bne	r3,zero,8099a0 <__fputwc+0x138>
  809944:	80800015 	stw	r2,0(r16)
  809948:	8c400044 	addi	r17,r17,1
  80994c:	d88000c4 	addi	r2,sp,3
  809950:	1447883a 	add	r3,r2,r17
  809954:	8d3fed36 	bltu	r17,r20,80990c <__fputwc+0xa4>
  809958:	9829883a 	mov	r20,r19
  80995c:	a005883a 	mov	r2,r20
  809960:	dfc00617 	ldw	ra,24(sp)
  809964:	dd000517 	ldw	r20,20(sp)
  809968:	dcc00417 	ldw	r19,16(sp)
  80996c:	dc800317 	ldw	r18,12(sp)
  809970:	dc400217 	ldw	r17,8(sp)
  809974:	dc000117 	ldw	r16,4(sp)
  809978:	dec00704 	addi	sp,sp,28
  80997c:	f800283a 	ret
  809980:	29403fcc 	andi	r5,r5,255
  809984:	800d883a 	mov	r6,r16
  809988:	9009883a 	mov	r4,r18
  80998c:	08093180 	call	809318 <__swbuf_r>
  809990:	10bfffe0 	cmpeqi	r2,r2,-1
  809994:	103fd926 	beq	r2,zero,8098fc <__fputwc+0x94>
  809998:	053fffc4 	movi	r20,-1
  80999c:	003fef06 	br	80995c <__fputwc+0xf4>
  8099a0:	800d883a 	mov	r6,r16
  8099a4:	01400284 	movi	r5,10
  8099a8:	9009883a 	mov	r4,r18
  8099ac:	08093180 	call	809318 <__swbuf_r>
  8099b0:	10bfffe0 	cmpeqi	r2,r2,-1
  8099b4:	103fd126 	beq	r2,zero,8098fc <__fputwc+0x94>
  8099b8:	003ff706 	br	809998 <__fputwc+0x130>
  8099bc:	8080030b 	ldhu	r2,12(r16)
  8099c0:	10801014 	ori	r2,r2,64
  8099c4:	8080030d 	sth	r2,12(r16)
  8099c8:	003fe406 	br	80995c <__fputwc+0xf4>

008099cc <_fputwc_r>:
  8099cc:	3080030b 	ldhu	r2,12(r6)
  8099d0:	10c8000c 	andi	r3,r2,8192
  8099d4:	1800051e 	bne	r3,zero,8099ec <_fputwc_r+0x20>
  8099d8:	30c01917 	ldw	r3,100(r6)
  8099dc:	10880014 	ori	r2,r2,8192
  8099e0:	3080030d 	sth	r2,12(r6)
  8099e4:	18880014 	ori	r2,r3,8192
  8099e8:	30801915 	stw	r2,100(r6)
  8099ec:	08098681 	jmpi	809868 <__fputwc>

008099f0 <fputwc>:
  8099f0:	defffc04 	addi	sp,sp,-16
  8099f4:	00802074 	movhi	r2,129
  8099f8:	dc000215 	stw	r16,8(sp)
  8099fc:	140ce817 	ldw	r16,13216(r2)
  809a00:	dfc00315 	stw	ra,12(sp)
  809a04:	280d883a 	mov	r6,r5
  809a08:	200b883a 	mov	r5,r4
  809a0c:	80000226 	beq	r16,zero,809a18 <fputwc+0x28>
  809a10:	80800e17 	ldw	r2,56(r16)
  809a14:	10000d26 	beq	r2,zero,809a4c <fputwc+0x5c>
  809a18:	3080030b 	ldhu	r2,12(r6)
  809a1c:	10c8000c 	andi	r3,r2,8192
  809a20:	1800051e 	bne	r3,zero,809a38 <fputwc+0x48>
  809a24:	30c01917 	ldw	r3,100(r6)
  809a28:	10880014 	ori	r2,r2,8192
  809a2c:	3080030d 	sth	r2,12(r6)
  809a30:	18880014 	ori	r2,r3,8192
  809a34:	30801915 	stw	r2,100(r6)
  809a38:	8009883a 	mov	r4,r16
  809a3c:	dfc00317 	ldw	ra,12(sp)
  809a40:	dc000217 	ldw	r16,8(sp)
  809a44:	dec00404 	addi	sp,sp,16
  809a48:	08098681 	jmpi	809868 <__fputwc>
  809a4c:	d9000015 	stw	r4,0(sp)
  809a50:	8009883a 	mov	r4,r16
  809a54:	d9800115 	stw	r6,4(sp)
  809a58:	0804ab80 	call	804ab8 <__sinit>
  809a5c:	d9800117 	ldw	r6,4(sp)
  809a60:	d9400017 	ldw	r5,0(sp)
  809a64:	003fec06 	br	809a18 <fputwc+0x28>

00809a68 <_fstat_r>:
  809a68:	2807883a 	mov	r3,r5
  809a6c:	defffe04 	addi	sp,sp,-8
  809a70:	dc000015 	stw	r16,0(sp)
  809a74:	00802074 	movhi	r2,129
  809a78:	300b883a 	mov	r5,r6
  809a7c:	2021883a 	mov	r16,r4
  809a80:	1809883a 	mov	r4,r3
  809a84:	dfc00115 	stw	ra,4(sp)
  809a88:	10142e15 	stw	zero,20664(r2)
  809a8c:	080db840 	call	80db84 <fstat>
  809a90:	10ffffd8 	cmpnei	r3,r2,-1
  809a94:	18000426 	beq	r3,zero,809aa8 <_fstat_r+0x40>
  809a98:	dfc00117 	ldw	ra,4(sp)
  809a9c:	dc000017 	ldw	r16,0(sp)
  809aa0:	dec00204 	addi	sp,sp,8
  809aa4:	f800283a 	ret
  809aa8:	00c02074 	movhi	r3,129
  809aac:	18d42e17 	ldw	r3,20664(r3)
  809ab0:	183ff926 	beq	r3,zero,809a98 <_fstat_r+0x30>
  809ab4:	80c00015 	stw	r3,0(r16)
  809ab8:	dfc00117 	ldw	ra,4(sp)
  809abc:	dc000017 	ldw	r16,0(sp)
  809ac0:	dec00204 	addi	sp,sp,8
  809ac4:	f800283a 	ret

00809ac8 <_isatty_r>:
  809ac8:	defffe04 	addi	sp,sp,-8
  809acc:	dc000015 	stw	r16,0(sp)
  809ad0:	00802074 	movhi	r2,129
  809ad4:	2021883a 	mov	r16,r4
  809ad8:	2809883a 	mov	r4,r5
  809adc:	dfc00115 	stw	ra,4(sp)
  809ae0:	10142e15 	stw	zero,20664(r2)
  809ae4:	080df680 	call	80df68 <isatty>
  809ae8:	10ffffd8 	cmpnei	r3,r2,-1
  809aec:	18000426 	beq	r3,zero,809b00 <_isatty_r+0x38>
  809af0:	dfc00117 	ldw	ra,4(sp)
  809af4:	dc000017 	ldw	r16,0(sp)
  809af8:	dec00204 	addi	sp,sp,8
  809afc:	f800283a 	ret
  809b00:	00c02074 	movhi	r3,129
  809b04:	18d42e17 	ldw	r3,20664(r3)
  809b08:	183ff926 	beq	r3,zero,809af0 <_isatty_r+0x28>
  809b0c:	80c00015 	stw	r3,0(r16)
  809b10:	dfc00117 	ldw	ra,4(sp)
  809b14:	dc000017 	ldw	r16,0(sp)
  809b18:	dec00204 	addi	sp,sp,8
  809b1c:	f800283a 	ret

00809b20 <_setlocale_r>:
  809b20:	30001626 	beq	r6,zero,809b7c <_setlocale_r+0x5c>
  809b24:	01402074 	movhi	r5,129
  809b28:	defffe04 	addi	sp,sp,-8
  809b2c:	2944d604 	addi	r5,r5,4952
  809b30:	3009883a 	mov	r4,r6
  809b34:	dc000015 	stw	r16,0(sp)
  809b38:	dfc00115 	stw	ra,4(sp)
  809b3c:	3021883a 	mov	r16,r6
  809b40:	0809d2c0 	call	809d2c <strcmp>
  809b44:	1000061e 	bne	r2,zero,809b60 <_setlocale_r+0x40>
  809b48:	00802074 	movhi	r2,129
  809b4c:	1084d504 	addi	r2,r2,4948
  809b50:	dfc00117 	ldw	ra,4(sp)
  809b54:	dc000017 	ldw	r16,0(sp)
  809b58:	dec00204 	addi	sp,sp,8
  809b5c:	f800283a 	ret
  809b60:	80800003 	ldbu	r2,0(r16)
  809b64:	10bfef44 	addi	r2,r2,-67
  809b68:	10000726 	beq	r2,zero,809b88 <_setlocale_r+0x68>
  809b6c:	80800003 	ldbu	r2,0(r16)
  809b70:	103ff526 	beq	r2,zero,809b48 <_setlocale_r+0x28>
  809b74:	0005883a 	mov	r2,zero
  809b78:	003ff506 	br	809b50 <_setlocale_r+0x30>
  809b7c:	00802074 	movhi	r2,129
  809b80:	1084d504 	addi	r2,r2,4948
  809b84:	f800283a 	ret
  809b88:	80800043 	ldbu	r2,1(r16)
  809b8c:	103fee26 	beq	r2,zero,809b48 <_setlocale_r+0x28>
  809b90:	003ff606 	br	809b6c <_setlocale_r+0x4c>

00809b94 <__locale_mb_cur_max>:
  809b94:	00802074 	movhi	r2,129
  809b98:	10881d07 	ldb	r2,8308(r2)
  809b9c:	f800283a 	ret

00809ba0 <setlocale>:
  809ba0:	28001626 	beq	r5,zero,809bfc <setlocale+0x5c>
  809ba4:	defffe04 	addi	sp,sp,-8
  809ba8:	dc000015 	stw	r16,0(sp)
  809bac:	2821883a 	mov	r16,r5
  809bb0:	01402074 	movhi	r5,129
  809bb4:	2944d604 	addi	r5,r5,4952
  809bb8:	8009883a 	mov	r4,r16
  809bbc:	dfc00115 	stw	ra,4(sp)
  809bc0:	0809d2c0 	call	809d2c <strcmp>
  809bc4:	1000061e 	bne	r2,zero,809be0 <setlocale+0x40>
  809bc8:	00802074 	movhi	r2,129
  809bcc:	1084d504 	addi	r2,r2,4948
  809bd0:	dfc00117 	ldw	ra,4(sp)
  809bd4:	dc000017 	ldw	r16,0(sp)
  809bd8:	dec00204 	addi	sp,sp,8
  809bdc:	f800283a 	ret
  809be0:	80800003 	ldbu	r2,0(r16)
  809be4:	10bfef44 	addi	r2,r2,-67
  809be8:	10000726 	beq	r2,zero,809c08 <setlocale+0x68>
  809bec:	80800003 	ldbu	r2,0(r16)
  809bf0:	103ff526 	beq	r2,zero,809bc8 <setlocale+0x28>
  809bf4:	0005883a 	mov	r2,zero
  809bf8:	003ff506 	br	809bd0 <setlocale+0x30>
  809bfc:	00802074 	movhi	r2,129
  809c00:	1084d504 	addi	r2,r2,4948
  809c04:	f800283a 	ret
  809c08:	80800043 	ldbu	r2,1(r16)
  809c0c:	103fee26 	beq	r2,zero,809bc8 <setlocale+0x28>
  809c10:	003ff606 	br	809bec <setlocale+0x4c>

00809c14 <_lseek_r>:
  809c14:	2807883a 	mov	r3,r5
  809c18:	defffe04 	addi	sp,sp,-8
  809c1c:	dc000015 	stw	r16,0(sp)
  809c20:	300b883a 	mov	r5,r6
  809c24:	00802074 	movhi	r2,129
  809c28:	380d883a 	mov	r6,r7
  809c2c:	2021883a 	mov	r16,r4
  809c30:	1809883a 	mov	r4,r3
  809c34:	dfc00115 	stw	ra,4(sp)
  809c38:	10142e15 	stw	zero,20664(r2)
  809c3c:	080e2a80 	call	80e2a8 <lseek>
  809c40:	10ffffd8 	cmpnei	r3,r2,-1
  809c44:	18000426 	beq	r3,zero,809c58 <_lseek_r+0x44>
  809c48:	dfc00117 	ldw	ra,4(sp)
  809c4c:	dc000017 	ldw	r16,0(sp)
  809c50:	dec00204 	addi	sp,sp,8
  809c54:	f800283a 	ret
  809c58:	00c02074 	movhi	r3,129
  809c5c:	18d42e17 	ldw	r3,20664(r3)
  809c60:	183ff926 	beq	r3,zero,809c48 <_lseek_r+0x34>
  809c64:	80c00015 	stw	r3,0(r16)
  809c68:	dfc00117 	ldw	ra,4(sp)
  809c6c:	dc000017 	ldw	r16,0(sp)
  809c70:	dec00204 	addi	sp,sp,8
  809c74:	f800283a 	ret

00809c78 <_mbtowc_r>:
  809c78:	00802074 	movhi	r2,129
  809c7c:	10880c17 	ldw	r2,8240(r2)
  809c80:	1000683a 	jmp	r2

00809c84 <__ascii_mbtowc>:
  809c84:	deffff04 	addi	sp,sp,-4
  809c88:	28000826 	beq	r5,zero,809cac <__ascii_mbtowc+0x28>
  809c8c:	30000926 	beq	r6,zero,809cb4 <__ascii_mbtowc+0x30>
  809c90:	38000b26 	beq	r7,zero,809cc0 <__ascii_mbtowc+0x3c>
  809c94:	30800003 	ldbu	r2,0(r6)
  809c98:	28800015 	stw	r2,0(r5)
  809c9c:	30800003 	ldbu	r2,0(r6)
  809ca0:	1004c03a 	cmpne	r2,r2,zero
  809ca4:	dec00104 	addi	sp,sp,4
  809ca8:	f800283a 	ret
  809cac:	d80b883a 	mov	r5,sp
  809cb0:	303ff71e 	bne	r6,zero,809c90 <__ascii_mbtowc+0xc>
  809cb4:	0005883a 	mov	r2,zero
  809cb8:	dec00104 	addi	sp,sp,4
  809cbc:	f800283a 	ret
  809cc0:	00bfff84 	movi	r2,-2
  809cc4:	003ff706 	br	809ca4 <__ascii_mbtowc+0x20>

00809cc8 <_read_r>:
  809cc8:	2807883a 	mov	r3,r5
  809ccc:	defffe04 	addi	sp,sp,-8
  809cd0:	dc000015 	stw	r16,0(sp)
  809cd4:	300b883a 	mov	r5,r6
  809cd8:	00802074 	movhi	r2,129
  809cdc:	380d883a 	mov	r6,r7
  809ce0:	2021883a 	mov	r16,r4
  809ce4:	1809883a 	mov	r4,r3
  809ce8:	dfc00115 	stw	ra,4(sp)
  809cec:	10142e15 	stw	zero,20664(r2)
  809cf0:	080e4880 	call	80e488 <read>
  809cf4:	10ffffd8 	cmpnei	r3,r2,-1
  809cf8:	18000426 	beq	r3,zero,809d0c <_read_r+0x44>
  809cfc:	dfc00117 	ldw	ra,4(sp)
  809d00:	dc000017 	ldw	r16,0(sp)
  809d04:	dec00204 	addi	sp,sp,8
  809d08:	f800283a 	ret
  809d0c:	00c02074 	movhi	r3,129
  809d10:	18d42e17 	ldw	r3,20664(r3)
  809d14:	183ff926 	beq	r3,zero,809cfc <_read_r+0x34>
  809d18:	80c00015 	stw	r3,0(r16)
  809d1c:	dfc00117 	ldw	ra,4(sp)
  809d20:	dc000017 	ldw	r16,0(sp)
  809d24:	dec00204 	addi	sp,sp,8
  809d28:	f800283a 	ret

00809d2c <strcmp>:
  809d2c:	2144b03a 	or	r2,r4,r5
  809d30:	108000cc 	andi	r2,r2,3
  809d34:	1000141e 	bne	r2,zero,809d88 <strcmp+0x5c>
  809d38:	20800017 	ldw	r2,0(r4)
  809d3c:	28c00017 	ldw	r3,0(r5)
  809d40:	10c0111e 	bne	r2,r3,809d88 <strcmp+0x5c>
  809d44:	01ffbff4 	movhi	r7,65279
  809d48:	01a02074 	movhi	r6,32897
  809d4c:	39ffbfc4 	addi	r7,r7,-257
  809d50:	31a02004 	addi	r6,r6,-32640
  809d54:	00000306 	br	809d64 <strcmp+0x38>
  809d58:	20800017 	ldw	r2,0(r4)
  809d5c:	28c00017 	ldw	r3,0(r5)
  809d60:	10c0091e 	bne	r2,r3,809d88 <strcmp+0x5c>
  809d64:	11c7883a 	add	r3,r2,r7
  809d68:	0084303a 	nor	r2,zero,r2
  809d6c:	1884703a 	and	r2,r3,r2
  809d70:	1184703a 	and	r2,r2,r6
  809d74:	21000104 	addi	r4,r4,4
  809d78:	29400104 	addi	r5,r5,4
  809d7c:	103ff626 	beq	r2,zero,809d58 <strcmp+0x2c>
  809d80:	0005883a 	mov	r2,zero
  809d84:	f800283a 	ret
  809d88:	20c00003 	ldbu	r3,0(r4)
  809d8c:	18803fcc 	andi	r2,r3,255
  809d90:	1080201c 	xori	r2,r2,128
  809d94:	10bfe004 	addi	r2,r2,-128
  809d98:	1000071e 	bne	r2,zero,809db8 <strcmp+0x8c>
  809d9c:	00000a06 	br	809dc8 <strcmp+0x9c>
  809da0:	20c00003 	ldbu	r3,0(r4)
  809da4:	29400044 	addi	r5,r5,1
  809da8:	18803fcc 	andi	r2,r3,255
  809dac:	1080201c 	xori	r2,r2,128
  809db0:	10bfe004 	addi	r2,r2,-128
  809db4:	10000726 	beq	r2,zero,809dd4 <strcmp+0xa8>
  809db8:	29800007 	ldb	r6,0(r5)
  809dbc:	21000044 	addi	r4,r4,1
  809dc0:	30bff726 	beq	r6,r2,809da0 <strcmp+0x74>
  809dc4:	18803fcc 	andi	r2,r3,255
  809dc8:	28c00003 	ldbu	r3,0(r5)
  809dcc:	10c5c83a 	sub	r2,r2,r3
  809dd0:	f800283a 	ret
  809dd4:	28c00003 	ldbu	r3,0(r5)
  809dd8:	0005883a 	mov	r2,zero
  809ddc:	10c5c83a 	sub	r2,r2,r3
  809de0:	f800283a 	ret

00809de4 <_vfiprintf_r>:
  809de4:	0807ef81 	jmpi	807ef8 <___vfiprintf_internal_r>

00809de8 <_wcrtomb_r>:
  809de8:	defffa04 	addi	sp,sp,-24
  809dec:	dc400415 	stw	r17,16(sp)
  809df0:	dc000315 	stw	r16,12(sp)
  809df4:	00802074 	movhi	r2,129
  809df8:	dfc00515 	stw	ra,20(sp)
  809dfc:	10880b17 	ldw	r2,8236(r2)
  809e00:	2023883a 	mov	r17,r4
  809e04:	3821883a 	mov	r16,r7
  809e08:	28000826 	beq	r5,zero,809e2c <_wcrtomb_r+0x44>
  809e0c:	103ee83a 	callr	r2
  809e10:	10ffffd8 	cmpnei	r3,r2,-1
  809e14:	18000a26 	beq	r3,zero,809e40 <_wcrtomb_r+0x58>
  809e18:	dfc00517 	ldw	ra,20(sp)
  809e1c:	dc400417 	ldw	r17,16(sp)
  809e20:	dc000317 	ldw	r16,12(sp)
  809e24:	dec00604 	addi	sp,sp,24
  809e28:	f800283a 	ret
  809e2c:	000d883a 	mov	r6,zero
  809e30:	d9400084 	addi	r5,sp,2
  809e34:	103ee83a 	callr	r2
  809e38:	10ffffd8 	cmpnei	r3,r2,-1
  809e3c:	183ff61e 	bne	r3,zero,809e18 <_wcrtomb_r+0x30>
  809e40:	00802284 	movi	r2,138
  809e44:	80000015 	stw	zero,0(r16)
  809e48:	88800015 	stw	r2,0(r17)
  809e4c:	00bfffc4 	movi	r2,-1
  809e50:	003ff106 	br	809e18 <_wcrtomb_r+0x30>

00809e54 <wcrtomb>:
  809e54:	defffa04 	addi	sp,sp,-24
  809e58:	00c02074 	movhi	r3,129
  809e5c:	dc400415 	stw	r17,16(sp)
  809e60:	dc000315 	stw	r16,12(sp)
  809e64:	1c4ce817 	ldw	r17,13216(r3)
  809e68:	dfc00515 	stw	ra,20(sp)
  809e6c:	00c02074 	movhi	r3,129
  809e70:	18c80b17 	ldw	r3,8236(r3)
  809e74:	3021883a 	mov	r16,r6
  809e78:	20000c26 	beq	r4,zero,809eac <wcrtomb+0x58>
  809e7c:	280d883a 	mov	r6,r5
  809e80:	800f883a 	mov	r7,r16
  809e84:	200b883a 	mov	r5,r4
  809e88:	8809883a 	mov	r4,r17
  809e8c:	183ee83a 	callr	r3
  809e90:	10ffffd8 	cmpnei	r3,r2,-1
  809e94:	18000c26 	beq	r3,zero,809ec8 <wcrtomb+0x74>
  809e98:	dfc00517 	ldw	ra,20(sp)
  809e9c:	dc400417 	ldw	r17,16(sp)
  809ea0:	dc000317 	ldw	r16,12(sp)
  809ea4:	dec00604 	addi	sp,sp,24
  809ea8:	f800283a 	ret
  809eac:	300f883a 	mov	r7,r6
  809eb0:	d9400084 	addi	r5,sp,2
  809eb4:	000d883a 	mov	r6,zero
  809eb8:	8809883a 	mov	r4,r17
  809ebc:	183ee83a 	callr	r3
  809ec0:	10ffffd8 	cmpnei	r3,r2,-1
  809ec4:	183ff41e 	bne	r3,zero,809e98 <wcrtomb+0x44>
  809ec8:	00802284 	movi	r2,138
  809ecc:	80000015 	stw	zero,0(r16)
  809ed0:	88800015 	stw	r2,0(r17)
  809ed4:	00bfffc4 	movi	r2,-1
  809ed8:	003fef06 	br	809e98 <wcrtomb+0x44>

00809edc <_wctomb_r>:
  809edc:	00802074 	movhi	r2,129
  809ee0:	10880b17 	ldw	r2,8236(r2)
  809ee4:	1000683a 	jmp	r2

00809ee8 <__ascii_wctomb>:
  809ee8:	28000926 	beq	r5,zero,809f10 <__ascii_wctomb+0x28>
  809eec:	30804030 	cmpltui	r2,r6,256
  809ef0:	10000326 	beq	r2,zero,809f00 <__ascii_wctomb+0x18>
  809ef4:	29800005 	stb	r6,0(r5)
  809ef8:	00800044 	movi	r2,1
  809efc:	f800283a 	ret
  809f00:	00802284 	movi	r2,138
  809f04:	20800015 	stw	r2,0(r4)
  809f08:	00bfffc4 	movi	r2,-1
  809f0c:	f800283a 	ret
  809f10:	0005883a 	mov	r2,zero
  809f14:	f800283a 	ret

00809f18 <abort>:
  809f18:	deffff04 	addi	sp,sp,-4
  809f1c:	01000184 	movi	r4,6
  809f20:	dfc00015 	stw	ra,0(sp)
  809f24:	080a1a40 	call	80a1a4 <raise>
  809f28:	01000044 	movi	r4,1
  809f2c:	080db100 	call	80db10 <_exit>

00809f30 <_init_signal_r>:
  809f30:	2080b717 	ldw	r2,732(r4)
  809f34:	10000226 	beq	r2,zero,809f40 <_init_signal_r+0x10>
  809f38:	0005883a 	mov	r2,zero
  809f3c:	f800283a 	ret
  809f40:	defffe04 	addi	sp,sp,-8
  809f44:	01402004 	movi	r5,128
  809f48:	dc000015 	stw	r16,0(sp)
  809f4c:	dfc00115 	stw	ra,4(sp)
  809f50:	2021883a 	mov	r16,r4
  809f54:	08057880 	call	805788 <_malloc_r>
  809f58:	8080b715 	stw	r2,732(r16)
  809f5c:	1009883a 	mov	r4,r2
  809f60:	10000826 	beq	r2,zero,809f84 <_init_signal_r+0x54>
  809f64:	01802004 	movi	r6,128
  809f68:	000b883a 	mov	r5,zero
  809f6c:	08062640 	call	806264 <memset>
  809f70:	0005883a 	mov	r2,zero
  809f74:	dfc00117 	ldw	ra,4(sp)
  809f78:	dc000017 	ldw	r16,0(sp)
  809f7c:	dec00204 	addi	sp,sp,8
  809f80:	f800283a 	ret
  809f84:	00bfffc4 	movi	r2,-1
  809f88:	003ffa06 	br	809f74 <_init_signal_r+0x44>

00809f8c <_signal_r>:
  809f8c:	defffc04 	addi	sp,sp,-16
  809f90:	dc400115 	stw	r17,4(sp)
  809f94:	dfc00315 	stw	ra,12(sp)
  809f98:	dc800215 	stw	r18,8(sp)
  809f9c:	dc000015 	stw	r16,0(sp)
  809fa0:	28800830 	cmpltui	r2,r5,32
  809fa4:	2023883a 	mov	r17,r4
  809fa8:	10000e26 	beq	r2,zero,809fe4 <_signal_r+0x58>
  809fac:	20c0b717 	ldw	r3,732(r4)
  809fb0:	2821883a 	mov	r16,r5
  809fb4:	3025883a 	mov	r18,r6
  809fb8:	18000e26 	beq	r3,zero,809ff4 <_signal_r+0x68>
  809fbc:	802090ba 	slli	r16,r16,2
  809fc0:	1c21883a 	add	r16,r3,r16
  809fc4:	80800017 	ldw	r2,0(r16)
  809fc8:	84800015 	stw	r18,0(r16)
  809fcc:	dfc00317 	ldw	ra,12(sp)
  809fd0:	dc800217 	ldw	r18,8(sp)
  809fd4:	dc400117 	ldw	r17,4(sp)
  809fd8:	dc000017 	ldw	r16,0(sp)
  809fdc:	dec00404 	addi	sp,sp,16
  809fe0:	f800283a 	ret
  809fe4:	00800584 	movi	r2,22
  809fe8:	20800015 	stw	r2,0(r4)
  809fec:	00bfffc4 	movi	r2,-1
  809ff0:	003ff606 	br	809fcc <_signal_r+0x40>
  809ff4:	01402004 	movi	r5,128
  809ff8:	08057880 	call	805788 <_malloc_r>
  809ffc:	8880b715 	stw	r2,732(r17)
  80a000:	10000626 	beq	r2,zero,80a01c <_signal_r+0x90>
  80a004:	01802004 	movi	r6,128
  80a008:	000b883a 	mov	r5,zero
  80a00c:	1009883a 	mov	r4,r2
  80a010:	08062640 	call	806264 <memset>
  80a014:	1007883a 	mov	r3,r2
  80a018:	003fe806 	br	809fbc <_signal_r+0x30>
  80a01c:	00bfffc4 	movi	r2,-1
  80a020:	003fea06 	br	809fcc <_signal_r+0x40>

0080a024 <_raise_r>:
  80a024:	28800830 	cmpltui	r2,r5,32
  80a028:	10002b26 	beq	r2,zero,80a0d8 <_raise_r+0xb4>
  80a02c:	2080b717 	ldw	r2,732(r4)
  80a030:	defffd04 	addi	sp,sp,-12
  80a034:	dc000115 	stw	r16,4(sp)
  80a038:	dfc00215 	stw	ra,8(sp)
  80a03c:	2821883a 	mov	r16,r5
  80a040:	10001026 	beq	r2,zero,80a084 <_raise_r+0x60>
  80a044:	280690ba 	slli	r3,r5,2
  80a048:	10c5883a 	add	r2,r2,r3
  80a04c:	10c00017 	ldw	r3,0(r2)
  80a050:	18000c26 	beq	r3,zero,80a084 <_raise_r+0x60>
  80a054:	19400060 	cmpeqi	r5,r3,1
  80a058:	28001a1e 	bne	r5,zero,80a0c4 <_raise_r+0xa0>
  80a05c:	197fffd8 	cmpnei	r5,r3,-1
  80a060:	28001126 	beq	r5,zero,80a0a8 <_raise_r+0x84>
  80a064:	10000015 	stw	zero,0(r2)
  80a068:	8009883a 	mov	r4,r16
  80a06c:	183ee83a 	callr	r3
  80a070:	0005883a 	mov	r2,zero
  80a074:	dfc00217 	ldw	ra,8(sp)
  80a078:	dc000117 	ldw	r16,4(sp)
  80a07c:	dec00304 	addi	sp,sp,12
  80a080:	f800283a 	ret
  80a084:	d9000015 	stw	r4,0(sp)
  80a088:	080a47c0 	call	80a47c <_getpid_r>
  80a08c:	d9000017 	ldw	r4,0(sp)
  80a090:	800d883a 	mov	r6,r16
  80a094:	100b883a 	mov	r5,r2
  80a098:	dfc00217 	ldw	ra,8(sp)
  80a09c:	dc000117 	ldw	r16,4(sp)
  80a0a0:	dec00304 	addi	sp,sp,12
  80a0a4:	080a41c1 	jmpi	80a41c <_kill_r>
  80a0a8:	00800584 	movi	r2,22
  80a0ac:	20800015 	stw	r2,0(r4)
  80a0b0:	00800044 	movi	r2,1
  80a0b4:	dfc00217 	ldw	ra,8(sp)
  80a0b8:	dc000117 	ldw	r16,4(sp)
  80a0bc:	dec00304 	addi	sp,sp,12
  80a0c0:	f800283a 	ret
  80a0c4:	0005883a 	mov	r2,zero
  80a0c8:	dfc00217 	ldw	ra,8(sp)
  80a0cc:	dc000117 	ldw	r16,4(sp)
  80a0d0:	dec00304 	addi	sp,sp,12
  80a0d4:	f800283a 	ret
  80a0d8:	00800584 	movi	r2,22
  80a0dc:	20800015 	stw	r2,0(r4)
  80a0e0:	00bfffc4 	movi	r2,-1
  80a0e4:	f800283a 	ret

0080a0e8 <__sigtramp_r>:
  80a0e8:	28800830 	cmpltui	r2,r5,32
  80a0ec:	10002b26 	beq	r2,zero,80a19c <__sigtramp_r+0xb4>
  80a0f0:	20c0b717 	ldw	r3,732(r4)
  80a0f4:	defffd04 	addi	sp,sp,-12
  80a0f8:	dc400115 	stw	r17,4(sp)
  80a0fc:	dc000015 	stw	r16,0(sp)
  80a100:	dfc00215 	stw	ra,8(sp)
  80a104:	2821883a 	mov	r16,r5
  80a108:	2023883a 	mov	r17,r4
  80a10c:	18001326 	beq	r3,zero,80a15c <__sigtramp_r+0x74>
  80a110:	800490ba 	slli	r2,r16,2
  80a114:	1887883a 	add	r3,r3,r2
  80a118:	18800017 	ldw	r2,0(r3)
  80a11c:	10000d26 	beq	r2,zero,80a154 <__sigtramp_r+0x6c>
  80a120:	113fffe0 	cmpeqi	r4,r2,-1
  80a124:	2000191e 	bne	r4,zero,80a18c <__sigtramp_r+0xa4>
  80a128:	11000060 	cmpeqi	r4,r2,1
  80a12c:	2000151e 	bne	r4,zero,80a184 <__sigtramp_r+0x9c>
  80a130:	18000015 	stw	zero,0(r3)
  80a134:	8009883a 	mov	r4,r16
  80a138:	103ee83a 	callr	r2
  80a13c:	0005883a 	mov	r2,zero
  80a140:	dfc00217 	ldw	ra,8(sp)
  80a144:	dc400117 	ldw	r17,4(sp)
  80a148:	dc000017 	ldw	r16,0(sp)
  80a14c:	dec00304 	addi	sp,sp,12
  80a150:	f800283a 	ret
  80a154:	00800044 	movi	r2,1
  80a158:	003ff906 	br	80a140 <__sigtramp_r+0x58>
  80a15c:	01402004 	movi	r5,128
  80a160:	08057880 	call	805788 <_malloc_r>
  80a164:	8880b715 	stw	r2,732(r17)
  80a168:	10000a26 	beq	r2,zero,80a194 <__sigtramp_r+0xac>
  80a16c:	01802004 	movi	r6,128
  80a170:	000b883a 	mov	r5,zero
  80a174:	1009883a 	mov	r4,r2
  80a178:	08062640 	call	806264 <memset>
  80a17c:	1007883a 	mov	r3,r2
  80a180:	003fe306 	br	80a110 <__sigtramp_r+0x28>
  80a184:	008000c4 	movi	r2,3
  80a188:	003fed06 	br	80a140 <__sigtramp_r+0x58>
  80a18c:	00800084 	movi	r2,2
  80a190:	003feb06 	br	80a140 <__sigtramp_r+0x58>
  80a194:	00bfffc4 	movi	r2,-1
  80a198:	003fe906 	br	80a140 <__sigtramp_r+0x58>
  80a19c:	00bfffc4 	movi	r2,-1
  80a1a0:	f800283a 	ret

0080a1a4 <raise>:
  80a1a4:	defffd04 	addi	sp,sp,-12
  80a1a8:	dc400115 	stw	r17,4(sp)
  80a1ac:	00c02074 	movhi	r3,129
  80a1b0:	dfc00215 	stw	ra,8(sp)
  80a1b4:	dc000015 	stw	r16,0(sp)
  80a1b8:	20800830 	cmpltui	r2,r4,32
  80a1bc:	1c4ce817 	ldw	r17,13216(r3)
  80a1c0:	10002326 	beq	r2,zero,80a250 <raise+0xac>
  80a1c4:	8880b717 	ldw	r2,732(r17)
  80a1c8:	2021883a 	mov	r16,r4
  80a1cc:	10001026 	beq	r2,zero,80a210 <raise+0x6c>
  80a1d0:	200690ba 	slli	r3,r4,2
  80a1d4:	10c5883a 	add	r2,r2,r3
  80a1d8:	10c00017 	ldw	r3,0(r2)
  80a1dc:	18000c26 	beq	r3,zero,80a210 <raise+0x6c>
  80a1e0:	19400060 	cmpeqi	r5,r3,1
  80a1e4:	2800181e 	bne	r5,zero,80a248 <raise+0xa4>
  80a1e8:	197fffd8 	cmpnei	r5,r3,-1
  80a1ec:	28001226 	beq	r5,zero,80a238 <raise+0x94>
  80a1f0:	10000015 	stw	zero,0(r2)
  80a1f4:	183ee83a 	callr	r3
  80a1f8:	0005883a 	mov	r2,zero
  80a1fc:	dfc00217 	ldw	ra,8(sp)
  80a200:	dc400117 	ldw	r17,4(sp)
  80a204:	dc000017 	ldw	r16,0(sp)
  80a208:	dec00304 	addi	sp,sp,12
  80a20c:	f800283a 	ret
  80a210:	8809883a 	mov	r4,r17
  80a214:	080a47c0 	call	80a47c <_getpid_r>
  80a218:	800d883a 	mov	r6,r16
  80a21c:	100b883a 	mov	r5,r2
  80a220:	8809883a 	mov	r4,r17
  80a224:	dfc00217 	ldw	ra,8(sp)
  80a228:	dc400117 	ldw	r17,4(sp)
  80a22c:	dc000017 	ldw	r16,0(sp)
  80a230:	dec00304 	addi	sp,sp,12
  80a234:	080a41c1 	jmpi	80a41c <_kill_r>
  80a238:	00800584 	movi	r2,22
  80a23c:	88800015 	stw	r2,0(r17)
  80a240:	00800044 	movi	r2,1
  80a244:	003fed06 	br	80a1fc <raise+0x58>
  80a248:	0005883a 	mov	r2,zero
  80a24c:	003feb06 	br	80a1fc <raise+0x58>
  80a250:	00800584 	movi	r2,22
  80a254:	88800015 	stw	r2,0(r17)
  80a258:	00bfffc4 	movi	r2,-1
  80a25c:	003fe706 	br	80a1fc <raise+0x58>

0080a260 <signal>:
  80a260:	defffc04 	addi	sp,sp,-16
  80a264:	dc800215 	stw	r18,8(sp)
  80a268:	00c02074 	movhi	r3,129
  80a26c:	dfc00315 	stw	ra,12(sp)
  80a270:	dc400115 	stw	r17,4(sp)
  80a274:	dc000015 	stw	r16,0(sp)
  80a278:	20800830 	cmpltui	r2,r4,32
  80a27c:	1c8ce817 	ldw	r18,13216(r3)
  80a280:	10000e26 	beq	r2,zero,80a2bc <signal+0x5c>
  80a284:	2021883a 	mov	r16,r4
  80a288:	9100b717 	ldw	r4,732(r18)
  80a28c:	2823883a 	mov	r17,r5
  80a290:	20000e26 	beq	r4,zero,80a2cc <signal+0x6c>
  80a294:	802090ba 	slli	r16,r16,2
  80a298:	2421883a 	add	r16,r4,r16
  80a29c:	80800017 	ldw	r2,0(r16)
  80a2a0:	84400015 	stw	r17,0(r16)
  80a2a4:	dfc00317 	ldw	ra,12(sp)
  80a2a8:	dc800217 	ldw	r18,8(sp)
  80a2ac:	dc400117 	ldw	r17,4(sp)
  80a2b0:	dc000017 	ldw	r16,0(sp)
  80a2b4:	dec00404 	addi	sp,sp,16
  80a2b8:	f800283a 	ret
  80a2bc:	00800584 	movi	r2,22
  80a2c0:	90800015 	stw	r2,0(r18)
  80a2c4:	00bfffc4 	movi	r2,-1
  80a2c8:	003ff606 	br	80a2a4 <signal+0x44>
  80a2cc:	9009883a 	mov	r4,r18
  80a2d0:	01402004 	movi	r5,128
  80a2d4:	08057880 	call	805788 <_malloc_r>
  80a2d8:	9080b715 	stw	r2,732(r18)
  80a2dc:	1009883a 	mov	r4,r2
  80a2e0:	10000526 	beq	r2,zero,80a2f8 <signal+0x98>
  80a2e4:	01802004 	movi	r6,128
  80a2e8:	000b883a 	mov	r5,zero
  80a2ec:	08062640 	call	806264 <memset>
  80a2f0:	1009883a 	mov	r4,r2
  80a2f4:	003fe706 	br	80a294 <signal+0x34>
  80a2f8:	00bfffc4 	movi	r2,-1
  80a2fc:	003fe906 	br	80a2a4 <signal+0x44>

0080a300 <_init_signal>:
  80a300:	defffe04 	addi	sp,sp,-8
  80a304:	00802074 	movhi	r2,129
  80a308:	dc000015 	stw	r16,0(sp)
  80a30c:	140ce817 	ldw	r16,13216(r2)
  80a310:	dfc00115 	stw	ra,4(sp)
  80a314:	8080b717 	ldw	r2,732(r16)
  80a318:	10000526 	beq	r2,zero,80a330 <_init_signal+0x30>
  80a31c:	0005883a 	mov	r2,zero
  80a320:	dfc00117 	ldw	ra,4(sp)
  80a324:	dc000017 	ldw	r16,0(sp)
  80a328:	dec00204 	addi	sp,sp,8
  80a32c:	f800283a 	ret
  80a330:	8009883a 	mov	r4,r16
  80a334:	01402004 	movi	r5,128
  80a338:	08057880 	call	805788 <_malloc_r>
  80a33c:	8080b715 	stw	r2,732(r16)
  80a340:	1009883a 	mov	r4,r2
  80a344:	10000426 	beq	r2,zero,80a358 <_init_signal+0x58>
  80a348:	01802004 	movi	r6,128
  80a34c:	000b883a 	mov	r5,zero
  80a350:	08062640 	call	806264 <memset>
  80a354:	003ff106 	br	80a31c <_init_signal+0x1c>
  80a358:	00bfffc4 	movi	r2,-1
  80a35c:	003ff006 	br	80a320 <_init_signal+0x20>

0080a360 <__sigtramp>:
  80a360:	defffd04 	addi	sp,sp,-12
  80a364:	dc400115 	stw	r17,4(sp)
  80a368:	00c02074 	movhi	r3,129
  80a36c:	dfc00215 	stw	ra,8(sp)
  80a370:	dc000015 	stw	r16,0(sp)
  80a374:	20800830 	cmpltui	r2,r4,32
  80a378:	1c4ce817 	ldw	r17,13216(r3)
  80a37c:	10002526 	beq	r2,zero,80a414 <__sigtramp+0xb4>
  80a380:	88c0b717 	ldw	r3,732(r17)
  80a384:	2021883a 	mov	r16,r4
  80a388:	18001326 	beq	r3,zero,80a3d8 <__sigtramp+0x78>
  80a38c:	800890ba 	slli	r4,r16,2
  80a390:	1907883a 	add	r3,r3,r4
  80a394:	18800017 	ldw	r2,0(r3)
  80a398:	10000d26 	beq	r2,zero,80a3d0 <__sigtramp+0x70>
  80a39c:	113fffe0 	cmpeqi	r4,r2,-1
  80a3a0:	20001a1e 	bne	r4,zero,80a40c <__sigtramp+0xac>
  80a3a4:	11000060 	cmpeqi	r4,r2,1
  80a3a8:	2000161e 	bne	r4,zero,80a404 <__sigtramp+0xa4>
  80a3ac:	18000015 	stw	zero,0(r3)
  80a3b0:	8009883a 	mov	r4,r16
  80a3b4:	103ee83a 	callr	r2
  80a3b8:	0005883a 	mov	r2,zero
  80a3bc:	dfc00217 	ldw	ra,8(sp)
  80a3c0:	dc400117 	ldw	r17,4(sp)
  80a3c4:	dc000017 	ldw	r16,0(sp)
  80a3c8:	dec00304 	addi	sp,sp,12
  80a3cc:	f800283a 	ret
  80a3d0:	00800044 	movi	r2,1
  80a3d4:	003ff906 	br	80a3bc <__sigtramp+0x5c>
  80a3d8:	01402004 	movi	r5,128
  80a3dc:	8809883a 	mov	r4,r17
  80a3e0:	08057880 	call	805788 <_malloc_r>
  80a3e4:	8880b715 	stw	r2,732(r17)
  80a3e8:	10000a26 	beq	r2,zero,80a414 <__sigtramp+0xb4>
  80a3ec:	01802004 	movi	r6,128
  80a3f0:	000b883a 	mov	r5,zero
  80a3f4:	1009883a 	mov	r4,r2
  80a3f8:	08062640 	call	806264 <memset>
  80a3fc:	1007883a 	mov	r3,r2
  80a400:	003fe206 	br	80a38c <__sigtramp+0x2c>
  80a404:	008000c4 	movi	r2,3
  80a408:	003fec06 	br	80a3bc <__sigtramp+0x5c>
  80a40c:	00800084 	movi	r2,2
  80a410:	003fea06 	br	80a3bc <__sigtramp+0x5c>
  80a414:	00bfffc4 	movi	r2,-1
  80a418:	003fe806 	br	80a3bc <__sigtramp+0x5c>

0080a41c <_kill_r>:
  80a41c:	2807883a 	mov	r3,r5
  80a420:	defffe04 	addi	sp,sp,-8
  80a424:	dc000015 	stw	r16,0(sp)
  80a428:	00802074 	movhi	r2,129
  80a42c:	300b883a 	mov	r5,r6
  80a430:	2021883a 	mov	r16,r4
  80a434:	1809883a 	mov	r4,r3
  80a438:	dfc00115 	stw	ra,4(sp)
  80a43c:	10142e15 	stw	zero,20664(r2)
  80a440:	080e0540 	call	80e054 <kill>
  80a444:	10ffffd8 	cmpnei	r3,r2,-1
  80a448:	18000426 	beq	r3,zero,80a45c <_kill_r+0x40>
  80a44c:	dfc00117 	ldw	ra,4(sp)
  80a450:	dc000017 	ldw	r16,0(sp)
  80a454:	dec00204 	addi	sp,sp,8
  80a458:	f800283a 	ret
  80a45c:	00c02074 	movhi	r3,129
  80a460:	18d42e17 	ldw	r3,20664(r3)
  80a464:	183ff926 	beq	r3,zero,80a44c <_kill_r+0x30>
  80a468:	80c00015 	stw	r3,0(r16)
  80a46c:	dfc00117 	ldw	ra,4(sp)
  80a470:	dc000017 	ldw	r16,0(sp)
  80a474:	dec00204 	addi	sp,sp,8
  80a478:	f800283a 	ret

0080a47c <_getpid_r>:
  80a47c:	080dc401 	jmpi	80dc40 <getpid>

0080a480 <__udivdi3>:
  80a480:	defff504 	addi	sp,sp,-44
  80a484:	dd000515 	stw	r20,20(sp)
  80a488:	dc800315 	stw	r18,12(sp)
  80a48c:	dfc00a15 	stw	ra,40(sp)
  80a490:	df000915 	stw	fp,36(sp)
  80a494:	ddc00815 	stw	r23,32(sp)
  80a498:	dd800715 	stw	r22,28(sp)
  80a49c:	dd400615 	stw	r21,24(sp)
  80a4a0:	dcc00415 	stw	r19,16(sp)
  80a4a4:	dc400215 	stw	r17,8(sp)
  80a4a8:	dc000115 	stw	r16,4(sp)
  80a4ac:	2029883a 	mov	r20,r4
  80a4b0:	2825883a 	mov	r18,r5
  80a4b4:	3800461e 	bne	r7,zero,80a5d0 <__udivdi3+0x150>
  80a4b8:	3823883a 	mov	r17,r7
  80a4bc:	3021883a 	mov	r16,r6
  80a4c0:	2027883a 	mov	r19,r4
  80a4c4:	2980622e 	bgeu	r5,r6,80a650 <__udivdi3+0x1d0>
  80a4c8:	00bfffd4 	movui	r2,65535
  80a4cc:	282b883a 	mov	r21,r5
  80a4d0:	1180aa2e 	bgeu	r2,r6,80a77c <__udivdi3+0x2fc>
  80a4d4:	00804034 	movhi	r2,256
  80a4d8:	30815a36 	bltu	r6,r2,80aa44 <__udivdi3+0x5c4>
  80a4dc:	3006d63a 	srli	r3,r6,24
  80a4e0:	04400604 	movi	r17,24
  80a4e4:	00802074 	movhi	r2,129
  80a4e8:	1885883a 	add	r2,r3,r2
  80a4ec:	10857a03 	ldbu	r2,5608(r2)
  80a4f0:	00c00804 	movi	r3,32
  80a4f4:	1463883a 	add	r17,r2,r17
  80a4f8:	1c45c83a 	sub	r2,r3,r17
  80a4fc:	1c400526 	beq	r3,r17,80a514 <__udivdi3+0x94>
  80a500:	9086983a 	sll	r3,r18,r2
  80a504:	a462d83a 	srl	r17,r20,r17
  80a508:	30a0983a 	sll	r16,r6,r2
  80a50c:	a0a6983a 	sll	r19,r20,r2
  80a510:	88eab03a 	or	r21,r17,r3
  80a514:	802cd43a 	srli	r22,r16,16
  80a518:	a809883a 	mov	r4,r21
  80a51c:	853fffcc 	andi	r20,r16,65535
  80a520:	b00b883a 	mov	r5,r22
  80a524:	080b1bc0 	call	80b1bc <__umodsi3>
  80a528:	a809883a 	mov	r4,r21
  80a52c:	b00b883a 	mov	r5,r22
  80a530:	1025883a 	mov	r18,r2
  80a534:	080b1580 	call	80b158 <__udivsi3>
  80a538:	a009883a 	mov	r4,r20
  80a53c:	100b883a 	mov	r5,r2
  80a540:	102b883a 	mov	r21,r2
  80a544:	080b2180 	call	80b218 <__mulsi3>
  80a548:	9024943a 	slli	r18,r18,16
  80a54c:	9808d43a 	srli	r4,r19,16
  80a550:	9108b03a 	or	r4,r18,r4
  80a554:	2080052e 	bgeu	r4,r2,80a56c <__udivdi3+0xec>
  80a558:	2409883a 	add	r4,r4,r16
  80a55c:	a8ffffc4 	addi	r3,r21,-1
  80a560:	24000136 	bltu	r4,r16,80a568 <__udivdi3+0xe8>
  80a564:	20814836 	bltu	r4,r2,80aa88 <__udivdi3+0x608>
  80a568:	182b883a 	mov	r21,r3
  80a56c:	20a3c83a 	sub	r17,r4,r2
  80a570:	8809883a 	mov	r4,r17
  80a574:	b00b883a 	mov	r5,r22
  80a578:	080b1bc0 	call	80b1bc <__umodsi3>
  80a57c:	8809883a 	mov	r4,r17
  80a580:	1023883a 	mov	r17,r2
  80a584:	b00b883a 	mov	r5,r22
  80a588:	8822943a 	slli	r17,r17,16
  80a58c:	080b1580 	call	80b158 <__udivsi3>
  80a590:	100b883a 	mov	r5,r2
  80a594:	a009883a 	mov	r4,r20
  80a598:	9cffffcc 	andi	r19,r19,65535
  80a59c:	1025883a 	mov	r18,r2
  80a5a0:	8ce6b03a 	or	r19,r17,r19
  80a5a4:	080b2180 	call	80b218 <__mulsi3>
  80a5a8:	9880052e 	bgeu	r19,r2,80a5c0 <__udivdi3+0x140>
  80a5ac:	84e7883a 	add	r19,r16,r19
  80a5b0:	90ffffc4 	addi	r3,r18,-1
  80a5b4:	9c000136 	bltu	r19,r16,80a5bc <__udivdi3+0x13c>
  80a5b8:	98813136 	bltu	r19,r2,80aa80 <__udivdi3+0x600>
  80a5bc:	1825883a 	mov	r18,r3
  80a5c0:	a80c943a 	slli	r6,r21,16
  80a5c4:	0007883a 	mov	r3,zero
  80a5c8:	3484b03a 	or	r2,r6,r18
  80a5cc:	00000306 	br	80a5dc <__udivdi3+0x15c>
  80a5d0:	29c00e2e 	bgeu	r5,r7,80a60c <__udivdi3+0x18c>
  80a5d4:	0007883a 	mov	r3,zero
  80a5d8:	0005883a 	mov	r2,zero
  80a5dc:	dfc00a17 	ldw	ra,40(sp)
  80a5e0:	df000917 	ldw	fp,36(sp)
  80a5e4:	ddc00817 	ldw	r23,32(sp)
  80a5e8:	dd800717 	ldw	r22,28(sp)
  80a5ec:	dd400617 	ldw	r21,24(sp)
  80a5f0:	dd000517 	ldw	r20,20(sp)
  80a5f4:	dcc00417 	ldw	r19,16(sp)
  80a5f8:	dc800317 	ldw	r18,12(sp)
  80a5fc:	dc400217 	ldw	r17,8(sp)
  80a600:	dc000117 	ldw	r16,4(sp)
  80a604:	dec00b04 	addi	sp,sp,44
  80a608:	f800283a 	ret
  80a60c:	00bfffd4 	movui	r2,65535
  80a610:	11c05f2e 	bgeu	r2,r7,80a790 <__udivdi3+0x310>
  80a614:	00804034 	movhi	r2,256
  80a618:	3880fc36 	bltu	r7,r2,80aa0c <__udivdi3+0x58c>
  80a61c:	3804d63a 	srli	r2,r7,24
  80a620:	01000604 	movi	r4,24
  80a624:	00c02074 	movhi	r3,129
  80a628:	10c7883a 	add	r3,r2,r3
  80a62c:	18857a03 	ldbu	r2,5608(r3)
  80a630:	00c00804 	movi	r3,32
  80a634:	1105883a 	add	r2,r2,r4
  80a638:	18a3c83a 	sub	r17,r3,r2
  80a63c:	1880901e 	bne	r3,r2,80a880 <__udivdi3+0x400>
  80a640:	3c80f736 	bltu	r7,r18,80aa20 <__udivdi3+0x5a0>
  80a644:	a185403a 	cmpgeu	r2,r20,r6
  80a648:	0007883a 	mov	r3,zero
  80a64c:	003fe306 	br	80a5dc <__udivdi3+0x15c>
  80a650:	3000041e 	bne	r6,zero,80a664 <__udivdi3+0x1e4>
  80a654:	000b883a 	mov	r5,zero
  80a658:	01000044 	movi	r4,1
  80a65c:	080b1580 	call	80b158 <__udivsi3>
  80a660:	1021883a 	mov	r16,r2
  80a664:	00bfffd4 	movui	r2,65535
  80a668:	14003f2e 	bgeu	r2,r16,80a768 <__udivdi3+0x2e8>
  80a66c:	00804034 	movhi	r2,256
  80a670:	8080f136 	bltu	r16,r2,80aa38 <__udivdi3+0x5b8>
  80a674:	8006d63a 	srli	r3,r16,24
  80a678:	04400604 	movi	r17,24
  80a67c:	00802074 	movhi	r2,129
  80a680:	1885883a 	add	r2,r3,r2
  80a684:	10857a03 	ldbu	r2,5608(r2)
  80a688:	00c00804 	movi	r3,32
  80a68c:	1463883a 	add	r17,r2,r17
  80a690:	1c45c83a 	sub	r2,r3,r17
  80a694:	1c40431e 	bne	r3,r17,80a7a4 <__udivdi3+0x324>
  80a698:	802cd43a 	srli	r22,r16,16
  80a69c:	9423c83a 	sub	r17,r18,r16
  80a6a0:	853fffcc 	andi	r20,r16,65535
  80a6a4:	00c00044 	movi	r3,1
  80a6a8:	b00b883a 	mov	r5,r22
  80a6ac:	8809883a 	mov	r4,r17
  80a6b0:	d8c00015 	stw	r3,0(sp)
  80a6b4:	080b1bc0 	call	80b1bc <__umodsi3>
  80a6b8:	b00b883a 	mov	r5,r22
  80a6bc:	8809883a 	mov	r4,r17
  80a6c0:	1025883a 	mov	r18,r2
  80a6c4:	080b1580 	call	80b158 <__udivsi3>
  80a6c8:	1009883a 	mov	r4,r2
  80a6cc:	a00b883a 	mov	r5,r20
  80a6d0:	102b883a 	mov	r21,r2
  80a6d4:	080b2180 	call	80b218 <__mulsi3>
  80a6d8:	9024943a 	slli	r18,r18,16
  80a6dc:	9808d43a 	srli	r4,r19,16
  80a6e0:	d8c00017 	ldw	r3,0(sp)
  80a6e4:	9108b03a 	or	r4,r18,r4
  80a6e8:	2080052e 	bgeu	r4,r2,80a700 <__udivdi3+0x280>
  80a6ec:	2409883a 	add	r4,r4,r16
  80a6f0:	a97fffc4 	addi	r5,r21,-1
  80a6f4:	24000136 	bltu	r4,r16,80a6fc <__udivdi3+0x27c>
  80a6f8:	2080e636 	bltu	r4,r2,80aa94 <__udivdi3+0x614>
  80a6fc:	282b883a 	mov	r21,r5
  80a700:	20a3c83a 	sub	r17,r4,r2
  80a704:	8809883a 	mov	r4,r17
  80a708:	b00b883a 	mov	r5,r22
  80a70c:	d8c00015 	stw	r3,0(sp)
  80a710:	080b1bc0 	call	80b1bc <__umodsi3>
  80a714:	8809883a 	mov	r4,r17
  80a718:	1023883a 	mov	r17,r2
  80a71c:	b00b883a 	mov	r5,r22
  80a720:	8822943a 	slli	r17,r17,16
  80a724:	080b1580 	call	80b158 <__udivsi3>
  80a728:	a00b883a 	mov	r5,r20
  80a72c:	1009883a 	mov	r4,r2
  80a730:	9cffffcc 	andi	r19,r19,65535
  80a734:	1025883a 	mov	r18,r2
  80a738:	8ce6b03a 	or	r19,r17,r19
  80a73c:	080b2180 	call	80b218 <__mulsi3>
  80a740:	d8c00017 	ldw	r3,0(sp)
  80a744:	9880052e 	bgeu	r19,r2,80a75c <__udivdi3+0x2dc>
  80a748:	84e7883a 	add	r19,r16,r19
  80a74c:	913fffc4 	addi	r4,r18,-1
  80a750:	9c000136 	bltu	r19,r16,80a758 <__udivdi3+0x2d8>
  80a754:	9880c836 	bltu	r19,r2,80aa78 <__udivdi3+0x5f8>
  80a758:	2025883a 	mov	r18,r4
  80a75c:	a80c943a 	slli	r6,r21,16
  80a760:	3484b03a 	or	r2,r6,r18
  80a764:	003f9d06 	br	80a5dc <__udivdi3+0x15c>
  80a768:	80804030 	cmpltui	r2,r16,256
  80a76c:	1000b81e 	bne	r2,zero,80aa50 <__udivdi3+0x5d0>
  80a770:	8006d23a 	srli	r3,r16,8
  80a774:	04400204 	movi	r17,8
  80a778:	003fc006 	br	80a67c <__udivdi3+0x1fc>
  80a77c:	30804030 	cmpltui	r2,r6,256
  80a780:	1000a51e 	bne	r2,zero,80aa18 <__udivdi3+0x598>
  80a784:	3006d23a 	srli	r3,r6,8
  80a788:	04400204 	movi	r17,8
  80a78c:	003f5506 	br	80a4e4 <__udivdi3+0x64>
  80a790:	38804030 	cmpltui	r2,r7,256
  80a794:	1000a51e 	bne	r2,zero,80aa2c <__udivdi3+0x5ac>
  80a798:	3804d23a 	srli	r2,r7,8
  80a79c:	01000204 	movi	r4,8
  80a7a0:	003fa006 	br	80a624 <__udivdi3+0x1a4>
  80a7a4:	80a0983a 	sll	r16,r16,r2
  80a7a8:	946ed83a 	srl	r23,r18,r17
  80a7ac:	9086983a 	sll	r3,r18,r2
  80a7b0:	802cd43a 	srli	r22,r16,16
  80a7b4:	a462d83a 	srl	r17,r20,r17
  80a7b8:	b809883a 	mov	r4,r23
  80a7bc:	b00b883a 	mov	r5,r22
  80a7c0:	88eab03a 	or	r21,r17,r3
  80a7c4:	a0a6983a 	sll	r19,r20,r2
  80a7c8:	080b1bc0 	call	80b1bc <__umodsi3>
  80a7cc:	b809883a 	mov	r4,r23
  80a7d0:	b00b883a 	mov	r5,r22
  80a7d4:	1025883a 	mov	r18,r2
  80a7d8:	853fffcc 	andi	r20,r16,65535
  80a7dc:	080b1580 	call	80b158 <__udivsi3>
  80a7e0:	a009883a 	mov	r4,r20
  80a7e4:	100b883a 	mov	r5,r2
  80a7e8:	102f883a 	mov	r23,r2
  80a7ec:	080b2180 	call	80b218 <__mulsi3>
  80a7f0:	9024943a 	slli	r18,r18,16
  80a7f4:	a808d43a 	srli	r4,r21,16
  80a7f8:	9108b03a 	or	r4,r18,r4
  80a7fc:	2080062e 	bgeu	r4,r2,80a818 <__udivdi3+0x398>
  80a800:	2409883a 	add	r4,r4,r16
  80a804:	b8ffffc4 	addi	r3,r23,-1
  80a808:	24009936 	bltu	r4,r16,80aa70 <__udivdi3+0x5f0>
  80a80c:	2080982e 	bgeu	r4,r2,80aa70 <__udivdi3+0x5f0>
  80a810:	bdffff84 	addi	r23,r23,-2
  80a814:	2409883a 	add	r4,r4,r16
  80a818:	20a3c83a 	sub	r17,r4,r2
  80a81c:	8809883a 	mov	r4,r17
  80a820:	b00b883a 	mov	r5,r22
  80a824:	080b1bc0 	call	80b1bc <__umodsi3>
  80a828:	1025883a 	mov	r18,r2
  80a82c:	8809883a 	mov	r4,r17
  80a830:	b00b883a 	mov	r5,r22
  80a834:	9024943a 	slli	r18,r18,16
  80a838:	080b1580 	call	80b158 <__udivsi3>
  80a83c:	100b883a 	mov	r5,r2
  80a840:	a009883a 	mov	r4,r20
  80a844:	ac7fffcc 	andi	r17,r21,65535
  80a848:	1039883a 	mov	fp,r2
  80a84c:	9462b03a 	or	r17,r18,r17
  80a850:	080b2180 	call	80b218 <__mulsi3>
  80a854:	8880062e 	bgeu	r17,r2,80a870 <__udivdi3+0x3f0>
  80a858:	8c23883a 	add	r17,r17,r16
  80a85c:	e0ffffc4 	addi	r3,fp,-1
  80a860:	8c007f36 	bltu	r17,r16,80aa60 <__udivdi3+0x5e0>
  80a864:	88807e2e 	bgeu	r17,r2,80aa60 <__udivdi3+0x5e0>
  80a868:	e73fff84 	addi	fp,fp,-2
  80a86c:	8c23883a 	add	r17,r17,r16
  80a870:	b806943a 	slli	r3,r23,16
  80a874:	88a3c83a 	sub	r17,r17,r2
  80a878:	1f06b03a 	or	r3,r3,fp
  80a87c:	003f8a06 	br	80a6a8 <__udivdi3+0x228>
  80a880:	30a6d83a 	srl	r19,r6,r2
  80a884:	3c4e983a 	sll	r7,r7,r17
  80a888:	90a0d83a 	srl	r16,r18,r2
  80a88c:	9446983a 	sll	r3,r18,r17
  80a890:	99e6b03a 	or	r19,r19,r7
  80a894:	a084d83a 	srl	r2,r20,r2
  80a898:	9838d43a 	srli	fp,r19,16
  80a89c:	8009883a 	mov	r4,r16
  80a8a0:	10eab03a 	or	r21,r2,r3
  80a8a4:	e00b883a 	mov	r5,fp
  80a8a8:	346c983a 	sll	r22,r6,r17
  80a8ac:	dd400015 	stw	r21,0(sp)
  80a8b0:	080b1bc0 	call	80b1bc <__umodsi3>
  80a8b4:	8009883a 	mov	r4,r16
  80a8b8:	e00b883a 	mov	r5,fp
  80a8bc:	102f883a 	mov	r23,r2
  80a8c0:	9cbfffcc 	andi	r18,r19,65535
  80a8c4:	080b1580 	call	80b158 <__udivsi3>
  80a8c8:	9009883a 	mov	r4,r18
  80a8cc:	100b883a 	mov	r5,r2
  80a8d0:	1021883a 	mov	r16,r2
  80a8d4:	080b2180 	call	80b218 <__mulsi3>
  80a8d8:	b82e943a 	slli	r23,r23,16
  80a8dc:	a808d43a 	srli	r4,r21,16
  80a8e0:	b908b03a 	or	r4,r23,r4
  80a8e4:	2080062e 	bgeu	r4,r2,80a900 <__udivdi3+0x480>
  80a8e8:	24c9883a 	add	r4,r4,r19
  80a8ec:	817fffc4 	addi	r5,r16,-1
  80a8f0:	24c05d36 	bltu	r4,r19,80aa68 <__udivdi3+0x5e8>
  80a8f4:	20805c2e 	bgeu	r4,r2,80aa68 <__udivdi3+0x5e8>
  80a8f8:	843fff84 	addi	r16,r16,-2
  80a8fc:	24c9883a 	add	r4,r4,r19
  80a900:	20abc83a 	sub	r21,r4,r2
  80a904:	a809883a 	mov	r4,r21
  80a908:	e00b883a 	mov	r5,fp
  80a90c:	080b1bc0 	call	80b1bc <__umodsi3>
  80a910:	a809883a 	mov	r4,r21
  80a914:	e00b883a 	mov	r5,fp
  80a918:	102b883a 	mov	r21,r2
  80a91c:	080b1580 	call	80b158 <__udivsi3>
  80a920:	9009883a 	mov	r4,r18
  80a924:	100b883a 	mov	r5,r2
  80a928:	102f883a 	mov	r23,r2
  80a92c:	080b2180 	call	80b218 <__mulsi3>
  80a930:	d8c00017 	ldw	r3,0(sp)
  80a934:	a82a943a 	slli	r21,r21,16
  80a938:	100d883a 	mov	r6,r2
  80a93c:	1cbfffcc 	andi	r18,r3,65535
  80a940:	aca4b03a 	or	r18,r21,r18
  80a944:	9080062e 	bgeu	r18,r2,80a960 <__udivdi3+0x4e0>
  80a948:	94e5883a 	add	r18,r18,r19
  80a94c:	b8bfffc4 	addi	r2,r23,-1
  80a950:	94c04136 	bltu	r18,r19,80aa58 <__udivdi3+0x5d8>
  80a954:	9180402e 	bgeu	r18,r6,80aa58 <__udivdi3+0x5d8>
  80a958:	bdffff84 	addi	r23,r23,-2
  80a95c:	94e5883a 	add	r18,r18,r19
  80a960:	8004943a 	slli	r2,r16,16
  80a964:	bd7fffcc 	andi	r21,r23,65535
  80a968:	b73fffcc 	andi	fp,r22,65535
  80a96c:	15e0b03a 	or	r16,r2,r23
  80a970:	8026d43a 	srli	r19,r16,16
  80a974:	a809883a 	mov	r4,r21
  80a978:	e00b883a 	mov	r5,fp
  80a97c:	91a5c83a 	sub	r18,r18,r6
  80a980:	b02cd43a 	srli	r22,r22,16
  80a984:	080b2180 	call	80b218 <__mulsi3>
  80a988:	9809883a 	mov	r4,r19
  80a98c:	e00b883a 	mov	r5,fp
  80a990:	102f883a 	mov	r23,r2
  80a994:	080b2180 	call	80b218 <__mulsi3>
  80a998:	9809883a 	mov	r4,r19
  80a99c:	b00b883a 	mov	r5,r22
  80a9a0:	1027883a 	mov	r19,r2
  80a9a4:	080b2180 	call	80b218 <__mulsi3>
  80a9a8:	a809883a 	mov	r4,r21
  80a9ac:	b00b883a 	mov	r5,r22
  80a9b0:	102b883a 	mov	r21,r2
  80a9b4:	080b2180 	call	80b218 <__mulsi3>
  80a9b8:	b806d43a 	srli	r3,r23,16
  80a9bc:	14c5883a 	add	r2,r2,r19
  80a9c0:	1887883a 	add	r3,r3,r2
  80a9c4:	1cc0022e 	bgeu	r3,r19,80a9d0 <__udivdi3+0x550>
  80a9c8:	00800074 	movhi	r2,1
  80a9cc:	a8ab883a 	add	r21,r21,r2
  80a9d0:	1804d43a 	srli	r2,r3,16
  80a9d4:	156b883a 	add	r21,r2,r21
  80a9d8:	95400936 	bltu	r18,r21,80aa00 <__udivdi3+0x580>
  80a9dc:	95400326 	beq	r18,r21,80a9ec <__udivdi3+0x56c>
  80a9e0:	8005883a 	mov	r2,r16
  80a9e4:	0007883a 	mov	r3,zero
  80a9e8:	003efc06 	br	80a5dc <__udivdi3+0x15c>
  80a9ec:	1806943a 	slli	r3,r3,16
  80a9f0:	a44c983a 	sll	r6,r20,r17
  80a9f4:	bdffffcc 	andi	r23,r23,65535
  80a9f8:	1dc7883a 	add	r3,r3,r23
  80a9fc:	30fff82e 	bgeu	r6,r3,80a9e0 <__udivdi3+0x560>
  80aa00:	80bfffc4 	addi	r2,r16,-1
  80aa04:	0007883a 	mov	r3,zero
  80aa08:	003ef406 	br	80a5dc <__udivdi3+0x15c>
  80aa0c:	3804d43a 	srli	r2,r7,16
  80aa10:	01000404 	movi	r4,16
  80aa14:	003f0306 	br	80a624 <__udivdi3+0x1a4>
  80aa18:	3007883a 	mov	r3,r6
  80aa1c:	003eb106 	br	80a4e4 <__udivdi3+0x64>
  80aa20:	0007883a 	mov	r3,zero
  80aa24:	00800044 	movi	r2,1
  80aa28:	003eec06 	br	80a5dc <__udivdi3+0x15c>
  80aa2c:	3805883a 	mov	r2,r7
  80aa30:	0009883a 	mov	r4,zero
  80aa34:	003efb06 	br	80a624 <__udivdi3+0x1a4>
  80aa38:	8006d43a 	srli	r3,r16,16
  80aa3c:	04400404 	movi	r17,16
  80aa40:	003f0e06 	br	80a67c <__udivdi3+0x1fc>
  80aa44:	3006d43a 	srli	r3,r6,16
  80aa48:	04400404 	movi	r17,16
  80aa4c:	003ea506 	br	80a4e4 <__udivdi3+0x64>
  80aa50:	8007883a 	mov	r3,r16
  80aa54:	003f0906 	br	80a67c <__udivdi3+0x1fc>
  80aa58:	102f883a 	mov	r23,r2
  80aa5c:	003fc006 	br	80a960 <__udivdi3+0x4e0>
  80aa60:	1839883a 	mov	fp,r3
  80aa64:	003f8206 	br	80a870 <__udivdi3+0x3f0>
  80aa68:	2821883a 	mov	r16,r5
  80aa6c:	003fa406 	br	80a900 <__udivdi3+0x480>
  80aa70:	182f883a 	mov	r23,r3
  80aa74:	003f6806 	br	80a818 <__udivdi3+0x398>
  80aa78:	94bfff84 	addi	r18,r18,-2
  80aa7c:	003f3706 	br	80a75c <__udivdi3+0x2dc>
  80aa80:	94bfff84 	addi	r18,r18,-2
  80aa84:	003ece06 	br	80a5c0 <__udivdi3+0x140>
  80aa88:	ad7fff84 	addi	r21,r21,-2
  80aa8c:	2409883a 	add	r4,r4,r16
  80aa90:	003eb606 	br	80a56c <__udivdi3+0xec>
  80aa94:	ad7fff84 	addi	r21,r21,-2
  80aa98:	2409883a 	add	r4,r4,r16
  80aa9c:	003f1806 	br	80a700 <__udivdi3+0x280>

0080aaa0 <__umoddi3>:
  80aaa0:	defff304 	addi	sp,sp,-52
  80aaa4:	dc400415 	stw	r17,16(sp)
  80aaa8:	dc000315 	stw	r16,12(sp)
  80aaac:	dfc00c15 	stw	ra,48(sp)
  80aab0:	df000b15 	stw	fp,44(sp)
  80aab4:	ddc00a15 	stw	r23,40(sp)
  80aab8:	dd800915 	stw	r22,36(sp)
  80aabc:	dd400815 	stw	r21,32(sp)
  80aac0:	dd000715 	stw	r20,28(sp)
  80aac4:	dcc00615 	stw	r19,24(sp)
  80aac8:	dc800515 	stw	r18,20(sp)
  80aacc:	2823883a 	mov	r17,r5
  80aad0:	2021883a 	mov	r16,r4
  80aad4:	38003b1e 	bne	r7,zero,80abc4 <__umoddi3+0x124>
  80aad8:	3825883a 	mov	r18,r7
  80aadc:	3029883a 	mov	r20,r6
  80aae0:	2027883a 	mov	r19,r4
  80aae4:	29805b2e 	bgeu	r5,r6,80ac54 <__umoddi3+0x1b4>
  80aae8:	00bfffd4 	movui	r2,65535
  80aaec:	282d883a 	mov	r22,r5
  80aaf0:	11809a2e 	bgeu	r2,r6,80ad5c <__umoddi3+0x2bc>
  80aaf4:	00804034 	movhi	r2,256
  80aaf8:	30814436 	bltu	r6,r2,80b00c <__umoddi3+0x56c>
  80aafc:	3006d63a 	srli	r3,r6,24
  80ab00:	04800604 	movi	r18,24
  80ab04:	00802074 	movhi	r2,129
  80ab08:	1885883a 	add	r2,r3,r2
  80ab0c:	10857a03 	ldbu	r2,5608(r2)
  80ab10:	00c00804 	movi	r3,32
  80ab14:	1485883a 	add	r2,r2,r18
  80ab18:	18a5c83a 	sub	r18,r3,r2
  80ab1c:	18800526 	beq	r3,r2,80ab34 <__umoddi3+0x94>
  80ab20:	8ca2983a 	sll	r17,r17,r18
  80ab24:	8084d83a 	srl	r2,r16,r2
  80ab28:	34a8983a 	sll	r20,r6,r18
  80ab2c:	84a6983a 	sll	r19,r16,r18
  80ab30:	146cb03a 	or	r22,r2,r17
  80ab34:	a02ed43a 	srli	r23,r20,16
  80ab38:	b009883a 	mov	r4,r22
  80ab3c:	a57fffcc 	andi	r21,r20,65535
  80ab40:	b80b883a 	mov	r5,r23
  80ab44:	080b1bc0 	call	80b1bc <__umodsi3>
  80ab48:	b80b883a 	mov	r5,r23
  80ab4c:	b009883a 	mov	r4,r22
  80ab50:	1023883a 	mov	r17,r2
  80ab54:	080b1580 	call	80b158 <__udivsi3>
  80ab58:	a809883a 	mov	r4,r21
  80ab5c:	100b883a 	mov	r5,r2
  80ab60:	080b2180 	call	80b218 <__mulsi3>
  80ab64:	8822943a 	slli	r17,r17,16
  80ab68:	9808d43a 	srli	r4,r19,16
  80ab6c:	8908b03a 	or	r4,r17,r4
  80ab70:	2080042e 	bgeu	r4,r2,80ab84 <__umoddi3+0xe4>
  80ab74:	2509883a 	add	r4,r4,r20
  80ab78:	25000236 	bltu	r4,r20,80ab84 <__umoddi3+0xe4>
  80ab7c:	2080012e 	bgeu	r4,r2,80ab84 <__umoddi3+0xe4>
  80ab80:	2509883a 	add	r4,r4,r20
  80ab84:	20a1c83a 	sub	r16,r4,r2
  80ab88:	b80b883a 	mov	r5,r23
  80ab8c:	8009883a 	mov	r4,r16
  80ab90:	080b1bc0 	call	80b1bc <__umodsi3>
  80ab94:	b80b883a 	mov	r5,r23
  80ab98:	8009883a 	mov	r4,r16
  80ab9c:	1023883a 	mov	r17,r2
  80aba0:	080b1580 	call	80b158 <__udivsi3>
  80aba4:	8822943a 	slli	r17,r17,16
  80aba8:	100b883a 	mov	r5,r2
  80abac:	a809883a 	mov	r4,r21
  80abb0:	080b2180 	call	80b218 <__mulsi3>
  80abb4:	98ffffcc 	andi	r3,r19,65535
  80abb8:	88c6b03a 	or	r3,r17,r3
  80abbc:	18805e2e 	bgeu	r3,r2,80ad38 <__umoddi3+0x298>
  80abc0:	00005906 	br	80ad28 <__umoddi3+0x288>
  80abc4:	2005883a 	mov	r2,r4
  80abc8:	29c00d2e 	bgeu	r5,r7,80ac00 <__umoddi3+0x160>
  80abcc:	2807883a 	mov	r3,r5
  80abd0:	dfc00c17 	ldw	ra,48(sp)
  80abd4:	df000b17 	ldw	fp,44(sp)
  80abd8:	ddc00a17 	ldw	r23,40(sp)
  80abdc:	dd800917 	ldw	r22,36(sp)
  80abe0:	dd400817 	ldw	r21,32(sp)
  80abe4:	dd000717 	ldw	r20,28(sp)
  80abe8:	dcc00617 	ldw	r19,24(sp)
  80abec:	dc800517 	ldw	r18,20(sp)
  80abf0:	dc400417 	ldw	r17,16(sp)
  80abf4:	dc000317 	ldw	r16,12(sp)
  80abf8:	dec00d04 	addi	sp,sp,52
  80abfc:	f800283a 	ret
  80ac00:	013fffd4 	movui	r4,65535
  80ac04:	2807883a 	mov	r3,r5
  80ac08:	21c0592e 	bgeu	r4,r7,80ad70 <__umoddi3+0x2d0>
  80ac0c:	01004034 	movhi	r4,256
  80ac10:	39010336 	bltu	r7,r4,80b020 <__umoddi3+0x580>
  80ac14:	3808d63a 	srli	r4,r7,24
  80ac18:	02000604 	movi	r8,24
  80ac1c:	01402074 	movhi	r5,129
  80ac20:	214b883a 	add	r5,r4,r5
  80ac24:	2d057a03 	ldbu	r20,5608(r5)
  80ac28:	01000804 	movi	r4,32
  80ac2c:	a229883a 	add	r20,r20,r8
  80ac30:	252bc83a 	sub	r21,r4,r20
  80ac34:	2500531e 	bne	r4,r20,80ad84 <__umoddi3+0x2e4>
  80ac38:	3c400136 	bltu	r7,r17,80ac40 <__umoddi3+0x1a0>
  80ac3c:	81bfe436 	bltu	r16,r6,80abd0 <__umoddi3+0x130>
  80ac40:	8185c83a 	sub	r2,r16,r6
  80ac44:	89cfc83a 	sub	r7,r17,r7
  80ac48:	8087803a 	cmpltu	r3,r16,r2
  80ac4c:	38c7c83a 	sub	r3,r7,r3
  80ac50:	003fdf06 	br	80abd0 <__umoddi3+0x130>
  80ac54:	3000041e 	bne	r6,zero,80ac68 <__umoddi3+0x1c8>
  80ac58:	000b883a 	mov	r5,zero
  80ac5c:	01000044 	movi	r4,1
  80ac60:	080b1580 	call	80b158 <__udivsi3>
  80ac64:	1029883a 	mov	r20,r2
  80ac68:	00bfffd4 	movui	r2,65535
  80ac6c:	1500362e 	bgeu	r2,r20,80ad48 <__umoddi3+0x2a8>
  80ac70:	00804034 	movhi	r2,256
  80ac74:	a080ed36 	bltu	r20,r2,80b02c <__umoddi3+0x58c>
  80ac78:	a006d63a 	srli	r3,r20,24
  80ac7c:	04800604 	movi	r18,24
  80ac80:	00802074 	movhi	r2,129
  80ac84:	1885883a 	add	r2,r3,r2
  80ac88:	15857a03 	ldbu	r22,5608(r2)
  80ac8c:	00800804 	movi	r2,32
  80ac90:	b4ad883a 	add	r22,r22,r18
  80ac94:	15a5c83a 	sub	r18,r2,r22
  80ac98:	1580a51e 	bne	r2,r22,80af30 <__umoddi3+0x490>
  80ac9c:	a02ed43a 	srli	r23,r20,16
  80aca0:	8d23c83a 	sub	r17,r17,r20
  80aca4:	a57fffcc 	andi	r21,r20,65535
  80aca8:	8809883a 	mov	r4,r17
  80acac:	b80b883a 	mov	r5,r23
  80acb0:	080b1bc0 	call	80b1bc <__umodsi3>
  80acb4:	8809883a 	mov	r4,r17
  80acb8:	b80b883a 	mov	r5,r23
  80acbc:	1023883a 	mov	r17,r2
  80acc0:	080b1580 	call	80b158 <__udivsi3>
  80acc4:	1009883a 	mov	r4,r2
  80acc8:	a80b883a 	mov	r5,r21
  80accc:	080b2180 	call	80b218 <__mulsi3>
  80acd0:	8822943a 	slli	r17,r17,16
  80acd4:	9808d43a 	srli	r4,r19,16
  80acd8:	8908b03a 	or	r4,r17,r4
  80acdc:	2080032e 	bgeu	r4,r2,80acec <__umoddi3+0x24c>
  80ace0:	2509883a 	add	r4,r4,r20
  80ace4:	25000136 	bltu	r4,r20,80acec <__umoddi3+0x24c>
  80ace8:	2080dc36 	bltu	r4,r2,80b05c <__umoddi3+0x5bc>
  80acec:	20a1c83a 	sub	r16,r4,r2
  80acf0:	b80b883a 	mov	r5,r23
  80acf4:	8009883a 	mov	r4,r16
  80acf8:	080b1bc0 	call	80b1bc <__umodsi3>
  80acfc:	b80b883a 	mov	r5,r23
  80ad00:	8009883a 	mov	r4,r16
  80ad04:	1023883a 	mov	r17,r2
  80ad08:	8822943a 	slli	r17,r17,16
  80ad0c:	080b1580 	call	80b158 <__udivsi3>
  80ad10:	a80b883a 	mov	r5,r21
  80ad14:	1009883a 	mov	r4,r2
  80ad18:	080b2180 	call	80b218 <__mulsi3>
  80ad1c:	9cffffcc 	andi	r19,r19,65535
  80ad20:	8cc6b03a 	or	r3,r17,r19
  80ad24:	1880042e 	bgeu	r3,r2,80ad38 <__umoddi3+0x298>
  80ad28:	1d07883a 	add	r3,r3,r20
  80ad2c:	1d000236 	bltu	r3,r20,80ad38 <__umoddi3+0x298>
  80ad30:	1880012e 	bgeu	r3,r2,80ad38 <__umoddi3+0x298>
  80ad34:	1d07883a 	add	r3,r3,r20
  80ad38:	1885c83a 	sub	r2,r3,r2
  80ad3c:	1484d83a 	srl	r2,r2,r18
  80ad40:	0007883a 	mov	r3,zero
  80ad44:	003fa206 	br	80abd0 <__umoddi3+0x130>
  80ad48:	a0804030 	cmpltui	r2,r20,256
  80ad4c:	1000ba1e 	bne	r2,zero,80b038 <__umoddi3+0x598>
  80ad50:	a006d23a 	srli	r3,r20,8
  80ad54:	04800204 	movi	r18,8
  80ad58:	003fc906 	br	80ac80 <__umoddi3+0x1e0>
  80ad5c:	30804030 	cmpltui	r2,r6,256
  80ad60:	1000ad1e 	bne	r2,zero,80b018 <__umoddi3+0x578>
  80ad64:	3006d23a 	srli	r3,r6,8
  80ad68:	04800204 	movi	r18,8
  80ad6c:	003f6506 	br	80ab04 <__umoddi3+0x64>
  80ad70:	39004030 	cmpltui	r4,r7,256
  80ad74:	2000b21e 	bne	r4,zero,80b040 <__umoddi3+0x5a0>
  80ad78:	3808d23a 	srli	r4,r7,8
  80ad7c:	02000204 	movi	r8,8
  80ad80:	003fa606 	br	80ac1c <__umoddi3+0x17c>
  80ad84:	3d4e983a 	sll	r7,r7,r21
  80ad88:	3508d83a 	srl	r4,r6,r20
  80ad8c:	8d2cd83a 	srl	r22,r17,r20
  80ad90:	8504d83a 	srl	r2,r16,r20
  80ad94:	21e4b03a 	or	r18,r4,r7
  80ad98:	8d62983a 	sll	r17,r17,r21
  80ad9c:	9026d43a 	srli	r19,r18,16
  80ada0:	354c983a 	sll	r6,r6,r21
  80ada4:	1444b03a 	or	r2,r2,r17
  80ada8:	b009883a 	mov	r4,r22
  80adac:	980b883a 	mov	r5,r19
  80adb0:	d9800115 	stw	r6,4(sp)
  80adb4:	d8800015 	stw	r2,0(sp)
  80adb8:	080b1bc0 	call	80b1bc <__umodsi3>
  80adbc:	980b883a 	mov	r5,r19
  80adc0:	b009883a 	mov	r4,r22
  80adc4:	102f883a 	mov	r23,r2
  80adc8:	947fffcc 	andi	r17,r18,65535
  80adcc:	080b1580 	call	80b158 <__udivsi3>
  80add0:	8809883a 	mov	r4,r17
  80add4:	100b883a 	mov	r5,r2
  80add8:	1039883a 	mov	fp,r2
  80addc:	080b2180 	call	80b218 <__mulsi3>
  80ade0:	d8c00017 	ldw	r3,0(sp)
  80ade4:	b82e943a 	slli	r23,r23,16
  80ade8:	8560983a 	sll	r16,r16,r21
  80adec:	1808d43a 	srli	r4,r3,16
  80adf0:	b908b03a 	or	r4,r23,r4
  80adf4:	2080062e 	bgeu	r4,r2,80ae10 <__umoddi3+0x370>
  80adf8:	2489883a 	add	r4,r4,r18
  80adfc:	e17fffc4 	addi	r5,fp,-1
  80ae00:	24809436 	bltu	r4,r18,80b054 <__umoddi3+0x5b4>
  80ae04:	2080932e 	bgeu	r4,r2,80b054 <__umoddi3+0x5b4>
  80ae08:	e73fff84 	addi	fp,fp,-2
  80ae0c:	2489883a 	add	r4,r4,r18
  80ae10:	20adc83a 	sub	r22,r4,r2
  80ae14:	980b883a 	mov	r5,r19
  80ae18:	b009883a 	mov	r4,r22
  80ae1c:	080b1bc0 	call	80b1bc <__umodsi3>
  80ae20:	980b883a 	mov	r5,r19
  80ae24:	b009883a 	mov	r4,r22
  80ae28:	102f883a 	mov	r23,r2
  80ae2c:	080b1580 	call	80b158 <__udivsi3>
  80ae30:	100b883a 	mov	r5,r2
  80ae34:	8809883a 	mov	r4,r17
  80ae38:	d8800215 	stw	r2,8(sp)
  80ae3c:	080b2180 	call	80b218 <__mulsi3>
  80ae40:	d8c00017 	ldw	r3,0(sp)
  80ae44:	b82e943a 	slli	r23,r23,16
  80ae48:	d9400217 	ldw	r5,8(sp)
  80ae4c:	1c7fffcc 	andi	r17,r3,65535
  80ae50:	bc62b03a 	or	r17,r23,r17
  80ae54:	8880062e 	bgeu	r17,r2,80ae70 <__umoddi3+0x3d0>
  80ae58:	8ca3883a 	add	r17,r17,r18
  80ae5c:	28ffffc4 	addi	r3,r5,-1
  80ae60:	8c807a36 	bltu	r17,r18,80b04c <__umoddi3+0x5ac>
  80ae64:	8880792e 	bgeu	r17,r2,80b04c <__umoddi3+0x5ac>
  80ae68:	297fff84 	addi	r5,r5,-2
  80ae6c:	8ca3883a 	add	r17,r17,r18
  80ae70:	e02c943a 	slli	r22,fp,16
  80ae74:	d9c00117 	ldw	r7,4(sp)
  80ae78:	29bfffcc 	andi	r6,r5,65535
  80ae7c:	b16cb03a 	or	r22,r22,r5
  80ae80:	38ffffcc 	andi	r3,r7,65535
  80ae84:	b02cd43a 	srli	r22,r22,16
  80ae88:	180b883a 	mov	r5,r3
  80ae8c:	3009883a 	mov	r4,r6
  80ae90:	3838d43a 	srli	fp,r7,16
  80ae94:	182f883a 	mov	r23,r3
  80ae98:	d9800015 	stw	r6,0(sp)
  80ae9c:	88a3c83a 	sub	r17,r17,r2
  80aea0:	080b2180 	call	80b218 <__mulsi3>
  80aea4:	b80b883a 	mov	r5,r23
  80aea8:	b009883a 	mov	r4,r22
  80aeac:	102f883a 	mov	r23,r2
  80aeb0:	080b2180 	call	80b218 <__mulsi3>
  80aeb4:	e00b883a 	mov	r5,fp
  80aeb8:	b009883a 	mov	r4,r22
  80aebc:	102d883a 	mov	r22,r2
  80aec0:	080b2180 	call	80b218 <__mulsi3>
  80aec4:	d9800017 	ldw	r6,0(sp)
  80aec8:	e00b883a 	mov	r5,fp
  80aecc:	1039883a 	mov	fp,r2
  80aed0:	3009883a 	mov	r4,r6
  80aed4:	080b2180 	call	80b218 <__mulsi3>
  80aed8:	b808d43a 	srli	r4,r23,16
  80aedc:	1585883a 	add	r2,r2,r22
  80aee0:	2089883a 	add	r4,r4,r2
  80aee4:	2580022e 	bgeu	r4,r22,80aef0 <__umoddi3+0x450>
  80aee8:	00800074 	movhi	r2,1
  80aeec:	e0b9883a 	add	fp,fp,r2
  80aef0:	2006d43a 	srli	r3,r4,16
  80aef4:	2008943a 	slli	r4,r4,16
  80aef8:	bdffffcc 	andi	r23,r23,65535
  80aefc:	1f07883a 	add	r3,r3,fp
  80af00:	25c9883a 	add	r4,r4,r23
  80af04:	88c03a36 	bltu	r17,r3,80aff0 <__umoddi3+0x550>
  80af08:	88c03826 	beq	r17,r3,80afec <__umoddi3+0x54c>
  80af0c:	8109c83a 	sub	r4,r16,r4
  80af10:	8121803a 	cmpltu	r16,r16,r4
  80af14:	88c7c83a 	sub	r3,r17,r3
  80af18:	1c07c83a 	sub	r3,r3,r16
  80af1c:	1d04983a 	sll	r2,r3,r20
  80af20:	2548d83a 	srl	r4,r4,r21
  80af24:	1d46d83a 	srl	r3,r3,r21
  80af28:	1104b03a 	or	r2,r2,r4
  80af2c:	003f2806 	br	80abd0 <__umoddi3+0x130>
  80af30:	a4a8983a 	sll	r20,r20,r18
  80af34:	8da6d83a 	srl	r19,r17,r22
  80af38:	8ca2983a 	sll	r17,r17,r18
  80af3c:	a02ed43a 	srli	r23,r20,16
  80af40:	9809883a 	mov	r4,r19
  80af44:	85acd83a 	srl	r22,r16,r22
  80af48:	b80b883a 	mov	r5,r23
  80af4c:	080b1bc0 	call	80b1bc <__umodsi3>
  80af50:	9809883a 	mov	r4,r19
  80af54:	b80b883a 	mov	r5,r23
  80af58:	b46cb03a 	or	r22,r22,r17
  80af5c:	a57fffcc 	andi	r21,r20,65535
  80af60:	1023883a 	mov	r17,r2
  80af64:	080b1580 	call	80b158 <__udivsi3>
  80af68:	a809883a 	mov	r4,r21
  80af6c:	100b883a 	mov	r5,r2
  80af70:	080b2180 	call	80b218 <__mulsi3>
  80af74:	8822943a 	slli	r17,r17,16
  80af78:	b008d43a 	srli	r4,r22,16
  80af7c:	84a6983a 	sll	r19,r16,r18
  80af80:	8908b03a 	or	r4,r17,r4
  80af84:	2080042e 	bgeu	r4,r2,80af98 <__umoddi3+0x4f8>
  80af88:	2509883a 	add	r4,r4,r20
  80af8c:	25000236 	bltu	r4,r20,80af98 <__umoddi3+0x4f8>
  80af90:	2080012e 	bgeu	r4,r2,80af98 <__umoddi3+0x4f8>
  80af94:	2509883a 	add	r4,r4,r20
  80af98:	20a1c83a 	sub	r16,r4,r2
  80af9c:	8009883a 	mov	r4,r16
  80afa0:	b80b883a 	mov	r5,r23
  80afa4:	080b1bc0 	call	80b1bc <__umodsi3>
  80afa8:	8009883a 	mov	r4,r16
  80afac:	1021883a 	mov	r16,r2
  80afb0:	b80b883a 	mov	r5,r23
  80afb4:	8020943a 	slli	r16,r16,16
  80afb8:	080b1580 	call	80b158 <__udivsi3>
  80afbc:	100b883a 	mov	r5,r2
  80afc0:	a809883a 	mov	r4,r21
  80afc4:	b47fffcc 	andi	r17,r22,65535
  80afc8:	080b2180 	call	80b218 <__mulsi3>
  80afcc:	8462b03a 	or	r17,r16,r17
  80afd0:	8880042e 	bgeu	r17,r2,80afe4 <__umoddi3+0x544>
  80afd4:	8d23883a 	add	r17,r17,r20
  80afd8:	8d000236 	bltu	r17,r20,80afe4 <__umoddi3+0x544>
  80afdc:	8880012e 	bgeu	r17,r2,80afe4 <__umoddi3+0x544>
  80afe0:	8d23883a 	add	r17,r17,r20
  80afe4:	88a3c83a 	sub	r17,r17,r2
  80afe8:	003f2f06 	br	80aca8 <__umoddi3+0x208>
  80afec:	813fc72e 	bgeu	r16,r4,80af0c <__umoddi3+0x46c>
  80aff0:	d8800117 	ldw	r2,4(sp)
  80aff4:	20a7c83a 	sub	r19,r4,r2
  80aff8:	24c9803a 	cmpltu	r4,r4,r19
  80affc:	2489883a 	add	r4,r4,r18
  80b000:	1907c83a 	sub	r3,r3,r4
  80b004:	9809883a 	mov	r4,r19
  80b008:	003fc006 	br	80af0c <__umoddi3+0x46c>
  80b00c:	3006d43a 	srli	r3,r6,16
  80b010:	04800404 	movi	r18,16
  80b014:	003ebb06 	br	80ab04 <__umoddi3+0x64>
  80b018:	3007883a 	mov	r3,r6
  80b01c:	003eb906 	br	80ab04 <__umoddi3+0x64>
  80b020:	3808d43a 	srli	r4,r7,16
  80b024:	02000404 	movi	r8,16
  80b028:	003efc06 	br	80ac1c <__umoddi3+0x17c>
  80b02c:	a006d43a 	srli	r3,r20,16
  80b030:	04800404 	movi	r18,16
  80b034:	003f1206 	br	80ac80 <__umoddi3+0x1e0>
  80b038:	a007883a 	mov	r3,r20
  80b03c:	003f1006 	br	80ac80 <__umoddi3+0x1e0>
  80b040:	3809883a 	mov	r4,r7
  80b044:	0011883a 	mov	r8,zero
  80b048:	003ef406 	br	80ac1c <__umoddi3+0x17c>
  80b04c:	180b883a 	mov	r5,r3
  80b050:	003f8706 	br	80ae70 <__umoddi3+0x3d0>
  80b054:	2839883a 	mov	fp,r5
  80b058:	003f6d06 	br	80ae10 <__umoddi3+0x370>
  80b05c:	2509883a 	add	r4,r4,r20
  80b060:	003f2206 	br	80acec <__umoddi3+0x24c>

0080b064 <__divsi3>:
  80b064:	20001a16 	blt	r4,zero,80b0d0 <__divsi3+0x6c>
  80b068:	000f883a 	mov	r7,zero
  80b06c:	2800020e 	bge	r5,zero,80b078 <__divsi3+0x14>
  80b070:	014bc83a 	sub	r5,zero,r5
  80b074:	39c0005c 	xori	r7,r7,1
  80b078:	200d883a 	mov	r6,r4
  80b07c:	00c00044 	movi	r3,1
  80b080:	2900092e 	bgeu	r5,r4,80b0a8 <__divsi3+0x44>
  80b084:	00800804 	movi	r2,32
  80b088:	00c00044 	movi	r3,1
  80b08c:	00000106 	br	80b094 <__divsi3+0x30>
  80b090:	10001226 	beq	r2,zero,80b0dc <__divsi3+0x78>
  80b094:	294b883a 	add	r5,r5,r5
  80b098:	10bfffc4 	addi	r2,r2,-1
  80b09c:	18c7883a 	add	r3,r3,r3
  80b0a0:	293ffb36 	bltu	r5,r4,80b090 <__divsi3+0x2c>
  80b0a4:	18000d26 	beq	r3,zero,80b0dc <__divsi3+0x78>
  80b0a8:	0005883a 	mov	r2,zero
  80b0ac:	31400236 	bltu	r6,r5,80b0b8 <__divsi3+0x54>
  80b0b0:	314dc83a 	sub	r6,r6,r5
  80b0b4:	10c4b03a 	or	r2,r2,r3
  80b0b8:	1806d07a 	srli	r3,r3,1
  80b0bc:	280ad07a 	srli	r5,r5,1
  80b0c0:	183ffa1e 	bne	r3,zero,80b0ac <__divsi3+0x48>
  80b0c4:	38000126 	beq	r7,zero,80b0cc <__divsi3+0x68>
  80b0c8:	0085c83a 	sub	r2,zero,r2
  80b0cc:	f800283a 	ret
  80b0d0:	0109c83a 	sub	r4,zero,r4
  80b0d4:	01c00044 	movi	r7,1
  80b0d8:	003fe406 	br	80b06c <__divsi3+0x8>
  80b0dc:	0005883a 	mov	r2,zero
  80b0e0:	003ff806 	br	80b0c4 <__divsi3+0x60>

0080b0e4 <__modsi3>:
  80b0e4:	20001916 	blt	r4,zero,80b14c <__modsi3+0x68>
  80b0e8:	000f883a 	mov	r7,zero
  80b0ec:	2005883a 	mov	r2,r4
  80b0f0:	2800010e 	bge	r5,zero,80b0f8 <__modsi3+0x14>
  80b0f4:	014bc83a 	sub	r5,zero,r5
  80b0f8:	00c00044 	movi	r3,1
  80b0fc:	2900092e 	bgeu	r5,r4,80b124 <__modsi3+0x40>
  80b100:	01800804 	movi	r6,32
  80b104:	00c00044 	movi	r3,1
  80b108:	00000106 	br	80b110 <__modsi3+0x2c>
  80b10c:	30000d26 	beq	r6,zero,80b144 <__modsi3+0x60>
  80b110:	294b883a 	add	r5,r5,r5
  80b114:	31bfffc4 	addi	r6,r6,-1
  80b118:	18c7883a 	add	r3,r3,r3
  80b11c:	293ffb36 	bltu	r5,r4,80b10c <__modsi3+0x28>
  80b120:	18000826 	beq	r3,zero,80b144 <__modsi3+0x60>
  80b124:	1806d07a 	srli	r3,r3,1
  80b128:	11400136 	bltu	r2,r5,80b130 <__modsi3+0x4c>
  80b12c:	1145c83a 	sub	r2,r2,r5
  80b130:	280ad07a 	srli	r5,r5,1
  80b134:	183ffb1e 	bne	r3,zero,80b124 <__modsi3+0x40>
  80b138:	38000126 	beq	r7,zero,80b140 <__modsi3+0x5c>
  80b13c:	0085c83a 	sub	r2,zero,r2
  80b140:	f800283a 	ret
  80b144:	2005883a 	mov	r2,r4
  80b148:	003ffb06 	br	80b138 <__modsi3+0x54>
  80b14c:	0109c83a 	sub	r4,zero,r4
  80b150:	01c00044 	movi	r7,1
  80b154:	003fe506 	br	80b0ec <__modsi3+0x8>

0080b158 <__udivsi3>:
  80b158:	200d883a 	mov	r6,r4
  80b15c:	2900152e 	bgeu	r5,r4,80b1b4 <__udivsi3+0x5c>
  80b160:	28001416 	blt	r5,zero,80b1b4 <__udivsi3+0x5c>
  80b164:	00800804 	movi	r2,32
  80b168:	00c00044 	movi	r3,1
  80b16c:	00000206 	br	80b178 <__udivsi3+0x20>
  80b170:	10000e26 	beq	r2,zero,80b1ac <__udivsi3+0x54>
  80b174:	28000516 	blt	r5,zero,80b18c <__udivsi3+0x34>
  80b178:	294b883a 	add	r5,r5,r5
  80b17c:	10bfffc4 	addi	r2,r2,-1
  80b180:	18c7883a 	add	r3,r3,r3
  80b184:	293ffa36 	bltu	r5,r4,80b170 <__udivsi3+0x18>
  80b188:	18000826 	beq	r3,zero,80b1ac <__udivsi3+0x54>
  80b18c:	0005883a 	mov	r2,zero
  80b190:	31400236 	bltu	r6,r5,80b19c <__udivsi3+0x44>
  80b194:	314dc83a 	sub	r6,r6,r5
  80b198:	10c4b03a 	or	r2,r2,r3
  80b19c:	1806d07a 	srli	r3,r3,1
  80b1a0:	280ad07a 	srli	r5,r5,1
  80b1a4:	183ffa1e 	bne	r3,zero,80b190 <__udivsi3+0x38>
  80b1a8:	f800283a 	ret
  80b1ac:	0005883a 	mov	r2,zero
  80b1b0:	f800283a 	ret
  80b1b4:	00c00044 	movi	r3,1
  80b1b8:	003ff406 	br	80b18c <__udivsi3+0x34>

0080b1bc <__umodsi3>:
  80b1bc:	2005883a 	mov	r2,r4
  80b1c0:	2900132e 	bgeu	r5,r4,80b210 <__umodsi3+0x54>
  80b1c4:	28001216 	blt	r5,zero,80b210 <__umodsi3+0x54>
  80b1c8:	01800804 	movi	r6,32
  80b1cc:	00c00044 	movi	r3,1
  80b1d0:	00000206 	br	80b1dc <__umodsi3+0x20>
  80b1d4:	30000c26 	beq	r6,zero,80b208 <__umodsi3+0x4c>
  80b1d8:	28000516 	blt	r5,zero,80b1f0 <__umodsi3+0x34>
  80b1dc:	294b883a 	add	r5,r5,r5
  80b1e0:	31bfffc4 	addi	r6,r6,-1
  80b1e4:	18c7883a 	add	r3,r3,r3
  80b1e8:	293ffa36 	bltu	r5,r4,80b1d4 <__umodsi3+0x18>
  80b1ec:	18000626 	beq	r3,zero,80b208 <__umodsi3+0x4c>
  80b1f0:	1806d07a 	srli	r3,r3,1
  80b1f4:	11400136 	bltu	r2,r5,80b1fc <__umodsi3+0x40>
  80b1f8:	1145c83a 	sub	r2,r2,r5
  80b1fc:	280ad07a 	srli	r5,r5,1
  80b200:	183ffb1e 	bne	r3,zero,80b1f0 <__umodsi3+0x34>
  80b204:	f800283a 	ret
  80b208:	2005883a 	mov	r2,r4
  80b20c:	f800283a 	ret
  80b210:	00c00044 	movi	r3,1
  80b214:	003ff606 	br	80b1f0 <__umodsi3+0x34>

0080b218 <__mulsi3>:
  80b218:	0005883a 	mov	r2,zero
  80b21c:	20000726 	beq	r4,zero,80b23c <__mulsi3+0x24>
  80b220:	20c0004c 	andi	r3,r4,1
  80b224:	2008d07a 	srli	r4,r4,1
  80b228:	18000126 	beq	r3,zero,80b230 <__mulsi3+0x18>
  80b22c:	1145883a 	add	r2,r2,r5
  80b230:	294b883a 	add	r5,r5,r5
  80b234:	203ffa1e 	bne	r4,zero,80b220 <__mulsi3+0x8>
  80b238:	f800283a 	ret
  80b23c:	f800283a 	ret

0080b240 <__adddf3>:
  80b240:	02000434 	movhi	r8,16
  80b244:	423fffc4 	addi	r8,r8,-1
  80b248:	2806d53a 	srli	r3,r5,20
  80b24c:	3804d53a 	srli	r2,r7,20
  80b250:	2a14703a 	and	r10,r5,r8
  80b254:	3a12703a 	and	r9,r7,r8
  80b258:	280ad7fa 	srli	r5,r5,31
  80b25c:	501490fa 	slli	r10,r10,3
  80b260:	2018d77a 	srli	r12,r4,29
  80b264:	481290fa 	slli	r9,r9,3
  80b268:	3016d77a 	srli	r11,r6,29
  80b26c:	380ed7fa 	srli	r7,r7,31
  80b270:	defffb04 	addi	sp,sp,-20
  80b274:	dc800215 	stw	r18,8(sp)
  80b278:	dc000015 	stw	r16,0(sp)
  80b27c:	1c81ffcc 	andi	r18,r3,2047
  80b280:	1081ffcc 	andi	r2,r2,2047
  80b284:	dfc00415 	stw	ra,16(sp)
  80b288:	dcc00315 	stw	r19,12(sp)
  80b28c:	dc400115 	stw	r17,4(sp)
  80b290:	201c90fa 	slli	r14,r4,3
  80b294:	301a90fa 	slli	r13,r6,3
  80b298:	2821883a 	mov	r16,r5
  80b29c:	6294b03a 	or	r10,r12,r10
  80b2a0:	5a52b03a 	or	r9,r11,r9
  80b2a4:	9087c83a 	sub	r3,r18,r2
  80b2a8:	29c06126 	beq	r5,r7,80b430 <__adddf3+0x1f0>
  80b2ac:	00c0550e 	bge	zero,r3,80b404 <__adddf3+0x1c4>
  80b2b0:	10007326 	beq	r2,zero,80b480 <__adddf3+0x240>
  80b2b4:	9081ffd8 	cmpnei	r2,r18,2047
  80b2b8:	1000bd26 	beq	r2,zero,80b5b0 <__adddf3+0x370>
  80b2bc:	4a402034 	orhi	r9,r9,128
  80b2c0:	18800e48 	cmpgei	r2,r3,57
  80b2c4:	1000ef1e 	bne	r2,zero,80b684 <__adddf3+0x444>
  80b2c8:	18800808 	cmpgei	r2,r3,32
  80b2cc:	1001321e 	bne	r2,zero,80b798 <__adddf3+0x558>
  80b2d0:	00800804 	movi	r2,32
  80b2d4:	10c5c83a 	sub	r2,r2,r3
  80b2d8:	68c8d83a 	srl	r4,r13,r3
  80b2dc:	48a2983a 	sll	r17,r9,r2
  80b2e0:	689a983a 	sll	r13,r13,r2
  80b2e4:	48c6d83a 	srl	r3,r9,r3
  80b2e8:	8922b03a 	or	r17,r17,r4
  80b2ec:	681ac03a 	cmpne	r13,r13,zero
  80b2f0:	8b62b03a 	or	r17,r17,r13
  80b2f4:	50d5c83a 	sub	r10,r10,r3
  80b2f8:	7463c83a 	sub	r17,r14,r17
  80b2fc:	7451803a 	cmpltu	r8,r14,r17
  80b300:	5211c83a 	sub	r8,r10,r8
  80b304:	4080202c 	andhi	r2,r8,128
  80b308:	10008d26 	beq	r2,zero,80b540 <__adddf3+0x300>
  80b30c:	02402034 	movhi	r9,128
  80b310:	4a7fffc4 	addi	r9,r9,-1
  80b314:	4266703a 	and	r19,r8,r9
  80b318:	9800b326 	beq	r19,zero,80b5e8 <__adddf3+0x3a8>
  80b31c:	9809883a 	mov	r4,r19
  80b320:	080d92c0 	call	80d92c <__clzsi2>
  80b324:	10fffe04 	addi	r3,r2,-8
  80b328:	02000804 	movi	r8,32
  80b32c:	40d1c83a 	sub	r8,r8,r3
  80b330:	8a10d83a 	srl	r8,r17,r8
  80b334:	98d2983a 	sll	r9,r19,r3
  80b338:	88e2983a 	sll	r17,r17,r3
  80b33c:	4250b03a 	or	r8,r8,r9
  80b340:	1c80b216 	blt	r3,r18,80b60c <__adddf3+0x3cc>
  80b344:	1c87c83a 	sub	r3,r3,r18
  80b348:	19000044 	addi	r4,r3,1
  80b34c:	20800808 	cmpgei	r2,r4,32
  80b350:	10006f1e 	bne	r2,zero,80b510 <__adddf3+0x2d0>
  80b354:	00800804 	movi	r2,32
  80b358:	1105c83a 	sub	r2,r2,r4
  80b35c:	8906d83a 	srl	r3,r17,r4
  80b360:	88a2983a 	sll	r17,r17,r2
  80b364:	4084983a 	sll	r2,r8,r2
  80b368:	4110d83a 	srl	r8,r8,r4
  80b36c:	8822c03a 	cmpne	r17,r17,zero
  80b370:	10c4b03a 	or	r2,r2,r3
  80b374:	1462b03a 	or	r17,r2,r17
  80b378:	0025883a 	mov	r18,zero
  80b37c:	888001cc 	andi	r2,r17,7
  80b380:	10000726 	beq	r2,zero,80b3a0 <__adddf3+0x160>
  80b384:	888003cc 	andi	r2,r17,15
  80b388:	10800120 	cmpeqi	r2,r2,4
  80b38c:	1000041e 	bne	r2,zero,80b3a0 <__adddf3+0x160>
  80b390:	88c00104 	addi	r3,r17,4
  80b394:	1c63803a 	cmpltu	r17,r3,r17
  80b398:	4451883a 	add	r8,r8,r17
  80b39c:	1823883a 	mov	r17,r3
  80b3a0:	4080202c 	andhi	r2,r8,128
  80b3a4:	10006826 	beq	r2,zero,80b548 <__adddf3+0x308>
  80b3a8:	90c00044 	addi	r3,r18,1
  80b3ac:	1881ffe0 	cmpeqi	r2,r3,2047
  80b3b0:	18c1ffcc 	andi	r3,r3,2047
  80b3b4:	10007a1e 	bne	r2,zero,80b5a0 <__adddf3+0x360>
  80b3b8:	00bfe034 	movhi	r2,65408
  80b3bc:	10bfffc4 	addi	r2,r2,-1
  80b3c0:	4090703a 	and	r8,r8,r2
  80b3c4:	4004977a 	slli	r2,r8,29
  80b3c8:	4010927a 	slli	r8,r8,9
  80b3cc:	8822d0fa 	srli	r17,r17,3
  80b3d0:	4010d33a 	srli	r8,r8,12
  80b3d4:	1444b03a 	or	r2,r2,r17
  80b3d8:	1806953a 	slli	r3,r3,20
  80b3dc:	802097fa 	slli	r16,r16,31
  80b3e0:	1a06b03a 	or	r3,r3,r8
  80b3e4:	1c06b03a 	or	r3,r3,r16
  80b3e8:	dfc00417 	ldw	ra,16(sp)
  80b3ec:	dcc00317 	ldw	r19,12(sp)
  80b3f0:	dc800217 	ldw	r18,8(sp)
  80b3f4:	dc400117 	ldw	r17,4(sp)
  80b3f8:	dc000017 	ldw	r16,0(sp)
  80b3fc:	dec00504 	addi	sp,sp,20
  80b400:	f800283a 	ret
  80b404:	18002626 	beq	r3,zero,80b4a0 <__adddf3+0x260>
  80b408:	1487c83a 	sub	r3,r2,r18
  80b40c:	9000ba1e 	bne	r18,zero,80b6f8 <__adddf3+0x4b8>
  80b410:	5388b03a 	or	r4,r10,r14
  80b414:	20011826 	beq	r4,zero,80b878 <__adddf3+0x638>
  80b418:	193fffc4 	addi	r4,r3,-1
  80b41c:	20015726 	beq	r4,zero,80b97c <__adddf3+0x73c>
  80b420:	18c1ffd8 	cmpnei	r3,r3,2047
  80b424:	18013026 	beq	r3,zero,80b8e8 <__adddf3+0x6a8>
  80b428:	2007883a 	mov	r3,r4
  80b42c:	0000b506 	br	80b704 <__adddf3+0x4c4>
  80b430:	00c07b0e 	bge	zero,r3,80b620 <__adddf3+0x3e0>
  80b434:	10002e26 	beq	r2,zero,80b4f0 <__adddf3+0x2b0>
  80b438:	9081ffd8 	cmpnei	r2,r18,2047
  80b43c:	10005c26 	beq	r2,zero,80b5b0 <__adddf3+0x370>
  80b440:	4a402034 	orhi	r9,r9,128
  80b444:	18800e48 	cmpgei	r2,r3,57
  80b448:	10004b1e 	bne	r2,zero,80b578 <__adddf3+0x338>
  80b44c:	18800808 	cmpgei	r2,r3,32
  80b450:	1000ec26 	beq	r2,zero,80b804 <__adddf3+0x5c4>
  80b454:	1c7ff804 	addi	r17,r3,-32
  80b458:	19000820 	cmpeqi	r4,r3,32
  80b45c:	4c44d83a 	srl	r2,r9,r17
  80b460:	2000041e 	bne	r4,zero,80b474 <__adddf3+0x234>
  80b464:	01001004 	movi	r4,64
  80b468:	20c7c83a 	sub	r3,r4,r3
  80b46c:	48d2983a 	sll	r9,r9,r3
  80b470:	6a5ab03a 	or	r13,r13,r9
  80b474:	6822c03a 	cmpne	r17,r13,zero
  80b478:	88a2b03a 	or	r17,r17,r2
  80b47c:	00004006 	br	80b580 <__adddf3+0x340>
  80b480:	4b44b03a 	or	r2,r9,r13
  80b484:	10008226 	beq	r2,zero,80b690 <__adddf3+0x450>
  80b488:	18bfffc4 	addi	r2,r3,-1
  80b48c:	10011026 	beq	r2,zero,80b8d0 <__adddf3+0x690>
  80b490:	18c1ffd8 	cmpnei	r3,r3,2047
  80b494:	18004626 	beq	r3,zero,80b5b0 <__adddf3+0x370>
  80b498:	1007883a 	mov	r3,r2
  80b49c:	003f8806 	br	80b2c0 <__adddf3+0x80>
  80b4a0:	90800044 	addi	r2,r18,1
  80b4a4:	1081ff8c 	andi	r2,r2,2046
  80b4a8:	1000a51e 	bne	r2,zero,80b740 <__adddf3+0x500>
  80b4ac:	538ab03a 	or	r5,r10,r14
  80b4b0:	4b44b03a 	or	r2,r9,r13
  80b4b4:	9000f81e 	bne	r18,zero,80b898 <__adddf3+0x658>
  80b4b8:	28013726 	beq	r5,zero,80b998 <__adddf3+0x758>
  80b4bc:	10011226 	beq	r2,zero,80b908 <__adddf3+0x6c8>
  80b4c0:	7363c83a 	sub	r17,r14,r13
  80b4c4:	7445803a 	cmpltu	r2,r14,r17
  80b4c8:	5251c83a 	sub	r8,r10,r9
  80b4cc:	4091c83a 	sub	r8,r8,r2
  80b4d0:	4080202c 	andhi	r2,r8,128
  80b4d4:	10018f26 	beq	r2,zero,80bb14 <__adddf3+0x8d4>
  80b4d8:	6ba3c83a 	sub	r17,r13,r14
  80b4dc:	4a95c83a 	sub	r10,r9,r10
  80b4e0:	6c51803a 	cmpltu	r8,r13,r17
  80b4e4:	5211c83a 	sub	r8,r10,r8
  80b4e8:	3821883a 	mov	r16,r7
  80b4ec:	003fa306 	br	80b37c <__adddf3+0x13c>
  80b4f0:	4b44b03a 	or	r2,r9,r13
  80b4f4:	10006626 	beq	r2,zero,80b690 <__adddf3+0x450>
  80b4f8:	18bfffc4 	addi	r2,r3,-1
  80b4fc:	1000ec26 	beq	r2,zero,80b8b0 <__adddf3+0x670>
  80b500:	18c1ffd8 	cmpnei	r3,r3,2047
  80b504:	18012d26 	beq	r3,zero,80b9bc <__adddf3+0x77c>
  80b508:	1007883a 	mov	r3,r2
  80b50c:	003fcd06 	br	80b444 <__adddf3+0x204>
  80b510:	18fff844 	addi	r3,r3,-31
  80b514:	20800820 	cmpeqi	r2,r4,32
  80b518:	40c6d83a 	srl	r3,r8,r3
  80b51c:	1000041e 	bne	r2,zero,80b530 <__adddf3+0x2f0>
  80b520:	00801004 	movi	r2,64
  80b524:	1109c83a 	sub	r4,r2,r4
  80b528:	4110983a 	sll	r8,r8,r4
  80b52c:	8a22b03a 	or	r17,r17,r8
  80b530:	8822c03a 	cmpne	r17,r17,zero
  80b534:	88e2b03a 	or	r17,r17,r3
  80b538:	0011883a 	mov	r8,zero
  80b53c:	0025883a 	mov	r18,zero
  80b540:	888001cc 	andi	r2,r17,7
  80b544:	103f8f1e 	bne	r2,zero,80b384 <__adddf3+0x144>
  80b548:	8822d0fa 	srli	r17,r17,3
  80b54c:	4004977a 	slli	r2,r8,29
  80b550:	4014d0fa 	srli	r10,r8,3
  80b554:	9007883a 	mov	r3,r18
  80b558:	8884b03a 	or	r2,r17,r2
  80b55c:	1901ffe0 	cmpeqi	r4,r3,2047
  80b560:	2000191e 	bne	r4,zero,80b5c8 <__adddf3+0x388>
  80b564:	02000434 	movhi	r8,16
  80b568:	423fffc4 	addi	r8,r8,-1
  80b56c:	5210703a 	and	r8,r10,r8
  80b570:	18c1ffcc 	andi	r3,r3,2047
  80b574:	003f9806 	br	80b3d8 <__adddf3+0x198>
  80b578:	4b62b03a 	or	r17,r9,r13
  80b57c:	8822c03a 	cmpne	r17,r17,zero
  80b580:	8ba3883a 	add	r17,r17,r14
  80b584:	8b91803a 	cmpltu	r8,r17,r14
  80b588:	4291883a 	add	r8,r8,r10
  80b58c:	4080202c 	andhi	r2,r8,128
  80b590:	103feb26 	beq	r2,zero,80b540 <__adddf3+0x300>
  80b594:	94800044 	addi	r18,r18,1
  80b598:	9081ffe0 	cmpeqi	r2,r18,2047
  80b59c:	10007426 	beq	r2,zero,80b770 <__adddf3+0x530>
  80b5a0:	00c1ffc4 	movi	r3,2047
  80b5a4:	0011883a 	mov	r8,zero
  80b5a8:	0005883a 	mov	r2,zero
  80b5ac:	003f8a06 	br	80b3d8 <__adddf3+0x198>
  80b5b0:	500a977a 	slli	r5,r10,29
  80b5b4:	00c80034 	movhi	r3,8192
  80b5b8:	18ffffc4 	addi	r3,r3,-1
  80b5bc:	5014d0fa 	srli	r10,r10,3
  80b5c0:	20c4703a 	and	r2,r4,r3
  80b5c4:	1144b03a 	or	r2,r2,r5
  80b5c8:	1286b03a 	or	r3,r2,r10
  80b5cc:	18015426 	beq	r3,zero,80bb20 <__adddf3+0x8e0>
  80b5d0:	00c00434 	movhi	r3,16
  80b5d4:	18ffffc4 	addi	r3,r3,-1
  80b5d8:	52000234 	orhi	r8,r10,8
  80b5dc:	40d0703a 	and	r8,r8,r3
  80b5e0:	00c1ffc4 	movi	r3,2047
  80b5e4:	003f7c06 	br	80b3d8 <__adddf3+0x198>
  80b5e8:	8809883a 	mov	r4,r17
  80b5ec:	080d92c0 	call	80d92c <__clzsi2>
  80b5f0:	10c00604 	addi	r3,r2,24
  80b5f4:	19000808 	cmpgei	r4,r3,32
  80b5f8:	203f4b26 	beq	r4,zero,80b328 <__adddf3+0xe8>
  80b5fc:	123ffe04 	addi	r8,r2,-8
  80b600:	8a10983a 	sll	r8,r17,r8
  80b604:	0023883a 	mov	r17,zero
  80b608:	1cbf4e0e 	bge	r3,r18,80b344 <__adddf3+0x104>
  80b60c:	00bfe034 	movhi	r2,65408
  80b610:	10bfffc4 	addi	r2,r2,-1
  80b614:	90e5c83a 	sub	r18,r18,r3
  80b618:	4090703a 	and	r8,r8,r2
  80b61c:	003f5706 	br	80b37c <__adddf3+0x13c>
  80b620:	18002226 	beq	r3,zero,80b6ac <__adddf3+0x46c>
  80b624:	1487c83a 	sub	r3,r2,r18
  80b628:	90006e26 	beq	r18,zero,80b7e4 <__adddf3+0x5a4>
  80b62c:	1101ffd8 	cmpnei	r4,r2,2047
  80b630:	2000e926 	beq	r4,zero,80b9d8 <__adddf3+0x798>
  80b634:	52802034 	orhi	r10,r10,128
  80b638:	19000e48 	cmpgei	r4,r3,57
  80b63c:	2000b91e 	bne	r4,zero,80b924 <__adddf3+0x6e4>
  80b640:	19000808 	cmpgei	r4,r3,32
  80b644:	2001101e 	bne	r4,zero,80ba88 <__adddf3+0x848>
  80b648:	01000804 	movi	r4,32
  80b64c:	20c9c83a 	sub	r4,r4,r3
  80b650:	5122983a 	sll	r17,r10,r4
  80b654:	70cad83a 	srl	r5,r14,r3
  80b658:	7108983a 	sll	r4,r14,r4
  80b65c:	50d4d83a 	srl	r10,r10,r3
  80b660:	8962b03a 	or	r17,r17,r5
  80b664:	2008c03a 	cmpne	r4,r4,zero
  80b668:	8922b03a 	or	r17,r17,r4
  80b66c:	4a93883a 	add	r9,r9,r10
  80b670:	8b63883a 	add	r17,r17,r13
  80b674:	8b51803a 	cmpltu	r8,r17,r13
  80b678:	4251883a 	add	r8,r8,r9
  80b67c:	1025883a 	mov	r18,r2
  80b680:	003fc206 	br	80b58c <__adddf3+0x34c>
  80b684:	4b62b03a 	or	r17,r9,r13
  80b688:	8822c03a 	cmpne	r17,r17,zero
  80b68c:	003f1a06 	br	80b2f8 <__adddf3+0xb8>
  80b690:	500c977a 	slli	r6,r10,29
  80b694:	01480034 	movhi	r5,8192
  80b698:	297fffc4 	addi	r5,r5,-1
  80b69c:	2144703a 	and	r2,r4,r5
  80b6a0:	5014d0fa 	srli	r10,r10,3
  80b6a4:	1184b03a 	or	r2,r2,r6
  80b6a8:	003fac06 	br	80b55c <__adddf3+0x31c>
  80b6ac:	90800044 	addi	r2,r18,1
  80b6b0:	1141ff8c 	andi	r5,r2,2046
  80b6b4:	28005e1e 	bne	r5,zero,80b830 <__adddf3+0x5f0>
  80b6b8:	5384b03a 	or	r2,r10,r14
  80b6bc:	9000a71e 	bne	r18,zero,80b95c <__adddf3+0x71c>
  80b6c0:	1000e526 	beq	r2,zero,80ba58 <__adddf3+0x818>
  80b6c4:	4b44b03a 	or	r2,r9,r13
  80b6c8:	10008f26 	beq	r2,zero,80b908 <__adddf3+0x6c8>
  80b6cc:	7363883a 	add	r17,r14,r13
  80b6d0:	5255883a 	add	r10,r10,r9
  80b6d4:	8b91803a 	cmpltu	r8,r17,r14
  80b6d8:	5211883a 	add	r8,r10,r8
  80b6dc:	4080202c 	andhi	r2,r8,128
  80b6e0:	103f9726 	beq	r2,zero,80b540 <__adddf3+0x300>
  80b6e4:	00bfe034 	movhi	r2,65408
  80b6e8:	10bfffc4 	addi	r2,r2,-1
  80b6ec:	4090703a 	and	r8,r8,r2
  80b6f0:	04800044 	movi	r18,1
  80b6f4:	003f9206 	br	80b540 <__adddf3+0x300>
  80b6f8:	1101ffd8 	cmpnei	r4,r2,2047
  80b6fc:	20007a26 	beq	r4,zero,80b8e8 <__adddf3+0x6a8>
  80b700:	52802034 	orhi	r10,r10,128
  80b704:	19000e48 	cmpgei	r4,r3,57
  80b708:	20002e1e 	bne	r4,zero,80b7c4 <__adddf3+0x584>
  80b70c:	19000808 	cmpgei	r4,r3,32
  80b710:	2000871e 	bne	r4,zero,80b930 <__adddf3+0x6f0>
  80b714:	01000804 	movi	r4,32
  80b718:	20c9c83a 	sub	r4,r4,r3
  80b71c:	5122983a 	sll	r17,r10,r4
  80b720:	70cad83a 	srl	r5,r14,r3
  80b724:	711c983a 	sll	r14,r14,r4
  80b728:	50d4d83a 	srl	r10,r10,r3
  80b72c:	8962b03a 	or	r17,r17,r5
  80b730:	701cc03a 	cmpne	r14,r14,zero
  80b734:	8ba2b03a 	or	r17,r17,r14
  80b738:	4a93c83a 	sub	r9,r9,r10
  80b73c:	00002306 	br	80b7cc <__adddf3+0x58c>
  80b740:	7363c83a 	sub	r17,r14,r13
  80b744:	5267c83a 	sub	r19,r10,r9
  80b748:	7451803a 	cmpltu	r8,r14,r17
  80b74c:	9a27c83a 	sub	r19,r19,r8
  80b750:	9880202c 	andhi	r2,r19,128
  80b754:	1000421e 	bne	r2,zero,80b860 <__adddf3+0x620>
  80b758:	8cc4b03a 	or	r2,r17,r19
  80b75c:	103eee1e 	bne	r2,zero,80b318 <__adddf3+0xd8>
  80b760:	0015883a 	mov	r10,zero
  80b764:	0021883a 	mov	r16,zero
  80b768:	003f7e06 	br	80b564 <__adddf3+0x324>
  80b76c:	04800084 	movi	r18,2
  80b770:	00bfe034 	movhi	r2,65408
  80b774:	10bfffc4 	addi	r2,r2,-1
  80b778:	8806d07a 	srli	r3,r17,1
  80b77c:	4090703a 	and	r8,r8,r2
  80b780:	400497fa 	slli	r2,r8,31
  80b784:	8c40004c 	andi	r17,r17,1
  80b788:	1c62b03a 	or	r17,r3,r17
  80b78c:	4010d07a 	srli	r8,r8,1
  80b790:	1462b03a 	or	r17,r2,r17
  80b794:	003ef906 	br	80b37c <__adddf3+0x13c>
  80b798:	1c7ff804 	addi	r17,r3,-32
  80b79c:	19000820 	cmpeqi	r4,r3,32
  80b7a0:	4c44d83a 	srl	r2,r9,r17
  80b7a4:	2000041e 	bne	r4,zero,80b7b8 <__adddf3+0x578>
  80b7a8:	01001004 	movi	r4,64
  80b7ac:	20c7c83a 	sub	r3,r4,r3
  80b7b0:	48d2983a 	sll	r9,r9,r3
  80b7b4:	6a5ab03a 	or	r13,r13,r9
  80b7b8:	6822c03a 	cmpne	r17,r13,zero
  80b7bc:	88a2b03a 	or	r17,r17,r2
  80b7c0:	003ecd06 	br	80b2f8 <__adddf3+0xb8>
  80b7c4:	5394b03a 	or	r10,r10,r14
  80b7c8:	5022c03a 	cmpne	r17,r10,zero
  80b7cc:	6c63c83a 	sub	r17,r13,r17
  80b7d0:	6c51803a 	cmpltu	r8,r13,r17
  80b7d4:	4a11c83a 	sub	r8,r9,r8
  80b7d8:	3821883a 	mov	r16,r7
  80b7dc:	1025883a 	mov	r18,r2
  80b7e0:	003ec806 	br	80b304 <__adddf3+0xc4>
  80b7e4:	5388b03a 	or	r4,r10,r14
  80b7e8:	20008226 	beq	r4,zero,80b9f4 <__adddf3+0x7b4>
  80b7ec:	193fffc4 	addi	r4,r3,-1
  80b7f0:	2000b026 	beq	r4,zero,80bab4 <__adddf3+0x874>
  80b7f4:	18c1ffd8 	cmpnei	r3,r3,2047
  80b7f8:	18007726 	beq	r3,zero,80b9d8 <__adddf3+0x798>
  80b7fc:	2007883a 	mov	r3,r4
  80b800:	003f8d06 	br	80b638 <__adddf3+0x3f8>
  80b804:	00800804 	movi	r2,32
  80b808:	10c5c83a 	sub	r2,r2,r3
  80b80c:	68c8d83a 	srl	r4,r13,r3
  80b810:	48a2983a 	sll	r17,r9,r2
  80b814:	689a983a 	sll	r13,r13,r2
  80b818:	48c6d83a 	srl	r3,r9,r3
  80b81c:	8922b03a 	or	r17,r17,r4
  80b820:	681ac03a 	cmpne	r13,r13,zero
  80b824:	8b62b03a 	or	r17,r17,r13
  80b828:	50d5883a 	add	r10,r10,r3
  80b82c:	003f5406 	br	80b580 <__adddf3+0x340>
  80b830:	10c1ffe0 	cmpeqi	r3,r2,2047
  80b834:	183f5a1e 	bne	r3,zero,80b5a0 <__adddf3+0x360>
  80b838:	7351883a 	add	r8,r14,r13
  80b83c:	4387803a 	cmpltu	r3,r8,r14
  80b840:	5255883a 	add	r10,r10,r9
  80b844:	50c7883a 	add	r3,r10,r3
  80b848:	401ad07a 	srli	r13,r8,1
  80b84c:	182297fa 	slli	r17,r3,31
  80b850:	1810d07a 	srli	r8,r3,1
  80b854:	1025883a 	mov	r18,r2
  80b858:	8b62b03a 	or	r17,r17,r13
  80b85c:	003f3806 	br	80b540 <__adddf3+0x300>
  80b860:	6ba3c83a 	sub	r17,r13,r14
  80b864:	4a93c83a 	sub	r9,r9,r10
  80b868:	6c51803a 	cmpltu	r8,r13,r17
  80b86c:	4a27c83a 	sub	r19,r9,r8
  80b870:	3821883a 	mov	r16,r7
  80b874:	003ea806 	br	80b318 <__adddf3+0xd8>
  80b878:	480a977a 	slli	r5,r9,29
  80b87c:	01080034 	movhi	r4,8192
  80b880:	213fffc4 	addi	r4,r4,-1
  80b884:	3104703a 	and	r2,r6,r4
  80b888:	4814d0fa 	srli	r10,r9,3
  80b88c:	1144b03a 	or	r2,r2,r5
  80b890:	3821883a 	mov	r16,r7
  80b894:	003f3106 	br	80b55c <__adddf3+0x31c>
  80b898:	28005d1e 	bne	r5,zero,80ba10 <__adddf3+0x7d0>
  80b89c:	1000121e 	bne	r2,zero,80b8e8 <__adddf3+0x6a8>
  80b8a0:	0021883a 	mov	r16,zero
  80b8a4:	4015883a 	mov	r10,r8
  80b8a8:	00bfffc4 	movi	r2,-1
  80b8ac:	003f4806 	br	80b5d0 <__adddf3+0x390>
  80b8b0:	7363883a 	add	r17,r14,r13
  80b8b4:	5255883a 	add	r10,r10,r9
  80b8b8:	8b91803a 	cmpltu	r8,r17,r14
  80b8bc:	5211883a 	add	r8,r10,r8
  80b8c0:	4080202c 	andhi	r2,r8,128
  80b8c4:	103fa91e 	bne	r2,zero,80b76c <__adddf3+0x52c>
  80b8c8:	04800044 	movi	r18,1
  80b8cc:	003f1c06 	br	80b540 <__adddf3+0x300>
  80b8d0:	7363c83a 	sub	r17,r14,r13
  80b8d4:	5255c83a 	sub	r10,r10,r9
  80b8d8:	7451803a 	cmpltu	r8,r14,r17
  80b8dc:	5211c83a 	sub	r8,r10,r8
  80b8e0:	04800044 	movi	r18,1
  80b8e4:	003e8706 	br	80b304 <__adddf3+0xc4>
  80b8e8:	4806977a 	slli	r3,r9,29
  80b8ec:	00880034 	movhi	r2,8192
  80b8f0:	10bfffc4 	addi	r2,r2,-1
  80b8f4:	3084703a 	and	r2,r6,r2
  80b8f8:	4814d0fa 	srli	r10,r9,3
  80b8fc:	10c4b03a 	or	r2,r2,r3
  80b900:	3821883a 	mov	r16,r7
  80b904:	003f3006 	br	80b5c8 <__adddf3+0x388>
  80b908:	500a977a 	slli	r5,r10,29
  80b90c:	00880034 	movhi	r2,8192
  80b910:	10bfffc4 	addi	r2,r2,-1
  80b914:	2084703a 	and	r2,r4,r2
  80b918:	5014d0fa 	srli	r10,r10,3
  80b91c:	1144b03a 	or	r2,r2,r5
  80b920:	003f1006 	br	80b564 <__adddf3+0x324>
  80b924:	5394b03a 	or	r10,r10,r14
  80b928:	5022c03a 	cmpne	r17,r10,zero
  80b92c:	003f5006 	br	80b670 <__adddf3+0x430>
  80b930:	1c7ff804 	addi	r17,r3,-32
  80b934:	19400820 	cmpeqi	r5,r3,32
  80b938:	5448d83a 	srl	r4,r10,r17
  80b93c:	2800041e 	bne	r5,zero,80b950 <__adddf3+0x710>
  80b940:	01401004 	movi	r5,64
  80b944:	28c7c83a 	sub	r3,r5,r3
  80b948:	50d4983a 	sll	r10,r10,r3
  80b94c:	729cb03a 	or	r14,r14,r10
  80b950:	7022c03a 	cmpne	r17,r14,zero
  80b954:	8922b03a 	or	r17,r17,r4
  80b958:	003f9c06 	br	80b7cc <__adddf3+0x58c>
  80b95c:	10005a1e 	bne	r2,zero,80bac8 <__adddf3+0x888>
  80b960:	4804977a 	slli	r2,r9,29
  80b964:	00c80034 	movhi	r3,8192
  80b968:	18ffffc4 	addi	r3,r3,-1
  80b96c:	30cc703a 	and	r6,r6,r3
  80b970:	4814d0fa 	srli	r10,r9,3
  80b974:	1184b03a 	or	r2,r2,r6
  80b978:	003f1306 	br	80b5c8 <__adddf3+0x388>
  80b97c:	6ba3c83a 	sub	r17,r13,r14
  80b980:	4a95c83a 	sub	r10,r9,r10
  80b984:	6c51803a 	cmpltu	r8,r13,r17
  80b988:	5211c83a 	sub	r8,r10,r8
  80b98c:	3821883a 	mov	r16,r7
  80b990:	04800044 	movi	r18,1
  80b994:	003e5b06 	br	80b304 <__adddf3+0xc4>
  80b998:	103f7126 	beq	r2,zero,80b760 <__adddf3+0x520>
  80b99c:	4808977a 	slli	r4,r9,29
  80b9a0:	00880034 	movhi	r2,8192
  80b9a4:	10bfffc4 	addi	r2,r2,-1
  80b9a8:	3084703a 	and	r2,r6,r2
  80b9ac:	4814d0fa 	srli	r10,r9,3
  80b9b0:	1104b03a 	or	r2,r2,r4
  80b9b4:	3821883a 	mov	r16,r7
  80b9b8:	003eea06 	br	80b564 <__adddf3+0x324>
  80b9bc:	5006977a 	slli	r3,r10,29
  80b9c0:	00880034 	movhi	r2,8192
  80b9c4:	10bfffc4 	addi	r2,r2,-1
  80b9c8:	2084703a 	and	r2,r4,r2
  80b9cc:	5014d0fa 	srli	r10,r10,3
  80b9d0:	10c4b03a 	or	r2,r2,r3
  80b9d4:	003efc06 	br	80b5c8 <__adddf3+0x388>
  80b9d8:	4806977a 	slli	r3,r9,29
  80b9dc:	00880034 	movhi	r2,8192
  80b9e0:	10bfffc4 	addi	r2,r2,-1
  80b9e4:	3084703a 	and	r2,r6,r2
  80b9e8:	4814d0fa 	srli	r10,r9,3
  80b9ec:	10c4b03a 	or	r2,r2,r3
  80b9f0:	003ef506 	br	80b5c8 <__adddf3+0x388>
  80b9f4:	4808977a 	slli	r4,r9,29
  80b9f8:	00880034 	movhi	r2,8192
  80b9fc:	10bfffc4 	addi	r2,r2,-1
  80ba00:	3084703a 	and	r2,r6,r2
  80ba04:	4814d0fa 	srli	r10,r9,3
  80ba08:	1104b03a 	or	r2,r2,r4
  80ba0c:	003ed306 	br	80b55c <__adddf3+0x31c>
  80ba10:	500a977a 	slli	r5,r10,29
  80ba14:	5014d0fa 	srli	r10,r10,3
  80ba18:	10001626 	beq	r2,zero,80ba74 <__adddf3+0x834>
  80ba1c:	00c80034 	movhi	r3,8192
  80ba20:	18ffffc4 	addi	r3,r3,-1
  80ba24:	20c4703a 	and	r2,r4,r3
  80ba28:	5100022c 	andhi	r4,r10,8
  80ba2c:	1144b03a 	or	r2,r2,r5
  80ba30:	203ee526 	beq	r4,zero,80b5c8 <__adddf3+0x388>
  80ba34:	4808d0fa 	srli	r4,r9,3
  80ba38:	2140022c 	andhi	r5,r4,8
  80ba3c:	283ee21e 	bne	r5,zero,80b5c8 <__adddf3+0x388>
  80ba40:	4812977a 	slli	r9,r9,29
  80ba44:	30c4703a 	and	r2,r6,r3
  80ba48:	3821883a 	mov	r16,r7
  80ba4c:	1244b03a 	or	r2,r2,r9
  80ba50:	2015883a 	mov	r10,r4
  80ba54:	003edc06 	br	80b5c8 <__adddf3+0x388>
  80ba58:	4804977a 	slli	r2,r9,29
  80ba5c:	01080034 	movhi	r4,8192
  80ba60:	213fffc4 	addi	r4,r4,-1
  80ba64:	310c703a 	and	r6,r6,r4
  80ba68:	4814d0fa 	srli	r10,r9,3
  80ba6c:	1184b03a 	or	r2,r2,r6
  80ba70:	003ebc06 	br	80b564 <__adddf3+0x324>
  80ba74:	00880034 	movhi	r2,8192
  80ba78:	10bfffc4 	addi	r2,r2,-1
  80ba7c:	2084703a 	and	r2,r4,r2
  80ba80:	1144b03a 	or	r2,r2,r5
  80ba84:	003ed006 	br	80b5c8 <__adddf3+0x388>
  80ba88:	193ff804 	addi	r4,r3,-32
  80ba8c:	19400820 	cmpeqi	r5,r3,32
  80ba90:	5108d83a 	srl	r4,r10,r4
  80ba94:	2800041e 	bne	r5,zero,80baa8 <__adddf3+0x868>
  80ba98:	01401004 	movi	r5,64
  80ba9c:	28c7c83a 	sub	r3,r5,r3
  80baa0:	50d4983a 	sll	r10,r10,r3
  80baa4:	729cb03a 	or	r14,r14,r10
  80baa8:	7022c03a 	cmpne	r17,r14,zero
  80baac:	8922b03a 	or	r17,r17,r4
  80bab0:	003eef06 	br	80b670 <__adddf3+0x430>
  80bab4:	7363883a 	add	r17,r14,r13
  80bab8:	5255883a 	add	r10,r10,r9
  80babc:	8b51803a 	cmpltu	r8,r17,r13
  80bac0:	5211883a 	add	r8,r10,r8
  80bac4:	003f7e06 	br	80b8c0 <__adddf3+0x680>
  80bac8:	4b50b03a 	or	r8,r9,r13
  80bacc:	500a977a 	slli	r5,r10,29
  80bad0:	5014d0fa 	srli	r10,r10,3
  80bad4:	403fe726 	beq	r8,zero,80ba74 <__adddf3+0x834>
  80bad8:	00c80034 	movhi	r3,8192
  80badc:	18ffffc4 	addi	r3,r3,-1
  80bae0:	20c4703a 	and	r2,r4,r3
  80bae4:	5100022c 	andhi	r4,r10,8
  80bae8:	1144b03a 	or	r2,r2,r5
  80baec:	203eb626 	beq	r4,zero,80b5c8 <__adddf3+0x388>
  80baf0:	4808d0fa 	srli	r4,r9,3
  80baf4:	2140022c 	andhi	r5,r4,8
  80baf8:	283eb31e 	bne	r5,zero,80b5c8 <__adddf3+0x388>
  80bafc:	4804977a 	slli	r2,r9,29
  80bb00:	30cc703a 	and	r6,r6,r3
  80bb04:	3821883a 	mov	r16,r7
  80bb08:	3084b03a 	or	r2,r6,r2
  80bb0c:	2015883a 	mov	r10,r4
  80bb10:	003ead06 	br	80b5c8 <__adddf3+0x388>
  80bb14:	8a04b03a 	or	r2,r17,r8
  80bb18:	103f1126 	beq	r2,zero,80b760 <__adddf3+0x520>
  80bb1c:	003e8806 	br	80b540 <__adddf3+0x300>
  80bb20:	0005883a 	mov	r2,zero
  80bb24:	00c1ffc4 	movi	r3,2047
  80bb28:	0011883a 	mov	r8,zero
  80bb2c:	003e2a06 	br	80b3d8 <__adddf3+0x198>

0080bb30 <__divdf3>:
  80bb30:	2810d53a 	srli	r8,r5,20
  80bb34:	defff004 	addi	sp,sp,-64
  80bb38:	dc000615 	stw	r16,24(sp)
  80bb3c:	04000434 	movhi	r16,16
  80bb40:	df000e15 	stw	fp,56(sp)
  80bb44:	ddc00d15 	stw	r23,52(sp)
  80bb48:	dd800c15 	stw	r22,48(sp)
  80bb4c:	dd000a15 	stw	r20,40(sp)
  80bb50:	843fffc4 	addi	r16,r16,-1
  80bb54:	dfc00f15 	stw	ra,60(sp)
  80bb58:	dd400b15 	stw	r21,44(sp)
  80bb5c:	dcc00915 	stw	r19,36(sp)
  80bb60:	dc800815 	stw	r18,32(sp)
  80bb64:	dc400715 	stw	r17,28(sp)
  80bb68:	4201ffcc 	andi	r8,r8,2047
  80bb6c:	282ed7fa 	srli	r23,r5,31
  80bb70:	3039883a 	mov	fp,r6
  80bb74:	382d883a 	mov	r22,r7
  80bb78:	2029883a 	mov	r20,r4
  80bb7c:	2c20703a 	and	r16,r5,r16
  80bb80:	40006826 	beq	r8,zero,80bd24 <__divdf3+0x1f4>
  80bb84:	4081ffe0 	cmpeqi	r2,r8,2047
  80bb88:	1000791e 	bne	r2,zero,80bd70 <__divdf3+0x240>
  80bb8c:	2026d77a 	srli	r19,r4,29
  80bb90:	800a90fa 	slli	r5,r16,3
  80bb94:	202890fa 	slli	r20,r4,3
  80bb98:	44bf0044 	addi	r18,r8,-1023
  80bb9c:	994ab03a 	or	r5,r19,r5
  80bba0:	2cc02034 	orhi	r19,r5,128
  80bba4:	0021883a 	mov	r16,zero
  80bba8:	0023883a 	mov	r17,zero
  80bbac:	b010d53a 	srli	r8,r22,20
  80bbb0:	00c00434 	movhi	r3,16
  80bbb4:	18ffffc4 	addi	r3,r3,-1
  80bbb8:	4201ffcc 	andi	r8,r8,2047
  80bbbc:	b02ad7fa 	srli	r21,r22,31
  80bbc0:	b0ec703a 	and	r22,r22,r3
  80bbc4:	40004626 	beq	r8,zero,80bce0 <__divdf3+0x1b0>
  80bbc8:	4081ffe0 	cmpeqi	r2,r8,2047
  80bbcc:	10006f1e 	bne	r2,zero,80bd8c <__divdf3+0x25c>
  80bbd0:	b00690fa 	slli	r3,r22,3
  80bbd4:	e004d77a 	srli	r2,fp,29
  80bbd8:	e01290fa 	slli	r9,fp,3
  80bbdc:	423f0044 	addi	r8,r8,-1023
  80bbe0:	10c6b03a 	or	r3,r2,r3
  80bbe4:	1d802034 	orhi	r22,r3,128
  80bbe8:	9225c83a 	sub	r18,r18,r8
  80bbec:	0007883a 	mov	r3,zero
  80bbf0:	80800428 	cmpgeui	r2,r16,16
  80bbf4:	bd4ef03a 	xor	r7,r23,r21
  80bbf8:	1000a71e 	bne	r2,zero,80be98 <__divdf3+0x368>
  80bbfc:	800c90ba 	slli	r6,r16,2
  80bc00:	00802074 	movhi	r2,129
  80bc04:	3085883a 	add	r2,r6,r2
  80bc08:	10af0417 	ldw	r2,-17392(r2)
  80bc0c:	1000683a 	jmp	r2
  80bc10:	0080be98 	cmpnei	r2,zero,762
  80bc14:	0080bcbc 	xorhi	r2,zero,754
  80bc18:	0080bc6c 	andhi	r2,zero,753
  80bc1c:	0080bccc 	andi	r2,zero,755
  80bc20:	0080bc6c 	andhi	r2,zero,753
  80bc24:	0080be3c 	xorhi	r2,zero,760
  80bc28:	0080bc6c 	andhi	r2,zero,753
  80bc2c:	0080bccc 	andi	r2,zero,755
  80bc30:	0080bcbc 	xorhi	r2,zero,754
  80bc34:	0080bcbc 	xorhi	r2,zero,754
  80bc38:	0080be3c 	xorhi	r2,zero,760
  80bc3c:	0080bccc 	andi	r2,zero,755
  80bc40:	0080bc50 	cmplti	r2,zero,753
  80bc44:	0080bc50 	cmplti	r2,zero,753
  80bc48:	0080bc50 	cmplti	r2,zero,753
  80bc4c:	0080be54 	movui	r2,761
  80bc50:	b80f883a 	mov	r7,r23
  80bc54:	888000a0 	cmpeqi	r2,r17,2
  80bc58:	1000181e 	bne	r2,zero,80bcbc <__divdf3+0x18c>
  80bc5c:	888000e0 	cmpeqi	r2,r17,3
  80bc60:	1001f61e 	bne	r2,zero,80c43c <__divdf3+0x90c>
  80bc64:	88800060 	cmpeqi	r2,r17,1
  80bc68:	10006126 	beq	r2,zero,80bdf0 <__divdf3+0x2c0>
  80bc6c:	0007883a 	mov	r3,zero
  80bc70:	000b883a 	mov	r5,zero
  80bc74:	0029883a 	mov	r20,zero
  80bc78:	1806953a 	slli	r3,r3,20
  80bc7c:	380e97fa 	slli	r7,r7,31
  80bc80:	a005883a 	mov	r2,r20
  80bc84:	1946b03a 	or	r3,r3,r5
  80bc88:	19c6b03a 	or	r3,r3,r7
  80bc8c:	dfc00f17 	ldw	ra,60(sp)
  80bc90:	df000e17 	ldw	fp,56(sp)
  80bc94:	ddc00d17 	ldw	r23,52(sp)
  80bc98:	dd800c17 	ldw	r22,48(sp)
  80bc9c:	dd400b17 	ldw	r21,44(sp)
  80bca0:	dd000a17 	ldw	r20,40(sp)
  80bca4:	dcc00917 	ldw	r19,36(sp)
  80bca8:	dc800817 	ldw	r18,32(sp)
  80bcac:	dc400717 	ldw	r17,28(sp)
  80bcb0:	dc000617 	ldw	r16,24(sp)
  80bcb4:	dec01004 	addi	sp,sp,64
  80bcb8:	f800283a 	ret
  80bcbc:	00c1ffc4 	movi	r3,2047
  80bcc0:	000b883a 	mov	r5,zero
  80bcc4:	0029883a 	mov	r20,zero
  80bcc8:	003feb06 	br	80bc78 <__divdf3+0x148>
  80bccc:	a80f883a 	mov	r7,r21
  80bcd0:	b027883a 	mov	r19,r22
  80bcd4:	4829883a 	mov	r20,r9
  80bcd8:	1823883a 	mov	r17,r3
  80bcdc:	003fdd06 	br	80bc54 <__divdf3+0x124>
  80bce0:	b712b03a 	or	r9,r22,fp
  80bce4:	48003e26 	beq	r9,zero,80bde0 <__divdf3+0x2b0>
  80bce8:	b0017726 	beq	r22,zero,80c2c8 <__divdf3+0x798>
  80bcec:	b009883a 	mov	r4,r22
  80bcf0:	080d92c0 	call	80d92c <__clzsi2>
  80bcf4:	117ffd44 	addi	r5,r2,-11
  80bcf8:	01000744 	movi	r4,29
  80bcfc:	127ffe04 	addi	r9,r2,-8
  80bd00:	2149c83a 	sub	r4,r4,r5
  80bd04:	b246983a 	sll	r3,r22,r9
  80bd08:	e108d83a 	srl	r4,fp,r4
  80bd0c:	e252983a 	sll	r9,fp,r9
  80bd10:	20ecb03a 	or	r22,r4,r3
  80bd14:	1491883a 	add	r8,r2,r18
  80bd18:	4480fcc4 	addi	r18,r8,1011
  80bd1c:	0007883a 	mov	r3,zero
  80bd20:	003fb306 	br	80bbf0 <__divdf3+0xc0>
  80bd24:	8126b03a 	or	r19,r16,r4
  80bd28:	2023883a 	mov	r17,r4
  80bd2c:	98002726 	beq	r19,zero,80bdcc <__divdf3+0x29c>
  80bd30:	80017026 	beq	r16,zero,80c2f4 <__divdf3+0x7c4>
  80bd34:	8009883a 	mov	r4,r16
  80bd38:	080d92c0 	call	80d92c <__clzsi2>
  80bd3c:	113ffd44 	addi	r4,r2,-11
  80bd40:	00c00744 	movi	r3,29
  80bd44:	14fffe04 	addi	r19,r2,-8
  80bd48:	1907c83a 	sub	r3,r3,r4
  80bd4c:	84ca983a 	sll	r5,r16,r19
  80bd50:	88c6d83a 	srl	r3,r17,r3
  80bd54:	8ce8983a 	sll	r20,r17,r19
  80bd58:	1966b03a 	or	r19,r3,r5
  80bd5c:	023f0344 	movi	r8,-1011
  80bd60:	40a5c83a 	sub	r18,r8,r2
  80bd64:	0021883a 	mov	r16,zero
  80bd68:	0023883a 	mov	r17,zero
  80bd6c:	003f8f06 	br	80bbac <__divdf3+0x7c>
  80bd70:	8126b03a 	or	r19,r16,r4
  80bd74:	9800101e 	bne	r19,zero,80bdb8 <__divdf3+0x288>
  80bd78:	0029883a 	mov	r20,zero
  80bd7c:	04000204 	movi	r16,8
  80bd80:	0481ffc4 	movi	r18,2047
  80bd84:	04400084 	movi	r17,2
  80bd88:	003f8806 	br	80bbac <__divdf3+0x7c>
  80bd8c:	b712b03a 	or	r9,r22,fp
  80bd90:	94be0044 	addi	r18,r18,-2047
  80bd94:	4800041e 	bne	r9,zero,80bda8 <__divdf3+0x278>
  80bd98:	84000094 	ori	r16,r16,2
  80bd9c:	002d883a 	mov	r22,zero
  80bda0:	00c00084 	movi	r3,2
  80bda4:	003f9206 	br	80bbf0 <__divdf3+0xc0>
  80bda8:	840000d4 	ori	r16,r16,3
  80bdac:	e013883a 	mov	r9,fp
  80bdb0:	00c000c4 	movi	r3,3
  80bdb4:	003f8e06 	br	80bbf0 <__divdf3+0xc0>
  80bdb8:	8027883a 	mov	r19,r16
  80bdbc:	0481ffc4 	movi	r18,2047
  80bdc0:	04000304 	movi	r16,12
  80bdc4:	044000c4 	movi	r17,3
  80bdc8:	003f7806 	br	80bbac <__divdf3+0x7c>
  80bdcc:	0029883a 	mov	r20,zero
  80bdd0:	04000104 	movi	r16,4
  80bdd4:	0025883a 	mov	r18,zero
  80bdd8:	04400044 	movi	r17,1
  80bddc:	003f7306 	br	80bbac <__divdf3+0x7c>
  80bde0:	84000054 	ori	r16,r16,1
  80bde4:	002d883a 	mov	r22,zero
  80bde8:	00c00044 	movi	r3,1
  80bdec:	003f8006 	br	80bbf0 <__divdf3+0xc0>
  80bdf0:	9440ffc4 	addi	r17,r18,1023
  80bdf4:	0441050e 	bge	zero,r17,80c20c <__divdf3+0x6dc>
  80bdf8:	a08001cc 	andi	r2,r20,7
  80bdfc:	10016c1e 	bne	r2,zero,80c3b0 <__divdf3+0x880>
  80be00:	a008d0fa 	srli	r4,r20,3
  80be04:	9880402c 	andhi	r2,r19,256
  80be08:	10000426 	beq	r2,zero,80be1c <__divdf3+0x2ec>
  80be0c:	00bfc034 	movhi	r2,65280
  80be10:	10bfffc4 	addi	r2,r2,-1
  80be14:	98a6703a 	and	r19,r19,r2
  80be18:	94410004 	addi	r17,r18,1024
  80be1c:	8881ffc8 	cmpgei	r2,r17,2047
  80be20:	103fa61e 	bne	r2,zero,80bcbc <__divdf3+0x18c>
  80be24:	9828977a 	slli	r20,r19,29
  80be28:	980a927a 	slli	r5,r19,9
  80be2c:	88c1ffcc 	andi	r3,r17,2047
  80be30:	a128b03a 	or	r20,r20,r4
  80be34:	280ad33a 	srli	r5,r5,12
  80be38:	003f8f06 	br	80bc78 <__divdf3+0x148>
  80be3c:	01400434 	movhi	r5,16
  80be40:	000f883a 	mov	r7,zero
  80be44:	297fffc4 	addi	r5,r5,-1
  80be48:	053fffc4 	movi	r20,-1
  80be4c:	00c1ffc4 	movi	r3,2047
  80be50:	003f8906 	br	80bc78 <__divdf3+0x148>
  80be54:	9880022c 	andhi	r2,r19,8
  80be58:	10000926 	beq	r2,zero,80be80 <__divdf3+0x350>
  80be5c:	b080022c 	andhi	r2,r22,8
  80be60:	1000071e 	bne	r2,zero,80be80 <__divdf3+0x350>
  80be64:	00800434 	movhi	r2,16
  80be68:	b1400234 	orhi	r5,r22,8
  80be6c:	10bfffc4 	addi	r2,r2,-1
  80be70:	288a703a 	and	r5,r5,r2
  80be74:	a80f883a 	mov	r7,r21
  80be78:	4829883a 	mov	r20,r9
  80be7c:	003ff306 	br	80be4c <__divdf3+0x31c>
  80be80:	00800434 	movhi	r2,16
  80be84:	99400234 	orhi	r5,r19,8
  80be88:	10bfffc4 	addi	r2,r2,-1
  80be8c:	288a703a 	and	r5,r5,r2
  80be90:	b80f883a 	mov	r7,r23
  80be94:	003fed06 	br	80be4c <__divdf3+0x31c>
  80be98:	b4c10536 	bltu	r22,r19,80c2b0 <__divdf3+0x780>
  80be9c:	b4c10326 	beq	r22,r19,80c2ac <__divdf3+0x77c>
  80bea0:	94bfffc4 	addi	r18,r18,-1
  80bea4:	a039883a 	mov	fp,r20
  80bea8:	9821883a 	mov	r16,r19
  80beac:	0023883a 	mov	r17,zero
  80beb0:	b006923a 	slli	r3,r22,8
  80beb4:	482cd63a 	srli	r22,r9,24
  80beb8:	8009883a 	mov	r4,r16
  80bebc:	182ed43a 	srli	r23,r3,16
  80bec0:	b0ecb03a 	or	r22,r22,r3
  80bec4:	d9c00015 	stw	r7,0(sp)
  80bec8:	b80b883a 	mov	r5,r23
  80becc:	482a923a 	slli	r21,r9,8
  80bed0:	b53fffcc 	andi	r20,r22,65535
  80bed4:	080b1580 	call	80b158 <__udivsi3>
  80bed8:	100b883a 	mov	r5,r2
  80bedc:	a009883a 	mov	r4,r20
  80bee0:	1027883a 	mov	r19,r2
  80bee4:	080b2180 	call	80b218 <__mulsi3>
  80bee8:	8009883a 	mov	r4,r16
  80beec:	b80b883a 	mov	r5,r23
  80bef0:	1021883a 	mov	r16,r2
  80bef4:	080b1bc0 	call	80b1bc <__umodsi3>
  80bef8:	1004943a 	slli	r2,r2,16
  80befc:	e008d43a 	srli	r4,fp,16
  80bf00:	d9c00017 	ldw	r7,0(sp)
  80bf04:	2088b03a 	or	r4,r4,r2
  80bf08:	2400042e 	bgeu	r4,r16,80bf1c <__divdf3+0x3ec>
  80bf0c:	2589883a 	add	r4,r4,r22
  80bf10:	98bfffc4 	addi	r2,r19,-1
  80bf14:	2581082e 	bgeu	r4,r22,80c338 <__divdf3+0x808>
  80bf18:	1027883a 	mov	r19,r2
  80bf1c:	2421c83a 	sub	r16,r4,r16
  80bf20:	b80b883a 	mov	r5,r23
  80bf24:	8009883a 	mov	r4,r16
  80bf28:	d9c00215 	stw	r7,8(sp)
  80bf2c:	080b1580 	call	80b158 <__udivsi3>
  80bf30:	100b883a 	mov	r5,r2
  80bf34:	a009883a 	mov	r4,r20
  80bf38:	d8800115 	stw	r2,4(sp)
  80bf3c:	080b2180 	call	80b218 <__mulsi3>
  80bf40:	b80b883a 	mov	r5,r23
  80bf44:	8009883a 	mov	r4,r16
  80bf48:	d8800015 	stw	r2,0(sp)
  80bf4c:	080b1bc0 	call	80b1bc <__umodsi3>
  80bf50:	100c943a 	slli	r6,r2,16
  80bf54:	d8c00017 	ldw	r3,0(sp)
  80bf58:	e73fffcc 	andi	fp,fp,65535
  80bf5c:	e18cb03a 	or	r6,fp,r6
  80bf60:	da000117 	ldw	r8,4(sp)
  80bf64:	d9c00217 	ldw	r7,8(sp)
  80bf68:	30c0042e 	bgeu	r6,r3,80bf7c <__divdf3+0x44c>
  80bf6c:	358d883a 	add	r6,r6,r22
  80bf70:	40bfffc4 	addi	r2,r8,-1
  80bf74:	3580ec2e 	bgeu	r6,r22,80c328 <__divdf3+0x7f8>
  80bf78:	1011883a 	mov	r8,r2
  80bf7c:	9826943a 	slli	r19,r19,16
  80bf80:	af3fffcc 	andi	fp,r21,65535
  80bf84:	30c7c83a 	sub	r3,r6,r3
  80bf88:	9a26b03a 	or	r19,r19,r8
  80bf8c:	9810d43a 	srli	r8,r19,16
  80bf90:	9abfffcc 	andi	r10,r19,65535
  80bf94:	5009883a 	mov	r4,r10
  80bf98:	e00b883a 	mov	r5,fp
  80bf9c:	d9c00515 	stw	r7,20(sp)
  80bfa0:	d8c00315 	stw	r3,12(sp)
  80bfa4:	da800415 	stw	r10,16(sp)
  80bfa8:	da000015 	stw	r8,0(sp)
  80bfac:	080b2180 	call	80b218 <__mulsi3>
  80bfb0:	da000017 	ldw	r8,0(sp)
  80bfb4:	e00b883a 	mov	r5,fp
  80bfb8:	d8800215 	stw	r2,8(sp)
  80bfbc:	4009883a 	mov	r4,r8
  80bfc0:	080b2180 	call	80b218 <__mulsi3>
  80bfc4:	da000017 	ldw	r8,0(sp)
  80bfc8:	a820d43a 	srli	r16,r21,16
  80bfcc:	d8800115 	stw	r2,4(sp)
  80bfd0:	4009883a 	mov	r4,r8
  80bfd4:	800b883a 	mov	r5,r16
  80bfd8:	080b2180 	call	80b218 <__mulsi3>
  80bfdc:	da800417 	ldw	r10,16(sp)
  80bfe0:	8009883a 	mov	r4,r16
  80bfe4:	d8800015 	stw	r2,0(sp)
  80bfe8:	500b883a 	mov	r5,r10
  80bfec:	080b2180 	call	80b218 <__mulsi3>
  80bff0:	d9800217 	ldw	r6,8(sp)
  80bff4:	da000117 	ldw	r8,4(sp)
  80bff8:	da400017 	ldw	r9,0(sp)
  80bffc:	3008d43a 	srli	r4,r6,16
  80c000:	1205883a 	add	r2,r2,r8
  80c004:	d8c00317 	ldw	r3,12(sp)
  80c008:	2089883a 	add	r4,r4,r2
  80c00c:	d9c00517 	ldw	r7,20(sp)
  80c010:	2200022e 	bgeu	r4,r8,80c01c <__divdf3+0x4ec>
  80c014:	00800074 	movhi	r2,1
  80c018:	4893883a 	add	r9,r9,r2
  80c01c:	200ad43a 	srli	r5,r4,16
  80c020:	2008943a 	slli	r4,r4,16
  80c024:	31bfffcc 	andi	r6,r6,65535
  80c028:	2a4b883a 	add	r5,r5,r9
  80c02c:	218d883a 	add	r6,r4,r6
  80c030:	19409436 	bltu	r3,r5,80c284 <__divdf3+0x754>
  80c034:	19409226 	beq	r3,r5,80c280 <__divdf3+0x750>
  80c038:	898dc83a 	sub	r6,r17,r6
  80c03c:	89a3803a 	cmpltu	r17,r17,r6
  80c040:	1947c83a 	sub	r3,r3,r5
  80c044:	1c47c83a 	sub	r3,r3,r17
  80c048:	9440ffc4 	addi	r17,r18,1023
  80c04c:	b0c0d326 	beq	r22,r3,80c39c <__divdf3+0x86c>
  80c050:	1809883a 	mov	r4,r3
  80c054:	b80b883a 	mov	r5,r23
  80c058:	d9800315 	stw	r6,12(sp)
  80c05c:	d9c00215 	stw	r7,8(sp)
  80c060:	d8c00015 	stw	r3,0(sp)
  80c064:	080b1580 	call	80b158 <__udivsi3>
  80c068:	100b883a 	mov	r5,r2
  80c06c:	a009883a 	mov	r4,r20
  80c070:	d8800115 	stw	r2,4(sp)
  80c074:	080b2180 	call	80b218 <__mulsi3>
  80c078:	d8c00017 	ldw	r3,0(sp)
  80c07c:	b80b883a 	mov	r5,r23
  80c080:	d8800015 	stw	r2,0(sp)
  80c084:	1809883a 	mov	r4,r3
  80c088:	080b1bc0 	call	80b1bc <__umodsi3>
  80c08c:	d9800317 	ldw	r6,12(sp)
  80c090:	1006943a 	slli	r3,r2,16
  80c094:	da400017 	ldw	r9,0(sp)
  80c098:	3008d43a 	srli	r4,r6,16
  80c09c:	da000117 	ldw	r8,4(sp)
  80c0a0:	d9c00217 	ldw	r7,8(sp)
  80c0a4:	20c6b03a 	or	r3,r4,r3
  80c0a8:	1a40062e 	bgeu	r3,r9,80c0c4 <__divdf3+0x594>
  80c0ac:	1d87883a 	add	r3,r3,r22
  80c0b0:	40bfffc4 	addi	r2,r8,-1
  80c0b4:	1d80c836 	bltu	r3,r22,80c3d8 <__divdf3+0x8a8>
  80c0b8:	1a40c72e 	bgeu	r3,r9,80c3d8 <__divdf3+0x8a8>
  80c0bc:	423fff84 	addi	r8,r8,-2
  80c0c0:	1d87883a 	add	r3,r3,r22
  80c0c4:	1a47c83a 	sub	r3,r3,r9
  80c0c8:	1809883a 	mov	r4,r3
  80c0cc:	b80b883a 	mov	r5,r23
  80c0d0:	d9800415 	stw	r6,16(sp)
  80c0d4:	d9c00315 	stw	r7,12(sp)
  80c0d8:	da000215 	stw	r8,8(sp)
  80c0dc:	d8c00115 	stw	r3,4(sp)
  80c0e0:	080b1580 	call	80b158 <__udivsi3>
  80c0e4:	100b883a 	mov	r5,r2
  80c0e8:	a009883a 	mov	r4,r20
  80c0ec:	d8800015 	stw	r2,0(sp)
  80c0f0:	080b2180 	call	80b218 <__mulsi3>
  80c0f4:	d8c00117 	ldw	r3,4(sp)
  80c0f8:	b80b883a 	mov	r5,r23
  80c0fc:	102f883a 	mov	r23,r2
  80c100:	1809883a 	mov	r4,r3
  80c104:	080b1bc0 	call	80b1bc <__umodsi3>
  80c108:	d9800417 	ldw	r6,16(sp)
  80c10c:	1004943a 	slli	r2,r2,16
  80c110:	da400017 	ldw	r9,0(sp)
  80c114:	31bfffcc 	andi	r6,r6,65535
  80c118:	308cb03a 	or	r6,r6,r2
  80c11c:	da000217 	ldw	r8,8(sp)
  80c120:	d9c00317 	ldw	r7,12(sp)
  80c124:	35c0062e 	bgeu	r6,r23,80c140 <__divdf3+0x610>
  80c128:	358d883a 	add	r6,r6,r22
  80c12c:	48bfffc4 	addi	r2,r9,-1
  80c130:	3580a736 	bltu	r6,r22,80c3d0 <__divdf3+0x8a0>
  80c134:	35c0a62e 	bgeu	r6,r23,80c3d0 <__divdf3+0x8a0>
  80c138:	4a7fff84 	addi	r9,r9,-2
  80c13c:	358d883a 	add	r6,r6,r22
  80c140:	4028943a 	slli	r20,r8,16
  80c144:	35d5c83a 	sub	r10,r6,r23
  80c148:	e009883a 	mov	r4,fp
  80c14c:	a268b03a 	or	r20,r20,r9
  80c150:	a23fffcc 	andi	r8,r20,65535
  80c154:	a02ed43a 	srli	r23,r20,16
  80c158:	400b883a 	mov	r5,r8
  80c15c:	d9c00315 	stw	r7,12(sp)
  80c160:	da800215 	stw	r10,8(sp)
  80c164:	da000115 	stw	r8,4(sp)
  80c168:	080b2180 	call	80b218 <__mulsi3>
  80c16c:	e00b883a 	mov	r5,fp
  80c170:	b809883a 	mov	r4,r23
  80c174:	1039883a 	mov	fp,r2
  80c178:	080b2180 	call	80b218 <__mulsi3>
  80c17c:	8009883a 	mov	r4,r16
  80c180:	b80b883a 	mov	r5,r23
  80c184:	d8800015 	stw	r2,0(sp)
  80c188:	080b2180 	call	80b218 <__mulsi3>
  80c18c:	da000117 	ldw	r8,4(sp)
  80c190:	8009883a 	mov	r4,r16
  80c194:	1021883a 	mov	r16,r2
  80c198:	400b883a 	mov	r5,r8
  80c19c:	080b2180 	call	80b218 <__mulsi3>
  80c1a0:	d9800017 	ldw	r6,0(sp)
  80c1a4:	e006d43a 	srli	r3,fp,16
  80c1a8:	da800217 	ldw	r10,8(sp)
  80c1ac:	1185883a 	add	r2,r2,r6
  80c1b0:	1887883a 	add	r3,r3,r2
  80c1b4:	d9c00317 	ldw	r7,12(sp)
  80c1b8:	1980022e 	bgeu	r3,r6,80c1c4 <__divdf3+0x694>
  80c1bc:	00800074 	movhi	r2,1
  80c1c0:	80a1883a 	add	r16,r16,r2
  80c1c4:	1808d43a 	srli	r4,r3,16
  80c1c8:	1806943a 	slli	r3,r3,16
  80c1cc:	e73fffcc 	andi	fp,fp,65535
  80c1d0:	2409883a 	add	r4,r4,r16
  80c1d4:	1f07883a 	add	r3,r3,fp
  80c1d8:	51000436 	bltu	r10,r4,80c1ec <__divdf3+0x6bc>
  80c1dc:	51000226 	beq	r10,r4,80c1e8 <__divdf3+0x6b8>
  80c1e0:	a5000054 	ori	r20,r20,1
  80c1e4:	003f0306 	br	80bdf4 <__divdf3+0x2c4>
  80c1e8:	183f0226 	beq	r3,zero,80bdf4 <__divdf3+0x2c4>
  80c1ec:	b28d883a 	add	r6,r22,r10
  80c1f0:	a0bfffc4 	addi	r2,r20,-1
  80c1f4:	35806536 	bltu	r6,r22,80c38c <__divdf3+0x85c>
  80c1f8:	31008036 	bltu	r6,r4,80c3fc <__divdf3+0x8cc>
  80c1fc:	31009426 	beq	r6,r4,80c450 <__divdf3+0x920>
  80c200:	1029883a 	mov	r20,r2
  80c204:	003ff606 	br	80c1e0 <__divdf3+0x6b0>
  80c208:	053fffc4 	movi	r20,-1
  80c20c:	01400044 	movi	r5,1
  80c210:	2c4bc83a 	sub	r5,r5,r17
  80c214:	28800e48 	cmpgei	r2,r5,57
  80c218:	103e941e 	bne	r2,zero,80bc6c <__divdf3+0x13c>
  80c21c:	28800808 	cmpgei	r2,r5,32
  80c220:	1000491e 	bne	r2,zero,80c348 <__divdf3+0x818>
  80c224:	92010784 	addi	r8,r18,1054
  80c228:	9a04983a 	sll	r2,r19,r8
  80c22c:	a146d83a 	srl	r3,r20,r5
  80c230:	a210983a 	sll	r8,r20,r8
  80c234:	994ad83a 	srl	r5,r19,r5
  80c238:	10e8b03a 	or	r20,r2,r3
  80c23c:	4010c03a 	cmpne	r8,r8,zero
  80c240:	a228b03a 	or	r20,r20,r8
  80c244:	a08001cc 	andi	r2,r20,7
  80c248:	10000726 	beq	r2,zero,80c268 <__divdf3+0x738>
  80c24c:	a08003cc 	andi	r2,r20,15
  80c250:	10800120 	cmpeqi	r2,r2,4
  80c254:	1000041e 	bne	r2,zero,80c268 <__divdf3+0x738>
  80c258:	a0800104 	addi	r2,r20,4
  80c25c:	1529803a 	cmpltu	r20,r2,r20
  80c260:	2d0b883a 	add	r5,r5,r20
  80c264:	1029883a 	mov	r20,r2
  80c268:	2880202c 	andhi	r2,r5,128
  80c26c:	10006f26 	beq	r2,zero,80c42c <__divdf3+0x8fc>
  80c270:	00c00044 	movi	r3,1
  80c274:	000b883a 	mov	r5,zero
  80c278:	0029883a 	mov	r20,zero
  80c27c:	003e7e06 	br	80bc78 <__divdf3+0x148>
  80c280:	89bf6d2e 	bgeu	r17,r6,80c038 <__divdf3+0x508>
  80c284:	8d63883a 	add	r17,r17,r21
  80c288:	8d45803a 	cmpltu	r2,r17,r21
  80c28c:	1585883a 	add	r2,r2,r22
  80c290:	1887883a 	add	r3,r3,r2
  80c294:	98bfffc4 	addi	r2,r19,-1
  80c298:	b0c0202e 	bgeu	r22,r3,80c31c <__divdf3+0x7ec>
  80c29c:	19405136 	bltu	r3,r5,80c3e4 <__divdf3+0x8b4>
  80c2a0:	28c04f26 	beq	r5,r3,80c3e0 <__divdf3+0x8b0>
  80c2a4:	1027883a 	mov	r19,r2
  80c2a8:	003f6306 	br	80c038 <__divdf3+0x508>
  80c2ac:	a27efc36 	bltu	r20,r9,80bea0 <__divdf3+0x370>
  80c2b0:	983897fa 	slli	fp,r19,31
  80c2b4:	a004d07a 	srli	r2,r20,1
  80c2b8:	9820d07a 	srli	r16,r19,1
  80c2bc:	a02297fa 	slli	r17,r20,31
  80c2c0:	e0b8b03a 	or	fp,fp,r2
  80c2c4:	003efa06 	br	80beb0 <__divdf3+0x380>
  80c2c8:	e009883a 	mov	r4,fp
  80c2cc:	080d92c0 	call	80d92c <__clzsi2>
  80c2d0:	11400544 	addi	r5,r2,21
  80c2d4:	29000748 	cmpgei	r4,r5,29
  80c2d8:	1007883a 	mov	r3,r2
  80c2dc:	10800804 	addi	r2,r2,32
  80c2e0:	203e8526 	beq	r4,zero,80bcf8 <__divdf3+0x1c8>
  80c2e4:	18fffe04 	addi	r3,r3,-8
  80c2e8:	e0ec983a 	sll	r22,fp,r3
  80c2ec:	0013883a 	mov	r9,zero
  80c2f0:	003e8806 	br	80bd14 <__divdf3+0x1e4>
  80c2f4:	080d92c0 	call	80d92c <__clzsi2>
  80c2f8:	11000544 	addi	r4,r2,21
  80c2fc:	20c00748 	cmpgei	r3,r4,29
  80c300:	100b883a 	mov	r5,r2
  80c304:	10800804 	addi	r2,r2,32
  80c308:	183e8d26 	beq	r3,zero,80bd40 <__divdf3+0x210>
  80c30c:	297ffe04 	addi	r5,r5,-8
  80c310:	a166983a 	sll	r19,r20,r5
  80c314:	0029883a 	mov	r20,zero
  80c318:	003e9006 	br	80bd5c <__divdf3+0x22c>
  80c31c:	b0ffe11e 	bne	r22,r3,80c2a4 <__divdf3+0x774>
  80c320:	8d7fe036 	bltu	r17,r21,80c2a4 <__divdf3+0x774>
  80c324:	003fdd06 	br	80c29c <__divdf3+0x76c>
  80c328:	30ff132e 	bgeu	r6,r3,80bf78 <__divdf3+0x448>
  80c32c:	423fff84 	addi	r8,r8,-2
  80c330:	358d883a 	add	r6,r6,r22
  80c334:	003f1106 	br	80bf7c <__divdf3+0x44c>
  80c338:	243ef72e 	bgeu	r4,r16,80bf18 <__divdf3+0x3e8>
  80c33c:	9cffff84 	addi	r19,r19,-2
  80c340:	2589883a 	add	r4,r4,r22
  80c344:	003ef506 	br	80bf1c <__divdf3+0x3ec>
  80c348:	00fff844 	movi	r3,-31
  80c34c:	1c47c83a 	sub	r3,r3,r17
  80c350:	29400820 	cmpeqi	r5,r5,32
  80c354:	98c6d83a 	srl	r3,r19,r3
  80c358:	2800031e 	bne	r5,zero,80c368 <__divdf3+0x838>
  80c35c:	91410f84 	addi	r5,r18,1086
  80c360:	994a983a 	sll	r5,r19,r5
  80c364:	a168b03a 	or	r20,r20,r5
  80c368:	a028c03a 	cmpne	r20,r20,zero
  80c36c:	a0e8b03a 	or	r20,r20,r3
  80c370:	a4c001cc 	andi	r19,r20,7
  80c374:	9800291e 	bne	r19,zero,80c41c <__divdf3+0x8ec>
  80c378:	000b883a 	mov	r5,zero
  80c37c:	a028d0fa 	srli	r20,r20,3
  80c380:	0007883a 	mov	r3,zero
  80c384:	a4e8b03a 	or	r20,r20,r19
  80c388:	003e3b06 	br	80bc78 <__divdf3+0x148>
  80c38c:	1029883a 	mov	r20,r2
  80c390:	313f931e 	bne	r6,r4,80c1e0 <__divdf3+0x6b0>
  80c394:	1d7f921e 	bne	r3,r21,80c1e0 <__divdf3+0x6b0>
  80c398:	003e9606 	br	80bdf4 <__divdf3+0x2c4>
  80c39c:	047f9a0e 	bge	zero,r17,80c208 <__divdf3+0x6d8>
  80c3a0:	0009883a 	mov	r4,zero
  80c3a4:	05000044 	movi	r20,1
  80c3a8:	9d27883a 	add	r19,r19,r20
  80c3ac:	003e9506 	br	80be04 <__divdf3+0x2d4>
  80c3b0:	a08003cc 	andi	r2,r20,15
  80c3b4:	10800118 	cmpnei	r2,r2,4
  80c3b8:	103e9126 	beq	r2,zero,80be00 <__divdf3+0x2d0>
  80c3bc:	a1000104 	addi	r4,r20,4
  80c3c0:	00bffec4 	movi	r2,-5
  80c3c4:	2008d0fa 	srli	r4,r4,3
  80c3c8:	1529803a 	cmpltu	r20,r2,r20
  80c3cc:	003ff606 	br	80c3a8 <__divdf3+0x878>
  80c3d0:	1013883a 	mov	r9,r2
  80c3d4:	003f5a06 	br	80c140 <__divdf3+0x610>
  80c3d8:	1011883a 	mov	r8,r2
  80c3dc:	003f3906 	br	80c0c4 <__divdf3+0x594>
  80c3e0:	89bfb02e 	bgeu	r17,r6,80c2a4 <__divdf3+0x774>
  80c3e4:	8d63883a 	add	r17,r17,r21
  80c3e8:	8d45803a 	cmpltu	r2,r17,r21
  80c3ec:	1585883a 	add	r2,r2,r22
  80c3f0:	9cffff84 	addi	r19,r19,-2
  80c3f4:	1887883a 	add	r3,r3,r2
  80c3f8:	003f0f06 	br	80c038 <__divdf3+0x508>
  80c3fc:	ad45883a 	add	r2,r21,r21
  80c400:	156b803a 	cmpltu	r21,r2,r21
  80c404:	adad883a 	add	r22,r21,r22
  80c408:	358d883a 	add	r6,r6,r22
  80c40c:	a53fff84 	addi	r20,r20,-2
  80c410:	102b883a 	mov	r21,r2
  80c414:	313fdf26 	beq	r6,r4,80c394 <__divdf3+0x864>
  80c418:	003f7106 	br	80c1e0 <__divdf3+0x6b0>
  80c41c:	a08003cc 	andi	r2,r20,15
  80c420:	10800118 	cmpnei	r2,r2,4
  80c424:	000b883a 	mov	r5,zero
  80c428:	103f8b1e 	bne	r2,zero,80c258 <__divdf3+0x728>
  80c42c:	2804927a 	slli	r2,r5,9
  80c430:	2826977a 	slli	r19,r5,29
  80c434:	100ad33a 	srli	r5,r2,12
  80c438:	003fd006 	br	80c37c <__divdf3+0x84c>
  80c43c:	00800434 	movhi	r2,16
  80c440:	99400234 	orhi	r5,r19,8
  80c444:	10bfffc4 	addi	r2,r2,-1
  80c448:	288a703a 	and	r5,r5,r2
  80c44c:	003e7f06 	br	80be4c <__divdf3+0x31c>
  80c450:	a8ffea36 	bltu	r21,r3,80c3fc <__divdf3+0x8cc>
  80c454:	1029883a 	mov	r20,r2
  80c458:	1d7f611e 	bne	r3,r21,80c1e0 <__divdf3+0x6b0>
  80c45c:	003e6506 	br	80bdf4 <__divdf3+0x2c4>

0080c460 <__eqdf2>:
  80c460:	2810d53a 	srli	r8,r5,20
  80c464:	3806d53a 	srli	r3,r7,20
  80c468:	00800434 	movhi	r2,16
  80c46c:	4201ffcc 	andi	r8,r8,2047
  80c470:	10bfffc4 	addi	r2,r2,-1
  80c474:	4241ffd8 	cmpnei	r9,r8,2047
  80c478:	2814d7fa 	srli	r10,r5,31
  80c47c:	3816d7fa 	srli	r11,r7,31
  80c480:	288a703a 	and	r5,r5,r2
  80c484:	388e703a 	and	r7,r7,r2
  80c488:	1881ffcc 	andi	r2,r3,2047
  80c48c:	48000626 	beq	r9,zero,80c4a8 <__eqdf2+0x48>
  80c490:	10c1ffe0 	cmpeqi	r3,r2,2047
  80c494:	1800021e 	bne	r3,zero,80c4a0 <__eqdf2+0x40>
  80c498:	4080011e 	bne	r8,r2,80c4a0 <__eqdf2+0x40>
  80c49c:	29c00826 	beq	r5,r7,80c4c0 <__eqdf2+0x60>
  80c4a0:	00800044 	movi	r2,1
  80c4a4:	f800283a 	ret
  80c4a8:	2906b03a 	or	r3,r5,r4
  80c4ac:	183ffc1e 	bne	r3,zero,80c4a0 <__eqdf2+0x40>
  80c4b0:	1081ffd8 	cmpnei	r2,r2,2047
  80c4b4:	103ffa1e 	bne	r2,zero,80c4a0 <__eqdf2+0x40>
  80c4b8:	398eb03a 	or	r7,r7,r6
  80c4bc:	383ff81e 	bne	r7,zero,80c4a0 <__eqdf2+0x40>
  80c4c0:	21bff71e 	bne	r4,r6,80c4a0 <__eqdf2+0x40>
  80c4c4:	52c00426 	beq	r10,r11,80c4d8 <__eqdf2+0x78>
  80c4c8:	403ff51e 	bne	r8,zero,80c4a0 <__eqdf2+0x40>
  80c4cc:	290ab03a 	or	r5,r5,r4
  80c4d0:	2804c03a 	cmpne	r2,r5,zero
  80c4d4:	f800283a 	ret
  80c4d8:	0005883a 	mov	r2,zero
  80c4dc:	f800283a 	ret

0080c4e0 <__gedf2>:
  80c4e0:	2810d53a 	srli	r8,r5,20
  80c4e4:	3812d53a 	srli	r9,r7,20
  80c4e8:	00c00434 	movhi	r3,16
  80c4ec:	4201ffcc 	andi	r8,r8,2047
  80c4f0:	18ffffc4 	addi	r3,r3,-1
  80c4f4:	4281ffd8 	cmpnei	r10,r8,2047
  80c4f8:	2816d7fa 	srli	r11,r5,31
  80c4fc:	3804d7fa 	srli	r2,r7,31
  80c500:	28ca703a 	and	r5,r5,r3
  80c504:	38ce703a 	and	r7,r7,r3
  80c508:	48c1ffcc 	andi	r3,r9,2047
  80c50c:	50000a26 	beq	r10,zero,80c538 <__gedf2+0x58>
  80c510:	1a41ffd8 	cmpnei	r9,r3,2047
  80c514:	48000c26 	beq	r9,zero,80c548 <__gedf2+0x68>
  80c518:	4000171e 	bne	r8,zero,80c578 <__gedf2+0x98>
  80c51c:	2912b03a 	or	r9,r5,r4
  80c520:	1800121e 	bne	r3,zero,80c56c <__gedf2+0x8c>
  80c524:	3994b03a 	or	r10,r7,r6
  80c528:	5000101e 	bne	r10,zero,80c56c <__gedf2+0x8c>
  80c52c:	48000a1e 	bne	r9,zero,80c558 <__gedf2+0x78>
  80c530:	0005883a 	mov	r2,zero
  80c534:	f800283a 	ret
  80c538:	2912b03a 	or	r9,r5,r4
  80c53c:	48001d1e 	bne	r9,zero,80c5b4 <__gedf2+0xd4>
  80c540:	1a41ffe0 	cmpeqi	r9,r3,2047
  80c544:	48000c26 	beq	r9,zero,80c578 <__gedf2+0x98>
  80c548:	3992b03a 	or	r9,r7,r6
  80c54c:	4800191e 	bne	r9,zero,80c5b4 <__gedf2+0xd4>
  80c550:	40000526 	beq	r8,zero,80c568 <__gedf2+0x88>
  80c554:	58800c26 	beq	r11,r2,80c588 <__gedf2+0xa8>
  80c558:	00800044 	movi	r2,1
  80c55c:	58000526 	beq	r11,zero,80c574 <__gedf2+0x94>
  80c560:	00bfffc4 	movi	r2,-1
  80c564:	f800283a 	ret
  80c568:	2912b03a 	or	r9,r5,r4
  80c56c:	483ff91e 	bne	r9,zero,80c554 <__gedf2+0x74>
  80c570:	103ffb26 	beq	r2,zero,80c560 <__gedf2+0x80>
  80c574:	f800283a 	ret
  80c578:	183ff61e 	bne	r3,zero,80c554 <__gedf2+0x74>
  80c57c:	3992b03a 	or	r9,r7,r6
  80c580:	483ff41e 	bne	r9,zero,80c554 <__gedf2+0x74>
  80c584:	003ff406 	br	80c558 <__gedf2+0x78>
  80c588:	1a000716 	blt	r3,r8,80c5a8 <__gedf2+0xc8>
  80c58c:	40fff816 	blt	r8,r3,80c570 <__gedf2+0x90>
  80c590:	397ff136 	bltu	r7,r5,80c558 <__gedf2+0x78>
  80c594:	29c00926 	beq	r5,r7,80c5bc <__gedf2+0xdc>
  80c598:	29ffe52e 	bgeu	r5,r7,80c530 <__gedf2+0x50>
  80c59c:	583ff026 	beq	r11,zero,80c560 <__gedf2+0x80>
  80c5a0:	5805883a 	mov	r2,r11
  80c5a4:	f800283a 	ret
  80c5a8:	103fed1e 	bne	r2,zero,80c560 <__gedf2+0x80>
  80c5ac:	00800044 	movi	r2,1
  80c5b0:	f800283a 	ret
  80c5b4:	00bfff84 	movi	r2,-2
  80c5b8:	f800283a 	ret
  80c5bc:	313fe636 	bltu	r6,r4,80c558 <__gedf2+0x78>
  80c5c0:	21bfdb2e 	bgeu	r4,r6,80c530 <__gedf2+0x50>
  80c5c4:	003ff506 	br	80c59c <__gedf2+0xbc>

0080c5c8 <__ledf2>:
  80c5c8:	2810d53a 	srli	r8,r5,20
  80c5cc:	3812d53a 	srli	r9,r7,20
  80c5d0:	00c00434 	movhi	r3,16
  80c5d4:	4201ffcc 	andi	r8,r8,2047
  80c5d8:	18ffffc4 	addi	r3,r3,-1
  80c5dc:	4281ffd8 	cmpnei	r10,r8,2047
  80c5e0:	2816d7fa 	srli	r11,r5,31
  80c5e4:	3804d7fa 	srli	r2,r7,31
  80c5e8:	28ca703a 	and	r5,r5,r3
  80c5ec:	38ce703a 	and	r7,r7,r3
  80c5f0:	48c1ffcc 	andi	r3,r9,2047
  80c5f4:	50000a26 	beq	r10,zero,80c620 <__ledf2+0x58>
  80c5f8:	1a41ffd8 	cmpnei	r9,r3,2047
  80c5fc:	48000c26 	beq	r9,zero,80c630 <__ledf2+0x68>
  80c600:	4000191e 	bne	r8,zero,80c668 <__ledf2+0xa0>
  80c604:	2912b03a 	or	r9,r5,r4
  80c608:	18000d1e 	bne	r3,zero,80c640 <__ledf2+0x78>
  80c60c:	3994b03a 	or	r10,r7,r6
  80c610:	50000b1e 	bne	r10,zero,80c640 <__ledf2+0x78>
  80c614:	48000c1e 	bne	r9,zero,80c648 <__ledf2+0x80>
  80c618:	0005883a 	mov	r2,zero
  80c61c:	f800283a 	ret
  80c620:	2912b03a 	or	r9,r5,r4
  80c624:	48000c1e 	bne	r9,zero,80c658 <__ledf2+0x90>
  80c628:	1a41ffe0 	cmpeqi	r9,r3,2047
  80c62c:	48000e26 	beq	r9,zero,80c668 <__ledf2+0xa0>
  80c630:	3992b03a 	or	r9,r7,r6
  80c634:	4800081e 	bne	r9,zero,80c658 <__ledf2+0x90>
  80c638:	4000021e 	bne	r8,zero,80c644 <__ledf2+0x7c>
  80c63c:	2912b03a 	or	r9,r5,r4
  80c640:	48000726 	beq	r9,zero,80c660 <__ledf2+0x98>
  80c644:	58800c26 	beq	r11,r2,80c678 <__ledf2+0xb0>
  80c648:	00800044 	movi	r2,1
  80c64c:	58000526 	beq	r11,zero,80c664 <__ledf2+0x9c>
  80c650:	00bfffc4 	movi	r2,-1
  80c654:	f800283a 	ret
  80c658:	00800084 	movi	r2,2
  80c65c:	f800283a 	ret
  80c660:	103ffb26 	beq	r2,zero,80c650 <__ledf2+0x88>
  80c664:	f800283a 	ret
  80c668:	183ff61e 	bne	r3,zero,80c644 <__ledf2+0x7c>
  80c66c:	3992b03a 	or	r9,r7,r6
  80c670:	483ff41e 	bne	r9,zero,80c644 <__ledf2+0x7c>
  80c674:	003ff406 	br	80c648 <__ledf2+0x80>
  80c678:	1a00030e 	bge	r3,r8,80c688 <__ledf2+0xc0>
  80c67c:	103ff41e 	bne	r2,zero,80c650 <__ledf2+0x88>
  80c680:	00800044 	movi	r2,1
  80c684:	f800283a 	ret
  80c688:	40fff516 	blt	r8,r3,80c660 <__ledf2+0x98>
  80c68c:	397fee36 	bltu	r7,r5,80c648 <__ledf2+0x80>
  80c690:	29c00426 	beq	r5,r7,80c6a4 <__ledf2+0xdc>
  80c694:	29ffe02e 	bgeu	r5,r7,80c618 <__ledf2+0x50>
  80c698:	583fed26 	beq	r11,zero,80c650 <__ledf2+0x88>
  80c69c:	5805883a 	mov	r2,r11
  80c6a0:	f800283a 	ret
  80c6a4:	313fe836 	bltu	r6,r4,80c648 <__ledf2+0x80>
  80c6a8:	21bfdb2e 	bgeu	r4,r6,80c618 <__ledf2+0x50>
  80c6ac:	003ffa06 	br	80c698 <__ledf2+0xd0>

0080c6b0 <__muldf3>:
  80c6b0:	2810d53a 	srli	r8,r5,20
  80c6b4:	defff004 	addi	sp,sp,-64
  80c6b8:	00800434 	movhi	r2,16
  80c6bc:	df000e15 	stw	fp,56(sp)
  80c6c0:	dd000a15 	stw	r20,40(sp)
  80c6c4:	dcc00915 	stw	r19,36(sp)
  80c6c8:	dc400715 	stw	r17,28(sp)
  80c6cc:	10bfffc4 	addi	r2,r2,-1
  80c6d0:	dfc00f15 	stw	ra,60(sp)
  80c6d4:	ddc00d15 	stw	r23,52(sp)
  80c6d8:	dd800c15 	stw	r22,48(sp)
  80c6dc:	dd400b15 	stw	r21,44(sp)
  80c6e0:	dc800815 	stw	r18,32(sp)
  80c6e4:	dc000615 	stw	r16,24(sp)
  80c6e8:	4201ffcc 	andi	r8,r8,2047
  80c6ec:	2828d7fa 	srli	r20,r5,31
  80c6f0:	2023883a 	mov	r17,r4
  80c6f4:	3039883a 	mov	fp,r6
  80c6f8:	28a6703a 	and	r19,r5,r2
  80c6fc:	40013426 	beq	r8,zero,80cbd0 <__muldf3+0x520>
  80c700:	4081ffe0 	cmpeqi	r2,r8,2047
  80c704:	1001461e 	bne	r2,zero,80cc20 <__muldf3+0x570>
  80c708:	980a90fa 	slli	r5,r19,3
  80c70c:	2026d77a 	srli	r19,r4,29
  80c710:	202490fa 	slli	r18,r4,3
  80c714:	423f0044 	addi	r8,r8,-1023
  80c718:	9966b03a 	or	r19,r19,r5
  80c71c:	9cc02034 	orhi	r19,r19,128
  80c720:	002b883a 	mov	r21,zero
  80c724:	002d883a 	mov	r22,zero
  80c728:	3804d53a 	srli	r2,r7,20
  80c72c:	00c00434 	movhi	r3,16
  80c730:	18ffffc4 	addi	r3,r3,-1
  80c734:	1081ffcc 	andi	r2,r2,2047
  80c738:	382ed7fa 	srli	r23,r7,31
  80c73c:	38e0703a 	and	r16,r7,r3
  80c740:	10011026 	beq	r2,zero,80cb84 <__muldf3+0x4d4>
  80c744:	10c1ffe0 	cmpeqi	r3,r2,2047
  80c748:	18013c1e 	bne	r3,zero,80cc3c <__muldf3+0x58c>
  80c74c:	e008d77a 	srli	r4,fp,29
  80c750:	802090fa 	slli	r16,r16,3
  80c754:	e02290fa 	slli	r17,fp,3
  80c758:	10bf0044 	addi	r2,r2,-1023
  80c75c:	2420b03a 	or	r16,r4,r16
  80c760:	84002034 	orhi	r16,r16,128
  80c764:	4091883a 	add	r8,r8,r2
  80c768:	0009883a 	mov	r4,zero
  80c76c:	a8800428 	cmpgeui	r2,r21,16
  80c770:	a5ccf03a 	xor	r6,r20,r23
  80c774:	41c00044 	addi	r7,r8,1
  80c778:	1000371e 	bne	r2,zero,80c858 <__muldf3+0x1a8>
  80c77c:	a80490ba 	slli	r2,r21,2
  80c780:	00c02074 	movhi	r3,129
  80c784:	10c7883a 	add	r3,r2,r3
  80c788:	18b1e417 	ldw	r2,-14448(r3)
  80c78c:	1000683a 	jmp	r2
  80c790:	0080c858 	cmpnei	r2,zero,801
  80c794:	0080c7d4 	movui	r2,799
  80c798:	0080c7d4 	movui	r2,799
  80c79c:	0080c7d0 	cmplti	r2,zero,799
  80c7a0:	0080c7e0 	cmpeqi	r2,zero,799
  80c7a4:	0080c7e0 	cmpeqi	r2,zero,799
  80c7a8:	0080ccb0 	cmpltui	r2,zero,818
  80c7ac:	0080c7d0 	cmplti	r2,zero,799
  80c7b0:	0080c7e0 	cmpeqi	r2,zero,799
  80c7b4:	0080ccb0 	cmpltui	r2,zero,818
  80c7b8:	0080c7e0 	cmpeqi	r2,zero,799
  80c7bc:	0080c7d0 	cmplti	r2,zero,799
  80c7c0:	0080cc58 	cmpnei	r2,zero,817
  80c7c4:	0080cc58 	cmpnei	r2,zero,817
  80c7c8:	0080cc58 	cmpnei	r2,zero,817
  80c7cc:	0080cd3c 	xorhi	r2,zero,820
  80c7d0:	b80d883a 	mov	r6,r23
  80c7d4:	8027883a 	mov	r19,r16
  80c7d8:	8825883a 	mov	r18,r17
  80c7dc:	202d883a 	mov	r22,r4
  80c7e0:	b08000a0 	cmpeqi	r2,r22,2
  80c7e4:	1000181e 	bne	r2,zero,80c848 <__muldf3+0x198>
  80c7e8:	b08000e0 	cmpeqi	r2,r22,3
  80c7ec:	1001961e 	bne	r2,zero,80ce48 <__muldf3+0x798>
  80c7f0:	b0800060 	cmpeqi	r2,r22,1
  80c7f4:	1000c926 	beq	r2,zero,80cb1c <__muldf3+0x46c>
  80c7f8:	0007883a 	mov	r3,zero
  80c7fc:	0027883a 	mov	r19,zero
  80c800:	0025883a 	mov	r18,zero
  80c804:	1806953a 	slli	r3,r3,20
  80c808:	300c97fa 	slli	r6,r6,31
  80c80c:	9005883a 	mov	r2,r18
  80c810:	1cc6b03a 	or	r3,r3,r19
  80c814:	1986b03a 	or	r3,r3,r6
  80c818:	dfc00f17 	ldw	ra,60(sp)
  80c81c:	df000e17 	ldw	fp,56(sp)
  80c820:	ddc00d17 	ldw	r23,52(sp)
  80c824:	dd800c17 	ldw	r22,48(sp)
  80c828:	dd400b17 	ldw	r21,44(sp)
  80c82c:	dd000a17 	ldw	r20,40(sp)
  80c830:	dcc00917 	ldw	r19,36(sp)
  80c834:	dc800817 	ldw	r18,32(sp)
  80c838:	dc400717 	ldw	r17,28(sp)
  80c83c:	dc000617 	ldw	r16,24(sp)
  80c840:	dec01004 	addi	sp,sp,64
  80c844:	f800283a 	ret
  80c848:	00c1ffc4 	movi	r3,2047
  80c84c:	0027883a 	mov	r19,zero
  80c850:	0025883a 	mov	r18,zero
  80c854:	003feb06 	br	80c804 <__muldf3+0x154>
  80c858:	9028d43a 	srli	r20,r18,16
  80c85c:	8f3fffcc 	andi	fp,r17,65535
  80c860:	957fffcc 	andi	r21,r18,65535
  80c864:	a80b883a 	mov	r5,r21
  80c868:	e009883a 	mov	r4,fp
  80c86c:	d9800315 	stw	r6,12(sp)
  80c870:	da000215 	stw	r8,8(sp)
  80c874:	d9c00115 	stw	r7,4(sp)
  80c878:	8822d43a 	srli	r17,r17,16
  80c87c:	080b2180 	call	80b218 <__mulsi3>
  80c880:	e00b883a 	mov	r5,fp
  80c884:	a009883a 	mov	r4,r20
  80c888:	102d883a 	mov	r22,r2
  80c88c:	080b2180 	call	80b218 <__mulsi3>
  80c890:	880b883a 	mov	r5,r17
  80c894:	a009883a 	mov	r4,r20
  80c898:	102f883a 	mov	r23,r2
  80c89c:	080b2180 	call	80b218 <__mulsi3>
  80c8a0:	a80b883a 	mov	r5,r21
  80c8a4:	8809883a 	mov	r4,r17
  80c8a8:	d8800015 	stw	r2,0(sp)
  80c8ac:	080b2180 	call	80b218 <__mulsi3>
  80c8b0:	b006d43a 	srli	r3,r22,16
  80c8b4:	15e5883a 	add	r18,r2,r23
  80c8b8:	d9c00117 	ldw	r7,4(sp)
  80c8bc:	1c87883a 	add	r3,r3,r18
  80c8c0:	da000217 	ldw	r8,8(sp)
  80c8c4:	d9800317 	ldw	r6,12(sp)
  80c8c8:	1dc0042e 	bgeu	r3,r23,80c8dc <__muldf3+0x22c>
  80c8cc:	d9000017 	ldw	r4,0(sp)
  80c8d0:	00800074 	movhi	r2,1
  80c8d4:	2085883a 	add	r2,r4,r2
  80c8d8:	d8800015 	stw	r2,0(sp)
  80c8dc:	1804943a 	slli	r2,r3,16
  80c8e0:	85ffffcc 	andi	r23,r16,65535
  80c8e4:	b5bfffcc 	andi	r22,r22,65535
  80c8e8:	1585883a 	add	r2,r2,r22
  80c8ec:	a80b883a 	mov	r5,r21
  80c8f0:	b809883a 	mov	r4,r23
  80c8f4:	1824d43a 	srli	r18,r3,16
  80c8f8:	d9800515 	stw	r6,20(sp)
  80c8fc:	da000415 	stw	r8,16(sp)
  80c900:	d9c00315 	stw	r7,12(sp)
  80c904:	8020d43a 	srli	r16,r16,16
  80c908:	d8800115 	stw	r2,4(sp)
  80c90c:	080b2180 	call	80b218 <__mulsi3>
  80c910:	a009883a 	mov	r4,r20
  80c914:	b80b883a 	mov	r5,r23
  80c918:	d8800215 	stw	r2,8(sp)
  80c91c:	080b2180 	call	80b218 <__mulsi3>
  80c920:	a009883a 	mov	r4,r20
  80c924:	800b883a 	mov	r5,r16
  80c928:	102d883a 	mov	r22,r2
  80c92c:	080b2180 	call	80b218 <__mulsi3>
  80c930:	a80b883a 	mov	r5,r21
  80c934:	8009883a 	mov	r4,r16
  80c938:	1029883a 	mov	r20,r2
  80c93c:	080b2180 	call	80b218 <__mulsi3>
  80c940:	da800217 	ldw	r10,8(sp)
  80c944:	1585883a 	add	r2,r2,r22
  80c948:	d9c00317 	ldw	r7,12(sp)
  80c94c:	5006d43a 	srli	r3,r10,16
  80c950:	da000417 	ldw	r8,16(sp)
  80c954:	d9800517 	ldw	r6,20(sp)
  80c958:	1887883a 	add	r3,r3,r2
  80c95c:	1d80022e 	bgeu	r3,r22,80c968 <__muldf3+0x2b8>
  80c960:	00800074 	movhi	r2,1
  80c964:	a0a9883a 	add	r20,r20,r2
  80c968:	1804d43a 	srli	r2,r3,16
  80c96c:	1806943a 	slli	r3,r3,16
  80c970:	982cd43a 	srli	r22,r19,16
  80c974:	9d7fffcc 	andi	r21,r19,65535
  80c978:	e009883a 	mov	r4,fp
  80c97c:	54ffffcc 	andi	r19,r10,65535
  80c980:	a80b883a 	mov	r5,r21
  80c984:	1ce7883a 	add	r19,r3,r19
  80c988:	d9800515 	stw	r6,20(sp)
  80c98c:	da000415 	stw	r8,16(sp)
  80c990:	d9c00315 	stw	r7,12(sp)
  80c994:	1529883a 	add	r20,r2,r20
  80c998:	080b2180 	call	80b218 <__mulsi3>
  80c99c:	e00b883a 	mov	r5,fp
  80c9a0:	b009883a 	mov	r4,r22
  80c9a4:	d8800215 	stw	r2,8(sp)
  80c9a8:	080b2180 	call	80b218 <__mulsi3>
  80c9ac:	8809883a 	mov	r4,r17
  80c9b0:	b00b883a 	mov	r5,r22
  80c9b4:	1039883a 	mov	fp,r2
  80c9b8:	080b2180 	call	80b218 <__mulsi3>
  80c9bc:	8809883a 	mov	r4,r17
  80c9c0:	a80b883a 	mov	r5,r21
  80c9c4:	1023883a 	mov	r17,r2
  80c9c8:	080b2180 	call	80b218 <__mulsi3>
  80c9cc:	d8c00217 	ldw	r3,8(sp)
  80c9d0:	1705883a 	add	r2,r2,fp
  80c9d4:	d9c00317 	ldw	r7,12(sp)
  80c9d8:	1808d43a 	srli	r4,r3,16
  80c9dc:	da000417 	ldw	r8,16(sp)
  80c9e0:	d9800517 	ldw	r6,20(sp)
  80c9e4:	2089883a 	add	r4,r4,r2
  80c9e8:	94e5883a 	add	r18,r18,r19
  80c9ec:	2700022e 	bgeu	r4,fp,80c9f8 <__muldf3+0x348>
  80c9f0:	00800074 	movhi	r2,1
  80c9f4:	88a3883a 	add	r17,r17,r2
  80c9f8:	2004d43a 	srli	r2,r4,16
  80c9fc:	2038943a 	slli	fp,r4,16
  80ca00:	18ffffcc 	andi	r3,r3,65535
  80ca04:	b809883a 	mov	r4,r23
  80ca08:	a80b883a 	mov	r5,r21
  80ca0c:	d9800415 	stw	r6,16(sp)
  80ca10:	da000315 	stw	r8,12(sp)
  80ca14:	d9c00215 	stw	r7,8(sp)
  80ca18:	e0f9883a 	add	fp,fp,r3
  80ca1c:	1463883a 	add	r17,r2,r17
  80ca20:	080b2180 	call	80b218 <__mulsi3>
  80ca24:	b80b883a 	mov	r5,r23
  80ca28:	b009883a 	mov	r4,r22
  80ca2c:	102f883a 	mov	r23,r2
  80ca30:	080b2180 	call	80b218 <__mulsi3>
  80ca34:	b00b883a 	mov	r5,r22
  80ca38:	8009883a 	mov	r4,r16
  80ca3c:	102d883a 	mov	r22,r2
  80ca40:	080b2180 	call	80b218 <__mulsi3>
  80ca44:	a80b883a 	mov	r5,r21
  80ca48:	8009883a 	mov	r4,r16
  80ca4c:	1021883a 	mov	r16,r2
  80ca50:	080b2180 	call	80b218 <__mulsi3>
  80ca54:	b80ad43a 	srli	r5,r23,16
  80ca58:	1585883a 	add	r2,r2,r22
  80ca5c:	d9c00217 	ldw	r7,8(sp)
  80ca60:	288b883a 	add	r5,r5,r2
  80ca64:	da000317 	ldw	r8,12(sp)
  80ca68:	d9800417 	ldw	r6,16(sp)
  80ca6c:	2d80022e 	bgeu	r5,r22,80ca78 <__muldf3+0x3c8>
  80ca70:	00800074 	movhi	r2,1
  80ca74:	80a1883a 	add	r16,r16,r2
  80ca78:	2806943a 	slli	r3,r5,16
  80ca7c:	d8800017 	ldw	r2,0(sp)
  80ca80:	bdffffcc 	andi	r23,r23,65535
  80ca84:	1dc7883a 	add	r3,r3,r23
  80ca88:	90ab883a 	add	r21,r18,r2
  80ca8c:	acd5803a 	cmpltu	r10,r21,r19
  80ca90:	1d07883a 	add	r3,r3,r20
  80ca94:	af2b883a 	add	r21,r21,fp
  80ca98:	1a97883a 	add	r11,r3,r10
  80ca9c:	af09803a 	cmpltu	r4,r21,fp
  80caa0:	2826d43a 	srli	r19,r5,16
  80caa4:	5c53883a 	add	r9,r11,r17
  80caa8:	4905883a 	add	r2,r9,r4
  80caac:	1d07803a 	cmpltu	r3,r3,r20
  80cab0:	5a95803a 	cmpltu	r10,r11,r10
  80cab4:	1a86b03a 	or	r3,r3,r10
  80cab8:	1109803a 	cmpltu	r4,r2,r4
  80cabc:	4c53803a 	cmpltu	r9,r9,r17
  80cac0:	1ce7883a 	add	r19,r3,r19
  80cac4:	4908b03a 	or	r4,r9,r4
  80cac8:	a824927a 	slli	r18,r21,9
  80cacc:	d8c00117 	ldw	r3,4(sp)
  80cad0:	9927883a 	add	r19,r19,r4
  80cad4:	9c27883a 	add	r19,r19,r16
  80cad8:	9826927a 	slli	r19,r19,9
  80cadc:	a82ad5fa 	srli	r21,r21,23
  80cae0:	100ad5fa 	srli	r5,r2,23
  80cae4:	90e4b03a 	or	r18,r18,r3
  80cae8:	1004927a 	slli	r2,r2,9
  80caec:	9024c03a 	cmpne	r18,r18,zero
  80caf0:	9564b03a 	or	r18,r18,r21
  80caf4:	98c0402c 	andhi	r3,r19,256
  80caf8:	90a4b03a 	or	r18,r18,r2
  80cafc:	9966b03a 	or	r19,r19,r5
  80cb00:	1800b626 	beq	r3,zero,80cddc <__muldf3+0x72c>
  80cb04:	9006d07a 	srli	r3,r18,1
  80cb08:	980497fa 	slli	r2,r19,31
  80cb0c:	9480004c 	andi	r18,r18,1
  80cb10:	9826d07a 	srli	r19,r19,1
  80cb14:	1c86b03a 	or	r3,r3,r18
  80cb18:	18a4b03a 	or	r18,r3,r2
  80cb1c:	3900ffc4 	addi	r4,r7,1023
  80cb20:	0100690e 	bge	zero,r4,80ccc8 <__muldf3+0x618>
  80cb24:	908001cc 	andi	r2,r18,7
  80cb28:	10000726 	beq	r2,zero,80cb48 <__muldf3+0x498>
  80cb2c:	908003cc 	andi	r2,r18,15
  80cb30:	10800120 	cmpeqi	r2,r2,4
  80cb34:	1000041e 	bne	r2,zero,80cb48 <__muldf3+0x498>
  80cb38:	90800104 	addi	r2,r18,4
  80cb3c:	14a5803a 	cmpltu	r18,r2,r18
  80cb40:	9ca7883a 	add	r19,r19,r18
  80cb44:	1025883a 	mov	r18,r2
  80cb48:	9880402c 	andhi	r2,r19,256
  80cb4c:	10000426 	beq	r2,zero,80cb60 <__muldf3+0x4b0>
  80cb50:	00bfc034 	movhi	r2,65280
  80cb54:	10bfffc4 	addi	r2,r2,-1
  80cb58:	98a6703a 	and	r19,r19,r2
  80cb5c:	39010004 	addi	r4,r7,1024
  80cb60:	2081ffc8 	cmpgei	r2,r4,2047
  80cb64:	103f381e 	bne	r2,zero,80c848 <__muldf3+0x198>
  80cb68:	9804977a 	slli	r2,r19,29
  80cb6c:	9024d0fa 	srli	r18,r18,3
  80cb70:	9826927a 	slli	r19,r19,9
  80cb74:	20c1ffcc 	andi	r3,r4,2047
  80cb78:	14a4b03a 	or	r18,r2,r18
  80cb7c:	9826d33a 	srli	r19,r19,12
  80cb80:	003f2006 	br	80c804 <__muldf3+0x154>
  80cb84:	8722b03a 	or	r17,r16,fp
  80cb88:	88004526 	beq	r17,zero,80cca0 <__muldf3+0x5f0>
  80cb8c:	da000015 	stw	r8,0(sp)
  80cb90:	80008626 	beq	r16,zero,80cdac <__muldf3+0x6fc>
  80cb94:	8009883a 	mov	r4,r16
  80cb98:	080d92c0 	call	80d92c <__clzsi2>
  80cb9c:	da000017 	ldw	r8,0(sp)
  80cba0:	117ffd44 	addi	r5,r2,-11
  80cba4:	01000744 	movi	r4,29
  80cba8:	147ffe04 	addi	r17,r2,-8
  80cbac:	2149c83a 	sub	r4,r4,r5
  80cbb0:	8460983a 	sll	r16,r16,r17
  80cbb4:	e108d83a 	srl	r4,fp,r4
  80cbb8:	e462983a 	sll	r17,fp,r17
  80cbbc:	2420b03a 	or	r16,r4,r16
  80cbc0:	4091c83a 	sub	r8,r8,r2
  80cbc4:	423f0344 	addi	r8,r8,-1011
  80cbc8:	0009883a 	mov	r4,zero
  80cbcc:	003ee706 	br	80c76c <__muldf3+0xbc>
  80cbd0:	9924b03a 	or	r18,r19,r4
  80cbd4:	90002d26 	beq	r18,zero,80cc8c <__muldf3+0x5dc>
  80cbd8:	d9c00015 	stw	r7,0(sp)
  80cbdc:	98006826 	beq	r19,zero,80cd80 <__muldf3+0x6d0>
  80cbe0:	9809883a 	mov	r4,r19
  80cbe4:	080d92c0 	call	80d92c <__clzsi2>
  80cbe8:	d9c00017 	ldw	r7,0(sp)
  80cbec:	113ffd44 	addi	r4,r2,-11
  80cbf0:	00c00744 	movi	r3,29
  80cbf4:	14bffe04 	addi	r18,r2,-8
  80cbf8:	1907c83a 	sub	r3,r3,r4
  80cbfc:	9ca6983a 	sll	r19,r19,r18
  80cc00:	88c6d83a 	srl	r3,r17,r3
  80cc04:	8ca4983a 	sll	r18,r17,r18
  80cc08:	1ce6b03a 	or	r19,r3,r19
  80cc0c:	023f0344 	movi	r8,-1011
  80cc10:	4091c83a 	sub	r8,r8,r2
  80cc14:	002b883a 	mov	r21,zero
  80cc18:	002d883a 	mov	r22,zero
  80cc1c:	003ec206 	br	80c728 <__muldf3+0x78>
  80cc20:	9924b03a 	or	r18,r19,r4
  80cc24:	9000141e 	bne	r18,zero,80cc78 <__muldf3+0x5c8>
  80cc28:	0027883a 	mov	r19,zero
  80cc2c:	05400204 	movi	r21,8
  80cc30:	0201ffc4 	movi	r8,2047
  80cc34:	05800084 	movi	r22,2
  80cc38:	003ebb06 	br	80c728 <__muldf3+0x78>
  80cc3c:	8722b03a 	or	r17,r16,fp
  80cc40:	4201ffc4 	addi	r8,r8,2047
  80cc44:	8800081e 	bne	r17,zero,80cc68 <__muldf3+0x5b8>
  80cc48:	ad400094 	ori	r21,r21,2
  80cc4c:	0021883a 	mov	r16,zero
  80cc50:	01000084 	movi	r4,2
  80cc54:	003ec506 	br	80c76c <__muldf3+0xbc>
  80cc58:	b08000a0 	cmpeqi	r2,r22,2
  80cc5c:	a00d883a 	mov	r6,r20
  80cc60:	103ee126 	beq	r2,zero,80c7e8 <__muldf3+0x138>
  80cc64:	003ef806 	br	80c848 <__muldf3+0x198>
  80cc68:	ad4000d4 	ori	r21,r21,3
  80cc6c:	e023883a 	mov	r17,fp
  80cc70:	010000c4 	movi	r4,3
  80cc74:	003ebd06 	br	80c76c <__muldf3+0xbc>
  80cc78:	2025883a 	mov	r18,r4
  80cc7c:	05400304 	movi	r21,12
  80cc80:	0201ffc4 	movi	r8,2047
  80cc84:	058000c4 	movi	r22,3
  80cc88:	003ea706 	br	80c728 <__muldf3+0x78>
  80cc8c:	0027883a 	mov	r19,zero
  80cc90:	05400104 	movi	r21,4
  80cc94:	0011883a 	mov	r8,zero
  80cc98:	05800044 	movi	r22,1
  80cc9c:	003ea206 	br	80c728 <__muldf3+0x78>
  80cca0:	ad400054 	ori	r21,r21,1
  80cca4:	0021883a 	mov	r16,zero
  80cca8:	01000044 	movi	r4,1
  80ccac:	003eaf06 	br	80c76c <__muldf3+0xbc>
  80ccb0:	04c00434 	movhi	r19,16
  80ccb4:	000d883a 	mov	r6,zero
  80ccb8:	9cffffc4 	addi	r19,r19,-1
  80ccbc:	04bfffc4 	movi	r18,-1
  80ccc0:	00c1ffc4 	movi	r3,2047
  80ccc4:	003ecf06 	br	80c804 <__muldf3+0x154>
  80ccc8:	00800044 	movi	r2,1
  80cccc:	1105c83a 	sub	r2,r2,r4
  80ccd0:	10c00e48 	cmpgei	r3,r2,57
  80ccd4:	183ec81e 	bne	r3,zero,80c7f8 <__muldf3+0x148>
  80ccd8:	10c00808 	cmpgei	r3,r2,32
  80ccdc:	1800411e 	bne	r3,zero,80cde4 <__muldf3+0x734>
  80cce0:	39c10784 	addi	r7,r7,1054
  80cce4:	99c6983a 	sll	r3,r19,r7
  80cce8:	9088d83a 	srl	r4,r18,r2
  80ccec:	91ce983a 	sll	r7,r18,r7
  80ccf0:	98a6d83a 	srl	r19,r19,r2
  80ccf4:	1904b03a 	or	r2,r3,r4
  80ccf8:	3824c03a 	cmpne	r18,r7,zero
  80ccfc:	1484b03a 	or	r2,r2,r18
  80cd00:	10c001cc 	andi	r3,r2,7
  80cd04:	18000726 	beq	r3,zero,80cd24 <__muldf3+0x674>
  80cd08:	10c003cc 	andi	r3,r2,15
  80cd0c:	18c00120 	cmpeqi	r3,r3,4
  80cd10:	1800041e 	bne	r3,zero,80cd24 <__muldf3+0x674>
  80cd14:	10c00104 	addi	r3,r2,4
  80cd18:	1885803a 	cmpltu	r2,r3,r2
  80cd1c:	98a7883a 	add	r19,r19,r2
  80cd20:	1805883a 	mov	r2,r3
  80cd24:	98c0202c 	andhi	r3,r19,128
  80cd28:	18004326 	beq	r3,zero,80ce38 <__muldf3+0x788>
  80cd2c:	00c00044 	movi	r3,1
  80cd30:	0027883a 	mov	r19,zero
  80cd34:	0025883a 	mov	r18,zero
  80cd38:	003eb206 	br	80c804 <__muldf3+0x154>
  80cd3c:	9880022c 	andhi	r2,r19,8
  80cd40:	10000926 	beq	r2,zero,80cd68 <__muldf3+0x6b8>
  80cd44:	8080022c 	andhi	r2,r16,8
  80cd48:	1000071e 	bne	r2,zero,80cd68 <__muldf3+0x6b8>
  80cd4c:	00800434 	movhi	r2,16
  80cd50:	84c00234 	orhi	r19,r16,8
  80cd54:	10bfffc4 	addi	r2,r2,-1
  80cd58:	98a6703a 	and	r19,r19,r2
  80cd5c:	b80d883a 	mov	r6,r23
  80cd60:	8825883a 	mov	r18,r17
  80cd64:	003fd606 	br	80ccc0 <__muldf3+0x610>
  80cd68:	00800434 	movhi	r2,16
  80cd6c:	9cc00234 	orhi	r19,r19,8
  80cd70:	10bfffc4 	addi	r2,r2,-1
  80cd74:	98a6703a 	and	r19,r19,r2
  80cd78:	a00d883a 	mov	r6,r20
  80cd7c:	003fd006 	br	80ccc0 <__muldf3+0x610>
  80cd80:	080d92c0 	call	80d92c <__clzsi2>
  80cd84:	11000544 	addi	r4,r2,21
  80cd88:	21400748 	cmpgei	r5,r4,29
  80cd8c:	1007883a 	mov	r3,r2
  80cd90:	d9c00017 	ldw	r7,0(sp)
  80cd94:	10800804 	addi	r2,r2,32
  80cd98:	283f9526 	beq	r5,zero,80cbf0 <__muldf3+0x540>
  80cd9c:	18fffe04 	addi	r3,r3,-8
  80cda0:	88e6983a 	sll	r19,r17,r3
  80cda4:	0025883a 	mov	r18,zero
  80cda8:	003f9806 	br	80cc0c <__muldf3+0x55c>
  80cdac:	e009883a 	mov	r4,fp
  80cdb0:	080d92c0 	call	80d92c <__clzsi2>
  80cdb4:	11400544 	addi	r5,r2,21
  80cdb8:	29000748 	cmpgei	r4,r5,29
  80cdbc:	1007883a 	mov	r3,r2
  80cdc0:	da000017 	ldw	r8,0(sp)
  80cdc4:	10800804 	addi	r2,r2,32
  80cdc8:	203f7626 	beq	r4,zero,80cba4 <__muldf3+0x4f4>
  80cdcc:	1c3ffe04 	addi	r16,r3,-8
  80cdd0:	e420983a 	sll	r16,fp,r16
  80cdd4:	0023883a 	mov	r17,zero
  80cdd8:	003f7906 	br	80cbc0 <__muldf3+0x510>
  80cddc:	400f883a 	mov	r7,r8
  80cde0:	003f4e06 	br	80cb1c <__muldf3+0x46c>
  80cde4:	00fff844 	movi	r3,-31
  80cde8:	1907c83a 	sub	r3,r3,r4
  80cdec:	10800820 	cmpeqi	r2,r2,32
  80cdf0:	98c6d83a 	srl	r3,r19,r3
  80cdf4:	1000031e 	bne	r2,zero,80ce04 <__muldf3+0x754>
  80cdf8:	39c10f84 	addi	r7,r7,1086
  80cdfc:	99e6983a 	sll	r19,r19,r7
  80ce00:	94e4b03a 	or	r18,r18,r19
  80ce04:	9024c03a 	cmpne	r18,r18,zero
  80ce08:	90c4b03a 	or	r2,r18,r3
  80ce0c:	148001cc 	andi	r18,r2,7
  80ce10:	9000051e 	bne	r18,zero,80ce28 <__muldf3+0x778>
  80ce14:	0027883a 	mov	r19,zero
  80ce18:	1004d0fa 	srli	r2,r2,3
  80ce1c:	0007883a 	mov	r3,zero
  80ce20:	14a4b03a 	or	r18,r2,r18
  80ce24:	003e7706 	br	80c804 <__muldf3+0x154>
  80ce28:	10c003cc 	andi	r3,r2,15
  80ce2c:	18c00118 	cmpnei	r3,r3,4
  80ce30:	0027883a 	mov	r19,zero
  80ce34:	183fb71e 	bne	r3,zero,80cd14 <__muldf3+0x664>
  80ce38:	9806927a 	slli	r3,r19,9
  80ce3c:	9824977a 	slli	r18,r19,29
  80ce40:	1826d33a 	srli	r19,r3,12
  80ce44:	003ff406 	br	80ce18 <__muldf3+0x768>
  80ce48:	00800434 	movhi	r2,16
  80ce4c:	9cc00234 	orhi	r19,r19,8
  80ce50:	10bfffc4 	addi	r2,r2,-1
  80ce54:	98a6703a 	and	r19,r19,r2
  80ce58:	003f9906 	br	80ccc0 <__muldf3+0x610>

0080ce5c <__subdf3>:
  80ce5c:	00800434 	movhi	r2,16
  80ce60:	3810d53a 	srli	r8,r7,20
  80ce64:	10bfffc4 	addi	r2,r2,-1
  80ce68:	2806d53a 	srli	r3,r5,20
  80ce6c:	2892703a 	and	r9,r5,r2
  80ce70:	3884703a 	and	r2,r7,r2
  80ce74:	280ad7fa 	srli	r5,r5,31
  80ce78:	481290fa 	slli	r9,r9,3
  80ce7c:	2018d77a 	srli	r12,r4,29
  80ce80:	100490fa 	slli	r2,r2,3
  80ce84:	3016d77a 	srli	r11,r6,29
  80ce88:	defffb04 	addi	sp,sp,-20
  80ce8c:	4201ffcc 	andi	r8,r8,2047
  80ce90:	dc800215 	stw	r18,8(sp)
  80ce94:	dc400115 	stw	r17,4(sp)
  80ce98:	1c81ffcc 	andi	r18,r3,2047
  80ce9c:	dfc00415 	stw	ra,16(sp)
  80cea0:	dcc00315 	stw	r19,12(sp)
  80cea4:	dc000015 	stw	r16,0(sp)
  80cea8:	4281ffd8 	cmpnei	r10,r8,2047
  80ceac:	2823883a 	mov	r17,r5
  80ceb0:	201c90fa 	slli	r14,r4,3
  80ceb4:	380ed7fa 	srli	r7,r7,31
  80ceb8:	301a90fa 	slli	r13,r6,3
  80cebc:	29403fcc 	andi	r5,r5,255
  80cec0:	6252b03a 	or	r9,r12,r9
  80cec4:	589eb03a 	or	r15,r11,r2
  80cec8:	9207c83a 	sub	r3,r18,r8
  80cecc:	50006826 	beq	r10,zero,80d070 <__subdf3+0x214>
  80ced0:	3ac0005c 	xori	r11,r7,1
  80ced4:	2ac07326 	beq	r5,r11,80d0a4 <__subdf3+0x248>
  80ced8:	00c0590e 	bge	zero,r3,80d040 <__subdf3+0x1e4>
  80cedc:	4000691e 	bne	r8,zero,80d084 <__subdf3+0x228>
  80cee0:	7b44b03a 	or	r2,r15,r13
  80cee4:	1000fb26 	beq	r2,zero,80d2d4 <__subdf3+0x478>
  80cee8:	18bfffc4 	addi	r2,r3,-1
  80ceec:	10019126 	beq	r2,zero,80d534 <__subdf3+0x6d8>
  80cef0:	18c1ffd8 	cmpnei	r3,r3,2047
  80cef4:	1800c326 	beq	r3,zero,80d204 <__subdf3+0x3a8>
  80cef8:	1007883a 	mov	r3,r2
  80cefc:	18800e48 	cmpgei	r2,r3,57
  80cf00:	1000651e 	bne	r2,zero,80d098 <__subdf3+0x23c>
  80cf04:	18800808 	cmpgei	r2,r3,32
  80cf08:	1001331e 	bne	r2,zero,80d3d8 <__subdf3+0x57c>
  80cf0c:	00800804 	movi	r2,32
  80cf10:	10c5c83a 	sub	r2,r2,r3
  80cf14:	78a0983a 	sll	r16,r15,r2
  80cf18:	68c8d83a 	srl	r4,r13,r3
  80cf1c:	689a983a 	sll	r13,r13,r2
  80cf20:	78c4d83a 	srl	r2,r15,r3
  80cf24:	8120b03a 	or	r16,r16,r4
  80cf28:	681ac03a 	cmpne	r13,r13,zero
  80cf2c:	8360b03a 	or	r16,r16,r13
  80cf30:	4893c83a 	sub	r9,r9,r2
  80cf34:	7421c83a 	sub	r16,r14,r16
  80cf38:	7409803a 	cmpltu	r4,r14,r16
  80cf3c:	4909c83a 	sub	r4,r9,r4
  80cf40:	2080202c 	andhi	r2,r4,128
  80cf44:	10009326 	beq	r2,zero,80d194 <__subdf3+0x338>
  80cf48:	04c02034 	movhi	r19,128
  80cf4c:	9cffffc4 	addi	r19,r19,-1
  80cf50:	24e6703a 	and	r19,r4,r19
  80cf54:	9800b926 	beq	r19,zero,80d23c <__subdf3+0x3e0>
  80cf58:	9809883a 	mov	r4,r19
  80cf5c:	080d92c0 	call	80d92c <__clzsi2>
  80cf60:	10fffe04 	addi	r3,r2,-8
  80cf64:	01000804 	movi	r4,32
  80cf68:	20c9c83a 	sub	r4,r4,r3
  80cf6c:	8108d83a 	srl	r4,r16,r4
  80cf70:	98e6983a 	sll	r19,r19,r3
  80cf74:	80e0983a 	sll	r16,r16,r3
  80cf78:	24c8b03a 	or	r4,r4,r19
  80cf7c:	1c80b816 	blt	r3,r18,80d260 <__subdf3+0x404>
  80cf80:	1c87c83a 	sub	r3,r3,r18
  80cf84:	19400044 	addi	r5,r3,1
  80cf88:	28800808 	cmpgei	r2,r5,32
  80cf8c:	1000751e 	bne	r2,zero,80d164 <__subdf3+0x308>
  80cf90:	00800804 	movi	r2,32
  80cf94:	1145c83a 	sub	r2,r2,r5
  80cf98:	8146d83a 	srl	r3,r16,r5
  80cf9c:	80a0983a 	sll	r16,r16,r2
  80cfa0:	2084983a 	sll	r2,r4,r2
  80cfa4:	2148d83a 	srl	r4,r4,r5
  80cfa8:	8020c03a 	cmpne	r16,r16,zero
  80cfac:	10c4b03a 	or	r2,r2,r3
  80cfb0:	1420b03a 	or	r16,r2,r16
  80cfb4:	0025883a 	mov	r18,zero
  80cfb8:	808001cc 	andi	r2,r16,7
  80cfbc:	10000726 	beq	r2,zero,80cfdc <__subdf3+0x180>
  80cfc0:	808003cc 	andi	r2,r16,15
  80cfc4:	10800120 	cmpeqi	r2,r2,4
  80cfc8:	1000041e 	bne	r2,zero,80cfdc <__subdf3+0x180>
  80cfcc:	80800104 	addi	r2,r16,4
  80cfd0:	1421803a 	cmpltu	r16,r2,r16
  80cfd4:	2409883a 	add	r4,r4,r16
  80cfd8:	1021883a 	mov	r16,r2
  80cfdc:	2080202c 	andhi	r2,r4,128
  80cfe0:	10006e26 	beq	r2,zero,80d19c <__subdf3+0x340>
  80cfe4:	90c00044 	addi	r3,r18,1
  80cfe8:	1881ffe0 	cmpeqi	r2,r3,2047
  80cfec:	18c1ffcc 	andi	r3,r3,2047
  80cff0:	1000801e 	bne	r2,zero,80d1f4 <__subdf3+0x398>
  80cff4:	00bfe034 	movhi	r2,65408
  80cff8:	10bfffc4 	addi	r2,r2,-1
  80cffc:	2088703a 	and	r4,r4,r2
  80d000:	2004977a 	slli	r2,r4,29
  80d004:	2008927a 	slli	r4,r4,9
  80d008:	8020d0fa 	srli	r16,r16,3
  80d00c:	2008d33a 	srli	r4,r4,12
  80d010:	1404b03a 	or	r2,r2,r16
  80d014:	1806953a 	slli	r3,r3,20
  80d018:	882297fa 	slli	r17,r17,31
  80d01c:	1906b03a 	or	r3,r3,r4
  80d020:	1c46b03a 	or	r3,r3,r17
  80d024:	dfc00417 	ldw	ra,16(sp)
  80d028:	dcc00317 	ldw	r19,12(sp)
  80d02c:	dc800217 	ldw	r18,8(sp)
  80d030:	dc400117 	ldw	r17,4(sp)
  80d034:	dc000017 	ldw	r16,0(sp)
  80d038:	dec00504 	addi	sp,sp,20
  80d03c:	f800283a 	ret
  80d040:	18002c26 	beq	r3,zero,80d0f4 <__subdf3+0x298>
  80d044:	4487c83a 	sub	r3,r8,r18
  80d048:	5823883a 	mov	r17,r11
  80d04c:	9000bb1e 	bne	r18,zero,80d33c <__subdf3+0x4e0>
  80d050:	4b84b03a 	or	r2,r9,r14
  80d054:	10011726 	beq	r2,zero,80d4b4 <__subdf3+0x658>
  80d058:	18bfffc4 	addi	r2,r3,-1
  80d05c:	10016326 	beq	r2,zero,80d5ec <__subdf3+0x790>
  80d060:	18c1ffd8 	cmpnei	r3,r3,2047
  80d064:	18012c26 	beq	r3,zero,80d518 <__subdf3+0x6bc>
  80d068:	1007883a 	mov	r3,r2
  80d06c:	0000b506 	br	80d344 <__subdf3+0x4e8>
  80d070:	7b44b03a 	or	r2,r15,r13
  80d074:	103f9626 	beq	r2,zero,80ced0 <__subdf3+0x74>
  80d078:	3ac03fcc 	andi	r11,r7,255
  80d07c:	29c07d26 	beq	r5,r7,80d274 <__subdf3+0x418>
  80d080:	00ffef0e 	bge	zero,r3,80d040 <__subdf3+0x1e4>
  80d084:	9081ffd8 	cmpnei	r2,r18,2047
  80d088:	10005e26 	beq	r2,zero,80d204 <__subdf3+0x3a8>
  80d08c:	18800e48 	cmpgei	r2,r3,57
  80d090:	7bc02034 	orhi	r15,r15,128
  80d094:	103f9b26 	beq	r2,zero,80cf04 <__subdf3+0xa8>
  80d098:	7b60b03a 	or	r16,r15,r13
  80d09c:	8020c03a 	cmpne	r16,r16,zero
  80d0a0:	003fa406 	br	80cf34 <__subdf3+0xd8>
  80d0a4:	00c0730e 	bge	zero,r3,80d274 <__subdf3+0x418>
  80d0a8:	40002626 	beq	r8,zero,80d144 <__subdf3+0x2e8>
  80d0ac:	9081ffd8 	cmpnei	r2,r18,2047
  80d0b0:	10005426 	beq	r2,zero,80d204 <__subdf3+0x3a8>
  80d0b4:	7bc02034 	orhi	r15,r15,128
  80d0b8:	18800e48 	cmpgei	r2,r3,57
  80d0bc:	1000431e 	bne	r2,zero,80d1cc <__subdf3+0x370>
  80d0c0:	18800808 	cmpgei	r2,r3,32
  80d0c4:	1000de26 	beq	r2,zero,80d440 <__subdf3+0x5e4>
  80d0c8:	1c3ff804 	addi	r16,r3,-32
  80d0cc:	18800820 	cmpeqi	r2,r3,32
  80d0d0:	7c0ad83a 	srl	r5,r15,r16
  80d0d4:	1000041e 	bne	r2,zero,80d0e8 <__subdf3+0x28c>
  80d0d8:	00801004 	movi	r2,64
  80d0dc:	10c5c83a 	sub	r2,r2,r3
  80d0e0:	7884983a 	sll	r2,r15,r2
  80d0e4:	689ab03a 	or	r13,r13,r2
  80d0e8:	6820c03a 	cmpne	r16,r13,zero
  80d0ec:	8160b03a 	or	r16,r16,r5
  80d0f0:	00003806 	br	80d1d4 <__subdf3+0x378>
  80d0f4:	90800044 	addi	r2,r18,1
  80d0f8:	1081ff8c 	andi	r2,r2,2046
  80d0fc:	1000a01e 	bne	r2,zero,80d380 <__subdf3+0x524>
  80d100:	4b8ab03a 	or	r5,r9,r14
  80d104:	7b44b03a 	or	r2,r15,r13
  80d108:	9000f11e 	bne	r18,zero,80d4d0 <__subdf3+0x674>
  80d10c:	28012e26 	beq	r5,zero,80d5c8 <__subdf3+0x76c>
  80d110:	10010e26 	beq	r2,zero,80d54c <__subdf3+0x6f0>
  80d114:	7361c83a 	sub	r16,r14,r13
  80d118:	7405803a 	cmpltu	r2,r14,r16
  80d11c:	4bc9c83a 	sub	r4,r9,r15
  80d120:	2089c83a 	sub	r4,r4,r2
  80d124:	2080202c 	andhi	r2,r4,128
  80d128:	10016d26 	beq	r2,zero,80d6e0 <__subdf3+0x884>
  80d12c:	6ba1c83a 	sub	r16,r13,r14
  80d130:	7a49c83a 	sub	r4,r15,r9
  80d134:	6c1b803a 	cmpltu	r13,r13,r16
  80d138:	2349c83a 	sub	r4,r4,r13
  80d13c:	5823883a 	mov	r17,r11
  80d140:	003f9d06 	br	80cfb8 <__subdf3+0x15c>
  80d144:	7b44b03a 	or	r2,r15,r13
  80d148:	10006226 	beq	r2,zero,80d2d4 <__subdf3+0x478>
  80d14c:	18bfffc4 	addi	r2,r3,-1
  80d150:	1000e926 	beq	r2,zero,80d4f8 <__subdf3+0x69c>
  80d154:	18c1ffd8 	cmpnei	r3,r3,2047
  80d158:	18012a26 	beq	r3,zero,80d604 <__subdf3+0x7a8>
  80d15c:	1007883a 	mov	r3,r2
  80d160:	003fd506 	br	80d0b8 <__subdf3+0x25c>
  80d164:	18fff844 	addi	r3,r3,-31
  80d168:	28800820 	cmpeqi	r2,r5,32
  80d16c:	20c6d83a 	srl	r3,r4,r3
  80d170:	1000041e 	bne	r2,zero,80d184 <__subdf3+0x328>
  80d174:	00801004 	movi	r2,64
  80d178:	114bc83a 	sub	r5,r2,r5
  80d17c:	2148983a 	sll	r4,r4,r5
  80d180:	8120b03a 	or	r16,r16,r4
  80d184:	8020c03a 	cmpne	r16,r16,zero
  80d188:	80e0b03a 	or	r16,r16,r3
  80d18c:	0009883a 	mov	r4,zero
  80d190:	0025883a 	mov	r18,zero
  80d194:	808001cc 	andi	r2,r16,7
  80d198:	103f891e 	bne	r2,zero,80cfc0 <__subdf3+0x164>
  80d19c:	8020d0fa 	srli	r16,r16,3
  80d1a0:	2004977a 	slli	r2,r4,29
  80d1a4:	2012d0fa 	srli	r9,r4,3
  80d1a8:	9007883a 	mov	r3,r18
  80d1ac:	8084b03a 	or	r2,r16,r2
  80d1b0:	1901ffe0 	cmpeqi	r4,r3,2047
  80d1b4:	2000191e 	bne	r4,zero,80d21c <__subdf3+0x3c0>
  80d1b8:	01000434 	movhi	r4,16
  80d1bc:	213fffc4 	addi	r4,r4,-1
  80d1c0:	4908703a 	and	r4,r9,r4
  80d1c4:	18c1ffcc 	andi	r3,r3,2047
  80d1c8:	003f9206 	br	80d014 <__subdf3+0x1b8>
  80d1cc:	7b60b03a 	or	r16,r15,r13
  80d1d0:	8020c03a 	cmpne	r16,r16,zero
  80d1d4:	83a1883a 	add	r16,r16,r14
  80d1d8:	8389803a 	cmpltu	r4,r16,r14
  80d1dc:	2249883a 	add	r4,r4,r9
  80d1e0:	2080202c 	andhi	r2,r4,128
  80d1e4:	103feb26 	beq	r2,zero,80d194 <__subdf3+0x338>
  80d1e8:	94800044 	addi	r18,r18,1
  80d1ec:	9081ffe0 	cmpeqi	r2,r18,2047
  80d1f0:	10006f26 	beq	r2,zero,80d3b0 <__subdf3+0x554>
  80d1f4:	00c1ffc4 	movi	r3,2047
  80d1f8:	0009883a 	mov	r4,zero
  80d1fc:	0005883a 	mov	r2,zero
  80d200:	003f8406 	br	80d014 <__subdf3+0x1b8>
  80d204:	4806977a 	slli	r3,r9,29
  80d208:	00880034 	movhi	r2,8192
  80d20c:	10bfffc4 	addi	r2,r2,-1
  80d210:	4812d0fa 	srli	r9,r9,3
  80d214:	2088703a 	and	r4,r4,r2
  80d218:	20c4b03a 	or	r2,r4,r3
  80d21c:	4886b03a 	or	r3,r9,r2
  80d220:	18013726 	beq	r3,zero,80d700 <__subdf3+0x8a4>
  80d224:	00c00434 	movhi	r3,16
  80d228:	18ffffc4 	addi	r3,r3,-1
  80d22c:	49000234 	orhi	r4,r9,8
  80d230:	20c8703a 	and	r4,r4,r3
  80d234:	00c1ffc4 	movi	r3,2047
  80d238:	003f7606 	br	80d014 <__subdf3+0x1b8>
  80d23c:	8009883a 	mov	r4,r16
  80d240:	080d92c0 	call	80d92c <__clzsi2>
  80d244:	10c00604 	addi	r3,r2,24
  80d248:	19000808 	cmpgei	r4,r3,32
  80d24c:	203f4526 	beq	r4,zero,80cf64 <__subdf3+0x108>
  80d250:	113ffe04 	addi	r4,r2,-8
  80d254:	8108983a 	sll	r4,r16,r4
  80d258:	0021883a 	mov	r16,zero
  80d25c:	1cbf480e 	bge	r3,r18,80cf80 <__subdf3+0x124>
  80d260:	00bfe034 	movhi	r2,65408
  80d264:	10bfffc4 	addi	r2,r2,-1
  80d268:	90e5c83a 	sub	r18,r18,r3
  80d26c:	2088703a 	and	r4,r4,r2
  80d270:	003f5106 	br	80cfb8 <__subdf3+0x15c>
  80d274:	18001e26 	beq	r3,zero,80d2f0 <__subdf3+0x494>
  80d278:	4487c83a 	sub	r3,r8,r18
  80d27c:	90006826 	beq	r18,zero,80d420 <__subdf3+0x5c4>
  80d280:	5000a526 	beq	r10,zero,80d518 <__subdf3+0x6bc>
  80d284:	4a402034 	orhi	r9,r9,128
  80d288:	18800e48 	cmpgei	r2,r3,57
  80d28c:	1000b61e 	bne	r2,zero,80d568 <__subdf3+0x70c>
  80d290:	18800808 	cmpgei	r2,r3,32
  80d294:	1001021e 	bne	r2,zero,80d6a0 <__subdf3+0x844>
  80d298:	00800804 	movi	r2,32
  80d29c:	10c5c83a 	sub	r2,r2,r3
  80d2a0:	48a0983a 	sll	r16,r9,r2
  80d2a4:	70c8d83a 	srl	r4,r14,r3
  80d2a8:	7084983a 	sll	r2,r14,r2
  80d2ac:	48d2d83a 	srl	r9,r9,r3
  80d2b0:	8120b03a 	or	r16,r16,r4
  80d2b4:	1004c03a 	cmpne	r2,r2,zero
  80d2b8:	80a0b03a 	or	r16,r16,r2
  80d2bc:	7a5f883a 	add	r15,r15,r9
  80d2c0:	8361883a 	add	r16,r16,r13
  80d2c4:	8349803a 	cmpltu	r4,r16,r13
  80d2c8:	23c9883a 	add	r4,r4,r15
  80d2cc:	4025883a 	mov	r18,r8
  80d2d0:	003fc306 	br	80d1e0 <__subdf3+0x384>
  80d2d4:	480a977a 	slli	r5,r9,29
  80d2d8:	00880034 	movhi	r2,8192
  80d2dc:	10bfffc4 	addi	r2,r2,-1
  80d2e0:	2088703a 	and	r4,r4,r2
  80d2e4:	4812d0fa 	srli	r9,r9,3
  80d2e8:	2144b03a 	or	r2,r4,r5
  80d2ec:	003fb006 	br	80d1b0 <__subdf3+0x354>
  80d2f0:	90800044 	addi	r2,r18,1
  80d2f4:	1141ff8c 	andi	r5,r2,2046
  80d2f8:	28005c1e 	bne	r5,zero,80d46c <__subdf3+0x610>
  80d2fc:	4b84b03a 	or	r2,r9,r14
  80d300:	9000a71e 	bne	r18,zero,80d5a0 <__subdf3+0x744>
  80d304:	1000df26 	beq	r2,zero,80d684 <__subdf3+0x828>
  80d308:	7b44b03a 	or	r2,r15,r13
  80d30c:	10008f26 	beq	r2,zero,80d54c <__subdf3+0x6f0>
  80d310:	7361883a 	add	r16,r14,r13
  80d314:	4bc9883a 	add	r4,r9,r15
  80d318:	839d803a 	cmpltu	r14,r16,r14
  80d31c:	2389883a 	add	r4,r4,r14
  80d320:	2080202c 	andhi	r2,r4,128
  80d324:	103f9b26 	beq	r2,zero,80d194 <__subdf3+0x338>
  80d328:	00bfe034 	movhi	r2,65408
  80d32c:	10bfffc4 	addi	r2,r2,-1
  80d330:	2088703a 	and	r4,r4,r2
  80d334:	04800044 	movi	r18,1
  80d338:	003f9606 	br	80d194 <__subdf3+0x338>
  80d33c:	50007626 	beq	r10,zero,80d518 <__subdf3+0x6bc>
  80d340:	4a402034 	orhi	r9,r9,128
  80d344:	18800e48 	cmpgei	r2,r3,57
  80d348:	10002e1e 	bne	r2,zero,80d404 <__subdf3+0x5a8>
  80d34c:	18800808 	cmpgei	r2,r3,32
  80d350:	1000881e 	bne	r2,zero,80d574 <__subdf3+0x718>
  80d354:	00800804 	movi	r2,32
  80d358:	10c5c83a 	sub	r2,r2,r3
  80d35c:	48a0983a 	sll	r16,r9,r2
  80d360:	70c8d83a 	srl	r4,r14,r3
  80d364:	709c983a 	sll	r14,r14,r2
  80d368:	48d2d83a 	srl	r9,r9,r3
  80d36c:	8120b03a 	or	r16,r16,r4
  80d370:	701cc03a 	cmpne	r14,r14,zero
  80d374:	83a0b03a 	or	r16,r16,r14
  80d378:	7a5fc83a 	sub	r15,r15,r9
  80d37c:	00002306 	br	80d40c <__subdf3+0x5b0>
  80d380:	7361c83a 	sub	r16,r14,r13
  80d384:	4be7c83a 	sub	r19,r9,r15
  80d388:	7409803a 	cmpltu	r4,r14,r16
  80d38c:	9927c83a 	sub	r19,r19,r4
  80d390:	9880202c 	andhi	r2,r19,128
  80d394:	1000411e 	bne	r2,zero,80d49c <__subdf3+0x640>
  80d398:	84c4b03a 	or	r2,r16,r19
  80d39c:	103eed1e 	bne	r2,zero,80cf54 <__subdf3+0xf8>
  80d3a0:	0013883a 	mov	r9,zero
  80d3a4:	0023883a 	mov	r17,zero
  80d3a8:	003f8306 	br	80d1b8 <__subdf3+0x35c>
  80d3ac:	04800084 	movi	r18,2
  80d3b0:	00bfe034 	movhi	r2,65408
  80d3b4:	10bfffc4 	addi	r2,r2,-1
  80d3b8:	8006d07a 	srli	r3,r16,1
  80d3bc:	2088703a 	and	r4,r4,r2
  80d3c0:	200497fa 	slli	r2,r4,31
  80d3c4:	8400004c 	andi	r16,r16,1
  80d3c8:	1c20b03a 	or	r16,r3,r16
  80d3cc:	2008d07a 	srli	r4,r4,1
  80d3d0:	1420b03a 	or	r16,r2,r16
  80d3d4:	003ef806 	br	80cfb8 <__subdf3+0x15c>
  80d3d8:	1c3ff804 	addi	r16,r3,-32
  80d3dc:	18800820 	cmpeqi	r2,r3,32
  80d3e0:	7c0ad83a 	srl	r5,r15,r16
  80d3e4:	1000041e 	bne	r2,zero,80d3f8 <__subdf3+0x59c>
  80d3e8:	00801004 	movi	r2,64
  80d3ec:	10c5c83a 	sub	r2,r2,r3
  80d3f0:	7884983a 	sll	r2,r15,r2
  80d3f4:	689ab03a 	or	r13,r13,r2
  80d3f8:	6820c03a 	cmpne	r16,r13,zero
  80d3fc:	8160b03a 	or	r16,r16,r5
  80d400:	003ecc06 	br	80cf34 <__subdf3+0xd8>
  80d404:	4b92b03a 	or	r9,r9,r14
  80d408:	4820c03a 	cmpne	r16,r9,zero
  80d40c:	6c21c83a 	sub	r16,r13,r16
  80d410:	6c09803a 	cmpltu	r4,r13,r16
  80d414:	7909c83a 	sub	r4,r15,r4
  80d418:	4025883a 	mov	r18,r8
  80d41c:	003ec806 	br	80cf40 <__subdf3+0xe4>
  80d420:	4b84b03a 	or	r2,r9,r14
  80d424:	10007e26 	beq	r2,zero,80d620 <__subdf3+0x7c4>
  80d428:	18bfffc4 	addi	r2,r3,-1
  80d42c:	1000a726 	beq	r2,zero,80d6cc <__subdf3+0x870>
  80d430:	18c1ffd8 	cmpnei	r3,r3,2047
  80d434:	18003826 	beq	r3,zero,80d518 <__subdf3+0x6bc>
  80d438:	1007883a 	mov	r3,r2
  80d43c:	003f9206 	br	80d288 <__subdf3+0x42c>
  80d440:	00800804 	movi	r2,32
  80d444:	10c5c83a 	sub	r2,r2,r3
  80d448:	78a0983a 	sll	r16,r15,r2
  80d44c:	68c8d83a 	srl	r4,r13,r3
  80d450:	689a983a 	sll	r13,r13,r2
  80d454:	78c4d83a 	srl	r2,r15,r3
  80d458:	8120b03a 	or	r16,r16,r4
  80d45c:	681ac03a 	cmpne	r13,r13,zero
  80d460:	8360b03a 	or	r16,r16,r13
  80d464:	4893883a 	add	r9,r9,r2
  80d468:	003f5a06 	br	80d1d4 <__subdf3+0x378>
  80d46c:	10c1ffe0 	cmpeqi	r3,r2,2047
  80d470:	183f601e 	bne	r3,zero,80d1f4 <__subdf3+0x398>
  80d474:	735b883a 	add	r13,r14,r13
  80d478:	6b9d803a 	cmpltu	r14,r13,r14
  80d47c:	4bc9883a 	add	r4,r9,r15
  80d480:	2389883a 	add	r4,r4,r14
  80d484:	202097fa 	slli	r16,r4,31
  80d488:	681ad07a 	srli	r13,r13,1
  80d48c:	2008d07a 	srli	r4,r4,1
  80d490:	1025883a 	mov	r18,r2
  80d494:	8360b03a 	or	r16,r16,r13
  80d498:	003f3e06 	br	80d194 <__subdf3+0x338>
  80d49c:	6ba1c83a 	sub	r16,r13,r14
  80d4a0:	7a49c83a 	sub	r4,r15,r9
  80d4a4:	6c1b803a 	cmpltu	r13,r13,r16
  80d4a8:	2367c83a 	sub	r19,r4,r13
  80d4ac:	5823883a 	mov	r17,r11
  80d4b0:	003ea806 	br	80cf54 <__subdf3+0xf8>
  80d4b4:	7808977a 	slli	r4,r15,29
  80d4b8:	00880034 	movhi	r2,8192
  80d4bc:	10bfffc4 	addi	r2,r2,-1
  80d4c0:	308c703a 	and	r6,r6,r2
  80d4c4:	7812d0fa 	srli	r9,r15,3
  80d4c8:	3104b03a 	or	r2,r6,r4
  80d4cc:	003f3806 	br	80d1b0 <__subdf3+0x354>
  80d4d0:	28005a1e 	bne	r5,zero,80d63c <__subdf3+0x7e0>
  80d4d4:	10008526 	beq	r2,zero,80d6ec <__subdf3+0x890>
  80d4d8:	7806977a 	slli	r3,r15,29
  80d4dc:	00880034 	movhi	r2,8192
  80d4e0:	10bfffc4 	addi	r2,r2,-1
  80d4e4:	3084703a 	and	r2,r6,r2
  80d4e8:	7812d0fa 	srli	r9,r15,3
  80d4ec:	10c4b03a 	or	r2,r2,r3
  80d4f0:	5823883a 	mov	r17,r11
  80d4f4:	003f4906 	br	80d21c <__subdf3+0x3c0>
  80d4f8:	7361883a 	add	r16,r14,r13
  80d4fc:	4bc9883a 	add	r4,r9,r15
  80d500:	839d803a 	cmpltu	r14,r16,r14
  80d504:	2389883a 	add	r4,r4,r14
  80d508:	2080202c 	andhi	r2,r4,128
  80d50c:	103fa71e 	bne	r2,zero,80d3ac <__subdf3+0x550>
  80d510:	04800044 	movi	r18,1
  80d514:	003f1f06 	br	80d194 <__subdf3+0x338>
  80d518:	7806977a 	slli	r3,r15,29
  80d51c:	00880034 	movhi	r2,8192
  80d520:	10bfffc4 	addi	r2,r2,-1
  80d524:	3084703a 	and	r2,r6,r2
  80d528:	7812d0fa 	srli	r9,r15,3
  80d52c:	10c4b03a 	or	r2,r2,r3
  80d530:	003f3a06 	br	80d21c <__subdf3+0x3c0>
  80d534:	7361c83a 	sub	r16,r14,r13
  80d538:	4bc9c83a 	sub	r4,r9,r15
  80d53c:	741d803a 	cmpltu	r14,r14,r16
  80d540:	2389c83a 	sub	r4,r4,r14
  80d544:	04800044 	movi	r18,1
  80d548:	003e7d06 	br	80cf40 <__subdf3+0xe4>
  80d54c:	480a977a 	slli	r5,r9,29
  80d550:	00880034 	movhi	r2,8192
  80d554:	10bfffc4 	addi	r2,r2,-1
  80d558:	2084703a 	and	r2,r4,r2
  80d55c:	4812d0fa 	srli	r9,r9,3
  80d560:	1144b03a 	or	r2,r2,r5
  80d564:	003f1406 	br	80d1b8 <__subdf3+0x35c>
  80d568:	4b92b03a 	or	r9,r9,r14
  80d56c:	4820c03a 	cmpne	r16,r9,zero
  80d570:	003f5306 	br	80d2c0 <__subdf3+0x464>
  80d574:	1c3ff804 	addi	r16,r3,-32
  80d578:	19000820 	cmpeqi	r4,r3,32
  80d57c:	4c04d83a 	srl	r2,r9,r16
  80d580:	2000041e 	bne	r4,zero,80d594 <__subdf3+0x738>
  80d584:	01001004 	movi	r4,64
  80d588:	20c7c83a 	sub	r3,r4,r3
  80d58c:	48d2983a 	sll	r9,r9,r3
  80d590:	725cb03a 	or	r14,r14,r9
  80d594:	7020c03a 	cmpne	r16,r14,zero
  80d598:	80a0b03a 	or	r16,r16,r2
  80d59c:	003f9b06 	br	80d40c <__subdf3+0x5b0>
  80d5a0:	103fdd26 	beq	r2,zero,80d518 <__subdf3+0x6bc>
  80d5a4:	7b5ab03a 	or	r13,r15,r13
  80d5a8:	480a977a 	slli	r5,r9,29
  80d5ac:	4812d0fa 	srli	r9,r9,3
  80d5b0:	6800251e 	bne	r13,zero,80d648 <__subdf3+0x7ec>
  80d5b4:	00880034 	movhi	r2,8192
  80d5b8:	10bfffc4 	addi	r2,r2,-1
  80d5bc:	2084703a 	and	r2,r4,r2
  80d5c0:	1144b03a 	or	r2,r2,r5
  80d5c4:	003f1506 	br	80d21c <__subdf3+0x3c0>
  80d5c8:	103f7526 	beq	r2,zero,80d3a0 <__subdf3+0x544>
  80d5cc:	7808977a 	slli	r4,r15,29
  80d5d0:	00880034 	movhi	r2,8192
  80d5d4:	10bfffc4 	addi	r2,r2,-1
  80d5d8:	3084703a 	and	r2,r6,r2
  80d5dc:	7812d0fa 	srli	r9,r15,3
  80d5e0:	1104b03a 	or	r2,r2,r4
  80d5e4:	5823883a 	mov	r17,r11
  80d5e8:	003ef306 	br	80d1b8 <__subdf3+0x35c>
  80d5ec:	6ba1c83a 	sub	r16,r13,r14
  80d5f0:	7a49c83a 	sub	r4,r15,r9
  80d5f4:	6c1b803a 	cmpltu	r13,r13,r16
  80d5f8:	2349c83a 	sub	r4,r4,r13
  80d5fc:	04800044 	movi	r18,1
  80d600:	003e4f06 	br	80cf40 <__subdf3+0xe4>
  80d604:	4806977a 	slli	r3,r9,29
  80d608:	00880034 	movhi	r2,8192
  80d60c:	10bfffc4 	addi	r2,r2,-1
  80d610:	2084703a 	and	r2,r4,r2
  80d614:	4812d0fa 	srli	r9,r9,3
  80d618:	10c4b03a 	or	r2,r2,r3
  80d61c:	003eff06 	br	80d21c <__subdf3+0x3c0>
  80d620:	7808977a 	slli	r4,r15,29
  80d624:	00880034 	movhi	r2,8192
  80d628:	10bfffc4 	addi	r2,r2,-1
  80d62c:	3084703a 	and	r2,r6,r2
  80d630:	7812d0fa 	srli	r9,r15,3
  80d634:	1104b03a 	or	r2,r2,r4
  80d638:	003edd06 	br	80d1b0 <__subdf3+0x354>
  80d63c:	480a977a 	slli	r5,r9,29
  80d640:	4812d0fa 	srli	r9,r9,3
  80d644:	103fdb26 	beq	r2,zero,80d5b4 <__subdf3+0x758>
  80d648:	00c80034 	movhi	r3,8192
  80d64c:	18ffffc4 	addi	r3,r3,-1
  80d650:	20c4703a 	and	r2,r4,r3
  80d654:	4900022c 	andhi	r4,r9,8
  80d658:	1144b03a 	or	r2,r2,r5
  80d65c:	203eef26 	beq	r4,zero,80d21c <__subdf3+0x3c0>
  80d660:	7808d0fa 	srli	r4,r15,3
  80d664:	2140022c 	andhi	r5,r4,8
  80d668:	283eec1e 	bne	r5,zero,80d21c <__subdf3+0x3c0>
  80d66c:	7804977a 	slli	r2,r15,29
  80d670:	30cc703a 	and	r6,r6,r3
  80d674:	5823883a 	mov	r17,r11
  80d678:	3084b03a 	or	r2,r6,r2
  80d67c:	2013883a 	mov	r9,r4
  80d680:	003ee606 	br	80d21c <__subdf3+0x3c0>
  80d684:	7808977a 	slli	r4,r15,29
  80d688:	00880034 	movhi	r2,8192
  80d68c:	10bfffc4 	addi	r2,r2,-1
  80d690:	3084703a 	and	r2,r6,r2
  80d694:	7812d0fa 	srli	r9,r15,3
  80d698:	1104b03a 	or	r2,r2,r4
  80d69c:	003ec606 	br	80d1b8 <__subdf3+0x35c>
  80d6a0:	18bff804 	addi	r2,r3,-32
  80d6a4:	19000820 	cmpeqi	r4,r3,32
  80d6a8:	4884d83a 	srl	r2,r9,r2
  80d6ac:	2000041e 	bne	r4,zero,80d6c0 <__subdf3+0x864>
  80d6b0:	01001004 	movi	r4,64
  80d6b4:	20c7c83a 	sub	r3,r4,r3
  80d6b8:	48d2983a 	sll	r9,r9,r3
  80d6bc:	725cb03a 	or	r14,r14,r9
  80d6c0:	7020c03a 	cmpne	r16,r14,zero
  80d6c4:	80a0b03a 	or	r16,r16,r2
  80d6c8:	003efd06 	br	80d2c0 <__subdf3+0x464>
  80d6cc:	7361883a 	add	r16,r14,r13
  80d6d0:	4bc9883a 	add	r4,r9,r15
  80d6d4:	835b803a 	cmpltu	r13,r16,r13
  80d6d8:	2349883a 	add	r4,r4,r13
  80d6dc:	003f8a06 	br	80d508 <__subdf3+0x6ac>
  80d6e0:	8104b03a 	or	r2,r16,r4
  80d6e4:	103f2e26 	beq	r2,zero,80d3a0 <__subdf3+0x544>
  80d6e8:	003eaa06 	br	80d194 <__subdf3+0x338>
  80d6ec:	02400434 	movhi	r9,16
  80d6f0:	0023883a 	mov	r17,zero
  80d6f4:	00bfffc4 	movi	r2,-1
  80d6f8:	4a7fffc4 	addi	r9,r9,-1
  80d6fc:	003ec906 	br	80d224 <__subdf3+0x3c8>
  80d700:	0005883a 	mov	r2,zero
  80d704:	00c1ffc4 	movi	r3,2047
  80d708:	0009883a 	mov	r4,zero
  80d70c:	003e4106 	br	80d014 <__subdf3+0x1b8>

0080d710 <__unorddf2>:
  80d710:	2806d53a 	srli	r3,r5,20
  80d714:	3810d53a 	srli	r8,r7,20
  80d718:	02400434 	movhi	r9,16
  80d71c:	18c1ffcc 	andi	r3,r3,2047
  80d720:	4a7fffc4 	addi	r9,r9,-1
  80d724:	18c1ffd8 	cmpnei	r3,r3,2047
  80d728:	2a4a703a 	and	r5,r5,r9
  80d72c:	3a4e703a 	and	r7,r7,r9
  80d730:	4201ffcc 	andi	r8,r8,2047
  80d734:	18000426 	beq	r3,zero,80d748 <__unorddf2+0x38>
  80d738:	4201ffd8 	cmpnei	r8,r8,2047
  80d73c:	40000626 	beq	r8,zero,80d758 <__unorddf2+0x48>
  80d740:	0005883a 	mov	r2,zero
  80d744:	f800283a 	ret
  80d748:	290ab03a 	or	r5,r5,r4
  80d74c:	283ffa26 	beq	r5,zero,80d738 <__unorddf2+0x28>
  80d750:	00800044 	movi	r2,1
  80d754:	f800283a 	ret
  80d758:	398eb03a 	or	r7,r7,r6
  80d75c:	3804c03a 	cmpne	r2,r7,zero
  80d760:	f800283a 	ret

0080d764 <__fixdfsi>:
  80d764:	2806d53a 	srli	r3,r5,20
  80d768:	01800434 	movhi	r6,16
  80d76c:	31bfffc4 	addi	r6,r6,-1
  80d770:	18c1ffcc 	andi	r3,r3,2047
  80d774:	19c0ffd0 	cmplti	r7,r3,1023
  80d778:	2810d7fa 	srli	r8,r5,31
  80d77c:	298a703a 	and	r5,r5,r6
  80d780:	3800061e 	bne	r7,zero,80d79c <__fixdfsi+0x38>
  80d784:	18810790 	cmplti	r2,r3,1054
  80d788:	1000061e 	bne	r2,zero,80d7a4 <__fixdfsi+0x40>
  80d78c:	00a00034 	movhi	r2,32768
  80d790:	10bfffc4 	addi	r2,r2,-1
  80d794:	4085883a 	add	r2,r8,r2
  80d798:	f800283a 	ret
  80d79c:	0005883a 	mov	r2,zero
  80d7a0:	f800283a 	ret
  80d7a4:	01810cc4 	movi	r6,1075
  80d7a8:	30cdc83a 	sub	r6,r6,r3
  80d7ac:	30800808 	cmpgei	r2,r6,32
  80d7b0:	29400434 	orhi	r5,r5,16
  80d7b4:	1000071e 	bne	r2,zero,80d7d4 <__fixdfsi+0x70>
  80d7b8:	18befb44 	addi	r2,r3,-1043
  80d7bc:	2884983a 	sll	r2,r5,r2
  80d7c0:	2188d83a 	srl	r4,r4,r6
  80d7c4:	1104b03a 	or	r2,r2,r4
  80d7c8:	403ff526 	beq	r8,zero,80d7a0 <__fixdfsi+0x3c>
  80d7cc:	0085c83a 	sub	r2,zero,r2
  80d7d0:	f800283a 	ret
  80d7d4:	008104c4 	movi	r2,1043
  80d7d8:	10c5c83a 	sub	r2,r2,r3
  80d7dc:	2884d83a 	srl	r2,r5,r2
  80d7e0:	003ff906 	br	80d7c8 <__fixdfsi+0x64>

0080d7e4 <__floatsidf>:
  80d7e4:	defffd04 	addi	sp,sp,-12
  80d7e8:	dfc00215 	stw	ra,8(sp)
  80d7ec:	dc400115 	stw	r17,4(sp)
  80d7f0:	dc000015 	stw	r16,0(sp)
  80d7f4:	20001326 	beq	r4,zero,80d844 <__floatsidf+0x60>
  80d7f8:	2022d7fa 	srli	r17,r4,31
  80d7fc:	2021883a 	mov	r16,r4
  80d800:	20002416 	blt	r4,zero,80d894 <__floatsidf+0xb0>
  80d804:	8009883a 	mov	r4,r16
  80d808:	080d92c0 	call	80d92c <__clzsi2>
  80d80c:	01010784 	movi	r4,1054
  80d810:	2089c83a 	sub	r4,r4,r2
  80d814:	114002c8 	cmpgei	r5,r2,11
  80d818:	20c1ffcc 	andi	r3,r4,2047
  80d81c:	2800161e 	bne	r5,zero,80d878 <__floatsidf+0x94>
  80d820:	010002c4 	movi	r4,11
  80d824:	2089c83a 	sub	r4,r4,r2
  80d828:	810ad83a 	srl	r5,r16,r4
  80d82c:	01000434 	movhi	r4,16
  80d830:	10800544 	addi	r2,r2,21
  80d834:	213fffc4 	addi	r4,r4,-1
  80d838:	8084983a 	sll	r2,r16,r2
  80d83c:	290a703a 	and	r5,r5,r4
  80d840:	00000406 	br	80d854 <__floatsidf+0x70>
  80d844:	0023883a 	mov	r17,zero
  80d848:	0007883a 	mov	r3,zero
  80d84c:	000b883a 	mov	r5,zero
  80d850:	0005883a 	mov	r2,zero
  80d854:	1808953a 	slli	r4,r3,20
  80d858:	880697fa 	slli	r3,r17,31
  80d85c:	2148b03a 	or	r4,r4,r5
  80d860:	20c6b03a 	or	r3,r4,r3
  80d864:	dfc00217 	ldw	ra,8(sp)
  80d868:	dc400117 	ldw	r17,4(sp)
  80d86c:	dc000017 	ldw	r16,0(sp)
  80d870:	dec00304 	addi	sp,sp,12
  80d874:	f800283a 	ret
  80d878:	10bffd44 	addi	r2,r2,-11
  80d87c:	808a983a 	sll	r5,r16,r2
  80d880:	00800434 	movhi	r2,16
  80d884:	10bfffc4 	addi	r2,r2,-1
  80d888:	288a703a 	and	r5,r5,r2
  80d88c:	0005883a 	mov	r2,zero
  80d890:	003ff006 	br	80d854 <__floatsidf+0x70>
  80d894:	0121c83a 	sub	r16,zero,r4
  80d898:	003fda06 	br	80d804 <__floatsidf+0x20>

0080d89c <__floatunsidf>:
  80d89c:	defffe04 	addi	sp,sp,-8
  80d8a0:	dc000015 	stw	r16,0(sp)
  80d8a4:	dfc00115 	stw	ra,4(sp)
  80d8a8:	2021883a 	mov	r16,r4
  80d8ac:	20000f26 	beq	r4,zero,80d8ec <__floatunsidf+0x50>
  80d8b0:	080d92c0 	call	80d92c <__clzsi2>
  80d8b4:	00c10784 	movi	r3,1054
  80d8b8:	1887c83a 	sub	r3,r3,r2
  80d8bc:	110002c8 	cmpgei	r4,r2,11
  80d8c0:	18c1ffcc 	andi	r3,r3,2047
  80d8c4:	2000121e 	bne	r4,zero,80d910 <__floatunsidf+0x74>
  80d8c8:	014002c4 	movi	r5,11
  80d8cc:	288bc83a 	sub	r5,r5,r2
  80d8d0:	814ad83a 	srl	r5,r16,r5
  80d8d4:	01000434 	movhi	r4,16
  80d8d8:	10800544 	addi	r2,r2,21
  80d8dc:	213fffc4 	addi	r4,r4,-1
  80d8e0:	80a0983a 	sll	r16,r16,r2
  80d8e4:	290a703a 	and	r5,r5,r4
  80d8e8:	00000206 	br	80d8f4 <__floatunsidf+0x58>
  80d8ec:	0007883a 	mov	r3,zero
  80d8f0:	000b883a 	mov	r5,zero
  80d8f4:	1806953a 	slli	r3,r3,20
  80d8f8:	8005883a 	mov	r2,r16
  80d8fc:	1946b03a 	or	r3,r3,r5
  80d900:	dfc00117 	ldw	ra,4(sp)
  80d904:	dc000017 	ldw	r16,0(sp)
  80d908:	dec00204 	addi	sp,sp,8
  80d90c:	f800283a 	ret
  80d910:	117ffd44 	addi	r5,r2,-11
  80d914:	814a983a 	sll	r5,r16,r5
  80d918:	00800434 	movhi	r2,16
  80d91c:	10bfffc4 	addi	r2,r2,-1
  80d920:	288a703a 	and	r5,r5,r2
  80d924:	0021883a 	mov	r16,zero
  80d928:	003ff206 	br	80d8f4 <__floatunsidf+0x58>

0080d92c <__clzsi2>:
  80d92c:	00bfffd4 	movui	r2,65535
  80d930:	11000436 	bltu	r2,r4,80d944 <__clzsi2+0x18>
  80d934:	20804030 	cmpltui	r2,r4,256
  80d938:	10000e26 	beq	r2,zero,80d974 <__clzsi2+0x48>
  80d93c:	01400804 	movi	r5,32
  80d940:	00000406 	br	80d954 <__clzsi2+0x28>
  80d944:	00804034 	movhi	r2,256
  80d948:	20800736 	bltu	r4,r2,80d968 <__clzsi2+0x3c>
  80d94c:	2008d63a 	srli	r4,r4,24
  80d950:	01400204 	movi	r5,8
  80d954:	00c02074 	movhi	r3,129
  80d958:	20c7883a 	add	r3,r4,r3
  80d95c:	18857a03 	ldbu	r2,5608(r3)
  80d960:	2885c83a 	sub	r2,r5,r2
  80d964:	f800283a 	ret
  80d968:	2008d43a 	srli	r4,r4,16
  80d96c:	01400404 	movi	r5,16
  80d970:	003ff806 	br	80d954 <__clzsi2+0x28>
  80d974:	2008d23a 	srli	r4,r4,8
  80d978:	01400604 	movi	r5,24
  80d97c:	003ff506 	br	80d954 <__clzsi2+0x28>

0080d980 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  80d980:	defffe04 	addi	sp,sp,-8
  80d984:	dfc00115 	stw	ra,4(sp)
  80d988:	df000015 	stw	fp,0(sp)
  80d98c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80d990:	d0a00917 	ldw	r2,-32732(gp)
  80d994:	10000326 	beq	r2,zero,80d9a4 <alt_get_errno+0x24>
  80d998:	d0a00917 	ldw	r2,-32732(gp)
  80d99c:	103ee83a 	callr	r2
  80d9a0:	00000106 	br	80d9a8 <alt_get_errno+0x28>
  80d9a4:	d0a74704 	addi	r2,gp,-25316
}
  80d9a8:	e037883a 	mov	sp,fp
  80d9ac:	dfc00117 	ldw	ra,4(sp)
  80d9b0:	df000017 	ldw	fp,0(sp)
  80d9b4:	dec00204 	addi	sp,sp,8
  80d9b8:	f800283a 	ret

0080d9bc <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
  80d9bc:	defffb04 	addi	sp,sp,-20
  80d9c0:	dfc00415 	stw	ra,16(sp)
  80d9c4:	df000315 	stw	fp,12(sp)
  80d9c8:	df000304 	addi	fp,sp,12
  80d9cc:	e13ffd15 	stw	r4,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
  80d9d0:	e0bffd17 	ldw	r2,-12(fp)
  80d9d4:	10000916 	blt	r2,zero,80d9fc <close+0x40>
  80d9d8:	e0fffd17 	ldw	r3,-12(fp)
  80d9dc:	1805883a 	mov	r2,r3
  80d9e0:	1085883a 	add	r2,r2,r2
  80d9e4:	10c5883a 	add	r2,r2,r3
  80d9e8:	100490ba 	slli	r2,r2,2
  80d9ec:	00c02074 	movhi	r3,129
  80d9f0:	18c83804 	addi	r3,r3,8416
  80d9f4:	10c5883a 	add	r2,r2,r3
  80d9f8:	00000106 	br	80da00 <close+0x44>
  80d9fc:	0005883a 	mov	r2,zero
  80da00:	e0bfff15 	stw	r2,-4(fp)

  if (fd)
  80da04:	e0bfff17 	ldw	r2,-4(fp)
  80da08:	10001926 	beq	r2,zero,80da70 <close+0xb4>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
  80da0c:	e0bfff17 	ldw	r2,-4(fp)
  80da10:	10800017 	ldw	r2,0(r2)
  80da14:	10800417 	ldw	r2,16(r2)
  80da18:	10000626 	beq	r2,zero,80da34 <close+0x78>
  80da1c:	e0bfff17 	ldw	r2,-4(fp)
  80da20:	10800017 	ldw	r2,0(r2)
  80da24:	10800417 	ldw	r2,16(r2)
  80da28:	e13fff17 	ldw	r4,-4(fp)
  80da2c:	103ee83a 	callr	r2
  80da30:	00000106 	br	80da38 <close+0x7c>
  80da34:	0005883a 	mov	r2,zero
  80da38:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
  80da3c:	e13ffd17 	ldw	r4,-12(fp)
  80da40:	080e5900 	call	80e590 <alt_release_fd>
    if (rval < 0)
  80da44:	e0bffe17 	ldw	r2,-8(fp)
  80da48:	1000070e 	bge	r2,zero,80da68 <close+0xac>
    {
      ALT_ERRNO = -rval;
  80da4c:	080d9800 	call	80d980 <alt_get_errno>
  80da50:	1007883a 	mov	r3,r2
  80da54:	e0bffe17 	ldw	r2,-8(fp)
  80da58:	0085c83a 	sub	r2,zero,r2
  80da5c:	18800015 	stw	r2,0(r3)
      return -1;
  80da60:	00bfffc4 	movi	r2,-1
  80da64:	00000706 	br	80da84 <close+0xc8>
    }
    return 0;
  80da68:	0005883a 	mov	r2,zero
  80da6c:	00000506 	br	80da84 <close+0xc8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80da70:	080d9800 	call	80d980 <alt_get_errno>
  80da74:	1007883a 	mov	r3,r2
  80da78:	00801444 	movi	r2,81
  80da7c:	18800015 	stw	r2,0(r3)
    return -1;
  80da80:	00bfffc4 	movi	r2,-1
  }
}
  80da84:	e037883a 	mov	sp,fp
  80da88:	dfc00117 	ldw	ra,4(sp)
  80da8c:	df000017 	ldw	fp,0(sp)
  80da90:	dec00204 	addi	sp,sp,8
  80da94:	f800283a 	ret

0080da98 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
  80da98:	defffe04 	addi	sp,sp,-8
  80da9c:	df000115 	stw	fp,4(sp)
  80daa0:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80daa4:	e03fff15 	stw	zero,-4(fp)
  80daa8:	00000506 	br	80dac0 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  80daac:	e0bfff17 	ldw	r2,-4(fp)
  80dab0:	1000003b 	flushd	0(r2)
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  80dab4:	e0bfff17 	ldw	r2,-4(fp)
  80dab8:	10800804 	addi	r2,r2,32
  80dabc:	e0bfff15 	stw	r2,-4(fp)
  80dac0:	e0bfff17 	ldw	r2,-4(fp)
  80dac4:	10880030 	cmpltui	r2,r2,8192
  80dac8:	103ff81e 	bne	r2,zero,80daac <alt_dcache_flush_all+0x14>
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
  80dacc:	0001883a 	nop
  80dad0:	0001883a 	nop
  80dad4:	e037883a 	mov	sp,fp
  80dad8:	df000017 	ldw	fp,0(sp)
  80dadc:	dec00104 	addi	sp,sp,4
  80dae0:	f800283a 	ret

0080dae4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  80dae4:	defffc04 	addi	sp,sp,-16
  80dae8:	df000315 	stw	fp,12(sp)
  80daec:	df000304 	addi	fp,sp,12
  80daf0:	e13fff15 	stw	r4,-4(fp)
  80daf4:	e17ffe15 	stw	r5,-8(fp)
  80daf8:	e1bffd15 	stw	r6,-12(fp)
  return len;
  80dafc:	e0bffd17 	ldw	r2,-12(fp)
}
  80db00:	e037883a 	mov	sp,fp
  80db04:	df000017 	ldw	fp,0(sp)
  80db08:	dec00104 	addi	sp,sp,4
  80db0c:	f800283a 	ret

0080db10 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
  80db10:	defffd04 	addi	sp,sp,-12
  80db14:	df000215 	stw	fp,8(sp)
  80db18:	df000204 	addi	fp,sp,8
  80db1c:	e13ffe15 	stw	r4,-8(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
  80db20:	0001883a 	nop
  80db24:	e0bffe17 	ldw	r2,-8(fp)
  80db28:	e0bfff15 	stw	r2,-4(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
  80db2c:	e0bfff17 	ldw	r2,-4(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
  80db30:	10000226 	beq	r2,zero,80db3c <_exit+0x2c>
    ALT_SIM_FAIL();
  80db34:	002af070 	cmpltui	zero,zero,43969
  } else {
    ALT_SIM_PASS();
  }
#endif /* DEBUG_STUB */
}
  80db38:	00000106 	br	80db40 <_exit+0x30>
    ALT_SIM_PASS();
  80db3c:	002af0b0 	cmpltui	zero,zero,43970
}
  80db40:	0001883a 	nop
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
  80db44:	003fff06 	br	80db44 <_exit+0x34>

0080db48 <alt_get_errno>:
{
  80db48:	defffe04 	addi	sp,sp,-8
  80db4c:	dfc00115 	stw	ra,4(sp)
  80db50:	df000015 	stw	fp,0(sp)
  80db54:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80db58:	d0a00917 	ldw	r2,-32732(gp)
  80db5c:	10000326 	beq	r2,zero,80db6c <alt_get_errno+0x24>
  80db60:	d0a00917 	ldw	r2,-32732(gp)
  80db64:	103ee83a 	callr	r2
  80db68:	00000106 	br	80db70 <alt_get_errno+0x28>
  80db6c:	d0a74704 	addi	r2,gp,-25316
}
  80db70:	e037883a 	mov	sp,fp
  80db74:	dfc00117 	ldw	ra,4(sp)
  80db78:	df000017 	ldw	fp,0(sp)
  80db7c:	dec00204 	addi	sp,sp,8
  80db80:	f800283a 	ret

0080db84 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
  80db84:	defffb04 	addi	sp,sp,-20
  80db88:	dfc00415 	stw	ra,16(sp)
  80db8c:	df000315 	stw	fp,12(sp)
  80db90:	df000304 	addi	fp,sp,12
  80db94:	e13ffe15 	stw	r4,-8(fp)
  80db98:	e17ffd15 	stw	r5,-12(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80db9c:	e0bffe17 	ldw	r2,-8(fp)
  80dba0:	10000916 	blt	r2,zero,80dbc8 <fstat+0x44>
  80dba4:	e0fffe17 	ldw	r3,-8(fp)
  80dba8:	1805883a 	mov	r2,r3
  80dbac:	1085883a 	add	r2,r2,r2
  80dbb0:	10c5883a 	add	r2,r2,r3
  80dbb4:	100490ba 	slli	r2,r2,2
  80dbb8:	00c02074 	movhi	r3,129
  80dbbc:	18c83804 	addi	r3,r3,8416
  80dbc0:	10c5883a 	add	r2,r2,r3
  80dbc4:	00000106 	br	80dbcc <fstat+0x48>
  80dbc8:	0005883a 	mov	r2,zero
  80dbcc:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80dbd0:	e0bfff17 	ldw	r2,-4(fp)
  80dbd4:	10001026 	beq	r2,zero,80dc18 <fstat+0x94>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
  80dbd8:	e0bfff17 	ldw	r2,-4(fp)
  80dbdc:	10800017 	ldw	r2,0(r2)
  80dbe0:	10800817 	ldw	r2,32(r2)
  80dbe4:	10000726 	beq	r2,zero,80dc04 <fstat+0x80>
    {
      return fd->dev->fstat(fd, st);
  80dbe8:	e0bfff17 	ldw	r2,-4(fp)
  80dbec:	10800017 	ldw	r2,0(r2)
  80dbf0:	10800817 	ldw	r2,32(r2)
  80dbf4:	e17ffd17 	ldw	r5,-12(fp)
  80dbf8:	e13fff17 	ldw	r4,-4(fp)
  80dbfc:	103ee83a 	callr	r2
  80dc00:	00000a06 	br	80dc2c <fstat+0xa8>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
  80dc04:	e0bffd17 	ldw	r2,-12(fp)
  80dc08:	00c80004 	movi	r3,8192
  80dc0c:	10c00115 	stw	r3,4(r2)
      return 0;
  80dc10:	0005883a 	mov	r2,zero
  80dc14:	00000506 	br	80dc2c <fstat+0xa8>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80dc18:	080db480 	call	80db48 <alt_get_errno>
  80dc1c:	1007883a 	mov	r3,r2
  80dc20:	00801444 	movi	r2,81
  80dc24:	18800015 	stw	r2,0(r3)
    return -1;
  80dc28:	00bfffc4 	movi	r2,-1
  }
}
  80dc2c:	e037883a 	mov	sp,fp
  80dc30:	dfc00117 	ldw	ra,4(sp)
  80dc34:	df000017 	ldw	fp,0(sp)
  80dc38:	dec00204 	addi	sp,sp,8
  80dc3c:	f800283a 	ret

0080dc40 <getpid>:
 *
 * ALT_GETPID is mapped onto the getpid() system call in alt_syscall.h
 */
 
int ALT_GETPID (void)
{
  80dc40:	deffff04 	addi	sp,sp,-4
  80dc44:	df000015 	stw	fp,0(sp)
  80dc48:	d839883a 	mov	fp,sp
  return 0;
  80dc4c:	0005883a 	mov	r2,zero
}
  80dc50:	e037883a 	mov	sp,fp
  80dc54:	df000017 	ldw	fp,0(sp)
  80dc58:	dec00104 	addi	sp,sp,4
  80dc5c:	f800283a 	ret

0080dc60 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
  80dc60:	defffe04 	addi	sp,sp,-8
  80dc64:	dfc00115 	stw	ra,4(sp)
  80dc68:	df000015 	stw	fp,0(sp)
  80dc6c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
  80dc70:	01480004 	movi	r5,8192
  80dc74:	0009883a 	mov	r4,zero
  80dc78:	08104f00 	call	8104f0 <alt_icache_flush>
#endif
}
  80dc7c:	0001883a 	nop
  80dc80:	e037883a 	mov	sp,fp
  80dc84:	dfc00117 	ldw	ra,4(sp)
  80dc88:	df000017 	ldw	fp,0(sp)
  80dc8c:	dec00204 	addi	sp,sp,8
  80dc90:	f800283a 	ret

0080dc94 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80dc94:	defff904 	addi	sp,sp,-28
  80dc98:	dfc00615 	stw	ra,24(sp)
  80dc9c:	df000515 	stw	fp,20(sp)
  80dca0:	df000504 	addi	fp,sp,20
  80dca4:	e13fff15 	stw	r4,-4(fp)
  80dca8:	e17ffe15 	stw	r5,-8(fp)
  80dcac:	e1bffd15 	stw	r6,-12(fp)
  80dcb0:	e1fffc15 	stw	r7,-16(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
  80dcb4:	e0800217 	ldw	r2,8(fp)
  80dcb8:	d8800015 	stw	r2,0(sp)
  80dcbc:	e1fffc17 	ldw	r7,-16(fp)
  80dcc0:	e1bffd17 	ldw	r6,-12(fp)
  80dcc4:	e17ffe17 	ldw	r5,-8(fp)
  80dcc8:	e13fff17 	ldw	r4,-4(fp)
  80dccc:	080de440 	call	80de44 <alt_iic_isr_register>
}  
  80dcd0:	e037883a 	mov	sp,fp
  80dcd4:	dfc00117 	ldw	ra,4(sp)
  80dcd8:	df000017 	ldw	fp,0(sp)
  80dcdc:	dec00204 	addi	sp,sp,8
  80dce0:	f800283a 	ret

0080dce4 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
  80dce4:	defff904 	addi	sp,sp,-28
  80dce8:	df000615 	stw	fp,24(sp)
  80dcec:	df000604 	addi	fp,sp,24
  80dcf0:	e13ffb15 	stw	r4,-20(fp)
  80dcf4:	e17ffa15 	stw	r5,-24(fp)
  80dcf8:	e0bffa17 	ldw	r2,-24(fp)
  80dcfc:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  80dd00:	0005303a 	rdctl	r2,status
  80dd04:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80dd08:	e0fffe17 	ldw	r3,-8(fp)
  80dd0c:	00bfff84 	movi	r2,-2
  80dd10:	1884703a 	and	r2,r3,r2
  80dd14:	1001703a 	wrctl	status,r2
  return context;
  80dd18:	e0bffe17 	ldw	r2,-8(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
  80dd1c:	e0bffd15 	stw	r2,-12(fp)

  alt_irq_active |= (1 << id);
  80dd20:	00c00044 	movi	r3,1
  80dd24:	e0bfff17 	ldw	r2,-4(fp)
  80dd28:	1884983a 	sll	r2,r3,r2
  80dd2c:	1007883a 	mov	r3,r2
  80dd30:	d0a74917 	ldw	r2,-25308(gp)
  80dd34:	1884b03a 	or	r2,r3,r2
  80dd38:	d0a74915 	stw	r2,-25308(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80dd3c:	d0a74917 	ldw	r2,-25308(gp)
  80dd40:	100170fa 	wrctl	ienable,r2
  80dd44:	e0bffd17 	ldw	r2,-12(fp)
  80dd48:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80dd4c:	e0bffc17 	ldw	r2,-16(fp)
  80dd50:	1001703a 	wrctl	status,r2
}
  80dd54:	0001883a 	nop

  alt_irq_enable_all(status);

  return 0;
  80dd58:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
  80dd5c:	e037883a 	mov	sp,fp
  80dd60:	df000017 	ldw	fp,0(sp)
  80dd64:	dec00104 	addi	sp,sp,4
  80dd68:	f800283a 	ret

0080dd6c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
  80dd6c:	defff904 	addi	sp,sp,-28
  80dd70:	df000615 	stw	fp,24(sp)
  80dd74:	df000604 	addi	fp,sp,24
  80dd78:	e13ffb15 	stw	r4,-20(fp)
  80dd7c:	e17ffa15 	stw	r5,-24(fp)
  80dd80:	e0bffa17 	ldw	r2,-24(fp)
  80dd84:	e0bfff15 	stw	r2,-4(fp)
  NIOS2_READ_STATUS (context);
  80dd88:	0005303a 	rdctl	r2,status
  80dd8c:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80dd90:	e0fffe17 	ldw	r3,-8(fp)
  80dd94:	00bfff84 	movi	r2,-2
  80dd98:	1884703a 	and	r2,r3,r2
  80dd9c:	1001703a 	wrctl	status,r2
  return context;
  80dda0:	e0bffe17 	ldw	r2,-8(fp)
  status = alt_irq_disable_all ();
  80dda4:	e0bffd15 	stw	r2,-12(fp)
  alt_irq_active &= ~(1 << id);
  80dda8:	00c00044 	movi	r3,1
  80ddac:	e0bfff17 	ldw	r2,-4(fp)
  80ddb0:	1884983a 	sll	r2,r3,r2
  80ddb4:	0084303a 	nor	r2,zero,r2
  80ddb8:	1007883a 	mov	r3,r2
  80ddbc:	d0a74917 	ldw	r2,-25308(gp)
  80ddc0:	1884703a 	and	r2,r3,r2
  80ddc4:	d0a74915 	stw	r2,-25308(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
  80ddc8:	d0a74917 	ldw	r2,-25308(gp)
  80ddcc:	100170fa 	wrctl	ienable,r2
  80ddd0:	e0bffd17 	ldw	r2,-12(fp)
  80ddd4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80ddd8:	e0bffc17 	ldw	r2,-16(fp)
  80dddc:	1001703a 	wrctl	status,r2
}
  80dde0:	0001883a 	nop
  return 0;
  80dde4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
  80dde8:	e037883a 	mov	sp,fp
  80ddec:	df000017 	ldw	fp,0(sp)
  80ddf0:	dec00104 	addi	sp,sp,4
  80ddf4:	f800283a 	ret

0080ddf8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
  80ddf8:	defffc04 	addi	sp,sp,-16
  80ddfc:	df000315 	stw	fp,12(sp)
  80de00:	df000304 	addi	fp,sp,12
  80de04:	e13ffe15 	stw	r4,-8(fp)
  80de08:	e17ffd15 	stw	r5,-12(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
  80de0c:	000530fa 	rdctl	r2,ienable
  80de10:	e0bfff15 	stw	r2,-4(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
  80de14:	00c00044 	movi	r3,1
  80de18:	e0bffd17 	ldw	r2,-12(fp)
  80de1c:	1884983a 	sll	r2,r3,r2
  80de20:	1007883a 	mov	r3,r2
  80de24:	e0bfff17 	ldw	r2,-4(fp)
  80de28:	1884703a 	and	r2,r3,r2
  80de2c:	1004c03a 	cmpne	r2,r2,zero
  80de30:	10803fcc 	andi	r2,r2,255
}
  80de34:	e037883a 	mov	sp,fp
  80de38:	df000017 	ldw	fp,0(sp)
  80de3c:	dec00104 	addi	sp,sp,4
  80de40:	f800283a 	ret

0080de44 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
  80de44:	defff504 	addi	sp,sp,-44
  80de48:	dfc00a15 	stw	ra,40(sp)
  80de4c:	df000915 	stw	fp,36(sp)
  80de50:	df000904 	addi	fp,sp,36
  80de54:	e13ffa15 	stw	r4,-24(fp)
  80de58:	e17ff915 	stw	r5,-28(fp)
  80de5c:	e1bff815 	stw	r6,-32(fp)
  80de60:	e1fff715 	stw	r7,-36(fp)
  int rc = -EINVAL;  
  80de64:	00bffa84 	movi	r2,-22
  80de68:	e0bfff15 	stw	r2,-4(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
  80de6c:	e0bff917 	ldw	r2,-28(fp)
  80de70:	e0bffe15 	stw	r2,-8(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
  80de74:	e0bffe17 	ldw	r2,-8(fp)
  80de78:	10800808 	cmpgei	r2,r2,32
  80de7c:	1000251e 	bne	r2,zero,80df14 <alt_iic_isr_register+0xd0>
  NIOS2_READ_STATUS (context);
  80de80:	0005303a 	rdctl	r2,status
  80de84:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80de88:	e0fffc17 	ldw	r3,-16(fp)
  80de8c:	00bfff84 	movi	r2,-2
  80de90:	1884703a 	and	r2,r3,r2
  80de94:	1001703a 	wrctl	status,r2
  return context;
  80de98:	e0bffc17 	ldw	r2,-16(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
  80de9c:	e0bffd15 	stw	r2,-12(fp)

    alt_irq[id].handler = isr;
  80dea0:	e0bffe17 	ldw	r2,-8(fp)
  80dea4:	100890fa 	slli	r4,r2,3
  80dea8:	e0fff817 	ldw	r3,-32(fp)
  80deac:	00802074 	movhi	r2,129
  80deb0:	2085883a 	add	r2,r4,r2
  80deb4:	10d44315 	stw	r3,20748(r2)
    alt_irq[id].context = isr_context;
  80deb8:	e0bffe17 	ldw	r2,-8(fp)
  80debc:	100890fa 	slli	r4,r2,3
  80dec0:	e0fff717 	ldw	r3,-36(fp)
  80dec4:	00802074 	movhi	r2,129
  80dec8:	2085883a 	add	r2,r4,r2
  80decc:	10d44415 	stw	r3,20752(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
  80ded0:	e0bff817 	ldw	r2,-32(fp)
  80ded4:	10000526 	beq	r2,zero,80deec <alt_iic_isr_register+0xa8>
  80ded8:	e0bffe17 	ldw	r2,-8(fp)
  80dedc:	100b883a 	mov	r5,r2
  80dee0:	e13ffa17 	ldw	r4,-24(fp)
  80dee4:	080dce40 	call	80dce4 <alt_ic_irq_enable>
  80dee8:	00000406 	br	80defc <alt_iic_isr_register+0xb8>
  80deec:	e0bffe17 	ldw	r2,-8(fp)
  80def0:	100b883a 	mov	r5,r2
  80def4:	e13ffa17 	ldw	r4,-24(fp)
  80def8:	080dd6c0 	call	80dd6c <alt_ic_irq_disable>
  80defc:	e0bfff15 	stw	r2,-4(fp)
  80df00:	e0bffd17 	ldw	r2,-12(fp)
  80df04:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  80df08:	e0bffb17 	ldw	r2,-20(fp)
  80df0c:	1001703a 	wrctl	status,r2
}
  80df10:	0001883a 	nop

    alt_irq_enable_all(status);
  }

  return rc; 
  80df14:	e0bfff17 	ldw	r2,-4(fp)
}
  80df18:	e037883a 	mov	sp,fp
  80df1c:	dfc00117 	ldw	ra,4(sp)
  80df20:	df000017 	ldw	fp,0(sp)
  80df24:	dec00204 	addi	sp,sp,8
  80df28:	f800283a 	ret

0080df2c <alt_get_errno>:
{
  80df2c:	defffe04 	addi	sp,sp,-8
  80df30:	dfc00115 	stw	ra,4(sp)
  80df34:	df000015 	stw	fp,0(sp)
  80df38:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80df3c:	d0a00917 	ldw	r2,-32732(gp)
  80df40:	10000326 	beq	r2,zero,80df50 <alt_get_errno+0x24>
  80df44:	d0a00917 	ldw	r2,-32732(gp)
  80df48:	103ee83a 	callr	r2
  80df4c:	00000106 	br	80df54 <alt_get_errno+0x28>
  80df50:	d0a74704 	addi	r2,gp,-25316
}
  80df54:	e037883a 	mov	sp,fp
  80df58:	dfc00117 	ldw	ra,4(sp)
  80df5c:	df000017 	ldw	fp,0(sp)
  80df60:	dec00204 	addi	sp,sp,8
  80df64:	f800283a 	ret

0080df68 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
  80df68:	deffea04 	addi	sp,sp,-88
  80df6c:	dfc01515 	stw	ra,84(sp)
  80df70:	df001415 	stw	fp,80(sp)
  80df74:	df001404 	addi	fp,sp,80
  80df78:	e13fec15 	stw	r4,-80(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80df7c:	e0bfec17 	ldw	r2,-80(fp)
  80df80:	10000916 	blt	r2,zero,80dfa8 <isatty+0x40>
  80df84:	e0ffec17 	ldw	r3,-80(fp)
  80df88:	1805883a 	mov	r2,r3
  80df8c:	1085883a 	add	r2,r2,r2
  80df90:	10c5883a 	add	r2,r2,r3
  80df94:	100490ba 	slli	r2,r2,2
  80df98:	00c02074 	movhi	r3,129
  80df9c:	18c83804 	addi	r3,r3,8416
  80dfa0:	10c5883a 	add	r2,r2,r3
  80dfa4:	00000106 	br	80dfac <isatty+0x44>
  80dfa8:	0005883a 	mov	r2,zero
  80dfac:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80dfb0:	e0bfff17 	ldw	r2,-4(fp)
  80dfb4:	10000e26 	beq	r2,zero,80dff0 <isatty+0x88>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
  80dfb8:	e0bfff17 	ldw	r2,-4(fp)
  80dfbc:	10800017 	ldw	r2,0(r2)
  80dfc0:	10800817 	ldw	r2,32(r2)
  80dfc4:	1000021e 	bne	r2,zero,80dfd0 <isatty+0x68>
    {
      return 1;
  80dfc8:	00800044 	movi	r2,1
  80dfcc:	00000d06 	br	80e004 <isatty+0x9c>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
  80dfd0:	e0bfed04 	addi	r2,fp,-76
  80dfd4:	100b883a 	mov	r5,r2
  80dfd8:	e13fec17 	ldw	r4,-80(fp)
  80dfdc:	080db840 	call	80db84 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
  80dfe0:	e0bfee17 	ldw	r2,-72(fp)
  80dfe4:	10880020 	cmpeqi	r2,r2,8192
  80dfe8:	10803fcc 	andi	r2,r2,255
  80dfec:	00000506 	br	80e004 <isatty+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
  80dff0:	080df2c0 	call	80df2c <alt_get_errno>
  80dff4:	1007883a 	mov	r3,r2
  80dff8:	00801444 	movi	r2,81
  80dffc:	18800015 	stw	r2,0(r3)
    return 0;
  80e000:	0005883a 	mov	r2,zero
  }
}
  80e004:	e037883a 	mov	sp,fp
  80e008:	dfc00117 	ldw	ra,4(sp)
  80e00c:	df000017 	ldw	fp,0(sp)
  80e010:	dec00204 	addi	sp,sp,8
  80e014:	f800283a 	ret

0080e018 <alt_get_errno>:
{
  80e018:	defffe04 	addi	sp,sp,-8
  80e01c:	dfc00115 	stw	ra,4(sp)
  80e020:	df000015 	stw	fp,0(sp)
  80e024:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e028:	d0a00917 	ldw	r2,-32732(gp)
  80e02c:	10000326 	beq	r2,zero,80e03c <alt_get_errno+0x24>
  80e030:	d0a00917 	ldw	r2,-32732(gp)
  80e034:	103ee83a 	callr	r2
  80e038:	00000106 	br	80e040 <alt_get_errno+0x28>
  80e03c:	d0a74704 	addi	r2,gp,-25316
}
  80e040:	e037883a 	mov	sp,fp
  80e044:	dfc00117 	ldw	ra,4(sp)
  80e048:	df000017 	ldw	fp,0(sp)
  80e04c:	dec00204 	addi	sp,sp,8
  80e050:	f800283a 	ret

0080e054 <kill>:
 *
 * ALT_KILL is mapped onto the kill() system call in alt_syscall.h
 */

int ALT_KILL (int pid, int sig)
{
  80e054:	defffb04 	addi	sp,sp,-20
  80e058:	dfc00415 	stw	ra,16(sp)
  80e05c:	df000315 	stw	fp,12(sp)
  80e060:	df000304 	addi	fp,sp,12
  80e064:	e13ffe15 	stw	r4,-8(fp)
  80e068:	e17ffd15 	stw	r5,-12(fp)
  int status = 0;
  80e06c:	e03fff15 	stw	zero,-4(fp)

  if (pid <= 0)
  80e070:	e0bffe17 	ldw	r2,-8(fp)
  80e074:	00802e16 	blt	zero,r2,80e130 <kill+0xdc>
  80e078:	e0bffd17 	ldw	r2,-12(fp)
  80e07c:	10800828 	cmpgeui	r2,r2,32
  80e080:	1000281e 	bne	r2,zero,80e124 <kill+0xd0>
  80e084:	e0bffd17 	ldw	r2,-12(fp)
  80e088:	100690ba 	slli	r3,r2,2
  80e08c:	00802074 	movhi	r2,129
  80e090:	1885883a 	add	r2,r3,r2
  80e094:	10b82717 	ldw	r2,-8036(r2)
  80e098:	1000683a 	jmp	r2
  80e09c:	0080e144 	movi	r2,901
  80e0a0:	0080e124 	muli	r2,zero,900
  80e0a4:	0080e124 	muli	r2,zero,900
  80e0a8:	0080e11c 	xori	r2,zero,900
  80e0ac:	0080e11c 	xori	r2,zero,900
  80e0b0:	0080e11c 	xori	r2,zero,900
  80e0b4:	0080e11c 	xori	r2,zero,900
  80e0b8:	0080e124 	muli	r2,zero,900
  80e0bc:	0080e11c 	xori	r2,zero,900
  80e0c0:	0080e11c 	xori	r2,zero,900
  80e0c4:	0080e11c 	xori	r2,zero,900
  80e0c8:	0080e11c 	xori	r2,zero,900
  80e0cc:	0080e11c 	xori	r2,zero,900
  80e0d0:	0080e11c 	xori	r2,zero,900
  80e0d4:	0080e11c 	xori	r2,zero,900
  80e0d8:	0080e11c 	xori	r2,zero,900
  80e0dc:	0080e144 	movi	r2,901
  80e0e0:	0080e124 	muli	r2,zero,900
  80e0e4:	0080e124 	muli	r2,zero,900
  80e0e8:	0080e124 	muli	r2,zero,900
  80e0ec:	0080e144 	movi	r2,901
  80e0f0:	0080e124 	muli	r2,zero,900
  80e0f4:	0080e124 	muli	r2,zero,900
  80e0f8:	0080e11c 	xori	r2,zero,900
  80e0fc:	0080e11c 	xori	r2,zero,900
  80e100:	0080e11c 	xori	r2,zero,900
  80e104:	0080e11c 	xori	r2,zero,900
  80e108:	0080e11c 	xori	r2,zero,900
  80e10c:	0080e124 	muli	r2,zero,900
  80e110:	0080e124 	muli	r2,zero,900
  80e114:	0080e11c 	xori	r2,zero,900
  80e118:	0080e11c 	xori	r2,zero,900
       * The Posix standard defines the default behaviour for all these signals 
       * as being eqivalent to a call to _exit(). No mechanism is provided to 
       * change this behaviour.
       */

      _exit(0);
  80e11c:	0009883a 	mov	r4,zero
  80e120:	080db100 	call	80db10 <_exit>
      break;
    default:

      /* Tried to send an unsupported signal */

      status = EINVAL;
  80e124:	00800584 	movi	r2,22
  80e128:	e0bfff15 	stw	r2,-4(fp)
  80e12c:	00000606 	br	80e148 <kill+0xf4>
    }
  }

  else if (pid > 0)
  80e130:	e0bffe17 	ldw	r2,-8(fp)
  80e134:	0080040e 	bge	zero,r2,80e148 <kill+0xf4>
  {
    /* Attempted to signal a non-existant process */

    status = ESRCH;
  80e138:	008000c4 	movi	r2,3
  80e13c:	e0bfff15 	stw	r2,-4(fp)
  80e140:	00000106 	br	80e148 <kill+0xf4>
      break;
  80e144:	0001883a 	nop
  }

  if (status)
  80e148:	e0bfff17 	ldw	r2,-4(fp)
  80e14c:	10000626 	beq	r2,zero,80e168 <kill+0x114>
  {
    ALT_ERRNO = status;
  80e150:	080e0180 	call	80e018 <alt_get_errno>
  80e154:	1007883a 	mov	r3,r2
  80e158:	e0bfff17 	ldw	r2,-4(fp)
  80e15c:	18800015 	stw	r2,0(r3)
    return -1;
  80e160:	00bfffc4 	movi	r2,-1
  80e164:	00000106 	br	80e16c <kill+0x118>
  }

  return 0;
  80e168:	0005883a 	mov	r2,zero
}
  80e16c:	e037883a 	mov	sp,fp
  80e170:	dfc00117 	ldw	ra,4(sp)
  80e174:	df000017 	ldw	fp,0(sp)
  80e178:	dec00204 	addi	sp,sp,8
  80e17c:	f800283a 	ret

0080e180 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  80e180:	defffc04 	addi	sp,sp,-16
  80e184:	df000315 	stw	fp,12(sp)
  80e188:	df000304 	addi	fp,sp,12
  80e18c:	e13fff15 	stw	r4,-4(fp)
  80e190:	e17ffe15 	stw	r5,-8(fp)
  80e194:	e1bffd15 	stw	r6,-12(fp)
  if (to != from)
  80e198:	e0fffe17 	ldw	r3,-8(fp)
  80e19c:	e0bfff17 	ldw	r2,-4(fp)
  80e1a0:	18800c26 	beq	r3,r2,80e1d4 <alt_load_section+0x54>
  {
    while( to != end )
  80e1a4:	00000806 	br	80e1c8 <alt_load_section+0x48>
    {
      *to++ = *from++;
  80e1a8:	e0ffff17 	ldw	r3,-4(fp)
  80e1ac:	18800104 	addi	r2,r3,4
  80e1b0:	e0bfff15 	stw	r2,-4(fp)
  80e1b4:	e0bffe17 	ldw	r2,-8(fp)
  80e1b8:	11000104 	addi	r4,r2,4
  80e1bc:	e13ffe15 	stw	r4,-8(fp)
  80e1c0:	18c00017 	ldw	r3,0(r3)
  80e1c4:	10c00015 	stw	r3,0(r2)
    while( to != end )
  80e1c8:	e0fffe17 	ldw	r3,-8(fp)
  80e1cc:	e0bffd17 	ldw	r2,-12(fp)
  80e1d0:	18bff51e 	bne	r3,r2,80e1a8 <alt_load_section+0x28>
    }
  }
}
  80e1d4:	0001883a 	nop
  80e1d8:	e037883a 	mov	sp,fp
  80e1dc:	df000017 	ldw	fp,0(sp)
  80e1e0:	dec00104 	addi	sp,sp,4
  80e1e4:	f800283a 	ret

0080e1e8 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
  80e1e8:	defffe04 	addi	sp,sp,-8
  80e1ec:	dfc00115 	stw	ra,4(sp)
  80e1f0:	df000015 	stw	fp,0(sp)
  80e1f4:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
  80e1f8:	01802074 	movhi	r6,129
  80e1fc:	318cf904 	addi	r6,r6,13284
  80e200:	01402074 	movhi	r5,129
  80e204:	2945c804 	addi	r5,r5,5920
  80e208:	01002074 	movhi	r4,129
  80e20c:	210cf904 	addi	r4,r4,13284
  80e210:	080e1800 	call	80e180 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
  80e214:	01802034 	movhi	r6,128
  80e218:	31808e04 	addi	r6,r6,568
  80e21c:	01402034 	movhi	r5,128
  80e220:	29400804 	addi	r5,r5,32
  80e224:	01002034 	movhi	r4,128
  80e228:	21000804 	addi	r4,r4,32
  80e22c:	080e1800 	call	80e180 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
  80e230:	01802074 	movhi	r6,129
  80e234:	3185c804 	addi	r6,r6,5920
  80e238:	01402074 	movhi	r5,129
  80e23c:	2943f804 	addi	r5,r5,4064
  80e240:	01002074 	movhi	r4,129
  80e244:	2103f804 	addi	r4,r4,4064
  80e248:	080e1800 	call	80e180 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  80e24c:	080da980 	call	80da98 <alt_dcache_flush_all>
  alt_icache_flush_all();
  80e250:	080dc600 	call	80dc60 <alt_icache_flush_all>
}
  80e254:	0001883a 	nop
  80e258:	e037883a 	mov	sp,fp
  80e25c:	dfc00117 	ldw	ra,4(sp)
  80e260:	df000017 	ldw	fp,0(sp)
  80e264:	dec00204 	addi	sp,sp,8
  80e268:	f800283a 	ret

0080e26c <alt_get_errno>:
{
  80e26c:	defffe04 	addi	sp,sp,-8
  80e270:	dfc00115 	stw	ra,4(sp)
  80e274:	df000015 	stw	fp,0(sp)
  80e278:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e27c:	d0a00917 	ldw	r2,-32732(gp)
  80e280:	10000326 	beq	r2,zero,80e290 <alt_get_errno+0x24>
  80e284:	d0a00917 	ldw	r2,-32732(gp)
  80e288:	103ee83a 	callr	r2
  80e28c:	00000106 	br	80e294 <alt_get_errno+0x28>
  80e290:	d0a74704 	addi	r2,gp,-25316
}
  80e294:	e037883a 	mov	sp,fp
  80e298:	dfc00117 	ldw	ra,4(sp)
  80e29c:	df000017 	ldw	fp,0(sp)
  80e2a0:	dec00204 	addi	sp,sp,8
  80e2a4:	f800283a 	ret

0080e2a8 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
  80e2a8:	defff904 	addi	sp,sp,-28
  80e2ac:	dfc00615 	stw	ra,24(sp)
  80e2b0:	df000515 	stw	fp,20(sp)
  80e2b4:	df000504 	addi	fp,sp,20
  80e2b8:	e13ffd15 	stw	r4,-12(fp)
  80e2bc:	e17ffc15 	stw	r5,-16(fp)
  80e2c0:	e1bffb15 	stw	r6,-20(fp)
  alt_fd* fd;
  off_t   rc = 0; 
  80e2c4:	e03fff15 	stw	zero,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e2c8:	e0bffd17 	ldw	r2,-12(fp)
  80e2cc:	10000916 	blt	r2,zero,80e2f4 <lseek+0x4c>
  80e2d0:	e0fffd17 	ldw	r3,-12(fp)
  80e2d4:	1805883a 	mov	r2,r3
  80e2d8:	1085883a 	add	r2,r2,r2
  80e2dc:	10c5883a 	add	r2,r2,r3
  80e2e0:	100490ba 	slli	r2,r2,2
  80e2e4:	00c02074 	movhi	r3,129
  80e2e8:	18c83804 	addi	r3,r3,8416
  80e2ec:	10c5883a 	add	r2,r2,r3
  80e2f0:	00000106 	br	80e2f8 <lseek+0x50>
  80e2f4:	0005883a 	mov	r2,zero
  80e2f8:	e0bffe15 	stw	r2,-8(fp)
  
  if (fd) 
  80e2fc:	e0bffe17 	ldw	r2,-8(fp)
  80e300:	10001026 	beq	r2,zero,80e344 <lseek+0x9c>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
  80e304:	e0bffe17 	ldw	r2,-8(fp)
  80e308:	10800017 	ldw	r2,0(r2)
  80e30c:	10800717 	ldw	r2,28(r2)
  80e310:	10000926 	beq	r2,zero,80e338 <lseek+0x90>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
  80e314:	e0bffe17 	ldw	r2,-8(fp)
  80e318:	10800017 	ldw	r2,0(r2)
  80e31c:	10800717 	ldw	r2,28(r2)
  80e320:	e1bffb17 	ldw	r6,-20(fp)
  80e324:	e17ffc17 	ldw	r5,-16(fp)
  80e328:	e13ffe17 	ldw	r4,-8(fp)
  80e32c:	103ee83a 	callr	r2
  80e330:	e0bfff15 	stw	r2,-4(fp)
  80e334:	00000506 	br	80e34c <lseek+0xa4>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
  80e338:	00bfde84 	movi	r2,-134
  80e33c:	e0bfff15 	stw	r2,-4(fp)
  80e340:	00000206 	br	80e34c <lseek+0xa4>
    }
  }
  else  
  {
    rc = -EBADFD;
  80e344:	00bfebc4 	movi	r2,-81
  80e348:	e0bfff15 	stw	r2,-4(fp)
  }

  if (rc < 0)
  80e34c:	e0bfff17 	ldw	r2,-4(fp)
  80e350:	1000070e 	bge	r2,zero,80e370 <lseek+0xc8>
  {
    ALT_ERRNO = -rc;
  80e354:	080e26c0 	call	80e26c <alt_get_errno>
  80e358:	1007883a 	mov	r3,r2
  80e35c:	e0bfff17 	ldw	r2,-4(fp)
  80e360:	0085c83a 	sub	r2,zero,r2
  80e364:	18800015 	stw	r2,0(r3)
    rc = -1;
  80e368:	00bfffc4 	movi	r2,-1
  80e36c:	e0bfff15 	stw	r2,-4(fp)
  }

  return rc;
  80e370:	e0bfff17 	ldw	r2,-4(fp)
}
  80e374:	e037883a 	mov	sp,fp
  80e378:	dfc00117 	ldw	ra,4(sp)
  80e37c:	df000017 	ldw	fp,0(sp)
  80e380:	dec00204 	addi	sp,sp,8
  80e384:	f800283a 	ret

0080e388 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
  80e388:	defffd04 	addi	sp,sp,-12
  80e38c:	dfc00215 	stw	ra,8(sp)
  80e390:	df000115 	stw	fp,4(sp)
  80e394:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
  80e398:	0009883a 	mov	r4,zero
  80e39c:	080e82c0 	call	80e82c <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
  80e3a0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
  80e3a4:	080e8680 	call	80e868 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
  80e3a8:	01802074 	movhi	r6,129
  80e3ac:	3185bd04 	addi	r6,r6,5876
  80e3b0:	01402074 	movhi	r5,129
  80e3b4:	2945bd04 	addi	r5,r5,5876
  80e3b8:	01002074 	movhi	r4,129
  80e3bc:	2105bd04 	addi	r4,r4,5876
  80e3c0:	08106ec0 	call	8106ec <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
  80e3c4:	08103980 	call	810398 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
  80e3c8:	01002074 	movhi	r4,129
  80e3cc:	2100ff04 	addi	r4,r4,1020
  80e3d0:	0810d700 	call	810d70 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
  80e3d4:	d0a74a17 	ldw	r2,-25304(gp)
  80e3d8:	d0e74b17 	ldw	r3,-25300(gp)
  80e3dc:	d1274c17 	ldw	r4,-25296(gp)
  80e3e0:	200d883a 	mov	r6,r4
  80e3e4:	180b883a 	mov	r5,r3
  80e3e8:	1009883a 	mov	r4,r2
  80e3ec:	08004c80 	call	8004c8 <main>
  80e3f0:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
  80e3f4:	01000044 	movi	r4,1
  80e3f8:	080d9bc0 	call	80d9bc <close>
  exit (result);
  80e3fc:	e13fff17 	ldw	r4,-4(fp)
  80e400:	0810d840 	call	810d84 <exit>

0080e404 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
  80e404:	defffe04 	addi	sp,sp,-8
  80e408:	df000115 	stw	fp,4(sp)
  80e40c:	df000104 	addi	fp,sp,4
  80e410:	e13fff15 	stw	r4,-4(fp)
}
  80e414:	0001883a 	nop
  80e418:	e037883a 	mov	sp,fp
  80e41c:	df000017 	ldw	fp,0(sp)
  80e420:	dec00104 	addi	sp,sp,4
  80e424:	f800283a 	ret

0080e428 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
  80e428:	defffe04 	addi	sp,sp,-8
  80e42c:	df000115 	stw	fp,4(sp)
  80e430:	df000104 	addi	fp,sp,4
  80e434:	e13fff15 	stw	r4,-4(fp)
}
  80e438:	0001883a 	nop
  80e43c:	e037883a 	mov	sp,fp
  80e440:	df000017 	ldw	fp,0(sp)
  80e444:	dec00104 	addi	sp,sp,4
  80e448:	f800283a 	ret

0080e44c <alt_get_errno>:
{
  80e44c:	defffe04 	addi	sp,sp,-8
  80e450:	dfc00115 	stw	ra,4(sp)
  80e454:	df000015 	stw	fp,0(sp)
  80e458:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e45c:	d0a00917 	ldw	r2,-32732(gp)
  80e460:	10000326 	beq	r2,zero,80e470 <alt_get_errno+0x24>
  80e464:	d0a00917 	ldw	r2,-32732(gp)
  80e468:	103ee83a 	callr	r2
  80e46c:	00000106 	br	80e474 <alt_get_errno+0x28>
  80e470:	d0a74704 	addi	r2,gp,-25316
}
  80e474:	e037883a 	mov	sp,fp
  80e478:	dfc00117 	ldw	ra,4(sp)
  80e47c:	df000017 	ldw	fp,0(sp)
  80e480:	dec00204 	addi	sp,sp,8
  80e484:	f800283a 	ret

0080e488 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
  80e488:	defff904 	addi	sp,sp,-28
  80e48c:	dfc00615 	stw	ra,24(sp)
  80e490:	df000515 	stw	fp,20(sp)
  80e494:	df000504 	addi	fp,sp,20
  80e498:	e13ffd15 	stw	r4,-12(fp)
  80e49c:	e17ffc15 	stw	r5,-16(fp)
  80e4a0:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e4a4:	e0bffd17 	ldw	r2,-12(fp)
  80e4a8:	10000916 	blt	r2,zero,80e4d0 <read+0x48>
  80e4ac:	e0fffd17 	ldw	r3,-12(fp)
  80e4b0:	1805883a 	mov	r2,r3
  80e4b4:	1085883a 	add	r2,r2,r2
  80e4b8:	10c5883a 	add	r2,r2,r3
  80e4bc:	100490ba 	slli	r2,r2,2
  80e4c0:	00c02074 	movhi	r3,129
  80e4c4:	18c83804 	addi	r3,r3,8416
  80e4c8:	10c5883a 	add	r2,r2,r3
  80e4cc:	00000106 	br	80e4d4 <read+0x4c>
  80e4d0:	0005883a 	mov	r2,zero
  80e4d4:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80e4d8:	e0bfff17 	ldw	r2,-4(fp)
  80e4dc:	10002226 	beq	r2,zero,80e568 <read+0xe0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80e4e0:	e0bfff17 	ldw	r2,-4(fp)
  80e4e4:	10800217 	ldw	r2,8(r2)
  80e4e8:	108000cc 	andi	r2,r2,3
  80e4ec:	10800060 	cmpeqi	r2,r2,1
  80e4f0:	1000181e 	bne	r2,zero,80e554 <read+0xcc>
        (fd->dev->read))
  80e4f4:	e0bfff17 	ldw	r2,-4(fp)
  80e4f8:	10800017 	ldw	r2,0(r2)
  80e4fc:	10800517 	ldw	r2,20(r2)
    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
  80e500:	10001426 	beq	r2,zero,80e554 <read+0xcc>
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
  80e504:	e0bfff17 	ldw	r2,-4(fp)
  80e508:	10800017 	ldw	r2,0(r2)
  80e50c:	10800517 	ldw	r2,20(r2)
  80e510:	e0fffb17 	ldw	r3,-20(fp)
  80e514:	180d883a 	mov	r6,r3
  80e518:	e17ffc17 	ldw	r5,-16(fp)
  80e51c:	e13fff17 	ldw	r4,-4(fp)
  80e520:	103ee83a 	callr	r2
  80e524:	e0bffe15 	stw	r2,-8(fp)
  80e528:	e0bffe17 	ldw	r2,-8(fp)
  80e52c:	1000070e 	bge	r2,zero,80e54c <read+0xc4>
        {
          ALT_ERRNO = -rval;
  80e530:	080e44c0 	call	80e44c <alt_get_errno>
  80e534:	1007883a 	mov	r3,r2
  80e538:	e0bffe17 	ldw	r2,-8(fp)
  80e53c:	0085c83a 	sub	r2,zero,r2
  80e540:	18800015 	stw	r2,0(r3)
          return -1;
  80e544:	00bfffc4 	movi	r2,-1
  80e548:	00000c06 	br	80e57c <read+0xf4>
        }
        return rval;
  80e54c:	e0bffe17 	ldw	r2,-8(fp)
  80e550:	00000a06 	br	80e57c <read+0xf4>
      }
      else
      {
        ALT_ERRNO = EACCES;
  80e554:	080e44c0 	call	80e44c <alt_get_errno>
  80e558:	1007883a 	mov	r3,r2
  80e55c:	00800344 	movi	r2,13
  80e560:	18800015 	stw	r2,0(r3)
  80e564:	00000406 	br	80e578 <read+0xf0>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
  80e568:	080e44c0 	call	80e44c <alt_get_errno>
  80e56c:	1007883a 	mov	r3,r2
  80e570:	00801444 	movi	r2,81
  80e574:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80e578:	00bfffc4 	movi	r2,-1
}
  80e57c:	e037883a 	mov	sp,fp
  80e580:	dfc00117 	ldw	ra,4(sp)
  80e584:	df000017 	ldw	fp,0(sp)
  80e588:	dec00204 	addi	sp,sp,8
  80e58c:	f800283a 	ret

0080e590 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
  80e590:	defffe04 	addi	sp,sp,-8
  80e594:	df000115 	stw	fp,4(sp)
  80e598:	df000104 	addi	fp,sp,4
  80e59c:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
  80e5a0:	e0bfff17 	ldw	r2,-4(fp)
  80e5a4:	108000d0 	cmplti	r2,r2,3
  80e5a8:	1000101e 	bne	r2,zero,80e5ec <alt_release_fd+0x5c>
  {
    alt_fd_list[fd].fd_flags = 0;
  80e5ac:	e0ffff17 	ldw	r3,-4(fp)
  80e5b0:	1805883a 	mov	r2,r3
  80e5b4:	1085883a 	add	r2,r2,r2
  80e5b8:	10c5883a 	add	r2,r2,r3
  80e5bc:	100490ba 	slli	r2,r2,2
  80e5c0:	00c02074 	movhi	r3,129
  80e5c4:	10c7883a 	add	r3,r2,r3
  80e5c8:	18083a15 	stw	zero,8424(r3)
    alt_fd_list[fd].dev      = 0;
  80e5cc:	e0ffff17 	ldw	r3,-4(fp)
  80e5d0:	1805883a 	mov	r2,r3
  80e5d4:	1085883a 	add	r2,r2,r2
  80e5d8:	10c5883a 	add	r2,r2,r3
  80e5dc:	100490ba 	slli	r2,r2,2
  80e5e0:	00c02074 	movhi	r3,129
  80e5e4:	10c7883a 	add	r3,r2,r3
  80e5e8:	18083815 	stw	zero,8416(r3)
  }
}
  80e5ec:	0001883a 	nop
  80e5f0:	e037883a 	mov	sp,fp
  80e5f4:	df000017 	ldw	fp,0(sp)
  80e5f8:	dec00104 	addi	sp,sp,4
  80e5fc:	f800283a 	ret

0080e600 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
  80e600:	defff904 	addi	sp,sp,-28
  80e604:	df000615 	stw	fp,24(sp)
  80e608:	df000604 	addi	fp,sp,24
  80e60c:	e13ffa15 	stw	r4,-24(fp)
  NIOS2_READ_STATUS (context);
  80e610:	0005303a 	rdctl	r2,status
  80e614:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80e618:	e0fffd17 	ldw	r3,-12(fp)
  80e61c:	00bfff84 	movi	r2,-2
  80e620:	1884703a 	and	r2,r3,r2
  80e624:	1001703a 	wrctl	status,r2
  return context;
  80e628:	e0bffd17 	ldw	r2,-12(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
  80e62c:	e0bfff15 	stw	r2,-4(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
  80e630:	d0a00b17 	ldw	r2,-32724(gp)
  80e634:	10c000c4 	addi	r3,r2,3
  80e638:	00bfff04 	movi	r2,-4
  80e63c:	1884703a 	and	r2,r3,r2
  80e640:	d0a00b15 	stw	r2,-32724(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
  80e644:	d0e00b17 	ldw	r3,-32724(gp)
  80e648:	e0bffa17 	ldw	r2,-24(fp)
  80e64c:	1887883a 	add	r3,r3,r2
  80e650:	00804034 	movhi	r2,256
  80e654:	10800004 	addi	r2,r2,0
  80e658:	10c0072e 	bgeu	r2,r3,80e678 <sbrk+0x78>
  80e65c:	e0bfff17 	ldw	r2,-4(fp)
  80e660:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  80e664:	e0bffc17 	ldw	r2,-16(fp)
  80e668:	1001703a 	wrctl	status,r2
}
  80e66c:	0001883a 	nop
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  80e670:	00bfffc4 	movi	r2,-1
  80e674:	00000c06 	br	80e6a8 <sbrk+0xa8>
  }
#endif

  prev_heap_end = heap_end; 
  80e678:	d0a00b17 	ldw	r2,-32724(gp)
  80e67c:	e0bffe15 	stw	r2,-8(fp)
  heap_end += incr; 
  80e680:	d0e00b17 	ldw	r3,-32724(gp)
  80e684:	e0bffa17 	ldw	r2,-24(fp)
  80e688:	1885883a 	add	r2,r3,r2
  80e68c:	d0a00b15 	stw	r2,-32724(gp)
  80e690:	e0bfff17 	ldw	r2,-4(fp)
  80e694:	e0bffb15 	stw	r2,-20(fp)
  NIOS2_WRITE_STATUS (context);
  80e698:	e0bffb17 	ldw	r2,-20(fp)
  80e69c:	1001703a 	wrctl	status,r2
}
  80e6a0:	0001883a 	nop

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
  80e6a4:	e0bffe17 	ldw	r2,-8(fp)
} 
  80e6a8:	e037883a 	mov	sp,fp
  80e6ac:	df000017 	ldw	fp,0(sp)
  80e6b0:	dec00104 	addi	sp,sp,4
  80e6b4:	f800283a 	ret

0080e6b8 <alt_get_errno>:
{
  80e6b8:	defffe04 	addi	sp,sp,-8
  80e6bc:	dfc00115 	stw	ra,4(sp)
  80e6c0:	df000015 	stw	fp,0(sp)
  80e6c4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  80e6c8:	d0a00917 	ldw	r2,-32732(gp)
  80e6cc:	10000326 	beq	r2,zero,80e6dc <alt_get_errno+0x24>
  80e6d0:	d0a00917 	ldw	r2,-32732(gp)
  80e6d4:	103ee83a 	callr	r2
  80e6d8:	00000106 	br	80e6e0 <alt_get_errno+0x28>
  80e6dc:	d0a74704 	addi	r2,gp,-25316
}
  80e6e0:	e037883a 	mov	sp,fp
  80e6e4:	dfc00117 	ldw	ra,4(sp)
  80e6e8:	df000017 	ldw	fp,0(sp)
  80e6ec:	dec00204 	addi	sp,sp,8
  80e6f0:	f800283a 	ret

0080e6f4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
  80e6f4:	defff904 	addi	sp,sp,-28
  80e6f8:	dfc00615 	stw	ra,24(sp)
  80e6fc:	df000515 	stw	fp,20(sp)
  80e700:	df000504 	addi	fp,sp,20
  80e704:	e13ffd15 	stw	r4,-12(fp)
  80e708:	e17ffc15 	stw	r5,-16(fp)
  80e70c:	e1bffb15 	stw	r6,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
  80e710:	e0bffd17 	ldw	r2,-12(fp)
  80e714:	10000916 	blt	r2,zero,80e73c <write+0x48>
  80e718:	e0fffd17 	ldw	r3,-12(fp)
  80e71c:	1805883a 	mov	r2,r3
  80e720:	1085883a 	add	r2,r2,r2
  80e724:	10c5883a 	add	r2,r2,r3
  80e728:	100490ba 	slli	r2,r2,2
  80e72c:	00c02074 	movhi	r3,129
  80e730:	18c83804 	addi	r3,r3,8416
  80e734:	10c5883a 	add	r2,r2,r3
  80e738:	00000106 	br	80e740 <write+0x4c>
  80e73c:	0005883a 	mov	r2,zero
  80e740:	e0bfff15 	stw	r2,-4(fp)
  
  if (fd)
  80e744:	e0bfff17 	ldw	r2,-4(fp)
  80e748:	10002126 	beq	r2,zero,80e7d0 <write+0xdc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
  80e74c:	e0bfff17 	ldw	r2,-4(fp)
  80e750:	10800217 	ldw	r2,8(r2)
  80e754:	108000cc 	andi	r2,r2,3
  80e758:	10001826 	beq	r2,zero,80e7bc <write+0xc8>
  80e75c:	e0bfff17 	ldw	r2,-4(fp)
  80e760:	10800017 	ldw	r2,0(r2)
  80e764:	10800617 	ldw	r2,24(r2)
  80e768:	10001426 	beq	r2,zero,80e7bc <write+0xc8>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
  80e76c:	e0bfff17 	ldw	r2,-4(fp)
  80e770:	10800017 	ldw	r2,0(r2)
  80e774:	10800617 	ldw	r2,24(r2)
  80e778:	e0fffb17 	ldw	r3,-20(fp)
  80e77c:	180d883a 	mov	r6,r3
  80e780:	e17ffc17 	ldw	r5,-16(fp)
  80e784:	e13fff17 	ldw	r4,-4(fp)
  80e788:	103ee83a 	callr	r2
  80e78c:	e0bffe15 	stw	r2,-8(fp)
  80e790:	e0bffe17 	ldw	r2,-8(fp)
  80e794:	1000070e 	bge	r2,zero,80e7b4 <write+0xc0>
      {
        ALT_ERRNO = -rval;
  80e798:	080e6b80 	call	80e6b8 <alt_get_errno>
  80e79c:	1007883a 	mov	r3,r2
  80e7a0:	e0bffe17 	ldw	r2,-8(fp)
  80e7a4:	0085c83a 	sub	r2,zero,r2
  80e7a8:	18800015 	stw	r2,0(r3)
        return -1;
  80e7ac:	00bfffc4 	movi	r2,-1
  80e7b0:	00000c06 	br	80e7e4 <write+0xf0>
      }
      return rval;
  80e7b4:	e0bffe17 	ldw	r2,-8(fp)
  80e7b8:	00000a06 	br	80e7e4 <write+0xf0>
    }
    else
    {
      ALT_ERRNO = EACCES;
  80e7bc:	080e6b80 	call	80e6b8 <alt_get_errno>
  80e7c0:	1007883a 	mov	r3,r2
  80e7c4:	00800344 	movi	r2,13
  80e7c8:	18800015 	stw	r2,0(r3)
  80e7cc:	00000406 	br	80e7e0 <write+0xec>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
  80e7d0:	080e6b80 	call	80e6b8 <alt_get_errno>
  80e7d4:	1007883a 	mov	r3,r2
  80e7d8:	00801444 	movi	r2,81
  80e7dc:	18800015 	stw	r2,0(r3)
  }
  return -1;
  80e7e0:	00bfffc4 	movi	r2,-1
}
  80e7e4:	e037883a 	mov	sp,fp
  80e7e8:	dfc00117 	ldw	ra,4(sp)
  80e7ec:	df000017 	ldw	fp,0(sp)
  80e7f0:	dec00204 	addi	sp,sp,8
  80e7f4:	f800283a 	ret

0080e7f8 <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  80e7f8:	defffd04 	addi	sp,sp,-12
  80e7fc:	dfc00215 	stw	ra,8(sp)
  80e800:	df000115 	stw	fp,4(sp)
  80e804:	df000104 	addi	fp,sp,4
  80e808:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
  80e80c:	d1600604 	addi	r5,gp,-32744
  80e810:	e13fff17 	ldw	r4,-4(fp)
  80e814:	08101d00 	call	8101d0 <alt_dev_llist_insert>
}
  80e818:	e037883a 	mov	sp,fp
  80e81c:	dfc00117 	ldw	ra,4(sp)
  80e820:	df000017 	ldw	fp,0(sp)
  80e824:	dec00204 	addi	sp,sp,8
  80e828:	f800283a 	ret

0080e82c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
  80e82c:	defffd04 	addi	sp,sp,-12
  80e830:	dfc00215 	stw	ra,8(sp)
  80e834:	df000115 	stw	fp,4(sp)
  80e838:	df000104 	addi	fp,sp,4
  80e83c:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
  80e840:	0810b8c0 	call	810b8c <altera_nios2_gen2_irq_init>
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
  80e844:	00800044 	movi	r2,1
  80e848:	1001703a 	wrctl	status,r2
}
  80e84c:	0001883a 	nop
    alt_irq_cpu_enable_interrupts();
}
  80e850:	0001883a 	nop
  80e854:	e037883a 	mov	sp,fp
  80e858:	dfc00117 	ldw	ra,4(sp)
  80e85c:	df000017 	ldw	fp,0(sp)
  80e860:	dec00204 	addi	sp,sp,8
  80e864:	f800283a 	ret

0080e868 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
  80e868:	defffd04 	addi	sp,sp,-12
  80e86c:	dfc00215 	stw	ra,8(sp)
  80e870:	df000115 	stw	fp,4(sp)
  80e874:	df000104 	addi	fp,sp,4
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
  80e878:	01c0fa04 	movi	r7,1000
  80e87c:	01800044 	movi	r6,1
  80e880:	000b883a 	mov	r5,zero
  80e884:	01004034 	movhi	r4,256
  80e888:	21041804 	addi	r4,r4,4192
  80e88c:	080ffdc0 	call	80ffdc <alt_avalon_timer_sc_init>
    ALTERA_AVALON_TIMER_INIT ( TIMESTAMP_TIMER, timestamp_timer);
  80e890:	00804034 	movhi	r2,256
  80e894:	10840004 	addi	r2,r2,4096
  80e898:	d0a74d15 	stw	r2,-25292(gp)
  80e89c:	0080bef4 	movhi	r2,763
  80e8a0:	10bc2004 	addi	r2,r2,-3968
  80e8a4:	d0a74e15 	stw	r2,-25288(gp)
    ALTERA_AVALON_DMA_INIT ( DMA, dma);
  80e8a8:	00800084 	movi	r2,2
  80e8ac:	d8800015 	stw	r2,0(sp)
  80e8b0:	000f883a 	mov	r7,zero
  80e8b4:	01804034 	movhi	r6,256
  80e8b8:	31842004 	addi	r6,r6,4224
  80e8bc:	01402074 	movhi	r5,129
  80e8c0:	2948c804 	addi	r5,r5,8992
  80e8c4:	01002074 	movhi	r4,129
  80e8c8:	2108c104 	addi	r4,r4,8964
  80e8cc:	080f4380 	call	80f438 <alt_avalon_dma_init>
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
  80e8d0:	01800404 	movi	r6,16
  80e8d4:	000b883a 	mov	r5,zero
  80e8d8:	01002074 	movhi	r4,129
  80e8dc:	2108d904 	addi	r4,r4,9060
  80e8e0:	080f6500 	call	80f650 <altera_avalon_jtag_uart_init>
  80e8e4:	01002074 	movhi	r4,129
  80e8e8:	2108cf04 	addi	r4,r4,9020
  80e8ec:	080e7f80 	call	80e7f8 <alt_dev_reg>
    ALTERA_AVALON_SPI_INIT ( SPI, spi);
  80e8f0:	0001883a 	nop
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID, sysid);
  80e8f4:	0001883a 	nop
}
  80e8f8:	0001883a 	nop
  80e8fc:	e037883a 	mov	sp,fp
  80e900:	dfc00117 	ldw	ra,4(sp)
  80e904:	df000017 	ldw	fp,0(sp)
  80e908:	dec00204 	addi	sp,sp,8
  80e90c:	f800283a 	ret

0080e910 <alt_dma_txchan_reg>:
/*
 * Register a DMA transmit channel with the system.
 */

static ALT_INLINE int alt_dma_txchan_reg (alt_dma_txchan_dev* dev)
{
  80e910:	defffd04 	addi	sp,sp,-12
  80e914:	dfc00215 	stw	ra,8(sp)
  80e918:	df000115 	stw	fp,4(sp)
  80e91c:	df000104 	addi	fp,sp,4
  80e920:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dma_txchan_list;

  return alt_dev_llist_insert((alt_dev_llist*) dev, &alt_dma_txchan_list);
  80e924:	d1600e04 	addi	r5,gp,-32712
  80e928:	e13fff17 	ldw	r4,-4(fp)
  80e92c:	08101d00 	call	8101d0 <alt_dev_llist_insert>
}
  80e930:	e037883a 	mov	sp,fp
  80e934:	dfc00117 	ldw	ra,4(sp)
  80e938:	df000017 	ldw	fp,0(sp)
  80e93c:	dec00204 	addi	sp,sp,8
  80e940:	f800283a 	ret

0080e944 <alt_dma_rxchan_reg>:
/*
 * Register a DMA receive channel with the system.
 */

static ALT_INLINE int alt_dma_rxchan_reg (alt_dma_rxchan_dev* dev)
{
  80e944:	defffd04 	addi	sp,sp,-12
  80e948:	dfc00215 	stw	ra,8(sp)
  80e94c:	df000115 	stw	fp,4(sp)
  80e950:	df000104 	addi	fp,sp,4
  80e954:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dma_rxchan_list;

  return alt_dev_llist_insert((alt_dev_llist*) dev, &alt_dma_rxchan_list);
  80e958:	d1600c04 	addi	r5,gp,-32720
  80e95c:	e13fff17 	ldw	r4,-4(fp)
  80e960:	08101d00 	call	8101d0 <alt_dev_llist_insert>
}
  80e964:	e037883a 	mov	sp,fp
  80e968:	dfc00117 	ldw	ra,4(sp)
  80e96c:	df000017 	ldw	fp,0(sp)
  80e970:	dec00204 	addi	sp,sp,8
  80e974:	f800283a 	ret

0080e978 <alt_avalon_dma_launch_bidir>:
 * both the receive and transmit channels are using incrementing addresses,
 * i.e. both channels are accesing memory rather than devices.
 */

void alt_avalon_dma_launch_bidir (alt_avalon_dma_priv* priv)
{
  80e978:	defffc04 	addi	sp,sp,-16
  80e97c:	df000315 	stw	fp,12(sp)
  80e980:	df000304 	addi	fp,sp,12
  80e984:	e13ffd15 	stw	r4,-12(fp)
  alt_avalon_dma_txslot* tx_slot;
  alt_avalon_dma_rxslot* rx_slot;

  if ((priv->tx_start != priv->tx_end) && (priv->rx_start != priv->rx_end))
  80e988:	e0bffd17 	ldw	r2,-12(fp)
  80e98c:	10c00117 	ldw	r3,4(r2)
  80e990:	e0bffd17 	ldw	r2,-12(fp)
  80e994:	10800217 	ldw	r2,8(r2)
  80e998:	18802e26 	beq	r3,r2,80ea54 <alt_avalon_dma_launch_bidir+0xdc>
  80e99c:	e0bffd17 	ldw	r2,-12(fp)
  80e9a0:	10c00317 	ldw	r3,12(r2)
  80e9a4:	e0bffd17 	ldw	r2,-12(fp)
  80e9a8:	10800417 	ldw	r2,16(r2)
  80e9ac:	18802926 	beq	r3,r2,80ea54 <alt_avalon_dma_launch_bidir+0xdc>
  {
    priv->active = 1;
  80e9b0:	e0bffd17 	ldw	r2,-12(fp)
  80e9b4:	00c00044 	movi	r3,1
  80e9b8:	10c00815 	stw	r3,32(r2)

    tx_slot = &priv->tx_buf[priv->tx_start];
  80e9bc:	e0bffd17 	ldw	r2,-12(fp)
  80e9c0:	10800117 	ldw	r2,4(r2)
  80e9c4:	1004913a 	slli	r2,r2,4
  80e9c8:	10800904 	addi	r2,r2,36
  80e9cc:	e0fffd17 	ldw	r3,-12(fp)
  80e9d0:	1885883a 	add	r2,r3,r2
  80e9d4:	e0bfff15 	stw	r2,-4(fp)
    rx_slot = &priv->rx_buf[priv->rx_start];
  80e9d8:	e0bffd17 	ldw	r2,-12(fp)
  80e9dc:	10800317 	ldw	r2,12(r2)
  80e9e0:	1004913a 	slli	r2,r2,4
  80e9e4:	10801904 	addi	r2,r2,100
  80e9e8:	e0fffd17 	ldw	r3,-12(fp)
  80e9ec:	1885883a 	add	r2,r3,r2
  80e9f0:	e0bffe15 	stw	r2,-8(fp)

    IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) tx_slot->from);
  80e9f4:	e0bffd17 	ldw	r2,-12(fp)
  80e9f8:	10800017 	ldw	r2,0(r2)
  80e9fc:	10800104 	addi	r2,r2,4
  80ea00:	e0ffff17 	ldw	r3,-4(fp)
  80ea04:	18c00017 	ldw	r3,0(r3)
  80ea08:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) rx_slot->data);
  80ea0c:	e0bffd17 	ldw	r2,-12(fp)
  80ea10:	10800017 	ldw	r2,0(r2)
  80ea14:	10800204 	addi	r2,r2,8
  80ea18:	e0fffe17 	ldw	r3,-8(fp)
  80ea1c:	18c00017 	ldw	r3,0(r3)
  80ea20:	10c00035 	stwio	r3,0(r2)

    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base,
  80ea24:	e0bffd17 	ldw	r2,-12(fp)
  80ea28:	10800017 	ldw	r2,0(r2)
  80ea2c:	11000304 	addi	r4,r2,12
  80ea30:	e0bfff17 	ldw	r2,-4(fp)
  80ea34:	11400117 	ldw	r5,4(r2)
  80ea38:	e0bffe17 	ldw	r2,-8(fp)
  80ea3c:	10c00117 	ldw	r3,4(r2)
  80ea40:	2805883a 	mov	r2,r5
  80ea44:	1880012e 	bgeu	r3,r2,80ea4c <alt_avalon_dma_launch_bidir+0xd4>
  80ea48:	1805883a 	mov	r2,r3
  80ea4c:	20800035 	stwio	r2,0(r4)
  80ea50:	00000306 	br	80ea60 <alt_avalon_dma_launch_bidir+0xe8>
       (tx_slot->len > rx_slot->len) ? rx_slot->len : tx_slot->len);
  }
  else
  {
    priv->active = 0;
  80ea54:	e0bffd17 	ldw	r2,-12(fp)
  80ea58:	10000815 	stw	zero,32(r2)
  }
}
  80ea5c:	0001883a 	nop
  80ea60:	0001883a 	nop
  80ea64:	e037883a 	mov	sp,fp
  80ea68:	df000017 	ldw	fp,0(sp)
  80ea6c:	dec00104 	addi	sp,sp,4
  80ea70:	f800283a 	ret

0080ea74 <alt_avalon_dma_launch_txonly>:
 * i.e. the receive channel is accessing a single memory location (which is
 * probably a device register).
 */

static void alt_avalon_dma_launch_txonly (alt_avalon_dma_priv* priv)
{
  80ea74:	defffd04 	addi	sp,sp,-12
  80ea78:	df000215 	stw	fp,8(sp)
  80ea7c:	df000204 	addi	fp,sp,8
  80ea80:	e13ffe15 	stw	r4,-8(fp)
  alt_avalon_dma_txslot* tx_slot;

  if (priv->tx_start != priv->tx_end)
  80ea84:	e0bffe17 	ldw	r2,-8(fp)
  80ea88:	10c00117 	ldw	r3,4(r2)
  80ea8c:	e0bffe17 	ldw	r2,-8(fp)
  80ea90:	10800217 	ldw	r2,8(r2)
  80ea94:	18801726 	beq	r3,r2,80eaf4 <alt_avalon_dma_launch_txonly+0x80>
  {
    priv->active = 1;
  80ea98:	e0bffe17 	ldw	r2,-8(fp)
  80ea9c:	00c00044 	movi	r3,1
  80eaa0:	10c00815 	stw	r3,32(r2)
    tx_slot      = &priv->tx_buf[priv->tx_start];
  80eaa4:	e0bffe17 	ldw	r2,-8(fp)
  80eaa8:	10800117 	ldw	r2,4(r2)
  80eaac:	1004913a 	slli	r2,r2,4
  80eab0:	10800904 	addi	r2,r2,36
  80eab4:	e0fffe17 	ldw	r3,-8(fp)
  80eab8:	1885883a 	add	r2,r3,r2
  80eabc:	e0bfff15 	stw	r2,-4(fp)

    IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) tx_slot->from);
  80eac0:	e0bffe17 	ldw	r2,-8(fp)
  80eac4:	10800017 	ldw	r2,0(r2)
  80eac8:	10800104 	addi	r2,r2,4
  80eacc:	e0ffff17 	ldw	r3,-4(fp)
  80ead0:	18c00017 	ldw	r3,0(r3)
  80ead4:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base, tx_slot->len);
  80ead8:	e0bffe17 	ldw	r2,-8(fp)
  80eadc:	10800017 	ldw	r2,0(r2)
  80eae0:	10800304 	addi	r2,r2,12
  80eae4:	e0ffff17 	ldw	r3,-4(fp)
  80eae8:	18c00117 	ldw	r3,4(r3)
  80eaec:	10c00035 	stwio	r3,0(r2)
  }
  else
  {
    priv->active = 0;
  }
}
  80eaf0:	00000206 	br	80eafc <alt_avalon_dma_launch_txonly+0x88>
    priv->active = 0;
  80eaf4:	e0bffe17 	ldw	r2,-8(fp)
  80eaf8:	10000815 	stw	zero,32(r2)
}
  80eafc:	0001883a 	nop
  80eb00:	e037883a 	mov	sp,fp
  80eb04:	df000017 	ldw	fp,0(sp)
  80eb08:	dec00104 	addi	sp,sp,4
  80eb0c:	f800283a 	ret

0080eb10 <alt_avalon_dma_launch_rxonly>:
 * i.e. the transmit channel is accessing a single memory location (which is
 * probably a device register).
 */

static void alt_avalon_dma_launch_rxonly (alt_avalon_dma_priv* priv)
{
  80eb10:	defffd04 	addi	sp,sp,-12
  80eb14:	df000215 	stw	fp,8(sp)
  80eb18:	df000204 	addi	fp,sp,8
  80eb1c:	e13ffe15 	stw	r4,-8(fp)
  alt_avalon_dma_rxslot* rx_slot;

  if (priv->rx_start != priv->rx_end)
  80eb20:	e0bffe17 	ldw	r2,-8(fp)
  80eb24:	10c00317 	ldw	r3,12(r2)
  80eb28:	e0bffe17 	ldw	r2,-8(fp)
  80eb2c:	10800417 	ldw	r2,16(r2)
  80eb30:	18801726 	beq	r3,r2,80eb90 <alt_avalon_dma_launch_rxonly+0x80>
  {
    priv->active = 1;
  80eb34:	e0bffe17 	ldw	r2,-8(fp)
  80eb38:	00c00044 	movi	r3,1
  80eb3c:	10c00815 	stw	r3,32(r2)
    rx_slot      = &priv->rx_buf[priv->rx_start];
  80eb40:	e0bffe17 	ldw	r2,-8(fp)
  80eb44:	10800317 	ldw	r2,12(r2)
  80eb48:	1004913a 	slli	r2,r2,4
  80eb4c:	10801904 	addi	r2,r2,100
  80eb50:	e0fffe17 	ldw	r3,-8(fp)
  80eb54:	1885883a 	add	r2,r3,r2
  80eb58:	e0bfff15 	stw	r2,-4(fp)

    IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) rx_slot->data);
  80eb5c:	e0bffe17 	ldw	r2,-8(fp)
  80eb60:	10800017 	ldw	r2,0(r2)
  80eb64:	10800204 	addi	r2,r2,8
  80eb68:	e0ffff17 	ldw	r3,-4(fp)
  80eb6c:	18c00017 	ldw	r3,0(r3)
  80eb70:	10c00035 	stwio	r3,0(r2)
    IOWR_ALTERA_AVALON_DMA_LENGTH (priv->base, rx_slot->len);
  80eb74:	e0bffe17 	ldw	r2,-8(fp)
  80eb78:	10800017 	ldw	r2,0(r2)
  80eb7c:	10800304 	addi	r2,r2,12
  80eb80:	e0ffff17 	ldw	r3,-4(fp)
  80eb84:	18c00117 	ldw	r3,4(r3)
  80eb88:	10c00035 	stwio	r3,0(r2)
  }
  else
  {
    priv->active = 0;
  }
}
  80eb8c:	00000206 	br	80eb98 <alt_avalon_dma_launch_rxonly+0x88>
    priv->active = 0;
  80eb90:	e0bffe17 	ldw	r2,-8(fp)
  80eb94:	10000815 	stw	zero,32(r2)
}
  80eb98:	0001883a 	nop
  80eb9c:	e037883a 	mov	sp,fp
  80eba0:	df000017 	ldw	fp,0(sp)
  80eba4:	dec00104 	addi	sp,sp,4
  80eba8:	f800283a 	ret

0080ebac <alt_avalon_dma_ioctl>:
 * device instance. See alt_dma_dev.h for the meaning of the supported
 * ioctl requests.
 */

static int alt_avalon_dma_ioctl (alt_avalon_dma_priv* priv, int req, void* arg)
{
  80ebac:	defffa04 	addi	sp,sp,-24
  80ebb0:	df000515 	stw	fp,20(sp)
  80ebb4:	df000504 	addi	fp,sp,20
  80ebb8:	e13ffd15 	stw	r4,-12(fp)
  80ebbc:	e17ffc15 	stw	r5,-16(fp)
  80ebc0:	e1bffb15 	stw	r6,-20(fp)
  int     status = 0;
  80ebc4:	e03fff15 	stw	zero,-4(fp)
   * since it cannot catch concurrent calls to alt_alavalon_dma_prepare()
   * or alt_avalon_dma_send(), but it should at least catch the most
   * common class of problems.
   */

  if ((priv->tx_start != priv->tx_end) ||
  80ebc8:	e0bffd17 	ldw	r2,-12(fp)
  80ebcc:	10c00117 	ldw	r3,4(r2)
  80ebd0:	e0bffd17 	ldw	r2,-12(fp)
  80ebd4:	10800217 	ldw	r2,8(r2)
  80ebd8:	18800a1e 	bne	r3,r2,80ec04 <alt_avalon_dma_ioctl+0x58>
      (priv->rx_start != priv->rx_end) ||
  80ebdc:	e0bffd17 	ldw	r2,-12(fp)
  80ebe0:	10c00317 	ldw	r3,12(r2)
  80ebe4:	e0bffd17 	ldw	r2,-12(fp)
  80ebe8:	10800417 	ldw	r2,16(r2)
  if ((priv->tx_start != priv->tx_end) ||
  80ebec:	1880051e 	bne	r3,r2,80ec04 <alt_avalon_dma_ioctl+0x58>
      IORD_ALTERA_AVALON_DMA_LENGTH (priv->base))
  80ebf0:	e0bffd17 	ldw	r2,-12(fp)
  80ebf4:	10800017 	ldw	r2,0(r2)
  80ebf8:	10800304 	addi	r2,r2,12
  80ebfc:	10800037 	ldwio	r2,0(r2)
      (priv->rx_start != priv->rx_end) ||
  80ec00:	10000226 	beq	r2,zero,80ec0c <alt_avalon_dma_ioctl+0x60>
  {
    return -EIO;
  80ec04:	00bffec4 	movi	r2,-5
  80ec08:	0000b806 	br	80eeec <alt_avalon_dma_ioctl+0x340>
  80ec0c:	e0bffc17 	ldw	r2,-16(fp)
  80ec10:	108002a8 	cmpgeui	r2,r2,10
  80ec14:	1000771e 	bne	r2,zero,80edf4 <alt_avalon_dma_ioctl+0x248>
  80ec18:	e0bffc17 	ldw	r2,-16(fp)
  80ec1c:	100690ba 	slli	r3,r2,2
  80ec20:	00802074 	movhi	r2,129
  80ec24:	1885883a 	add	r2,r3,r2
  80ec28:	10bb0c17 	ldw	r2,-5072(r2)
  80ec2c:	1000683a 	jmp	r2
  80ec30:	0080edf4 	movhi	r2,951
  80ec34:	0080ec58 	cmpnei	r2,zero,945
  80ec38:	0080ecb0 	cmpltui	r2,zero,946
  80ec3c:	0080ecdc 	xori	r2,zero,947
  80ec40:	0080ed34 	movhi	r2,948
  80ec44:	0080ed60 	cmpeqi	r2,zero,949
  80ec48:	0080ed7c 	xorhi	r2,zero,949
  80ec4c:	0080ed9c 	xori	r2,zero,950
  80ec50:	0080edbc 	xorhi	r2,zero,950
  80ec54:	0080eddc 	xori	r2,zero,951
  /* Now process the ioctl. */

  switch (req)
  {
  case ALT_DMA_TX_STREAM_ON:
    if (!(priv->flags & ALT_AVALON_DMA_RX_STREAM))
  80ec58:	e0bffd17 	ldw	r2,-12(fp)
  80ec5c:	10800517 	ldw	r2,20(r2)
  80ec60:	1080100c 	andi	r2,r2,64
  80ec64:	10000f1e 	bne	r2,zero,80eca4 <alt_avalon_dma_ioctl+0xf8>
    {
      IOWR_ALTERA_AVALON_DMA_RADDRESS (priv->base, (alt_u32) arg);
  80ec68:	e0bffd17 	ldw	r2,-12(fp)
  80ec6c:	10800017 	ldw	r2,0(r2)
  80ec70:	10800104 	addi	r2,r2,4
  80ec74:	e0fffb17 	ldw	r3,-20(fp)
  80ec78:	10c00035 	stwio	r3,0(r2)
      priv->flags |= ALT_AVALON_DMA_TX_STREAM;
  80ec7c:	e0bffd17 	ldw	r2,-12(fp)
  80ec80:	10800517 	ldw	r2,20(r2)
  80ec84:	10c00814 	ori	r3,r2,32
  80ec88:	e0bffd17 	ldw	r2,-12(fp)
  80ec8c:	10c00515 	stw	r3,20(r2)
      priv->launch = alt_avalon_dma_launch_rxonly;
  80ec90:	e0fffd17 	ldw	r3,-12(fp)
  80ec94:	00802074 	movhi	r2,129
  80ec98:	10bac404 	addi	r2,r2,-5360
  80ec9c:	18800715 	stw	r2,28(r3)
    }
    else
    {
      status = -EIO;
    }
    break;
  80eca0:	00005606 	br	80edfc <alt_avalon_dma_ioctl+0x250>
      status = -EIO;
  80eca4:	00bffec4 	movi	r2,-5
  80eca8:	e0bfff15 	stw	r2,-4(fp)
    break;
  80ecac:	00005306 	br	80edfc <alt_avalon_dma_ioctl+0x250>
  case ALT_DMA_TX_STREAM_OFF:
    priv->flags &= ~ALT_AVALON_DMA_TX_STREAM;
  80ecb0:	e0bffd17 	ldw	r2,-12(fp)
  80ecb4:	10c00517 	ldw	r3,20(r2)
  80ecb8:	00bff7c4 	movi	r2,-33
  80ecbc:	1886703a 	and	r3,r3,r2
  80ecc0:	e0bffd17 	ldw	r2,-12(fp)
  80ecc4:	10c00515 	stw	r3,20(r2)
    priv->launch = alt_avalon_dma_launch_bidir;
  80ecc8:	e0fffd17 	ldw	r3,-12(fp)
  80eccc:	00802074 	movhi	r2,129
  80ecd0:	10ba5e04 	addi	r2,r2,-5768
  80ecd4:	18800715 	stw	r2,28(r3)
    break;
  80ecd8:	00004806 	br	80edfc <alt_avalon_dma_ioctl+0x250>
  case ALT_DMA_RX_STREAM_ON:
    if (!(priv->flags & ALT_AVALON_DMA_TX_STREAM))
  80ecdc:	e0bffd17 	ldw	r2,-12(fp)
  80ece0:	10800517 	ldw	r2,20(r2)
  80ece4:	1080080c 	andi	r2,r2,32
  80ece8:	10000f1e 	bne	r2,zero,80ed28 <alt_avalon_dma_ioctl+0x17c>
    {
      IOWR_ALTERA_AVALON_DMA_WADDRESS (priv->base, (alt_u32) arg);
  80ecec:	e0bffd17 	ldw	r2,-12(fp)
  80ecf0:	10800017 	ldw	r2,0(r2)
  80ecf4:	10800204 	addi	r2,r2,8
  80ecf8:	e0fffb17 	ldw	r3,-20(fp)
  80ecfc:	10c00035 	stwio	r3,0(r2)
      priv->flags |= ALT_AVALON_DMA_RX_STREAM;
  80ed00:	e0bffd17 	ldw	r2,-12(fp)
  80ed04:	10800517 	ldw	r2,20(r2)
  80ed08:	10c01014 	ori	r3,r2,64
  80ed0c:	e0bffd17 	ldw	r2,-12(fp)
  80ed10:	10c00515 	stw	r3,20(r2)
      priv->launch = alt_avalon_dma_launch_txonly;
  80ed14:	e0fffd17 	ldw	r3,-12(fp)
  80ed18:	00802074 	movhi	r2,129
  80ed1c:	10ba9d04 	addi	r2,r2,-5516
  80ed20:	18800715 	stw	r2,28(r3)
    }
    else
    {
      status = -EIO;
    }
    break;
  80ed24:	00003506 	br	80edfc <alt_avalon_dma_ioctl+0x250>
      status = -EIO;
  80ed28:	00bffec4 	movi	r2,-5
  80ed2c:	e0bfff15 	stw	r2,-4(fp)
    break;
  80ed30:	00003206 	br	80edfc <alt_avalon_dma_ioctl+0x250>
  case ALT_DMA_RX_STREAM_OFF:
    priv->flags &= ~ALT_AVALON_DMA_RX_STREAM;
  80ed34:	e0bffd17 	ldw	r2,-12(fp)
  80ed38:	10c00517 	ldw	r3,20(r2)
  80ed3c:	00bfefc4 	movi	r2,-65
  80ed40:	1886703a 	and	r3,r3,r2
  80ed44:	e0bffd17 	ldw	r2,-12(fp)
  80ed48:	10c00515 	stw	r3,20(r2)
    priv->launch = alt_avalon_dma_launch_bidir;
  80ed4c:	e0fffd17 	ldw	r3,-12(fp)
  80ed50:	00802074 	movhi	r2,129
  80ed54:	10ba5e04 	addi	r2,r2,-5768
  80ed58:	18800715 	stw	r2,28(r3)
    break;
  80ed5c:	00002706 	br	80edfc <alt_avalon_dma_ioctl+0x250>
  case ALT_DMA_SET_MODE_8:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
  80ed60:	e0bffd17 	ldw	r2,-12(fp)
  80ed64:	10c00517 	ldw	r3,20(r2)
  80ed68:	00bffc04 	movi	r2,-16
  80ed6c:	1886703a 	and	r3,r3,r2
  80ed70:	e0bffd17 	ldw	r2,-12(fp)
  80ed74:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_8;
    break;
  80ed78:	00002006 	br	80edfc <alt_avalon_dma_ioctl+0x250>
  case ALT_DMA_SET_MODE_16:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
  80ed7c:	e0bffd17 	ldw	r2,-12(fp)
  80ed80:	10c00517 	ldw	r3,20(r2)
  80ed84:	00bffc04 	movi	r2,-16
  80ed88:	1884703a 	and	r2,r3,r2
  80ed8c:	10c00054 	ori	r3,r2,1
  80ed90:	e0bffd17 	ldw	r2,-12(fp)
  80ed94:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_16;
    break;
  80ed98:	00001806 	br	80edfc <alt_avalon_dma_ioctl+0x250>
  case ALT_DMA_SET_MODE_32:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
  80ed9c:	e0bffd17 	ldw	r2,-12(fp)
  80eda0:	10c00517 	ldw	r3,20(r2)
  80eda4:	00bffc04 	movi	r2,-16
  80eda8:	1884703a 	and	r2,r3,r2
  80edac:	10c000d4 	ori	r3,r2,3
  80edb0:	e0bffd17 	ldw	r2,-12(fp)
  80edb4:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_32;
    break;
  80edb8:	00001006 	br	80edfc <alt_avalon_dma_ioctl+0x250>
  case ALT_DMA_SET_MODE_64:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
  80edbc:	e0bffd17 	ldw	r2,-12(fp)
  80edc0:	10c00517 	ldw	r3,20(r2)
  80edc4:	00bffc04 	movi	r2,-16
  80edc8:	1884703a 	and	r2,r3,r2
  80edcc:	10c001d4 	ori	r3,r2,7
  80edd0:	e0bffd17 	ldw	r2,-12(fp)
  80edd4:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_64;
    break;
  80edd8:	00000806 	br	80edfc <alt_avalon_dma_ioctl+0x250>
  case ALT_DMA_SET_MODE_128:
    priv->flags = (priv->flags & ~ALT_AVALON_DMA_MODE_MSK) |
  80eddc:	e0bffd17 	ldw	r2,-12(fp)
  80ede0:	10800517 	ldw	r2,20(r2)
  80ede4:	10c003d4 	ori	r3,r2,15
  80ede8:	e0bffd17 	ldw	r2,-12(fp)
  80edec:	10c00515 	stw	r3,20(r2)
      ALT_AVALON_DMA_MODE_128;
    break;
  80edf0:	00000206 	br	80edfc <alt_avalon_dma_ioctl+0x250>
  default:
    status = -ENOTTY;
  80edf4:	00bff9c4 	movi	r2,-25
  80edf8:	e0bfff15 	stw	r2,-4(fp)
  }

  if (!status)
  80edfc:	e0bfff17 	ldw	r2,-4(fp)
  80ee00:	1000391e 	bne	r2,zero,80eee8 <alt_avalon_dma_ioctl+0x33c>
  {
     switch (priv->flags & ALT_AVALON_DMA_MODE_MSK)
  80ee04:	e0bffd17 	ldw	r2,-12(fp)
  80ee08:	10800517 	ldw	r2,20(r2)
  80ee0c:	108003cc 	andi	r2,r2,15
  80ee10:	10c001e0 	cmpeqi	r3,r2,7
  80ee14:	1800131e 	bne	r3,zero,80ee64 <alt_avalon_dma_ioctl+0x2b8>
  80ee18:	10c00228 	cmpgeui	r3,r2,8
  80ee1c:	1800141e 	bne	r3,zero,80ee70 <alt_avalon_dma_ioctl+0x2c4>
  80ee20:	10c000e0 	cmpeqi	r3,r2,3
  80ee24:	18000c1e 	bne	r3,zero,80ee58 <alt_avalon_dma_ioctl+0x2ac>
  80ee28:	10c00128 	cmpgeui	r3,r2,4
  80ee2c:	1800101e 	bne	r3,zero,80ee70 <alt_avalon_dma_ioctl+0x2c4>
  80ee30:	10000326 	beq	r2,zero,80ee40 <alt_avalon_dma_ioctl+0x294>
  80ee34:	10800060 	cmpeqi	r2,r2,1
  80ee38:	1000041e 	bne	r2,zero,80ee4c <alt_avalon_dma_ioctl+0x2a0>
  80ee3c:	00000c06 	br	80ee70 <alt_avalon_dma_ioctl+0x2c4>
     {
     case ALT_AVALON_DMA_MODE_8:
       mode = ALTERA_AVALON_DMA_CONTROL_BYTE_MSK;
  80ee40:	00800044 	movi	r2,1
  80ee44:	e0bffe15 	stw	r2,-8(fp)
       break;
  80ee48:	00000b06 	br	80ee78 <alt_avalon_dma_ioctl+0x2cc>
     case ALT_AVALON_DMA_MODE_16:
       mode = ALTERA_AVALON_DMA_CONTROL_HW_MSK;
  80ee4c:	00800084 	movi	r2,2
  80ee50:	e0bffe15 	stw	r2,-8(fp)
       break;
  80ee54:	00000806 	br	80ee78 <alt_avalon_dma_ioctl+0x2cc>
     case ALT_AVALON_DMA_MODE_32:
       mode = ALTERA_AVALON_DMA_CONTROL_WORD_MSK;
  80ee58:	00800104 	movi	r2,4
  80ee5c:	e0bffe15 	stw	r2,-8(fp)
       break;
  80ee60:	00000506 	br	80ee78 <alt_avalon_dma_ioctl+0x2cc>
     case ALT_AVALON_DMA_MODE_64:
       mode = ALTERA_AVALON_DMA_CONTROL_DWORD_MSK;
  80ee64:	00810004 	movi	r2,1024
  80ee68:	e0bffe15 	stw	r2,-8(fp)
       break;
  80ee6c:	00000206 	br	80ee78 <alt_avalon_dma_ioctl+0x2cc>
     default:
       mode = ALTERA_AVALON_DMA_CONTROL_QWORD_MSK;
  80ee70:	00820004 	movi	r2,2048
  80ee74:	e0bffe15 	stw	r2,-8(fp)
     }

    if (priv->flags & ALT_AVALON_DMA_TX_STREAM)
  80ee78:	e0bffd17 	ldw	r2,-12(fp)
  80ee7c:	10800517 	ldw	r2,20(r2)
  80ee80:	1080080c 	andi	r2,r2,32
  80ee84:	10000726 	beq	r2,zero,80eea4 <alt_avalon_dma_ioctl+0x2f8>
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
  80ee88:	e0bffd17 	ldw	r2,-12(fp)
  80ee8c:	10800017 	ldw	r2,0(r2)
  80ee90:	10800604 	addi	r2,r2,24
  80ee94:	e0fffe17 	ldw	r3,-8(fp)
  80ee98:	18c07e14 	ori	r3,r3,504
  80ee9c:	10c00035 	stwio	r3,0(r2)
  80eea0:	00001106 	br	80eee8 <alt_avalon_dma_ioctl+0x33c>
        ALTERA_AVALON_DMA_CONTROL_REEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_WEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_RCON_MSK);
    }
    else if (priv->flags & ALT_AVALON_DMA_RX_STREAM)
  80eea4:	e0bffd17 	ldw	r2,-12(fp)
  80eea8:	10800517 	ldw	r2,20(r2)
  80eeac:	1080100c 	andi	r2,r2,64
  80eeb0:	10000726 	beq	r2,zero,80eed0 <alt_avalon_dma_ioctl+0x324>
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
  80eeb4:	e0bffd17 	ldw	r2,-12(fp)
  80eeb8:	10800017 	ldw	r2,0(r2)
  80eebc:	10800604 	addi	r2,r2,24
  80eec0:	e0fffe17 	ldw	r3,-8(fp)
  80eec4:	18c0be14 	ori	r3,r3,760
  80eec8:	10c00035 	stwio	r3,0(r2)
  80eecc:	00000606 	br	80eee8 <alt_avalon_dma_ioctl+0x33c>
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK |
        ALTERA_AVALON_DMA_CONTROL_WCON_MSK);
    }
    else
    {
      IOWR_ALTERA_AVALON_DMA_CONTROL (priv->base,
  80eed0:	e0bffd17 	ldw	r2,-12(fp)
  80eed4:	10800017 	ldw	r2,0(r2)
  80eed8:	10800604 	addi	r2,r2,24
  80eedc:	e0fffe17 	ldw	r3,-8(fp)
  80eee0:	18c03e14 	ori	r3,r3,248
  80eee4:	10c00035 	stwio	r3,0(r2)
        ALTERA_AVALON_DMA_CONTROL_WEEN_MSK      |
        ALTERA_AVALON_DMA_CONTROL_LEEN_MSK);
    }
  }

  return status;
  80eee8:	e0bfff17 	ldw	r2,-4(fp)
}
  80eeec:	e037883a 	mov	sp,fp
  80eef0:	df000017 	ldw	fp,0(sp)
  80eef4:	dec00104 	addi	sp,sp,4
  80eef8:	f800283a 	ret

0080eefc <alt_avalon_dma_tx_ioctl>:
 */

int alt_avalon_dma_tx_ioctl (alt_dma_txchan dma,
           int req,
           void* arg)
{
  80eefc:	defffb04 	addi	sp,sp,-20
  80ef00:	dfc00415 	stw	ra,16(sp)
  80ef04:	df000315 	stw	fp,12(sp)
  80ef08:	df000304 	addi	fp,sp,12
  80ef0c:	e13fff15 	stw	r4,-4(fp)
  80ef10:	e17ffe15 	stw	r5,-8(fp)
  80ef14:	e1bffd15 	stw	r6,-12(fp)
  return alt_avalon_dma_ioctl (((alt_avalon_dma_txchan*) dma)->priv,
  80ef18:	e0bfff17 	ldw	r2,-4(fp)
  80ef1c:	10800617 	ldw	r2,24(r2)
  80ef20:	e1bffd17 	ldw	r6,-12(fp)
  80ef24:	e17ffe17 	ldw	r5,-8(fp)
  80ef28:	1009883a 	mov	r4,r2
  80ef2c:	080ebac0 	call	80ebac <alt_avalon_dma_ioctl>
             req,
             arg);
}
  80ef30:	e037883a 	mov	sp,fp
  80ef34:	dfc00117 	ldw	ra,4(sp)
  80ef38:	df000017 	ldw	fp,0(sp)
  80ef3c:	dec00204 	addi	sp,sp,8
  80ef40:	f800283a 	ret

0080ef44 <alt_avalon_dma_rx_ioctl>:
 */

int alt_avalon_dma_rx_ioctl (alt_dma_rxchan dma,
           int req,
           void* arg)
{
  80ef44:	defffb04 	addi	sp,sp,-20
  80ef48:	dfc00415 	stw	ra,16(sp)
  80ef4c:	df000315 	stw	fp,12(sp)
  80ef50:	df000304 	addi	fp,sp,12
  80ef54:	e13fff15 	stw	r4,-4(fp)
  80ef58:	e17ffe15 	stw	r5,-8(fp)
  80ef5c:	e1bffd15 	stw	r6,-12(fp)
  return alt_avalon_dma_ioctl (((alt_avalon_dma_rxchan*) dma)->priv,
  80ef60:	e0bfff17 	ldw	r2,-4(fp)
  80ef64:	10800617 	ldw	r2,24(r2)
  80ef68:	e1bffd17 	ldw	r6,-12(fp)
  80ef6c:	e17ffe17 	ldw	r5,-8(fp)
  80ef70:	1009883a 	mov	r4,r2
  80ef74:	080ebac0 	call	80ebac <alt_avalon_dma_ioctl>
             req,
             arg);
}
  80ef78:	e037883a 	mov	sp,fp
  80ef7c:	dfc00117 	ldw	ra,4(sp)
  80ef80:	df000017 	ldw	fp,0(sp)
  80ef84:	dec00204 	addi	sp,sp,8
  80ef88:	f800283a 	ret

0080ef8c <alt_avalon_dma_prepare>:
int alt_avalon_dma_prepare (alt_dma_rxchan   dma,
                            void*            data,
                            alt_u32          len,
                            alt_rxchan_done* done,
                            void*            handle)
{
  80ef8c:	defff404 	addi	sp,sp,-48
  80ef90:	dfc00b15 	stw	ra,44(sp)
  80ef94:	df000a15 	stw	fp,40(sp)
  80ef98:	df000a04 	addi	fp,sp,40
  80ef9c:	e13ff915 	stw	r4,-28(fp)
  80efa0:	e17ff815 	stw	r5,-32(fp)
  80efa4:	e1bff715 	stw	r6,-36(fp)
  80efa8:	e1fff615 	stw	r7,-40(fp)
  alt_u32                end;
  alt_u32                next;
  alt_u32                align_mask;
  alt_avalon_dma_priv*   priv;

  priv = ((alt_avalon_dma_rxchan*) dma)->priv;
  80efac:	e0bff917 	ldw	r2,-28(fp)
  80efb0:	10800617 	ldw	r2,24(r2)
  80efb4:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Ensure that the data is correctly aligned, and that it's not too
   * big for the device.
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;
  80efb8:	e0bfff17 	ldw	r2,-4(fp)
  80efbc:	10800517 	ldw	r2,20(r2)
  80efc0:	108003cc 	andi	r2,r2,15
  80efc4:	e0bffe15 	stw	r2,-8(fp)

  if ((((alt_u32) data) & align_mask) || (len & align_mask) ||
  80efc8:	e0fff817 	ldw	r3,-32(fp)
  80efcc:	e0bffe17 	ldw	r2,-8(fp)
  80efd0:	1884703a 	and	r2,r3,r2
  80efd4:	1000081e 	bne	r2,zero,80eff8 <alt_avalon_dma_prepare+0x6c>
  80efd8:	e0fff717 	ldw	r3,-36(fp)
  80efdc:	e0bffe17 	ldw	r2,-8(fp)
  80efe0:	1884703a 	and	r2,r3,r2
  80efe4:	1000041e 	bne	r2,zero,80eff8 <alt_avalon_dma_prepare+0x6c>
     (len > priv->max_length))
  80efe8:	e0bfff17 	ldw	r2,-4(fp)
  80efec:	10c00617 	ldw	r3,24(r2)
  if ((((alt_u32) data) & align_mask) || (len & align_mask) ||
  80eff0:	e0bff717 	ldw	r2,-36(fp)
  80eff4:	1880022e 	bgeu	r3,r2,80f000 <alt_avalon_dma_prepare+0x74>
  {
    return -EINVAL;
  80eff8:	00bffa84 	movi	r2,-22
  80effc:	00002c06 	br	80f0b0 <alt_avalon_dma_prepare+0x124>
  }

  start = priv->rx_start;
  80f000:	e0bfff17 	ldw	r2,-4(fp)
  80f004:	10800317 	ldw	r2,12(r2)
  80f008:	e0bffd15 	stw	r2,-12(fp)
  end   = priv->rx_end;
  80f00c:	e0bfff17 	ldw	r2,-4(fp)
  80f010:	10800417 	ldw	r2,16(r2)
  80f014:	e0bffc15 	stw	r2,-16(fp)
  slot  = &priv->rx_buf[end];
  80f018:	e0bffc17 	ldw	r2,-16(fp)
  80f01c:	1004913a 	slli	r2,r2,4
  80f020:	10801904 	addi	r2,r2,100
  80f024:	e0ffff17 	ldw	r3,-4(fp)
  80f028:	1885883a 	add	r2,r3,r2
  80f02c:	e0bffb15 	stw	r2,-20(fp)

  next  = (end + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
  80f030:	e0bffc17 	ldw	r2,-16(fp)
  80f034:	10800044 	addi	r2,r2,1
  80f038:	108000cc 	andi	r2,r2,3
  80f03c:	e0bffa15 	stw	r2,-24(fp)

  if (next == start)
  80f040:	e0fffa17 	ldw	r3,-24(fp)
  80f044:	e0bffd17 	ldw	r2,-12(fp)
  80f048:	1880021e 	bne	r3,r2,80f054 <alt_avalon_dma_prepare+0xc8>
  {
    return -ENOSPC;
  80f04c:	00bff904 	movi	r2,-28
  80f050:	00001706 	br	80f0b0 <alt_avalon_dma_prepare+0x124>
  }

  slot->data   = data;
  80f054:	e0bffb17 	ldw	r2,-20(fp)
  80f058:	e0fff817 	ldw	r3,-32(fp)
  80f05c:	10c00015 	stw	r3,0(r2)
  slot->len    = len;
  80f060:	e0bffb17 	ldw	r2,-20(fp)
  80f064:	e0fff717 	ldw	r3,-36(fp)
  80f068:	10c00115 	stw	r3,4(r2)
  slot->done   = done;
  80f06c:	e0bffb17 	ldw	r2,-20(fp)
  80f070:	e0fff617 	ldw	r3,-40(fp)
  80f074:	10c00215 	stw	r3,8(r2)
  slot->handle = handle;
  80f078:	e0bffb17 	ldw	r2,-20(fp)
  80f07c:	e0c00217 	ldw	r3,8(fp)
  80f080:	10c00315 	stw	r3,12(r2)

  priv->rx_end = next;
  80f084:	e0bfff17 	ldw	r2,-4(fp)
  80f088:	e0fffa17 	ldw	r3,-24(fp)
  80f08c:	10c00415 	stw	r3,16(r2)

  if (!priv->active)
  80f090:	e0bfff17 	ldw	r2,-4(fp)
  80f094:	10800817 	ldw	r2,32(r2)
  80f098:	1000041e 	bne	r2,zero,80f0ac <alt_avalon_dma_prepare+0x120>
  {
    priv->launch (priv);
  80f09c:	e0bfff17 	ldw	r2,-4(fp)
  80f0a0:	10800717 	ldw	r2,28(r2)
  80f0a4:	e13fff17 	ldw	r4,-4(fp)
  80f0a8:	103ee83a 	callr	r2
  }

  return 0;
  80f0ac:	0005883a 	mov	r2,zero
}
  80f0b0:	e037883a 	mov	sp,fp
  80f0b4:	dfc00117 	ldw	ra,4(sp)
  80f0b8:	df000017 	ldw	fp,0(sp)
  80f0bc:	dec00204 	addi	sp,sp,8
  80f0c0:	f800283a 	ret

0080f0c4 <alt_avalon_dma_space>:
 *
 * A negative value indicates that the value could not be determined.
 */

int alt_avalon_dma_space (alt_dma_txchan dma)
{
  80f0c4:	defffb04 	addi	sp,sp,-20
  80f0c8:	df000415 	stw	fp,16(sp)
  80f0cc:	df000404 	addi	fp,sp,16
  80f0d0:	e13ffc15 	stw	r4,-16(fp)
  alt_avalon_dma_priv* priv;

  alt_u32 start;
  alt_u32 end;

  priv = ((alt_avalon_dma_txchan*) dma)->priv;
  80f0d4:	e0bffc17 	ldw	r2,-16(fp)
  80f0d8:	10800617 	ldw	r2,24(r2)
  80f0dc:	e0bfff15 	stw	r2,-4(fp)

  start = priv->tx_start;
  80f0e0:	e0bfff17 	ldw	r2,-4(fp)
  80f0e4:	10800117 	ldw	r2,4(r2)
  80f0e8:	e0bffe15 	stw	r2,-8(fp)
  end   = priv->tx_end;
  80f0ec:	e0bfff17 	ldw	r2,-4(fp)
  80f0f0:	10800217 	ldw	r2,8(r2)
  80f0f4:	e0bffd15 	stw	r2,-12(fp)

  return (start > end) ? start - end - 1 :
  80f0f8:	e0bffe17 	ldw	r2,-8(fp)
  80f0fc:	e0fffd17 	ldw	r3,-12(fp)
  80f100:	1880052e 	bgeu	r3,r2,80f118 <alt_avalon_dma_space+0x54>
  80f104:	e0fffe17 	ldw	r3,-8(fp)
  80f108:	e0bffd17 	ldw	r2,-12(fp)
  80f10c:	1885c83a 	sub	r2,r3,r2
  80f110:	10bfffc4 	addi	r2,r2,-1
  80f114:	00000406 	br	80f128 <alt_avalon_dma_space+0x64>
    ALT_AVALON_DMA_NSLOTS + start - end - 1;
  80f118:	e0fffe17 	ldw	r3,-8(fp)
  80f11c:	e0bffd17 	ldw	r2,-12(fp)
  80f120:	1885c83a 	sub	r2,r3,r2
  80f124:	108000c4 	addi	r2,r2,3
}
  80f128:	e037883a 	mov	sp,fp
  80f12c:	df000017 	ldw	fp,0(sp)
  80f130:	dec00104 	addi	sp,sp,4
  80f134:	f800283a 	ret

0080f138 <alt_avalon_dma_send>:
int alt_avalon_dma_send (alt_dma_txchan   dma,
                         const void*      from,
                         alt_u32          len,
                         alt_txchan_done* done,
                         void*            handle)
{
  80f138:	defff404 	addi	sp,sp,-48
  80f13c:	dfc00b15 	stw	ra,44(sp)
  80f140:	df000a15 	stw	fp,40(sp)
  80f144:	df000a04 	addi	fp,sp,40
  80f148:	e13ff915 	stw	r4,-28(fp)
  80f14c:	e17ff815 	stw	r5,-32(fp)
  80f150:	e1bff715 	stw	r6,-36(fp)
  80f154:	e1fff615 	stw	r7,-40(fp)
  alt_u32                end;
  alt_u32                align_mask;
  alt_u32                next;
  alt_avalon_dma_priv*   priv;

  priv = ((alt_avalon_dma_txchan*) dma)->priv;
  80f158:	e0bff917 	ldw	r2,-28(fp)
  80f15c:	10800617 	ldw	r2,24(r2)
  80f160:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Ensure that the data is correctly aligned, and not too large
   * for the device
   */

  align_mask = priv->flags & ALT_AVALON_DMA_MODE_MSK;
  80f164:	e0bfff17 	ldw	r2,-4(fp)
  80f168:	10800517 	ldw	r2,20(r2)
  80f16c:	108003cc 	andi	r2,r2,15
  80f170:	e0bffe15 	stw	r2,-8(fp)

  if ((((alt_u32) from) & align_mask) ||
  80f174:	e0fff817 	ldw	r3,-32(fp)
  80f178:	e0bffe17 	ldw	r2,-8(fp)
  80f17c:	1884703a 	and	r2,r3,r2
  80f180:	1000081e 	bne	r2,zero,80f1a4 <alt_avalon_dma_send+0x6c>
        (len & align_mask)            ||
  80f184:	e0fff717 	ldw	r3,-36(fp)
  80f188:	e0bffe17 	ldw	r2,-8(fp)
  80f18c:	1884703a 	and	r2,r3,r2
  if ((((alt_u32) from) & align_mask) ||
  80f190:	1000041e 	bne	r2,zero,80f1a4 <alt_avalon_dma_send+0x6c>
        (len > priv->max_length))
  80f194:	e0bfff17 	ldw	r2,-4(fp)
  80f198:	10c00617 	ldw	r3,24(r2)
        (len & align_mask)            ||
  80f19c:	e0bff717 	ldw	r2,-36(fp)
  80f1a0:	1880022e 	bgeu	r3,r2,80f1ac <alt_avalon_dma_send+0x74>
  {
    return -EINVAL;
  80f1a4:	00bffa84 	movi	r2,-22
  80f1a8:	00002c06 	br	80f25c <alt_avalon_dma_send+0x124>
  }

  start = priv->tx_start;
  80f1ac:	e0bfff17 	ldw	r2,-4(fp)
  80f1b0:	10800117 	ldw	r2,4(r2)
  80f1b4:	e0bffd15 	stw	r2,-12(fp)
  end   = priv->tx_end;
  80f1b8:	e0bfff17 	ldw	r2,-4(fp)
  80f1bc:	10800217 	ldw	r2,8(r2)
  80f1c0:	e0bffc15 	stw	r2,-16(fp)
  slot  = &priv->tx_buf[end];
  80f1c4:	e0bffc17 	ldw	r2,-16(fp)
  80f1c8:	1004913a 	slli	r2,r2,4
  80f1cc:	10800904 	addi	r2,r2,36
  80f1d0:	e0ffff17 	ldw	r3,-4(fp)
  80f1d4:	1885883a 	add	r2,r3,r2
  80f1d8:	e0bffb15 	stw	r2,-20(fp)
  next  = (end + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
  80f1dc:	e0bffc17 	ldw	r2,-16(fp)
  80f1e0:	10800044 	addi	r2,r2,1
  80f1e4:	108000cc 	andi	r2,r2,3
  80f1e8:	e0bffa15 	stw	r2,-24(fp)

  if (next == start)
  80f1ec:	e0fffa17 	ldw	r3,-24(fp)
  80f1f0:	e0bffd17 	ldw	r2,-12(fp)
  80f1f4:	1880021e 	bne	r3,r2,80f200 <alt_avalon_dma_send+0xc8>
  {
    return -ENOSPC;
  80f1f8:	00bff904 	movi	r2,-28
  80f1fc:	00001706 	br	80f25c <alt_avalon_dma_send+0x124>
  }

  /* Fill in the descriptor */

  slot->from   = from;
  80f200:	e0bffb17 	ldw	r2,-20(fp)
  80f204:	e0fff817 	ldw	r3,-32(fp)
  80f208:	10c00015 	stw	r3,0(r2)
  slot->len    = len;
  80f20c:	e0bffb17 	ldw	r2,-20(fp)
  80f210:	e0fff717 	ldw	r3,-36(fp)
  80f214:	10c00115 	stw	r3,4(r2)
  slot->done   = done;
  80f218:	e0bffb17 	ldw	r2,-20(fp)
  80f21c:	e0fff617 	ldw	r3,-40(fp)
  80f220:	10c00215 	stw	r3,8(r2)
  slot->handle = handle;
  80f224:	e0bffb17 	ldw	r2,-20(fp)
  80f228:	e0c00217 	ldw	r3,8(fp)
  80f22c:	10c00315 	stw	r3,12(r2)

  priv->tx_end = next;
  80f230:	e0bfff17 	ldw	r2,-4(fp)
  80f234:	e0fffa17 	ldw	r3,-24(fp)
  80f238:	10c00215 	stw	r3,8(r2)

  if (!priv->active)
  80f23c:	e0bfff17 	ldw	r2,-4(fp)
  80f240:	10800817 	ldw	r2,32(r2)
  80f244:	1000041e 	bne	r2,zero,80f258 <alt_avalon_dma_send+0x120>
  {
    priv->launch (priv);
  80f248:	e0bfff17 	ldw	r2,-4(fp)
  80f24c:	10800717 	ldw	r2,28(r2)
  80f250:	e13fff17 	ldw	r4,-4(fp)
  80f254:	103ee83a 	callr	r2
  }

  return 0;
  80f258:	0005883a 	mov	r2,zero
}
  80f25c:	e037883a 	mov	sp,fp
  80f260:	dfc00117 	ldw	ra,4(sp)
  80f264:	df000017 	ldw	fp,0(sp)
  80f268:	dec00204 	addi	sp,sp,8
  80f26c:	f800283a 	ret

0080f270 <alt_avalon_dma_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_dma_irq (void* context)
#else
static void alt_avalon_dma_irq (void* context, alt_u32 id)
#endif
{
  80f270:	defff104 	addi	sp,sp,-60
  80f274:	dfc00e15 	stw	ra,56(sp)
  80f278:	df000d15 	stw	fp,52(sp)
  80f27c:	df000d04 	addi	fp,sp,52
  80f280:	e13ff315 	stw	r4,-52(fp)
  alt_avalon_dma_priv* priv = (alt_avalon_dma_priv*) context;
  80f284:	e0bff317 	ldw	r2,-52(fp)
  80f288:	e0bfff15 	stw	r2,-4(fp)
  alt_u32                rx_start;
  int                    stream_tx;
  int                    stream_rx;
  alt_irq_context        cpu_sr;

  stream_tx = priv->flags & ALT_AVALON_DMA_TX_STREAM;
  80f28c:	e0bfff17 	ldw	r2,-4(fp)
  80f290:	10800517 	ldw	r2,20(r2)
  80f294:	1080080c 	andi	r2,r2,32
  80f298:	e0bffe15 	stw	r2,-8(fp)
  stream_rx = priv->flags & ALT_AVALON_DMA_RX_STREAM;
  80f29c:	e0bfff17 	ldw	r2,-4(fp)
  80f2a0:	10800517 	ldw	r2,20(r2)
  80f2a4:	1080100c 	andi	r2,r2,64
  80f2a8:	e0bffd15 	stw	r2,-12(fp)

  tx_start = priv->tx_start;
  80f2ac:	e0bfff17 	ldw	r2,-4(fp)
  80f2b0:	10800117 	ldw	r2,4(r2)
  80f2b4:	e0bffc15 	stw	r2,-16(fp)
  rx_start = priv->rx_start;
  80f2b8:	e0bfff17 	ldw	r2,-4(fp)
  80f2bc:	10800317 	ldw	r2,12(r2)
  80f2c0:	e0bffb15 	stw	r2,-20(fp)

  tx_slot = &priv->tx_buf[tx_start];
  80f2c4:	e0bffc17 	ldw	r2,-16(fp)
  80f2c8:	1004913a 	slli	r2,r2,4
  80f2cc:	10800904 	addi	r2,r2,36
  80f2d0:	e0ffff17 	ldw	r3,-4(fp)
  80f2d4:	1885883a 	add	r2,r3,r2
  80f2d8:	e0bffa15 	stw	r2,-24(fp)
  rx_slot = &priv->rx_buf[rx_start];
  80f2dc:	e0bffb17 	ldw	r2,-20(fp)
  80f2e0:	1004913a 	slli	r2,r2,4
  80f2e4:	10801904 	addi	r2,r2,100
  80f2e8:	e0ffff17 	ldw	r3,-4(fp)
  80f2ec:	1885883a 	add	r2,r3,r2
  80f2f0:	e0bff915 	stw	r2,-28(fp)

  /* Increment the descriptors */

  if (!stream_tx)
  80f2f4:	e0bffe17 	ldw	r2,-8(fp)
  80f2f8:	1000051e 	bne	r2,zero,80f310 <alt_avalon_dma_irq+0xa0>
  {
    priv->tx_start = (tx_start + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
  80f2fc:	e0bffc17 	ldw	r2,-16(fp)
  80f300:	10800044 	addi	r2,r2,1
  80f304:	10c000cc 	andi	r3,r2,3
  80f308:	e0bfff17 	ldw	r2,-4(fp)
  80f30c:	10c00115 	stw	r3,4(r2)
  }
  if (!stream_rx)
  80f310:	e0bffd17 	ldw	r2,-12(fp)
  80f314:	1000051e 	bne	r2,zero,80f32c <alt_avalon_dma_irq+0xbc>
  {
    priv->rx_start = (rx_start + 1) & ALT_AVALON_DMA_NSLOTS_MSK;
  80f318:	e0bffb17 	ldw	r2,-20(fp)
  80f31c:	10800044 	addi	r2,r2,1
  80f320:	10c000cc 	andi	r3,r2,3
  80f324:	e0bfff17 	ldw	r2,-4(fp)
  80f328:	10c00315 	stw	r3,12(r2)
  }

  /* clear the interrupt */

  IOWR_ALTERA_AVALON_DMA_STATUS (priv->base, 0);
  80f32c:	e0bfff17 	ldw	r2,-4(fp)
  80f330:	10800017 	ldw	r2,0(r2)
  80f334:	0007883a 	mov	r3,zero
  80f338:	10c00035 	stwio	r3,0(r2)
  
  /* Dummy read to ensure IRQ is cleared prior to ISR completion*/
  IORD_ALTERA_AVALON_DMA_STATUS (priv->base);
  80f33c:	e0bfff17 	ldw	r2,-4(fp)
  80f340:	10800017 	ldw	r2,0(r2)
  80f344:	10800037 	ldwio	r2,0(r2)

  /* launch the next transaction */

  priv->launch (priv);
  80f348:	e0bfff17 	ldw	r2,-4(fp)
  80f34c:	10800717 	ldw	r2,28(r2)
  80f350:	e13fff17 	ldw	r4,-4(fp)
  80f354:	103ee83a 	callr	r2
   * Other interrupts are explicitly disabled if callbacks
   * are registered because there is no guarantee that they are 
   * preemption-safe. This allows the DMA driver to support 
   * interrupt preemption.
   */
  if (!stream_tx && tx_slot->done)
  80f358:	e0bffe17 	ldw	r2,-8(fp)
  80f35c:	1000161e 	bne	r2,zero,80f3b8 <alt_avalon_dma_irq+0x148>
  80f360:	e0bffa17 	ldw	r2,-24(fp)
  80f364:	10800217 	ldw	r2,8(r2)
  80f368:	10001326 	beq	r2,zero,80f3b8 <alt_avalon_dma_irq+0x148>
  NIOS2_READ_STATUS (context);
  80f36c:	0005303a 	rdctl	r2,status
  80f370:	e0bff615 	stw	r2,-40(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f374:	e0fff617 	ldw	r3,-40(fp)
  80f378:	00bfff84 	movi	r2,-2
  80f37c:	1884703a 	and	r2,r3,r2
  80f380:	1001703a 	wrctl	status,r2
  return context;
  80f384:	e0bff617 	ldw	r2,-40(fp)
  {
    cpu_sr = alt_irq_disable_all();
  80f388:	e0bff815 	stw	r2,-32(fp)
    tx_slot->done (tx_slot->handle);
  80f38c:	e0bffa17 	ldw	r2,-24(fp)
  80f390:	10800217 	ldw	r2,8(r2)
  80f394:	e0fffa17 	ldw	r3,-24(fp)
  80f398:	18c00317 	ldw	r3,12(r3)
  80f39c:	1809883a 	mov	r4,r3
  80f3a0:	103ee83a 	callr	r2
  80f3a4:	e0bff817 	ldw	r2,-32(fp)
  80f3a8:	e0bff715 	stw	r2,-36(fp)
  NIOS2_WRITE_STATUS (context);
  80f3ac:	e0bff717 	ldw	r2,-36(fp)
  80f3b0:	1001703a 	wrctl	status,r2
}
  80f3b4:	0001883a 	nop
    alt_irq_enable_all(cpu_sr);
    
  }
  if (!stream_rx && rx_slot->done)
  80f3b8:	e0bffd17 	ldw	r2,-12(fp)
  80f3bc:	1000181e 	bne	r2,zero,80f420 <alt_avalon_dma_irq+0x1b0>
  80f3c0:	e0bff917 	ldw	r2,-28(fp)
  80f3c4:	10800217 	ldw	r2,8(r2)
  80f3c8:	10001526 	beq	r2,zero,80f420 <alt_avalon_dma_irq+0x1b0>
  NIOS2_READ_STATUS (context);
  80f3cc:	0005303a 	rdctl	r2,status
  80f3d0:	e0bff415 	stw	r2,-48(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80f3d4:	e0fff417 	ldw	r3,-48(fp)
  80f3d8:	00bfff84 	movi	r2,-2
  80f3dc:	1884703a 	and	r2,r3,r2
  80f3e0:	1001703a 	wrctl	status,r2
  return context;
  80f3e4:	e0bff417 	ldw	r2,-48(fp)
  {
    cpu_sr = alt_irq_disable_all();
  80f3e8:	e0bff815 	stw	r2,-32(fp)
    rx_slot->done (rx_slot->handle, rx_slot->data);
  80f3ec:	e0bff917 	ldw	r2,-28(fp)
  80f3f0:	10800217 	ldw	r2,8(r2)
  80f3f4:	e0fff917 	ldw	r3,-28(fp)
  80f3f8:	19000317 	ldw	r4,12(r3)
  80f3fc:	e0fff917 	ldw	r3,-28(fp)
  80f400:	18c00017 	ldw	r3,0(r3)
  80f404:	180b883a 	mov	r5,r3
  80f408:	103ee83a 	callr	r2
  80f40c:	e0bff817 	ldw	r2,-32(fp)
  80f410:	e0bff515 	stw	r2,-44(fp)
  NIOS2_WRITE_STATUS (context);
  80f414:	e0bff517 	ldw	r2,-44(fp)
  80f418:	1001703a 	wrctl	status,r2
}
  80f41c:	0001883a 	nop
    alt_irq_enable_all(cpu_sr);
  }
}
  80f420:	0001883a 	nop
  80f424:	e037883a 	mov	sp,fp
  80f428:	dfc00117 	ldw	ra,4(sp)
  80f42c:	df000017 	ldw	fp,0(sp)
  80f430:	dec00204 	addi	sp,sp,8
  80f434:	f800283a 	ret

0080f438 <alt_avalon_dma_init>:
void alt_avalon_dma_init (alt_avalon_dma_txchan* tx,
                          alt_avalon_dma_rxchan* rx,
                          void*                  base,
                          alt_u32                ic_id,
                          alt_u32                irq)
{
  80f438:	defff904 	addi	sp,sp,-28
  80f43c:	dfc00615 	stw	ra,24(sp)
  80f440:	df000515 	stw	fp,20(sp)
  80f444:	df000504 	addi	fp,sp,20
  80f448:	e13fff15 	stw	r4,-4(fp)
  80f44c:	e17ffe15 	stw	r5,-8(fp)
  80f450:	e1bffd15 	stw	r6,-12(fp)
  80f454:	e1fffc15 	stw	r7,-16(fp)

  /* Halt any current transactions (reset the device) */
  IOWR_ALTERA_AVALON_DMA_CONTROL (base, ALTERA_AVALON_DMA_CONTROL_SOFTWARERESET_MSK);
  80f458:	e0bffd17 	ldw	r2,-12(fp)
  80f45c:	10800604 	addi	r2,r2,24
  80f460:	00c40004 	movi	r3,4096
  80f464:	10c00035 	stwio	r3,0(r2)
  IOWR_ALTERA_AVALON_DMA_CONTROL (base, ALTERA_AVALON_DMA_CONTROL_SOFTWARERESET_MSK);
  80f468:	e0bffd17 	ldw	r2,-12(fp)
  80f46c:	10800604 	addi	r2,r2,24
  80f470:	00c40004 	movi	r3,4096
  80f474:	10c00035 	stwio	r3,0(r2)

  /* Set the default mode of the device (32 bit block reads and writes from/to memory). */
  IOWR_ALTERA_AVALON_DMA_CONTROL (base,
  80f478:	e0bffd17 	ldw	r2,-12(fp)
  80f47c:	10800604 	addi	r2,r2,24
  80f480:	00c03f04 	movi	r3,252
  80f484:	10c00035 	stwio	r3,0(r2)
                          ALTERA_AVALON_DMA_CONTROL_REEN_MSK      |
                          ALTERA_AVALON_DMA_CONTROL_WEEN_MSK      |
                          ALTERA_AVALON_DMA_CONTROL_LEEN_MSK);

  /* Clear any pending interrupts and the DONE flag */
  IOWR_ALTERA_AVALON_DMA_STATUS (base, 0);
  80f488:	0007883a 	mov	r3,zero
  80f48c:	e0bffd17 	ldw	r2,-12(fp)
  80f490:	10c00035 	stwio	r3,0(r2)
  /*
   * Register the interrupt handler, and make the device available to the
   * system.
   */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  if (alt_ic_isr_register(ic_id, irq, alt_avalon_dma_irq, tx->priv, 0x0) >= 0)
  80f494:	e0bfff17 	ldw	r2,-4(fp)
  80f498:	10800617 	ldw	r2,24(r2)
  80f49c:	d8000015 	stw	zero,0(sp)
  80f4a0:	100f883a 	mov	r7,r2
  80f4a4:	01802074 	movhi	r6,129
  80f4a8:	31bc9c04 	addi	r6,r6,-3472
  80f4ac:	e1400217 	ldw	r5,8(fp)
  80f4b0:	e13ffc17 	ldw	r4,-16(fp)
  80f4b4:	080dc940 	call	80dc94 <alt_ic_isr_register>
  80f4b8:	10000616 	blt	r2,zero,80f4d4 <alt_avalon_dma_init+0x9c>
#else
  if (alt_irq_register (irq, tx->priv, alt_avalon_dma_irq) >= 0)
#endif  
  {
    alt_dma_txchan_reg (&tx->dev);
  80f4bc:	e0bfff17 	ldw	r2,-4(fp)
  80f4c0:	1009883a 	mov	r4,r2
  80f4c4:	080e9100 	call	80e910 <alt_dma_txchan_reg>
    alt_dma_rxchan_reg (&rx->dev);
  80f4c8:	e0bffe17 	ldw	r2,-8(fp)
  80f4cc:	1009883a 	mov	r4,r2
  80f4d0:	080e9440 	call	80e944 <alt_dma_rxchan_reg>
  }
}
  80f4d4:	0001883a 	nop
  80f4d8:	e037883a 	mov	sp,fp
  80f4dc:	dfc00117 	ldw	ra,4(sp)
  80f4e0:	df000017 	ldw	fp,0(sp)
  80f4e4:	dec00204 	addi	sp,sp,8
  80f4e8:	f800283a 	ret

0080f4ec <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
  80f4ec:	defffa04 	addi	sp,sp,-24
  80f4f0:	dfc00515 	stw	ra,20(sp)
  80f4f4:	df000415 	stw	fp,16(sp)
  80f4f8:	df000404 	addi	fp,sp,16
  80f4fc:	e13ffe15 	stw	r4,-8(fp)
  80f500:	e17ffd15 	stw	r5,-12(fp)
  80f504:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f508:	e0bffe17 	ldw	r2,-8(fp)
  80f50c:	10800017 	ldw	r2,0(r2)
  80f510:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
  80f514:	e0bfff17 	ldw	r2,-4(fp)
  80f518:	10c00a04 	addi	r3,r2,40
  80f51c:	e0bffe17 	ldw	r2,-8(fp)
  80f520:	10800217 	ldw	r2,8(r2)
  80f524:	100f883a 	mov	r7,r2
  80f528:	e1bffc17 	ldw	r6,-16(fp)
  80f52c:	e17ffd17 	ldw	r5,-12(fp)
  80f530:	1809883a 	mov	r4,r3
  80f534:	080fb180 	call	80fb18 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
  80f538:	e037883a 	mov	sp,fp
  80f53c:	dfc00117 	ldw	ra,4(sp)
  80f540:	df000017 	ldw	fp,0(sp)
  80f544:	dec00204 	addi	sp,sp,8
  80f548:	f800283a 	ret

0080f54c <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
  80f54c:	defffa04 	addi	sp,sp,-24
  80f550:	dfc00515 	stw	ra,20(sp)
  80f554:	df000415 	stw	fp,16(sp)
  80f558:	df000404 	addi	fp,sp,16
  80f55c:	e13ffe15 	stw	r4,-8(fp)
  80f560:	e17ffd15 	stw	r5,-12(fp)
  80f564:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f568:	e0bffe17 	ldw	r2,-8(fp)
  80f56c:	10800017 	ldw	r2,0(r2)
  80f570:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
  80f574:	e0bfff17 	ldw	r2,-4(fp)
  80f578:	10c00a04 	addi	r3,r2,40
  80f57c:	e0bffe17 	ldw	r2,-8(fp)
  80f580:	10800217 	ldw	r2,8(r2)
  80f584:	100f883a 	mov	r7,r2
  80f588:	e1bffc17 	ldw	r6,-16(fp)
  80f58c:	e17ffd17 	ldw	r5,-12(fp)
  80f590:	1809883a 	mov	r4,r3
  80f594:	080fd380 	call	80fd38 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
  80f598:	e037883a 	mov	sp,fp
  80f59c:	dfc00117 	ldw	ra,4(sp)
  80f5a0:	df000017 	ldw	fp,0(sp)
  80f5a4:	dec00204 	addi	sp,sp,8
  80f5a8:	f800283a 	ret

0080f5ac <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
  80f5ac:	defffc04 	addi	sp,sp,-16
  80f5b0:	dfc00315 	stw	ra,12(sp)
  80f5b4:	df000215 	stw	fp,8(sp)
  80f5b8:	df000204 	addi	fp,sp,8
  80f5bc:	e13ffe15 	stw	r4,-8(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
  80f5c0:	e0bffe17 	ldw	r2,-8(fp)
  80f5c4:	10800017 	ldw	r2,0(r2)
  80f5c8:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
  80f5cc:	e0bfff17 	ldw	r2,-4(fp)
  80f5d0:	10c00a04 	addi	r3,r2,40
  80f5d4:	e0bffe17 	ldw	r2,-8(fp)
  80f5d8:	10800217 	ldw	r2,8(r2)
  80f5dc:	100b883a 	mov	r5,r2
  80f5e0:	1809883a 	mov	r4,r3
  80f5e4:	080f9bc0 	call	80f9bc <altera_avalon_jtag_uart_close>
}
  80f5e8:	e037883a 	mov	sp,fp
  80f5ec:	dfc00117 	ldw	ra,4(sp)
  80f5f0:	df000017 	ldw	fp,0(sp)
  80f5f4:	dec00204 	addi	sp,sp,8
  80f5f8:	f800283a 	ret

0080f5fc <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
  80f5fc:	defffa04 	addi	sp,sp,-24
  80f600:	dfc00515 	stw	ra,20(sp)
  80f604:	df000415 	stw	fp,16(sp)
  80f608:	df000404 	addi	fp,sp,16
  80f60c:	e13ffe15 	stw	r4,-8(fp)
  80f610:	e17ffd15 	stw	r5,-12(fp)
  80f614:	e1bffc15 	stw	r6,-16(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
  80f618:	e0bffe17 	ldw	r2,-8(fp)
  80f61c:	10800017 	ldw	r2,0(r2)
  80f620:	e0bfff15 	stw	r2,-4(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
  80f624:	e0bfff17 	ldw	r2,-4(fp)
  80f628:	10800a04 	addi	r2,r2,40
  80f62c:	e1bffc17 	ldw	r6,-16(fp)
  80f630:	e17ffd17 	ldw	r5,-12(fp)
  80f634:	1009883a 	mov	r4,r2
  80f638:	080fa240 	call	80fa24 <altera_avalon_jtag_uart_ioctl>
}
  80f63c:	e037883a 	mov	sp,fp
  80f640:	dfc00117 	ldw	ra,4(sp)
  80f644:	df000017 	ldw	fp,0(sp)
  80f648:	dec00204 	addi	sp,sp,8
  80f64c:	f800283a 	ret

0080f650 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
  80f650:	defffa04 	addi	sp,sp,-24
  80f654:	dfc00515 	stw	ra,20(sp)
  80f658:	df000415 	stw	fp,16(sp)
  80f65c:	df000404 	addi	fp,sp,16
  80f660:	e13fff15 	stw	r4,-4(fp)
  80f664:	e17ffe15 	stw	r5,-8(fp)
  80f668:	e1bffd15 	stw	r6,-12(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f66c:	e0bfff17 	ldw	r2,-4(fp)
  80f670:	00c00044 	movi	r3,1
  80f674:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
  80f678:	e0bfff17 	ldw	r2,-4(fp)
  80f67c:	10800017 	ldw	r2,0(r2)
  80f680:	10800104 	addi	r2,r2,4
  80f684:	1007883a 	mov	r3,r2
  80f688:	e0bfff17 	ldw	r2,-4(fp)
  80f68c:	10800817 	ldw	r2,32(r2)
  80f690:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
  80f694:	e0bffe17 	ldw	r2,-8(fp)
  80f698:	e0fffd17 	ldw	r3,-12(fp)
  80f69c:	d8000015 	stw	zero,0(sp)
  80f6a0:	e1ffff17 	ldw	r7,-4(fp)
  80f6a4:	01802074 	movhi	r6,129
  80f6a8:	31bdc404 	addi	r6,r6,-2288
  80f6ac:	180b883a 	mov	r5,r3
  80f6b0:	1009883a 	mov	r4,r2
  80f6b4:	080dc940 	call	80dc94 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
  80f6b8:	e0bfff17 	ldw	r2,-4(fp)
  80f6bc:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
  80f6c0:	e0bfff17 	ldw	r2,-4(fp)
  80f6c4:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
  80f6c8:	d0e75017 	ldw	r3,-25280(gp)
  80f6cc:	e1ffff17 	ldw	r7,-4(fp)
  80f6d0:	01802074 	movhi	r6,129
  80f6d4:	31be4704 	addi	r6,r6,-1764
  80f6d8:	180b883a 	mov	r5,r3
  80f6dc:	1009883a 	mov	r4,r2
  80f6e0:	08100600 	call	810060 <alt_alarm_start>
  80f6e4:	1000040e 	bge	r2,zero,80f6f8 <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
  80f6e8:	e0ffff17 	ldw	r3,-4(fp)
  80f6ec:	00a00034 	movhi	r2,32768
  80f6f0:	10bfffc4 	addi	r2,r2,-1
  80f6f4:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
  80f6f8:	0001883a 	nop
  80f6fc:	e037883a 	mov	sp,fp
  80f700:	dfc00117 	ldw	ra,4(sp)
  80f704:	df000017 	ldw	fp,0(sp)
  80f708:	dec00204 	addi	sp,sp,8
  80f70c:	f800283a 	ret

0080f710 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
  80f710:	defff804 	addi	sp,sp,-32
  80f714:	df000715 	stw	fp,28(sp)
  80f718:	df000704 	addi	fp,sp,28
  80f71c:	e13ff915 	stw	r4,-28(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
  80f720:	e0bff917 	ldw	r2,-28(fp)
  80f724:	e0bffd15 	stw	r2,-12(fp)
  unsigned int base = sp->base;
  80f728:	e0bffd17 	ldw	r2,-12(fp)
  80f72c:	10800017 	ldw	r2,0(r2)
  80f730:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f734:	e0bffc17 	ldw	r2,-16(fp)
  80f738:	10800104 	addi	r2,r2,4
  80f73c:	10800037 	ldwio	r2,0(r2)
  80f740:	e0bffb15 	stw	r2,-20(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
  80f744:	e0bffb17 	ldw	r2,-20(fp)
  80f748:	1080c00c 	andi	r2,r2,768
  80f74c:	10006d26 	beq	r2,zero,80f904 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
  80f750:	e0bffb17 	ldw	r2,-20(fp)
  80f754:	1080400c 	andi	r2,r2,256
  80f758:	10003526 	beq	r2,zero,80f830 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
  80f75c:	00800074 	movhi	r2,1
  80f760:	e0bfff15 	stw	r2,-4(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f764:	e0bffd17 	ldw	r2,-12(fp)
  80f768:	10800a17 	ldw	r2,40(r2)
  80f76c:	10800044 	addi	r2,r2,1
  80f770:	1081ffcc 	andi	r2,r2,2047
  80f774:	e0bffa15 	stw	r2,-24(fp)
        if (next == sp->rx_out)
  80f778:	e0bffd17 	ldw	r2,-12(fp)
  80f77c:	10800b17 	ldw	r2,44(r2)
  80f780:	e0fffa17 	ldw	r3,-24(fp)
  80f784:	18801526 	beq	r3,r2,80f7dc <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
  80f788:	e0bffc17 	ldw	r2,-16(fp)
  80f78c:	10800037 	ldwio	r2,0(r2)
  80f790:	e0bfff15 	stw	r2,-4(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
  80f794:	e0bfff17 	ldw	r2,-4(fp)
  80f798:	10a0000c 	andi	r2,r2,32768
  80f79c:	10001126 	beq	r2,zero,80f7e4 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
  80f7a0:	e0bffd17 	ldw	r2,-12(fp)
  80f7a4:	10800a17 	ldw	r2,40(r2)
  80f7a8:	e0ffff17 	ldw	r3,-4(fp)
  80f7ac:	1809883a 	mov	r4,r3
  80f7b0:	e0fffd17 	ldw	r3,-12(fp)
  80f7b4:	1885883a 	add	r2,r3,r2
  80f7b8:	11000e05 	stb	r4,56(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f7bc:	e0bffd17 	ldw	r2,-12(fp)
  80f7c0:	10800a17 	ldw	r2,40(r2)
  80f7c4:	10800044 	addi	r2,r2,1
  80f7c8:	10c1ffcc 	andi	r3,r2,2047
  80f7cc:	e0bffd17 	ldw	r2,-12(fp)
  80f7d0:	10c00a15 	stw	r3,40(r2)
 * HAL.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_no_error (void)
{
  return 0;
  80f7d4:	0001883a 	nop
      {
  80f7d8:	003fe206 	br	80f764 <altera_avalon_jtag_uart_irq+0x54>
          break;
  80f7dc:	0001883a 	nop
  80f7e0:	00000106 	br	80f7e8 <altera_avalon_jtag_uart_irq+0xd8>
          break;
  80f7e4:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
  80f7e8:	e0bfff17 	ldw	r2,-4(fp)
  80f7ec:	10bfffec 	andhi	r2,r2,65535
  80f7f0:	10000f26 	beq	r2,zero,80f830 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80f7f4:	e0bffd17 	ldw	r2,-12(fp)
  80f7f8:	10c00817 	ldw	r3,32(r2)
  80f7fc:	00bfff84 	movi	r2,-2
  80f800:	1886703a 	and	r3,r3,r2
  80f804:	e0bffd17 	ldw	r2,-12(fp)
  80f808:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
  80f80c:	e0bffc17 	ldw	r2,-16(fp)
  80f810:	10800104 	addi	r2,r2,4
  80f814:	1007883a 	mov	r3,r2
  80f818:	e0bffd17 	ldw	r2,-12(fp)
  80f81c:	10800817 	ldw	r2,32(r2)
  80f820:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f824:	e0bffc17 	ldw	r2,-16(fp)
  80f828:	10800104 	addi	r2,r2,4
  80f82c:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
  80f830:	e0bffb17 	ldw	r2,-20(fp)
  80f834:	1080800c 	andi	r2,r2,512
  80f838:	103fbe26 	beq	r2,zero,80f734 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
  80f83c:	e0bffb17 	ldw	r2,-20(fp)
  80f840:	1004d43a 	srli	r2,r2,16
  80f844:	e0bffe15 	stw	r2,-8(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
  80f848:	00001406 	br	80f89c <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
  80f84c:	e0bffc17 	ldw	r2,-16(fp)
  80f850:	e0fffd17 	ldw	r3,-12(fp)
  80f854:	18c00d17 	ldw	r3,52(r3)
  80f858:	e13ffd17 	ldw	r4,-12(fp)
  80f85c:	20c7883a 	add	r3,r4,r3
  80f860:	18c20e03 	ldbu	r3,2104(r3)
  80f864:	18c03fcc 	andi	r3,r3,255
  80f868:	18c0201c 	xori	r3,r3,128
  80f86c:	18ffe004 	addi	r3,r3,-128
  80f870:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80f874:	e0bffd17 	ldw	r2,-12(fp)
  80f878:	10800d17 	ldw	r2,52(r2)
  80f87c:	10800044 	addi	r2,r2,1
  80f880:	10c1ffcc 	andi	r3,r2,2047
  80f884:	e0bffd17 	ldw	r2,-12(fp)
  80f888:	10c00d15 	stw	r3,52(r2)
  80f88c:	0001883a 	nop

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
  80f890:	e0bffe17 	ldw	r2,-8(fp)
  80f894:	10bfffc4 	addi	r2,r2,-1
  80f898:	e0bffe15 	stw	r2,-8(fp)
      while (space > 0 && sp->tx_out != sp->tx_in)
  80f89c:	e0bffe17 	ldw	r2,-8(fp)
  80f8a0:	10000526 	beq	r2,zero,80f8b8 <altera_avalon_jtag_uart_irq+0x1a8>
  80f8a4:	e0bffd17 	ldw	r2,-12(fp)
  80f8a8:	10c00d17 	ldw	r3,52(r2)
  80f8ac:	e0bffd17 	ldw	r2,-12(fp)
  80f8b0:	10800c17 	ldw	r2,48(r2)
  80f8b4:	18bfe51e 	bne	r3,r2,80f84c <altera_avalon_jtag_uart_irq+0x13c>
      }

      if (space > 0)
  80f8b8:	e0bffe17 	ldw	r2,-8(fp)
  80f8bc:	103f9d26 	beq	r2,zero,80f734 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80f8c0:	e0bffd17 	ldw	r2,-12(fp)
  80f8c4:	10c00817 	ldw	r3,32(r2)
  80f8c8:	00bfff44 	movi	r2,-3
  80f8cc:	1886703a 	and	r3,r3,r2
  80f8d0:	e0bffd17 	ldw	r2,-12(fp)
  80f8d4:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80f8d8:	e0bffd17 	ldw	r2,-12(fp)
  80f8dc:	10800017 	ldw	r2,0(r2)
  80f8e0:	10800104 	addi	r2,r2,4
  80f8e4:	1007883a 	mov	r3,r2
  80f8e8:	e0bffd17 	ldw	r2,-12(fp)
  80f8ec:	10800817 	ldw	r2,32(r2)
  80f8f0:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
  80f8f4:	e0bffc17 	ldw	r2,-16(fp)
  80f8f8:	10800104 	addi	r2,r2,4
  80f8fc:	10800037 	ldwio	r2,0(r2)
  {
  80f900:	003f8c06 	br	80f734 <altera_avalon_jtag_uart_irq+0x24>
      break;
  80f904:	0001883a 	nop
      }
    }
  }
}
  80f908:	0001883a 	nop
  80f90c:	e037883a 	mov	sp,fp
  80f910:	df000017 	ldw	fp,0(sp)
  80f914:	dec00104 	addi	sp,sp,4
  80f918:	f800283a 	ret

0080f91c <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
  80f91c:	defffc04 	addi	sp,sp,-16
  80f920:	df000315 	stw	fp,12(sp)
  80f924:	df000304 	addi	fp,sp,12
  80f928:	e13ffd15 	stw	r4,-12(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
  80f92c:	e0bffd17 	ldw	r2,-12(fp)
  80f930:	e0bfff15 	stw	r2,-4(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
  80f934:	e0bfff17 	ldw	r2,-4(fp)
  80f938:	10800017 	ldw	r2,0(r2)
  80f93c:	10800104 	addi	r2,r2,4
  80f940:	10800037 	ldwio	r2,0(r2)
  80f944:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
  80f948:	e0bffe17 	ldw	r2,-8(fp)
  80f94c:	1081000c 	andi	r2,r2,1024
  80f950:	10000b26 	beq	r2,zero,80f980 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
  80f954:	e0bfff17 	ldw	r2,-4(fp)
  80f958:	10800017 	ldw	r2,0(r2)
  80f95c:	10800104 	addi	r2,r2,4
  80f960:	1007883a 	mov	r3,r2
  80f964:	e0bfff17 	ldw	r2,-4(fp)
  80f968:	10800817 	ldw	r2,32(r2)
  80f96c:	10810014 	ori	r2,r2,1024
  80f970:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
  80f974:	e0bfff17 	ldw	r2,-4(fp)
  80f978:	10000915 	stw	zero,36(r2)
  80f97c:	00000a06 	br	80f9a8 <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
  80f980:	e0bfff17 	ldw	r2,-4(fp)
  80f984:	10c00917 	ldw	r3,36(r2)
  80f988:	00a00034 	movhi	r2,32768
  80f98c:	10bfff04 	addi	r2,r2,-4
  80f990:	10c00536 	bltu	r2,r3,80f9a8 <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
  80f994:	e0bfff17 	ldw	r2,-4(fp)
  80f998:	10800917 	ldw	r2,36(r2)
  80f99c:	10c00044 	addi	r3,r2,1
  80f9a0:	e0bfff17 	ldw	r2,-4(fp)
  80f9a4:	10c00915 	stw	r3,36(r2)
  80f9a8:	d0a75017 	ldw	r2,-25280(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
  80f9ac:	e037883a 	mov	sp,fp
  80f9b0:	df000017 	ldw	fp,0(sp)
  80f9b4:	dec00104 	addi	sp,sp,4
  80f9b8:	f800283a 	ret

0080f9bc <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
  80f9bc:	defffd04 	addi	sp,sp,-12
  80f9c0:	df000215 	stw	fp,8(sp)
  80f9c4:	df000204 	addi	fp,sp,8
  80f9c8:	e13fff15 	stw	r4,-4(fp)
  80f9cc:	e17ffe15 	stw	r5,-8(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80f9d0:	00000506 	br	80f9e8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
  80f9d4:	e0bffe17 	ldw	r2,-8(fp)
  80f9d8:	1090000c 	andi	r2,r2,16384
  80f9dc:	10000226 	beq	r2,zero,80f9e8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
  80f9e0:	00bffd44 	movi	r2,-11
  80f9e4:	00000b06 	br	80fa14 <altera_avalon_jtag_uart_close+0x58>
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
  80f9e8:	e0bfff17 	ldw	r2,-4(fp)
  80f9ec:	10c00d17 	ldw	r3,52(r2)
  80f9f0:	e0bfff17 	ldw	r2,-4(fp)
  80f9f4:	10800c17 	ldw	r2,48(r2)
  80f9f8:	18800526 	beq	r3,r2,80fa10 <altera_avalon_jtag_uart_close+0x54>
  80f9fc:	e0bfff17 	ldw	r2,-4(fp)
  80fa00:	10c00917 	ldw	r3,36(r2)
  80fa04:	e0bfff17 	ldw	r2,-4(fp)
  80fa08:	10800117 	ldw	r2,4(r2)
  80fa0c:	18bff136 	bltu	r3,r2,80f9d4 <altera_avalon_jtag_uart_close+0x18>
    }
  }

  return 0;
  80fa10:	0005883a 	mov	r2,zero
}
  80fa14:	e037883a 	mov	sp,fp
  80fa18:	df000017 	ldw	fp,0(sp)
  80fa1c:	dec00104 	addi	sp,sp,4
  80fa20:	f800283a 	ret

0080fa24 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
  80fa24:	defffa04 	addi	sp,sp,-24
  80fa28:	df000515 	stw	fp,20(sp)
  80fa2c:	df000504 	addi	fp,sp,20
  80fa30:	e13ffd15 	stw	r4,-12(fp)
  80fa34:	e17ffc15 	stw	r5,-16(fp)
  80fa38:	e1bffb15 	stw	r6,-20(fp)
  int rc = -ENOTTY;
  80fa3c:	00bff9c4 	movi	r2,-25
  80fa40:	e0bfff15 	stw	r2,-4(fp)

  switch (req)
  80fa44:	e0bffc17 	ldw	r2,-16(fp)
  80fa48:	109a8060 	cmpeqi	r2,r2,27137
  80fa4c:	1000041e 	bne	r2,zero,80fa60 <altera_avalon_jtag_uart_ioctl+0x3c>
  80fa50:	e0bffc17 	ldw	r2,-16(fp)
  80fa54:	109a80a0 	cmpeqi	r2,r2,27138
  80fa58:	1000181e 	bne	r2,zero,80fabc <altera_avalon_jtag_uart_ioctl+0x98>
      rc = 0;
    }
    break;

  default:
    break;
  80fa5c:	00002906 	br	80fb04 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
  80fa60:	e0bffd17 	ldw	r2,-12(fp)
  80fa64:	10c00117 	ldw	r3,4(r2)
  80fa68:	00a00034 	movhi	r2,32768
  80fa6c:	10bfffc4 	addi	r2,r2,-1
  80fa70:	18802126 	beq	r3,r2,80faf8 <altera_avalon_jtag_uart_ioctl+0xd4>
      int timeout = *((int *)arg);
  80fa74:	e0bffb17 	ldw	r2,-20(fp)
  80fa78:	10800017 	ldw	r2,0(r2)
  80fa7c:	e0bffe15 	stw	r2,-8(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
  80fa80:	e0bffe17 	ldw	r2,-8(fp)
  80fa84:	10800090 	cmplti	r2,r2,2
  80fa88:	1000061e 	bne	r2,zero,80faa4 <altera_avalon_jtag_uart_ioctl+0x80>
  80fa8c:	e0fffe17 	ldw	r3,-8(fp)
  80fa90:	00a00034 	movhi	r2,32768
  80fa94:	10bfffc4 	addi	r2,r2,-1
  80fa98:	18800226 	beq	r3,r2,80faa4 <altera_avalon_jtag_uart_ioctl+0x80>
  80fa9c:	e0bffe17 	ldw	r2,-8(fp)
  80faa0:	00000206 	br	80faac <altera_avalon_jtag_uart_ioctl+0x88>
  80faa4:	00a00034 	movhi	r2,32768
  80faa8:	10bfff84 	addi	r2,r2,-2
  80faac:	e0fffd17 	ldw	r3,-12(fp)
  80fab0:	18800115 	stw	r2,4(r3)
      rc = 0;
  80fab4:	e03fff15 	stw	zero,-4(fp)
    break;
  80fab8:	00000f06 	br	80faf8 <altera_avalon_jtag_uart_ioctl+0xd4>
    if (sp->timeout != INT_MAX)
  80fabc:	e0bffd17 	ldw	r2,-12(fp)
  80fac0:	10c00117 	ldw	r3,4(r2)
  80fac4:	00a00034 	movhi	r2,32768
  80fac8:	10bfffc4 	addi	r2,r2,-1
  80facc:	18800c26 	beq	r3,r2,80fb00 <altera_avalon_jtag_uart_ioctl+0xdc>
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
  80fad0:	e0bffd17 	ldw	r2,-12(fp)
  80fad4:	10c00917 	ldw	r3,36(r2)
  80fad8:	e0bffd17 	ldw	r2,-12(fp)
  80fadc:	10800117 	ldw	r2,4(r2)
  80fae0:	1885803a 	cmpltu	r2,r3,r2
  80fae4:	10c03fcc 	andi	r3,r2,255
  80fae8:	e0bffb17 	ldw	r2,-20(fp)
  80faec:	10c00015 	stw	r3,0(r2)
      rc = 0;
  80faf0:	e03fff15 	stw	zero,-4(fp)
    break;
  80faf4:	00000206 	br	80fb00 <altera_avalon_jtag_uart_ioctl+0xdc>
    break;
  80faf8:	0001883a 	nop
  80fafc:	00000106 	br	80fb04 <altera_avalon_jtag_uart_ioctl+0xe0>
    break;
  80fb00:	0001883a 	nop
  }

  return rc;
  80fb04:	e0bfff17 	ldw	r2,-4(fp)
}
  80fb08:	e037883a 	mov	sp,fp
  80fb0c:	df000017 	ldw	fp,0(sp)
  80fb10:	dec00104 	addi	sp,sp,4
  80fb14:	f800283a 	ret

0080fb18 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
  80fb18:	defff304 	addi	sp,sp,-52
  80fb1c:	dfc00c15 	stw	ra,48(sp)
  80fb20:	df000b15 	stw	fp,44(sp)
  80fb24:	df000b04 	addi	fp,sp,44
  80fb28:	e13ff815 	stw	r4,-32(fp)
  80fb2c:	e17ff715 	stw	r5,-36(fp)
  80fb30:	e1bff615 	stw	r6,-40(fp)
  80fb34:	e1fff515 	stw	r7,-44(fp)
  char * ptr = buffer;
  80fb38:	e0bff717 	ldw	r2,-36(fp)
  80fb3c:	e0bfff15 	stw	r2,-4(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
  80fb40:	00004706 	br	80fc60 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
  80fb44:	e0bff817 	ldw	r2,-32(fp)
  80fb48:	10800a17 	ldw	r2,40(r2)
  80fb4c:	e0bffd15 	stw	r2,-12(fp)
      out = sp->rx_out;
  80fb50:	e0bff817 	ldw	r2,-32(fp)
  80fb54:	10800b17 	ldw	r2,44(r2)
  80fb58:	e0bffc15 	stw	r2,-16(fp)

      if (in >= out)
  80fb5c:	e0fffd17 	ldw	r3,-12(fp)
  80fb60:	e0bffc17 	ldw	r2,-16(fp)
  80fb64:	18800536 	bltu	r3,r2,80fb7c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
  80fb68:	e0fffd17 	ldw	r3,-12(fp)
  80fb6c:	e0bffc17 	ldw	r2,-16(fp)
  80fb70:	1885c83a 	sub	r2,r3,r2
  80fb74:	e0bffe15 	stw	r2,-8(fp)
  80fb78:	00000406 	br	80fb8c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
  80fb7c:	00c20004 	movi	r3,2048
  80fb80:	e0bffc17 	ldw	r2,-16(fp)
  80fb84:	1885c83a 	sub	r2,r3,r2
  80fb88:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80fb8c:	e0bffe17 	ldw	r2,-8(fp)
  80fb90:	10001e26 	beq	r2,zero,80fc0c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
  80fb94:	e0fff617 	ldw	r3,-40(fp)
  80fb98:	e0bffe17 	ldw	r2,-8(fp)
  80fb9c:	1880022e 	bgeu	r3,r2,80fba8 <altera_avalon_jtag_uart_read+0x90>
        n = space;
  80fba0:	e0bff617 	ldw	r2,-40(fp)
  80fba4:	e0bffe15 	stw	r2,-8(fp)

      memcpy(ptr, sp->rx_buf + out, n);
  80fba8:	e0bff817 	ldw	r2,-32(fp)
  80fbac:	10c00e04 	addi	r3,r2,56
  80fbb0:	e0bffc17 	ldw	r2,-16(fp)
  80fbb4:	1885883a 	add	r2,r3,r2
  80fbb8:	e1bffe17 	ldw	r6,-8(fp)
  80fbbc:	100b883a 	mov	r5,r2
  80fbc0:	e13fff17 	ldw	r4,-4(fp)
  80fbc4:	08060380 	call	806038 <memcpy>
      ptr   += n;
  80fbc8:	e0ffff17 	ldw	r3,-4(fp)
  80fbcc:	e0bffe17 	ldw	r2,-8(fp)
  80fbd0:	1885883a 	add	r2,r3,r2
  80fbd4:	e0bfff15 	stw	r2,-4(fp)
      space -= n;
  80fbd8:	e0fff617 	ldw	r3,-40(fp)
  80fbdc:	e0bffe17 	ldw	r2,-8(fp)
  80fbe0:	1885c83a 	sub	r2,r3,r2
  80fbe4:	e0bff615 	stw	r2,-40(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80fbe8:	e0fffc17 	ldw	r3,-16(fp)
  80fbec:	e0bffe17 	ldw	r2,-8(fp)
  80fbf0:	1885883a 	add	r2,r3,r2
  80fbf4:	10c1ffcc 	andi	r3,r2,2047
  80fbf8:	e0bff817 	ldw	r2,-32(fp)
  80fbfc:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
  80fc00:	e0bff617 	ldw	r2,-40(fp)
  80fc04:	00bfcf16 	blt	zero,r2,80fb44 <altera_avalon_jtag_uart_read+0x2c>
  80fc08:	00000106 	br	80fc10 <altera_avalon_jtag_uart_read+0xf8>
        break; /* No more data available */
  80fc0c:	0001883a 	nop

    /* If we read any data then return it */
    if (ptr != buffer)
  80fc10:	e0ffff17 	ldw	r3,-4(fp)
  80fc14:	e0bff717 	ldw	r2,-36(fp)
  80fc18:	1880141e 	bne	r3,r2,80fc6c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
  80fc1c:	e0bff517 	ldw	r2,-44(fp)
  80fc20:	1090000c 	andi	r2,r2,16384
  80fc24:	1000131e 	bne	r2,zero,80fc74 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
  80fc28:	0001883a 	nop
  80fc2c:	e0bff817 	ldw	r2,-32(fp)
  80fc30:	10800a17 	ldw	r2,40(r2)
  80fc34:	e0fffd17 	ldw	r3,-12(fp)
  80fc38:	1880051e 	bne	r3,r2,80fc50 <altera_avalon_jtag_uart_read+0x138>
  80fc3c:	e0bff817 	ldw	r2,-32(fp)
  80fc40:	10c00917 	ldw	r3,36(r2)
  80fc44:	e0bff817 	ldw	r2,-32(fp)
  80fc48:	10800117 	ldw	r2,4(r2)
  80fc4c:	18bff736 	bltu	r3,r2,80fc2c <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
  80fc50:	e0bff817 	ldw	r2,-32(fp)
  80fc54:	10800a17 	ldw	r2,40(r2)
  80fc58:	e0fffd17 	ldw	r3,-12(fp)
  80fc5c:	18800726 	beq	r3,r2,80fc7c <altera_avalon_jtag_uart_read+0x164>
  while (space > 0)
  80fc60:	e0bff617 	ldw	r2,-40(fp)
  80fc64:	00bfb716 	blt	zero,r2,80fb44 <altera_avalon_jtag_uart_read+0x2c>
  80fc68:	00000506 	br	80fc80 <altera_avalon_jtag_uart_read+0x168>
      break;
  80fc6c:	0001883a 	nop
  80fc70:	00000306 	br	80fc80 <altera_avalon_jtag_uart_read+0x168>
      break;
  80fc74:	0001883a 	nop
  80fc78:	00000106 	br	80fc80 <altera_avalon_jtag_uart_read+0x168>
      break;
  80fc7c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
  80fc80:	e0ffff17 	ldw	r3,-4(fp)
  80fc84:	e0bff717 	ldw	r2,-36(fp)
  80fc88:	18801926 	beq	r3,r2,80fcf0 <altera_avalon_jtag_uart_read+0x1d8>
  NIOS2_READ_STATUS (context);
  80fc8c:	0005303a 	rdctl	r2,status
  80fc90:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fc94:	e0fff917 	ldw	r3,-28(fp)
  80fc98:	00bfff84 	movi	r2,-2
  80fc9c:	1884703a 	and	r2,r3,r2
  80fca0:	1001703a 	wrctl	status,r2
  return context;
  80fca4:	e0bff917 	ldw	r2,-28(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
  80fca8:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
  80fcac:	e0bff817 	ldw	r2,-32(fp)
  80fcb0:	10800817 	ldw	r2,32(r2)
  80fcb4:	10c00054 	ori	r3,r2,1
  80fcb8:	e0bff817 	ldw	r2,-32(fp)
  80fcbc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80fcc0:	e0bff817 	ldw	r2,-32(fp)
  80fcc4:	10800017 	ldw	r2,0(r2)
  80fcc8:	10800104 	addi	r2,r2,4
  80fccc:	1007883a 	mov	r3,r2
  80fcd0:	e0bff817 	ldw	r2,-32(fp)
  80fcd4:	10800817 	ldw	r2,32(r2)
  80fcd8:	18800035 	stwio	r2,0(r3)
  80fcdc:	e0bffb17 	ldw	r2,-20(fp)
  80fce0:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80fce4:	e0bffa17 	ldw	r2,-24(fp)
  80fce8:	1001703a 	wrctl	status,r2
}
  80fcec:	0001883a 	nop
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
  80fcf0:	e0ffff17 	ldw	r3,-4(fp)
  80fcf4:	e0bff717 	ldw	r2,-36(fp)
  80fcf8:	18800426 	beq	r3,r2,80fd0c <altera_avalon_jtag_uart_read+0x1f4>
    return ptr - buffer;
  80fcfc:	e0ffff17 	ldw	r3,-4(fp)
  80fd00:	e0bff717 	ldw	r2,-36(fp)
  80fd04:	1885c83a 	sub	r2,r3,r2
  80fd08:	00000606 	br	80fd24 <altera_avalon_jtag_uart_read+0x20c>
  else if (flags & O_NONBLOCK)
  80fd0c:	e0bff517 	ldw	r2,-44(fp)
  80fd10:	1090000c 	andi	r2,r2,16384
  80fd14:	10000226 	beq	r2,zero,80fd20 <altera_avalon_jtag_uart_read+0x208>
    return -EWOULDBLOCK;
  80fd18:	00bffd44 	movi	r2,-11
  80fd1c:	00000106 	br	80fd24 <altera_avalon_jtag_uart_read+0x20c>
  else
    return -EIO;
  80fd20:	00bffec4 	movi	r2,-5
}
  80fd24:	e037883a 	mov	sp,fp
  80fd28:	dfc00117 	ldw	ra,4(sp)
  80fd2c:	df000017 	ldw	fp,0(sp)
  80fd30:	dec00204 	addi	sp,sp,8
  80fd34:	f800283a 	ret

0080fd38 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  80fd38:	defff304 	addi	sp,sp,-52
  80fd3c:	dfc00c15 	stw	ra,48(sp)
  80fd40:	df000b15 	stw	fp,44(sp)
  80fd44:	df000b04 	addi	fp,sp,44
  80fd48:	e13ff815 	stw	r4,-32(fp)
  80fd4c:	e17ff715 	stw	r5,-36(fp)
  80fd50:	e1bff615 	stw	r6,-40(fp)
  80fd54:	e1fff515 	stw	r7,-44(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
  80fd58:	e03fff15 	stw	zero,-4(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
  80fd5c:	e0bff717 	ldw	r2,-36(fp)
  80fd60:	e0bffd15 	stw	r2,-12(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
  80fd64:	00003706 	br	80fe44 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
  80fd68:	e0bff817 	ldw	r2,-32(fp)
  80fd6c:	10800c17 	ldw	r2,48(r2)
  80fd70:	e0bffc15 	stw	r2,-16(fp)
      out = sp->tx_out;
  80fd74:	e0bff817 	ldw	r2,-32(fp)
  80fd78:	10800d17 	ldw	r2,52(r2)
  80fd7c:	e0bfff15 	stw	r2,-4(fp)

      if (in < out)
  80fd80:	e0fffc17 	ldw	r3,-16(fp)
  80fd84:	e0bfff17 	ldw	r2,-4(fp)
  80fd88:	1880062e 	bgeu	r3,r2,80fda4 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
  80fd8c:	e0ffff17 	ldw	r3,-4(fp)
  80fd90:	e0bffc17 	ldw	r2,-16(fp)
  80fd94:	1885c83a 	sub	r2,r3,r2
  80fd98:	10bfffc4 	addi	r2,r2,-1
  80fd9c:	e0bffe15 	stw	r2,-8(fp)
  80fda0:	00000b06 	br	80fdd0 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
  80fda4:	e0bfff17 	ldw	r2,-4(fp)
  80fda8:	10000526 	beq	r2,zero,80fdc0 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
  80fdac:	00c20004 	movi	r3,2048
  80fdb0:	e0bffc17 	ldw	r2,-16(fp)
  80fdb4:	1885c83a 	sub	r2,r3,r2
  80fdb8:	e0bffe15 	stw	r2,-8(fp)
  80fdbc:	00000406 	br	80fdd0 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
  80fdc0:	00c1ffc4 	movi	r3,2047
  80fdc4:	e0bffc17 	ldw	r2,-16(fp)
  80fdc8:	1885c83a 	sub	r2,r3,r2
  80fdcc:	e0bffe15 	stw	r2,-8(fp)

      if (n == 0)
  80fdd0:	e0bffe17 	ldw	r2,-8(fp)
  80fdd4:	10001e26 	beq	r2,zero,80fe50 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
  80fdd8:	e0fff617 	ldw	r3,-40(fp)
  80fddc:	e0bffe17 	ldw	r2,-8(fp)
  80fde0:	1880022e 	bgeu	r3,r2,80fdec <altera_avalon_jtag_uart_write+0xb4>
        n = count;
  80fde4:	e0bff617 	ldw	r2,-40(fp)
  80fde8:	e0bffe15 	stw	r2,-8(fp)

      memcpy(sp->tx_buf + in, ptr, n);
  80fdec:	e0bff817 	ldw	r2,-32(fp)
  80fdf0:	10c20e04 	addi	r3,r2,2104
  80fdf4:	e0bffc17 	ldw	r2,-16(fp)
  80fdf8:	1885883a 	add	r2,r3,r2
  80fdfc:	e1bffe17 	ldw	r6,-8(fp)
  80fe00:	e17ff717 	ldw	r5,-36(fp)
  80fe04:	1009883a 	mov	r4,r2
  80fe08:	08060380 	call	806038 <memcpy>
      ptr   += n;
  80fe0c:	e0fff717 	ldw	r3,-36(fp)
  80fe10:	e0bffe17 	ldw	r2,-8(fp)
  80fe14:	1885883a 	add	r2,r3,r2
  80fe18:	e0bff715 	stw	r2,-36(fp)
      count -= n;
  80fe1c:	e0fff617 	ldw	r3,-40(fp)
  80fe20:	e0bffe17 	ldw	r2,-8(fp)
  80fe24:	1885c83a 	sub	r2,r3,r2
  80fe28:	e0bff615 	stw	r2,-40(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
  80fe2c:	e0fffc17 	ldw	r3,-16(fp)
  80fe30:	e0bffe17 	ldw	r2,-8(fp)
  80fe34:	1885883a 	add	r2,r3,r2
  80fe38:	10c1ffcc 	andi	r3,r2,2047
  80fe3c:	e0bff817 	ldw	r2,-32(fp)
  80fe40:	10c00c15 	stw	r3,48(r2)
    while (count > 0)
  80fe44:	e0bff617 	ldw	r2,-40(fp)
  80fe48:	00bfc716 	blt	zero,r2,80fd68 <altera_avalon_jtag_uart_write+0x30>
  80fe4c:	00000106 	br	80fe54 <altera_avalon_jtag_uart_write+0x11c>
        break;
  80fe50:	0001883a 	nop
  NIOS2_READ_STATUS (context);
  80fe54:	0005303a 	rdctl	r2,status
  80fe58:	e0bff915 	stw	r2,-28(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80fe5c:	e0fff917 	ldw	r3,-28(fp)
  80fe60:	00bfff84 	movi	r2,-2
  80fe64:	1884703a 	and	r2,r3,r2
  80fe68:	1001703a 	wrctl	status,r2
  return context;
  80fe6c:	e0bff917 	ldw	r2,-28(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
  80fe70:	e0bffb15 	stw	r2,-20(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
  80fe74:	e0bff817 	ldw	r2,-32(fp)
  80fe78:	10800817 	ldw	r2,32(r2)
  80fe7c:	10c00094 	ori	r3,r2,2
  80fe80:	e0bff817 	ldw	r2,-32(fp)
  80fe84:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
  80fe88:	e0bff817 	ldw	r2,-32(fp)
  80fe8c:	10800017 	ldw	r2,0(r2)
  80fe90:	10800104 	addi	r2,r2,4
  80fe94:	1007883a 	mov	r3,r2
  80fe98:	e0bff817 	ldw	r2,-32(fp)
  80fe9c:	10800817 	ldw	r2,32(r2)
  80fea0:	18800035 	stwio	r2,0(r3)
  80fea4:	e0bffb17 	ldw	r2,-20(fp)
  80fea8:	e0bffa15 	stw	r2,-24(fp)
  NIOS2_WRITE_STATUS (context);
  80feac:	e0bffa17 	ldw	r2,-24(fp)
  80feb0:	1001703a 	wrctl	status,r2
}
  80feb4:	0001883a 	nop
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
  80feb8:	e0bff617 	ldw	r2,-40(fp)
  80febc:	0080100e 	bge	zero,r2,80ff00 <altera_avalon_jtag_uart_write+0x1c8>
    {
      if (flags & O_NONBLOCK)
  80fec0:	e0bff517 	ldw	r2,-44(fp)
  80fec4:	1090000c 	andi	r2,r2,16384
  80fec8:	1000101e 	bne	r2,zero,80ff0c <altera_avalon_jtag_uart_write+0x1d4>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
  80fecc:	0001883a 	nop
  80fed0:	e0bff817 	ldw	r2,-32(fp)
  80fed4:	10800d17 	ldw	r2,52(r2)
  80fed8:	e0ffff17 	ldw	r3,-4(fp)
  80fedc:	1880051e 	bne	r3,r2,80fef4 <altera_avalon_jtag_uart_write+0x1bc>
  80fee0:	e0bff817 	ldw	r2,-32(fp)
  80fee4:	10c00917 	ldw	r3,36(r2)
  80fee8:	e0bff817 	ldw	r2,-32(fp)
  80feec:	10800117 	ldw	r2,4(r2)
  80fef0:	18bff736 	bltu	r3,r2,80fed0 <altera_avalon_jtag_uart_write+0x198>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
  80fef4:	e0bff817 	ldw	r2,-32(fp)
  80fef8:	10800917 	ldw	r2,36(r2)
  80fefc:	1000051e 	bne	r2,zero,80ff14 <altera_avalon_jtag_uart_write+0x1dc>
         break;
    }
  }
  while (count > 0);
  80ff00:	e0bff617 	ldw	r2,-40(fp)
  80ff04:	00bfcf16 	blt	zero,r2,80fe44 <altera_avalon_jtag_uart_write+0x10c>
  80ff08:	00000306 	br	80ff18 <altera_avalon_jtag_uart_write+0x1e0>
        break;
  80ff0c:	0001883a 	nop
  80ff10:	00000106 	br	80ff18 <altera_avalon_jtag_uart_write+0x1e0>
         break;
  80ff14:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
  80ff18:	e0fff717 	ldw	r3,-36(fp)
  80ff1c:	e0bffd17 	ldw	r2,-12(fp)
  80ff20:	18800426 	beq	r3,r2,80ff34 <altera_avalon_jtag_uart_write+0x1fc>
    return ptr - start;
  80ff24:	e0fff717 	ldw	r3,-36(fp)
  80ff28:	e0bffd17 	ldw	r2,-12(fp)
  80ff2c:	1885c83a 	sub	r2,r3,r2
  80ff30:	00000606 	br	80ff4c <altera_avalon_jtag_uart_write+0x214>
  else if (flags & O_NONBLOCK)
  80ff34:	e0bff517 	ldw	r2,-44(fp)
  80ff38:	1090000c 	andi	r2,r2,16384
  80ff3c:	10000226 	beq	r2,zero,80ff48 <altera_avalon_jtag_uart_write+0x210>
    return -EWOULDBLOCK;
  80ff40:	00bffd44 	movi	r2,-11
  80ff44:	00000106 	br	80ff4c <altera_avalon_jtag_uart_write+0x214>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
  80ff48:	00bffec4 	movi	r2,-5
}
  80ff4c:	e037883a 	mov	sp,fp
  80ff50:	dfc00117 	ldw	ra,4(sp)
  80ff54:	df000017 	ldw	fp,0(sp)
  80ff58:	dec00204 	addi	sp,sp,8
  80ff5c:	f800283a 	ret

0080ff60 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
  80ff60:	defffa04 	addi	sp,sp,-24
  80ff64:	dfc00515 	stw	ra,20(sp)
  80ff68:	df000415 	stw	fp,16(sp)
  80ff6c:	df000404 	addi	fp,sp,16
  80ff70:	e13ffc15 	stw	r4,-16(fp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
  80ff74:	0007883a 	mov	r3,zero
  80ff78:	e0bffc17 	ldw	r2,-16(fp)
  80ff7c:	10c00035 	stwio	r3,0(r2)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
  80ff80:	e0bffc17 	ldw	r2,-16(fp)
  80ff84:	10800104 	addi	r2,r2,4
  80ff88:	10800037 	ldwio	r2,0(r2)
  NIOS2_READ_STATUS (context);
  80ff8c:	0005303a 	rdctl	r2,status
  80ff90:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  80ff94:	e0fffd17 	ldw	r3,-12(fp)
  80ff98:	00bfff84 	movi	r2,-2
  80ff9c:	1884703a 	and	r2,r3,r2
  80ffa0:	1001703a 	wrctl	status,r2
  return context;
  80ffa4:	e0bffd17 	ldw	r2,-12(fp)

  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  80ffa8:	e0bfff15 	stw	r2,-4(fp)
  alt_tick ();
  80ffac:	0810a840 	call	810a84 <alt_tick>
  80ffb0:	e0bfff17 	ldw	r2,-4(fp)
  80ffb4:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  80ffb8:	e0bffe17 	ldw	r2,-8(fp)
  80ffbc:	1001703a 	wrctl	status,r2
}
  80ffc0:	0001883a 	nop
  alt_irq_enable_all(cpu_sr);
}
  80ffc4:	0001883a 	nop
  80ffc8:	e037883a 	mov	sp,fp
  80ffcc:	dfc00117 	ldw	ra,4(sp)
  80ffd0:	df000017 	ldw	fp,0(sp)
  80ffd4:	dec00204 	addi	sp,sp,8
  80ffd8:	f800283a 	ret

0080ffdc <alt_avalon_timer_sc_init>:
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
  80ffdc:	defff804 	addi	sp,sp,-32
  80ffe0:	dfc00715 	stw	ra,28(sp)
  80ffe4:	df000615 	stw	fp,24(sp)
  80ffe8:	df000604 	addi	fp,sp,24
  80ffec:	e13ffe15 	stw	r4,-8(fp)
  80fff0:	e17ffd15 	stw	r5,-12(fp)
  80fff4:	e1bffc15 	stw	r6,-16(fp)
  80fff8:	e1fffb15 	stw	r7,-20(fp)
  80fffc:	e0bffb17 	ldw	r2,-20(fp)
  810000:	e0bfff15 	stw	r2,-4(fp)
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
  810004:	d0a75017 	ldw	r2,-25280(gp)
  810008:	1000031e 	bne	r2,zero,810018 <alt_avalon_timer_sc_init+0x3c>
  {
    _alt_tick_rate = nticks;
  81000c:	e0bfff17 	ldw	r2,-4(fp)
  810010:	d0a75015 	stw	r2,-25280(gp)
    return 0;
  810014:	00000106 	br	81001c <alt_avalon_timer_sc_init+0x40>
  }
  else
  {
    return -1;
  810018:	0001883a 	nop
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
  81001c:	e0bffe17 	ldw	r2,-8(fp)
  810020:	10800104 	addi	r2,r2,4
  810024:	00c001c4 	movi	r3,7
  810028:	10c00035 	stwio	r3,0(r2)
            ALTERA_AVALON_TIMER_CONTROL_CONT_MSK |
            ALTERA_AVALON_TIMER_CONTROL_START_MSK);

  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
  81002c:	d8000015 	stw	zero,0(sp)
  810030:	e1fffe17 	ldw	r7,-8(fp)
  810034:	01802074 	movhi	r6,129
  810038:	31bfd804 	addi	r6,r6,-160
  81003c:	e17ffc17 	ldw	r5,-16(fp)
  810040:	e13ffd17 	ldw	r4,-12(fp)
  810044:	080dc940 	call	80dc94 <alt_ic_isr_register>
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
#endif  
}
  810048:	0001883a 	nop
  81004c:	e037883a 	mov	sp,fp
  810050:	dfc00117 	ldw	ra,4(sp)
  810054:	df000017 	ldw	fp,0(sp)
  810058:	dec00204 	addi	sp,sp,8
  81005c:	f800283a 	ret

00810060 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
  810060:	defff504 	addi	sp,sp,-44
  810064:	df000a15 	stw	fp,40(sp)
  810068:	df000a04 	addi	fp,sp,40
  81006c:	e13ff915 	stw	r4,-28(fp)
  810070:	e17ff815 	stw	r5,-32(fp)
  810074:	e1bff715 	stw	r6,-36(fp)
  810078:	e1fff615 	stw	r7,-40(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
  81007c:	e03fff15 	stw	zero,-4(fp)
  return _alt_tick_rate;
  810080:	d0a75017 	ldw	r2,-25280(gp)
  
  if (alt_ticks_per_second ())
  810084:	10003e26 	beq	r2,zero,810180 <alt_alarm_start+0x120>
  {
    if (alarm)
  810088:	e0bff917 	ldw	r2,-28(fp)
  81008c:	10003a26 	beq	r2,zero,810178 <alt_alarm_start+0x118>
    {
      alarm->callback = callback;
  810090:	e0bff917 	ldw	r2,-28(fp)
  810094:	e0fff717 	ldw	r3,-36(fp)
  810098:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
  81009c:	e0bff917 	ldw	r2,-28(fp)
  8100a0:	e0fff617 	ldw	r3,-40(fp)
  8100a4:	10c00515 	stw	r3,20(r2)
  NIOS2_READ_STATUS (context);
  8100a8:	0005303a 	rdctl	r2,status
  8100ac:	e0bffd15 	stw	r2,-12(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8100b0:	e0fffd17 	ldw	r3,-12(fp)
  8100b4:	00bfff84 	movi	r2,-2
  8100b8:	1884703a 	and	r2,r3,r2
  8100bc:	1001703a 	wrctl	status,r2
  return context;
  8100c0:	e0bffd17 	ldw	r2,-12(fp)
 
      irq_context = alt_irq_disable_all ();
  8100c4:	e0bffe15 	stw	r2,-8(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
  8100c8:	d0a75117 	ldw	r2,-25276(gp)
      
      current_nticks = alt_nticks();
  8100cc:	e0bfff15 	stw	r2,-4(fp)
      
      alarm->time = nticks + current_nticks + 1; 
  8100d0:	e0fff817 	ldw	r3,-32(fp)
  8100d4:	e0bfff17 	ldw	r2,-4(fp)
  8100d8:	1885883a 	add	r2,r3,r2
  8100dc:	10c00044 	addi	r3,r2,1
  8100e0:	e0bff917 	ldw	r2,-28(fp)
  8100e4:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
  8100e8:	e0bff917 	ldw	r2,-28(fp)
  8100ec:	10c00217 	ldw	r3,8(r2)
  8100f0:	e0bfff17 	ldw	r2,-4(fp)
  8100f4:	1880042e 	bgeu	r3,r2,810108 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
  8100f8:	e0bff917 	ldw	r2,-28(fp)
  8100fc:	00c00044 	movi	r3,1
  810100:	10c00405 	stb	r3,16(r2)
  810104:	00000206 	br	810110 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
  810108:	e0bff917 	ldw	r2,-28(fp)
  81010c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
  810110:	e0bff917 	ldw	r2,-28(fp)
  810114:	d0e01004 	addi	r3,gp,-32704
  810118:	e0fffb15 	stw	r3,-20(fp)
  81011c:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  810120:	e0bffa17 	ldw	r2,-24(fp)
  810124:	e0fffb17 	ldw	r3,-20(fp)
  810128:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  81012c:	e0bffb17 	ldw	r2,-20(fp)
  810130:	10c00017 	ldw	r3,0(r2)
  810134:	e0bffa17 	ldw	r2,-24(fp)
  810138:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
  81013c:	e0bffb17 	ldw	r2,-20(fp)
  810140:	10800017 	ldw	r2,0(r2)
  810144:	e0fffa17 	ldw	r3,-24(fp)
  810148:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  81014c:	e0bffb17 	ldw	r2,-20(fp)
  810150:	e0fffa17 	ldw	r3,-24(fp)
  810154:	10c00015 	stw	r3,0(r2)
}
  810158:	0001883a 	nop
  81015c:	e0bffe17 	ldw	r2,-8(fp)
  810160:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context);
  810164:	e0bffc17 	ldw	r2,-16(fp)
  810168:	1001703a 	wrctl	status,r2
}
  81016c:	0001883a 	nop
      alt_irq_enable_all (irq_context);

      return 0;
  810170:	0005883a 	mov	r2,zero
  810174:	00000306 	br	810184 <alt_alarm_start+0x124>
    }
    else
    {
      return -EINVAL;
  810178:	00bffa84 	movi	r2,-22
  81017c:	00000106 	br	810184 <alt_alarm_start+0x124>
    }
  }
  else
  {
    return -ENOTSUP;
  810180:	00bfde84 	movi	r2,-134
  }
}
  810184:	e037883a 	mov	sp,fp
  810188:	df000017 	ldw	fp,0(sp)
  81018c:	dec00104 	addi	sp,sp,4
  810190:	f800283a 	ret

00810194 <alt_get_errno>:
{
  810194:	defffe04 	addi	sp,sp,-8
  810198:	dfc00115 	stw	ra,4(sp)
  81019c:	df000015 	stw	fp,0(sp)
  8101a0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  8101a4:	d0a00917 	ldw	r2,-32732(gp)
  8101a8:	10000326 	beq	r2,zero,8101b8 <alt_get_errno+0x24>
  8101ac:	d0a00917 	ldw	r2,-32732(gp)
  8101b0:	103ee83a 	callr	r2
  8101b4:	00000106 	br	8101bc <alt_get_errno+0x28>
  8101b8:	d0a74704 	addi	r2,gp,-25316
}
  8101bc:	e037883a 	mov	sp,fp
  8101c0:	dfc00117 	ldw	ra,4(sp)
  8101c4:	df000017 	ldw	fp,0(sp)
  8101c8:	dec00204 	addi	sp,sp,8
  8101cc:	f800283a 	ret

008101d0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
  8101d0:	defffa04 	addi	sp,sp,-24
  8101d4:	dfc00515 	stw	ra,20(sp)
  8101d8:	df000415 	stw	fp,16(sp)
  8101dc:	df000404 	addi	fp,sp,16
  8101e0:	e13ffd15 	stw	r4,-12(fp)
  8101e4:	e17ffc15 	stw	r5,-16(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  8101e8:	e0bffd17 	ldw	r2,-12(fp)
  8101ec:	10000326 	beq	r2,zero,8101fc <alt_dev_llist_insert+0x2c>
  8101f0:	e0bffd17 	ldw	r2,-12(fp)
  8101f4:	10800217 	ldw	r2,8(r2)
  8101f8:	1000061e 	bne	r2,zero,810214 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
  8101fc:	08101940 	call	810194 <alt_get_errno>
  810200:	1007883a 	mov	r3,r2
  810204:	00800584 	movi	r2,22
  810208:	18800015 	stw	r2,0(r3)
    return -EINVAL;
  81020c:	00bffa84 	movi	r2,-22
  810210:	00001406 	br	810264 <alt_dev_llist_insert+0x94>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
  810214:	e0bffd17 	ldw	r2,-12(fp)
  810218:	e0fffc17 	ldw	r3,-16(fp)
  81021c:	e0ffff15 	stw	r3,-4(fp)
  810220:	e0bffe15 	stw	r2,-8(fp)
  entry->previous = list;
  810224:	e0bffe17 	ldw	r2,-8(fp)
  810228:	e0ffff17 	ldw	r3,-4(fp)
  81022c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
  810230:	e0bfff17 	ldw	r2,-4(fp)
  810234:	10c00017 	ldw	r3,0(r2)
  810238:	e0bffe17 	ldw	r2,-8(fp)
  81023c:	10c00015 	stw	r3,0(r2)
  list->next->previous = entry;
  810240:	e0bfff17 	ldw	r2,-4(fp)
  810244:	10800017 	ldw	r2,0(r2)
  810248:	e0fffe17 	ldw	r3,-8(fp)
  81024c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
  810250:	e0bfff17 	ldw	r2,-4(fp)
  810254:	e0fffe17 	ldw	r3,-8(fp)
  810258:	10c00015 	stw	r3,0(r2)
}
  81025c:	0001883a 	nop

  return 0;  
  810260:	0005883a 	mov	r2,zero
}
  810264:	e037883a 	mov	sp,fp
  810268:	dfc00117 	ldw	ra,4(sp)
  81026c:	df000017 	ldw	fp,0(sp)
  810270:	dec00204 	addi	sp,sp,8
  810274:	f800283a 	ret

00810278 <alt_get_errno>:
{
  810278:	defffe04 	addi	sp,sp,-8
  81027c:	dfc00115 	stw	ra,4(sp)
  810280:	df000015 	stw	fp,0(sp)
  810284:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  810288:	d0a00917 	ldw	r2,-32732(gp)
  81028c:	10000326 	beq	r2,zero,81029c <alt_get_errno+0x24>
  810290:	d0a00917 	ldw	r2,-32732(gp)
  810294:	103ee83a 	callr	r2
  810298:	00000106 	br	8102a0 <alt_get_errno+0x28>
  81029c:	d0a74704 	addi	r2,gp,-25316
}
  8102a0:	e037883a 	mov	sp,fp
  8102a4:	dfc00117 	ldw	ra,4(sp)
  8102a8:	df000017 	ldw	fp,0(sp)
  8102ac:	dec00204 	addi	sp,sp,8
  8102b0:	f800283a 	ret

008102b4 <alt_dma_rxchan_open>:
 *
 * The return value will be NULL on failure, and non-NULL otherwise. 
 */

alt_dma_rxchan alt_dma_rxchan_open (const char* name)
{
  8102b4:	defffc04 	addi	sp,sp,-16
  8102b8:	dfc00315 	stw	ra,12(sp)
  8102bc:	df000215 	stw	fp,8(sp)
  8102c0:	df000204 	addi	fp,sp,8
  8102c4:	e13ffe15 	stw	r4,-8(fp)
  alt_dma_rxchan dev;

  dev = (alt_dma_rxchan) alt_find_dev (name, &alt_dma_rxchan_list);
  8102c8:	d1600c04 	addi	r5,gp,-32720
  8102cc:	e13ffe17 	ldw	r4,-8(fp)
  8102d0:	08104600 	call	810460 <alt_find_dev>
  8102d4:	e0bfff15 	stw	r2,-4(fp)

  if (!dev)
  8102d8:	e0bfff17 	ldw	r2,-4(fp)
  8102dc:	1000041e 	bne	r2,zero,8102f0 <alt_dma_rxchan_open+0x3c>
  {
    ALT_ERRNO = ENODEV;
  8102e0:	08102780 	call	810278 <alt_get_errno>
  8102e4:	1007883a 	mov	r3,r2
  8102e8:	008004c4 	movi	r2,19
  8102ec:	18800015 	stw	r2,0(r3)
  }

  return dev;
  8102f0:	e0bfff17 	ldw	r2,-4(fp)
}
  8102f4:	e037883a 	mov	sp,fp
  8102f8:	dfc00117 	ldw	ra,4(sp)
  8102fc:	df000017 	ldw	fp,0(sp)
  810300:	dec00204 	addi	sp,sp,8
  810304:	f800283a 	ret

00810308 <alt_get_errno>:
{
  810308:	defffe04 	addi	sp,sp,-8
  81030c:	dfc00115 	stw	ra,4(sp)
  810310:	df000015 	stw	fp,0(sp)
  810314:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  810318:	d0a00917 	ldw	r2,-32732(gp)
  81031c:	10000326 	beq	r2,zero,81032c <alt_get_errno+0x24>
  810320:	d0a00917 	ldw	r2,-32732(gp)
  810324:	103ee83a 	callr	r2
  810328:	00000106 	br	810330 <alt_get_errno+0x28>
  81032c:	d0a74704 	addi	r2,gp,-25316
}
  810330:	e037883a 	mov	sp,fp
  810334:	dfc00117 	ldw	ra,4(sp)
  810338:	df000017 	ldw	fp,0(sp)
  81033c:	dec00204 	addi	sp,sp,8
  810340:	f800283a 	ret

00810344 <alt_dma_txchan_open>:
 *
 * The return value will be NULL on failure, and non-NULL otherwise. 
 */

alt_dma_txchan alt_dma_txchan_open (const char* name)
{
  810344:	defffc04 	addi	sp,sp,-16
  810348:	dfc00315 	stw	ra,12(sp)
  81034c:	df000215 	stw	fp,8(sp)
  810350:	df000204 	addi	fp,sp,8
  810354:	e13ffe15 	stw	r4,-8(fp)
  alt_dma_txchan dev;

  dev = (alt_dma_txchan) alt_find_dev (name, &alt_dma_txchan_list);
  810358:	d1600e04 	addi	r5,gp,-32712
  81035c:	e13ffe17 	ldw	r4,-8(fp)
  810360:	08104600 	call	810460 <alt_find_dev>
  810364:	e0bfff15 	stw	r2,-4(fp)

  if (!dev)
  810368:	e0bfff17 	ldw	r2,-4(fp)
  81036c:	1000041e 	bne	r2,zero,810380 <alt_dma_txchan_open+0x3c>
  {
    ALT_ERRNO = ENODEV;
  810370:	08103080 	call	810308 <alt_get_errno>
  810374:	1007883a 	mov	r3,r2
  810378:	008004c4 	movi	r2,19
  81037c:	18800015 	stw	r2,0(r3)
  }

  return dev;
  810380:	e0bfff17 	ldw	r2,-4(fp)
}
  810384:	e037883a 	mov	sp,fp
  810388:	dfc00117 	ldw	ra,4(sp)
  81038c:	df000017 	ldw	fp,0(sp)
  810390:	dec00204 	addi	sp,sp,8
  810394:	f800283a 	ret

00810398 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
  810398:	defffd04 	addi	sp,sp,-12
  81039c:	dfc00215 	stw	ra,8(sp)
  8103a0:	df000115 	stw	fp,4(sp)
  8103a4:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  8103a8:	00802074 	movhi	r2,129
  8103ac:	1083f704 	addi	r2,r2,4060
  8103b0:	e0bfff15 	stw	r2,-4(fp)
  8103b4:	00000606 	br	8103d0 <_do_ctors+0x38>
        (*ctor) (); 
  8103b8:	e0bfff17 	ldw	r2,-4(fp)
  8103bc:	10800017 	ldw	r2,0(r2)
  8103c0:	103ee83a 	callr	r2
  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
  8103c4:	e0bfff17 	ldw	r2,-4(fp)
  8103c8:	10bfff04 	addi	r2,r2,-4
  8103cc:	e0bfff15 	stw	r2,-4(fp)
  8103d0:	e0ffff17 	ldw	r3,-4(fp)
  8103d4:	00802074 	movhi	r2,129
  8103d8:	1083f804 	addi	r2,r2,4064
  8103dc:	18bff62e 	bgeu	r3,r2,8103b8 <_do_ctors+0x20>
}
  8103e0:	0001883a 	nop
  8103e4:	0001883a 	nop
  8103e8:	e037883a 	mov	sp,fp
  8103ec:	dfc00117 	ldw	ra,4(sp)
  8103f0:	df000017 	ldw	fp,0(sp)
  8103f4:	dec00204 	addi	sp,sp,8
  8103f8:	f800283a 	ret

008103fc <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
  8103fc:	defffd04 	addi	sp,sp,-12
  810400:	dfc00215 	stw	ra,8(sp)
  810404:	df000115 	stw	fp,4(sp)
  810408:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  81040c:	00802074 	movhi	r2,129
  810410:	1083f704 	addi	r2,r2,4060
  810414:	e0bfff15 	stw	r2,-4(fp)
  810418:	00000606 	br	810434 <_do_dtors+0x38>
        (*dtor) (); 
  81041c:	e0bfff17 	ldw	r2,-4(fp)
  810420:	10800017 	ldw	r2,0(r2)
  810424:	103ee83a 	callr	r2
  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
  810428:	e0bfff17 	ldw	r2,-4(fp)
  81042c:	10bfff04 	addi	r2,r2,-4
  810430:	e0bfff15 	stw	r2,-4(fp)
  810434:	e0ffff17 	ldw	r3,-4(fp)
  810438:	00802074 	movhi	r2,129
  81043c:	1083f804 	addi	r2,r2,4064
  810440:	18bff62e 	bgeu	r3,r2,81041c <_do_dtors+0x20>
}
  810444:	0001883a 	nop
  810448:	0001883a 	nop
  81044c:	e037883a 	mov	sp,fp
  810450:	dfc00117 	ldw	ra,4(sp)
  810454:	df000017 	ldw	fp,0(sp)
  810458:	dec00204 	addi	sp,sp,8
  81045c:	f800283a 	ret

00810460 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
  810460:	defffa04 	addi	sp,sp,-24
  810464:	dfc00515 	stw	ra,20(sp)
  810468:	df000415 	stw	fp,16(sp)
  81046c:	df000404 	addi	fp,sp,16
  810470:	e13ffd15 	stw	r4,-12(fp)
  810474:	e17ffc15 	stw	r5,-16(fp)
  alt_dev* next = (alt_dev*) llist->next;
  810478:	e0bffc17 	ldw	r2,-16(fp)
  81047c:	10800017 	ldw	r2,0(r2)
  810480:	e0bfff15 	stw	r2,-4(fp)
  alt_32 len;

  len  = strlen(name) + 1;
  810484:	e13ffd17 	ldw	r4,-12(fp)
  810488:	08007040 	call	800704 <strlen>
  81048c:	10800044 	addi	r2,r2,1
  810490:	e0bffe15 	stw	r2,-8(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
  810494:	00000d06 	br	8104cc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
  810498:	e0bfff17 	ldw	r2,-4(fp)
  81049c:	10800217 	ldw	r2,8(r2)
  8104a0:	e0fffe17 	ldw	r3,-8(fp)
  8104a4:	180d883a 	mov	r6,r3
  8104a8:	e17ffd17 	ldw	r5,-12(fp)
  8104ac:	1009883a 	mov	r4,r2
  8104b0:	0810db80 	call	810db8 <memcmp>
  8104b4:	1000021e 	bne	r2,zero,8104c0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
  8104b8:	e0bfff17 	ldw	r2,-4(fp)
  8104bc:	00000706 	br	8104dc <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
  8104c0:	e0bfff17 	ldw	r2,-4(fp)
  8104c4:	10800017 	ldw	r2,0(r2)
  8104c8:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) llist)
  8104cc:	e0ffff17 	ldw	r3,-4(fp)
  8104d0:	e0bffc17 	ldw	r2,-16(fp)
  8104d4:	18bff01e 	bne	r3,r2,810498 <alt_find_dev+0x38>
  }
  
  /* No match found */
  
  return NULL;
  8104d8:	0005883a 	mov	r2,zero
}
  8104dc:	e037883a 	mov	sp,fp
  8104e0:	dfc00117 	ldw	ra,4(sp)
  8104e4:	df000017 	ldw	fp,0(sp)
  8104e8:	dec00204 	addi	sp,sp,8
  8104ec:	f800283a 	ret

008104f0 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
  8104f0:	defffb04 	addi	sp,sp,-20
  8104f4:	df000415 	stw	fp,16(sp)
  8104f8:	df000404 	addi	fp,sp,16
  8104fc:	e13ffd15 	stw	r4,-12(fp)
  810500:	e17ffc15 	stw	r5,-16(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
  810504:	e0bffc17 	ldw	r2,-16(fp)
  810508:	10880070 	cmpltui	r2,r2,8193
  81050c:	1000021e 	bne	r2,zero,810518 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
  810510:	00880004 	movi	r2,8192
  810514:	e0bffc15 	stw	r2,-16(fp)
  }

  end = ((char*) start) + len;
  810518:	e0fffd17 	ldw	r3,-12(fp)
  81051c:	e0bffc17 	ldw	r2,-16(fp)
  810520:	1885883a 	add	r2,r3,r2
  810524:	e0bffe15 	stw	r2,-8(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  810528:	e0bffd17 	ldw	r2,-12(fp)
  81052c:	e0bfff15 	stw	r2,-4(fp)
  810530:	00000506 	br	810548 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
  810534:	e0bfff17 	ldw	r2,-4(fp)
  810538:	1000603a 	flushi	r2
  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
  81053c:	e0bfff17 	ldw	r2,-4(fp)
  810540:	10800804 	addi	r2,r2,32
  810544:	e0bfff15 	stw	r2,-4(fp)
  810548:	e0ffff17 	ldw	r3,-4(fp)
  81054c:	e0bffe17 	ldw	r2,-8(fp)
  810550:	18bff836 	bltu	r3,r2,810534 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
  810554:	e0bffd17 	ldw	r2,-12(fp)
  810558:	108007cc 	andi	r2,r2,31
  81055c:	10000226 	beq	r2,zero,810568 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
  810560:	e0bfff17 	ldw	r2,-4(fp)
  810564:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
  810568:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
  81056c:	0001883a 	nop
  810570:	e037883a 	mov	sp,fp
  810574:	df000017 	ldw	fp,0(sp)
  810578:	dec00104 	addi	sp,sp,4
  81057c:	f800283a 	ret

00810580 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  810580:	defffe04 	addi	sp,sp,-8
  810584:	df000115 	stw	fp,4(sp)
  810588:	df000104 	addi	fp,sp,4
  81058c:	e13fff15 	stw	r4,-4(fp)
  810590:	e0bfff17 	ldw	r2,-4(fp)
  810594:	10bffe84 	addi	r2,r2,-6
  810598:	10c00428 	cmpgeui	r3,r2,16
  81059c:	1800191e 	bne	r3,zero,810604 <alt_exception_cause_generated_bad_addr+0x84>
  8105a0:	100690ba 	slli	r3,r2,2
  8105a4:	00802074 	movhi	r2,129
  8105a8:	1885883a 	add	r2,r3,r2
  8105ac:	10816d17 	ldw	r2,1460(r2)
  8105b0:	1000683a 	jmp	r2
  8105b4:	008105f4 	movhi	r2,1047
  8105b8:	008105f4 	movhi	r2,1047
  8105bc:	00810604 	movi	r2,1048
  8105c0:	00810604 	movi	r2,1048
  8105c4:	00810604 	movi	r2,1048
  8105c8:	008105f4 	movhi	r2,1047
  8105cc:	008105fc 	xorhi	r2,zero,1047
  8105d0:	00810604 	movi	r2,1048
  8105d4:	008105f4 	movhi	r2,1047
  8105d8:	008105f4 	movhi	r2,1047
  8105dc:	00810604 	movi	r2,1048
  8105e0:	008105f4 	movhi	r2,1047
  8105e4:	008105fc 	xorhi	r2,zero,1047
  8105e8:	00810604 	movi	r2,1048
  8105ec:	00810604 	movi	r2,1048
  8105f0:	008105f4 	movhi	r2,1047
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
  8105f4:	00800044 	movi	r2,1
  8105f8:	00000306 	br	810608 <alt_exception_cause_generated_bad_addr+0x88>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
  8105fc:	0005883a 	mov	r2,zero
  810600:	00000106 	br	810608 <alt_exception_cause_generated_bad_addr+0x88>

  default:
    return 0;
  810604:	0005883a 	mov	r2,zero
  }
}
  810608:	e037883a 	mov	sp,fp
  81060c:	df000017 	ldw	fp,0(sp)
  810610:	dec00104 	addi	sp,sp,4
  810614:	f800283a 	ret

00810618 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
  810618:	defff904 	addi	sp,sp,-28
  81061c:	dfc00615 	stw	ra,24(sp)
  810620:	df000515 	stw	fp,20(sp)
  810624:	df000504 	addi	fp,sp,20
  810628:	e13ffe15 	stw	r4,-8(fp)
  81062c:	e17ffd15 	stw	r5,-12(fp)
  810630:	e1bffc15 	stw	r6,-16(fp)
  810634:	e1fffb15 	stw	r7,-20(fp)
  int old;

  old = open (name, flags, mode);
  810638:	e1bffb17 	ldw	r6,-20(fp)
  81063c:	e17ffc17 	ldw	r5,-16(fp)
  810640:	e13ffd17 	ldw	r4,-12(fp)
  810644:	08108800 	call	810880 <open>
  810648:	e0bfff15 	stw	r2,-4(fp)

  if (old >= 0)
  81064c:	e0bfff17 	ldw	r2,-4(fp)
  810650:	10002016 	blt	r2,zero,8106d4 <alt_open_fd+0xbc>
  {
    fd->dev      = alt_fd_list[old].dev;
  810654:	e0ffff17 	ldw	r3,-4(fp)
  810658:	1805883a 	mov	r2,r3
  81065c:	1085883a 	add	r2,r2,r2
  810660:	10c5883a 	add	r2,r2,r3
  810664:	100490ba 	slli	r2,r2,2
  810668:	00c02074 	movhi	r3,129
  81066c:	10c7883a 	add	r3,r2,r3
  810670:	18c83817 	ldw	r3,8416(r3)
  810674:	e0bffe17 	ldw	r2,-8(fp)
  810678:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
  81067c:	e0ffff17 	ldw	r3,-4(fp)
  810680:	1805883a 	mov	r2,r3
  810684:	1085883a 	add	r2,r2,r2
  810688:	10c5883a 	add	r2,r2,r3
  81068c:	100490ba 	slli	r2,r2,2
  810690:	00c02074 	movhi	r3,129
  810694:	10c7883a 	add	r3,r2,r3
  810698:	18c83917 	ldw	r3,8420(r3)
  81069c:	e0bffe17 	ldw	r2,-8(fp)
  8106a0:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
  8106a4:	e0ffff17 	ldw	r3,-4(fp)
  8106a8:	1805883a 	mov	r2,r3
  8106ac:	1085883a 	add	r2,r2,r2
  8106b0:	10c5883a 	add	r2,r2,r3
  8106b4:	100490ba 	slli	r2,r2,2
  8106b8:	00c02074 	movhi	r3,129
  8106bc:	10c7883a 	add	r3,r2,r3
  8106c0:	18c83a17 	ldw	r3,8424(r3)
  8106c4:	e0bffe17 	ldw	r2,-8(fp)
  8106c8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
  8106cc:	e13fff17 	ldw	r4,-4(fp)
  8106d0:	080e5900 	call	80e590 <alt_release_fd>
  }
} 
  8106d4:	0001883a 	nop
  8106d8:	e037883a 	mov	sp,fp
  8106dc:	dfc00117 	ldw	ra,4(sp)
  8106e0:	df000017 	ldw	fp,0(sp)
  8106e4:	dec00204 	addi	sp,sp,8
  8106e8:	f800283a 	ret

008106ec <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
  8106ec:	defffb04 	addi	sp,sp,-20
  8106f0:	dfc00415 	stw	ra,16(sp)
  8106f4:	df000315 	stw	fp,12(sp)
  8106f8:	df000304 	addi	fp,sp,12
  8106fc:	e13fff15 	stw	r4,-4(fp)
  810700:	e17ffe15 	stw	r5,-8(fp)
  810704:	e1bffd15 	stw	r6,-12(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
  810708:	01c07fc4 	movi	r7,511
  81070c:	01800044 	movi	r6,1
  810710:	e17fff17 	ldw	r5,-4(fp)
  810714:	01002074 	movhi	r4,129
  810718:	21083b04 	addi	r4,r4,8428
  81071c:	08106180 	call	810618 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
  810720:	01c07fc4 	movi	r7,511
  810724:	000d883a 	mov	r6,zero
  810728:	e17ffe17 	ldw	r5,-8(fp)
  81072c:	01002074 	movhi	r4,129
  810730:	21083804 	addi	r4,r4,8416
  810734:	08106180 	call	810618 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
  810738:	01c07fc4 	movi	r7,511
  81073c:	01800044 	movi	r6,1
  810740:	e17ffd17 	ldw	r5,-12(fp)
  810744:	01002074 	movhi	r4,129
  810748:	21083e04 	addi	r4,r4,8440
  81074c:	08106180 	call	810618 <alt_open_fd>
}  
  810750:	0001883a 	nop
  810754:	e037883a 	mov	sp,fp
  810758:	dfc00117 	ldw	ra,4(sp)
  81075c:	df000017 	ldw	fp,0(sp)
  810760:	dec00204 	addi	sp,sp,8
  810764:	f800283a 	ret

00810768 <alt_get_errno>:
{
  810768:	defffe04 	addi	sp,sp,-8
  81076c:	dfc00115 	stw	ra,4(sp)
  810770:	df000015 	stw	fp,0(sp)
  810774:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
  810778:	d0a00917 	ldw	r2,-32732(gp)
  81077c:	10000326 	beq	r2,zero,81078c <alt_get_errno+0x24>
  810780:	d0a00917 	ldw	r2,-32732(gp)
  810784:	103ee83a 	callr	r2
  810788:	00000106 	br	810790 <alt_get_errno+0x28>
  81078c:	d0a74704 	addi	r2,gp,-25316
}
  810790:	e037883a 	mov	sp,fp
  810794:	dfc00117 	ldw	ra,4(sp)
  810798:	df000017 	ldw	fp,0(sp)
  81079c:	dec00204 	addi	sp,sp,8
  8107a0:	f800283a 	ret

008107a4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
  8107a4:	defffd04 	addi	sp,sp,-12
  8107a8:	df000215 	stw	fp,8(sp)
  8107ac:	df000204 	addi	fp,sp,8
  8107b0:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
  8107b4:	e0bffe17 	ldw	r2,-8(fp)
  8107b8:	10800217 	ldw	r2,8(r2)
  8107bc:	10d00034 	orhi	r3,r2,16384
  8107c0:	e0bffe17 	ldw	r2,-8(fp)
  8107c4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  8107c8:	e03fff15 	stw	zero,-4(fp)
  8107cc:	00002306 	br	81085c <alt_file_locked+0xb8>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
  8107d0:	e0ffff17 	ldw	r3,-4(fp)
  8107d4:	1805883a 	mov	r2,r3
  8107d8:	1085883a 	add	r2,r2,r2
  8107dc:	10c5883a 	add	r2,r2,r3
  8107e0:	100490ba 	slli	r2,r2,2
  8107e4:	00c02074 	movhi	r3,129
  8107e8:	10c7883a 	add	r3,r2,r3
  8107ec:	18c83817 	ldw	r3,8416(r3)
  8107f0:	e0bffe17 	ldw	r2,-8(fp)
  8107f4:	10800017 	ldw	r2,0(r2)
  8107f8:	1880151e 	bne	r3,r2,810850 <alt_file_locked+0xac>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  8107fc:	e0ffff17 	ldw	r3,-4(fp)
  810800:	1805883a 	mov	r2,r3
  810804:	1085883a 	add	r2,r2,r2
  810808:	10c5883a 	add	r2,r2,r3
  81080c:	100490ba 	slli	r2,r2,2
  810810:	00c02074 	movhi	r3,129
  810814:	10c7883a 	add	r3,r2,r3
  810818:	18883a17 	ldw	r2,8424(r3)
    if ((alt_fd_list[i].dev == fd->dev) &&
  81081c:	10000c0e 	bge	r2,zero,810850 <alt_file_locked+0xac>
        (&alt_fd_list[i] != fd))
  810820:	e0ffff17 	ldw	r3,-4(fp)
  810824:	1805883a 	mov	r2,r3
  810828:	1085883a 	add	r2,r2,r2
  81082c:	10c5883a 	add	r2,r2,r3
  810830:	100490ba 	slli	r2,r2,2
  810834:	00c02074 	movhi	r3,129
  810838:	18c83804 	addi	r3,r3,8416
  81083c:	10c5883a 	add	r2,r2,r3
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
  810840:	e0fffe17 	ldw	r3,-8(fp)
  810844:	18800226 	beq	r3,r2,810850 <alt_file_locked+0xac>
    {
      return -EACCES;
  810848:	00bffcc4 	movi	r2,-13
  81084c:	00000806 	br	810870 <alt_file_locked+0xcc>
  for (i = 0; i <= alt_max_fd; i++)
  810850:	e0bfff17 	ldw	r2,-4(fp)
  810854:	10800044 	addi	r2,r2,1
  810858:	e0bfff15 	stw	r2,-4(fp)
  81085c:	d0a00817 	ldw	r2,-32736(gp)
  810860:	1007883a 	mov	r3,r2
  810864:	e0bfff17 	ldw	r2,-4(fp)
  810868:	18bfd92e 	bgeu	r3,r2,8107d0 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
  81086c:	0005883a 	mov	r2,zero
}
  810870:	e037883a 	mov	sp,fp
  810874:	df000017 	ldw	fp,0(sp)
  810878:	dec00104 	addi	sp,sp,4
  81087c:	f800283a 	ret

00810880 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
  810880:	defff604 	addi	sp,sp,-40
  810884:	dfc00915 	stw	ra,36(sp)
  810888:	df000815 	stw	fp,32(sp)
  81088c:	df000804 	addi	fp,sp,32
  810890:	e13ffa15 	stw	r4,-24(fp)
  810894:	e17ff915 	stw	r5,-28(fp)
  810898:	e1bff815 	stw	r6,-32(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
  81089c:	00bfffc4 	movi	r2,-1
  8108a0:	e0bffe15 	stw	r2,-8(fp)
  int status = -ENODEV;
  8108a4:	00bffb44 	movi	r2,-19
  8108a8:	e0bffd15 	stw	r2,-12(fp)
  int isafs = 0;
  8108ac:	e03ffc15 	stw	zero,-16(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
  8108b0:	d1600604 	addi	r5,gp,-32744
  8108b4:	e13ffa17 	ldw	r4,-24(fp)
  8108b8:	08104600 	call	810460 <alt_find_dev>
  8108bc:	e0bfff15 	stw	r2,-4(fp)
  8108c0:	e0bfff17 	ldw	r2,-4(fp)
  8108c4:	1000051e 	bne	r2,zero,8108dc <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
  8108c8:	e13ffa17 	ldw	r4,-24(fp)
  8108cc:	0810bb00 	call	810bb0 <alt_find_file>
  8108d0:	e0bfff15 	stw	r2,-4(fp)
    isafs = 1;
  8108d4:	00800044 	movi	r2,1
  8108d8:	e0bffc15 	stw	r2,-16(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
  8108dc:	e0bfff17 	ldw	r2,-4(fp)
  8108e0:	10002c26 	beq	r2,zero,810994 <open+0x114>
  {
    if ((index = alt_get_fd (dev)) < 0)
  8108e4:	e13fff17 	ldw	r4,-4(fp)
  8108e8:	0810cb80 	call	810cb8 <alt_get_fd>
  8108ec:	e0bffe15 	stw	r2,-8(fp)
  8108f0:	e0bffe17 	ldw	r2,-8(fp)
  8108f4:	1000030e 	bge	r2,zero,810904 <open+0x84>
    {
      status = index;
  8108f8:	e0bffe17 	ldw	r2,-8(fp)
  8108fc:	e0bffd15 	stw	r2,-12(fp)
  810900:	00002606 	br	81099c <open+0x11c>
    }
    else
    {
      fd = &alt_fd_list[index];
  810904:	e0fffe17 	ldw	r3,-8(fp)
  810908:	1805883a 	mov	r2,r3
  81090c:	1085883a 	add	r2,r2,r2
  810910:	10c5883a 	add	r2,r2,r3
  810914:	100490ba 	slli	r2,r2,2
  810918:	00c02074 	movhi	r3,129
  81091c:	18c83804 	addi	r3,r3,8416
  810920:	10c5883a 	add	r2,r2,r3
  810924:	e0bffb15 	stw	r2,-20(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
  810928:	e0fff917 	ldw	r3,-28(fp)
  81092c:	00900034 	movhi	r2,16384
  810930:	10bfffc4 	addi	r2,r2,-1
  810934:	1886703a 	and	r3,r3,r2
  810938:	e0bffb17 	ldw	r2,-20(fp)
  81093c:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
  810940:	e0bffc17 	ldw	r2,-16(fp)
  810944:	1000051e 	bne	r2,zero,81095c <open+0xdc>
  810948:	e13ffb17 	ldw	r4,-20(fp)
  81094c:	08107a40 	call	8107a4 <alt_file_locked>
  810950:	e0bffd15 	stw	r2,-12(fp)
  810954:	e0bffd17 	ldw	r2,-12(fp)
  810958:	10001016 	blt	r2,zero,81099c <open+0x11c>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
  81095c:	e0bfff17 	ldw	r2,-4(fp)
  810960:	10800317 	ldw	r2,12(r2)
  810964:	10000826 	beq	r2,zero,810988 <open+0x108>
  810968:	e0bfff17 	ldw	r2,-4(fp)
  81096c:	10800317 	ldw	r2,12(r2)
  810970:	e1fff817 	ldw	r7,-32(fp)
  810974:	e1bff917 	ldw	r6,-28(fp)
  810978:	e17ffa17 	ldw	r5,-24(fp)
  81097c:	e13ffb17 	ldw	r4,-20(fp)
  810980:	103ee83a 	callr	r2
  810984:	00000106 	br	81098c <open+0x10c>
  810988:	0005883a 	mov	r2,zero
  81098c:	e0bffd15 	stw	r2,-12(fp)
  810990:	00000206 	br	81099c <open+0x11c>
      }
    }
  }
  else
  {
    status = -ENODEV;
  810994:	00bffb44 	movi	r2,-19
  810998:	e0bffd15 	stw	r2,-12(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
  81099c:	e0bffd17 	ldw	r2,-12(fp)
  8109a0:	1000090e 	bge	r2,zero,8109c8 <open+0x148>
  {
    alt_release_fd (index);  
  8109a4:	e13ffe17 	ldw	r4,-8(fp)
  8109a8:	080e5900 	call	80e590 <alt_release_fd>
    ALT_ERRNO = -status;
  8109ac:	08107680 	call	810768 <alt_get_errno>
  8109b0:	1007883a 	mov	r3,r2
  8109b4:	e0bffd17 	ldw	r2,-12(fp)
  8109b8:	0085c83a 	sub	r2,zero,r2
  8109bc:	18800015 	stw	r2,0(r3)
    return -1;
  8109c0:	00bfffc4 	movi	r2,-1
  8109c4:	00000106 	br	8109cc <open+0x14c>
  }
  
  /* return the reference upon success */

  return index;
  8109c8:	e0bffe17 	ldw	r2,-8(fp)
}
  8109cc:	e037883a 	mov	sp,fp
  8109d0:	dfc00117 	ldw	ra,4(sp)
  8109d4:	df000017 	ldw	fp,0(sp)
  8109d8:	dec00204 	addi	sp,sp,8
  8109dc:	f800283a 	ret

008109e0 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
  8109e0:	defffa04 	addi	sp,sp,-24
  8109e4:	df000515 	stw	fp,20(sp)
  8109e8:	df000504 	addi	fp,sp,20
  8109ec:	e13ffb15 	stw	r4,-20(fp)
  NIOS2_READ_STATUS (context);
  8109f0:	0005303a 	rdctl	r2,status
  8109f4:	e0bffc15 	stw	r2,-16(fp)
  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
  8109f8:	e0fffc17 	ldw	r3,-16(fp)
  8109fc:	00bfff84 	movi	r2,-2
  810a00:	1884703a 	and	r2,r3,r2
  810a04:	1001703a 	wrctl	status,r2
  return context;
  810a08:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
  810a0c:	e0bfff15 	stw	r2,-4(fp)
  alt_llist_remove (&alarm->llist);
  810a10:	e0bffb17 	ldw	r2,-20(fp)
  810a14:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
  810a18:	e0bffd17 	ldw	r2,-12(fp)
  810a1c:	10800017 	ldw	r2,0(r2)
  810a20:	e0fffd17 	ldw	r3,-12(fp)
  810a24:	18c00117 	ldw	r3,4(r3)
  810a28:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
  810a2c:	e0bffd17 	ldw	r2,-12(fp)
  810a30:	10800117 	ldw	r2,4(r2)
  810a34:	e0fffd17 	ldw	r3,-12(fp)
  810a38:	18c00017 	ldw	r3,0(r3)
  810a3c:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
  810a40:	e0bffd17 	ldw	r2,-12(fp)
  810a44:	e0fffd17 	ldw	r3,-12(fp)
  810a48:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
  810a4c:	e0bffd17 	ldw	r2,-12(fp)
  810a50:	e0fffd17 	ldw	r3,-12(fp)
  810a54:	10c00015 	stw	r3,0(r2)
} 
  810a58:	0001883a 	nop
  810a5c:	e0bfff17 	ldw	r2,-4(fp)
  810a60:	e0bffe15 	stw	r2,-8(fp)
  NIOS2_WRITE_STATUS (context);
  810a64:	e0bffe17 	ldw	r2,-8(fp)
  810a68:	1001703a 	wrctl	status,r2
}
  810a6c:	0001883a 	nop
  alt_irq_enable_all (irq_context);
}
  810a70:	0001883a 	nop
  810a74:	e037883a 	mov	sp,fp
  810a78:	df000017 	ldw	fp,0(sp)
  810a7c:	dec00104 	addi	sp,sp,4
  810a80:	f800283a 	ret

00810a84 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
  810a84:	defffb04 	addi	sp,sp,-20
  810a88:	dfc00415 	stw	ra,16(sp)
  810a8c:	df000315 	stw	fp,12(sp)
  810a90:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
  810a94:	d0a01017 	ldw	r2,-32704(gp)
  810a98:	e0bfff15 	stw	r2,-4(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
  810a9c:	d0a75117 	ldw	r2,-25276(gp)
  810aa0:	10800044 	addi	r2,r2,1
  810aa4:	d0a75115 	stw	r2,-25276(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  810aa8:	00002e06 	br	810b64 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
  810aac:	e0bfff17 	ldw	r2,-4(fp)
  810ab0:	10800017 	ldw	r2,0(r2)
  810ab4:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
  810ab8:	e0bfff17 	ldw	r2,-4(fp)
  810abc:	10800403 	ldbu	r2,16(r2)
  810ac0:	10803fcc 	andi	r2,r2,255
  810ac4:	10000426 	beq	r2,zero,810ad8 <alt_tick+0x54>
  810ac8:	d0a75117 	ldw	r2,-25276(gp)
  810acc:	1000021e 	bne	r2,zero,810ad8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
  810ad0:	e0bfff17 	ldw	r2,-4(fp)
  810ad4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
  810ad8:	e0bfff17 	ldw	r2,-4(fp)
  810adc:	10800217 	ldw	r2,8(r2)
  810ae0:	d0e75117 	ldw	r3,-25276(gp)
  810ae4:	18801d36 	bltu	r3,r2,810b5c <alt_tick+0xd8>
  810ae8:	e0bfff17 	ldw	r2,-4(fp)
  810aec:	10800403 	ldbu	r2,16(r2)
  810af0:	10803fcc 	andi	r2,r2,255
  810af4:	1000191e 	bne	r2,zero,810b5c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
  810af8:	e0bfff17 	ldw	r2,-4(fp)
  810afc:	10800317 	ldw	r2,12(r2)
  810b00:	e0ffff17 	ldw	r3,-4(fp)
  810b04:	18c00517 	ldw	r3,20(r3)
  810b08:	1809883a 	mov	r4,r3
  810b0c:	103ee83a 	callr	r2
  810b10:	e0bffd15 	stw	r2,-12(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
  810b14:	e0bffd17 	ldw	r2,-12(fp)
  810b18:	1000031e 	bne	r2,zero,810b28 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
  810b1c:	e13fff17 	ldw	r4,-4(fp)
  810b20:	08109e00 	call	8109e0 <alt_alarm_stop>
  810b24:	00000d06 	br	810b5c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
  810b28:	e0bfff17 	ldw	r2,-4(fp)
  810b2c:	10c00217 	ldw	r3,8(r2)
  810b30:	e0bffd17 	ldw	r2,-12(fp)
  810b34:	1887883a 	add	r3,r3,r2
  810b38:	e0bfff17 	ldw	r2,-4(fp)
  810b3c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
  810b40:	e0bfff17 	ldw	r2,-4(fp)
  810b44:	10c00217 	ldw	r3,8(r2)
  810b48:	d0a75117 	ldw	r2,-25276(gp)
  810b4c:	1880032e 	bgeu	r3,r2,810b5c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
  810b50:	e0bfff17 	ldw	r2,-4(fp)
  810b54:	00c00044 	movi	r3,1
  810b58:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
  810b5c:	e0bffe17 	ldw	r2,-8(fp)
  810b60:	e0bfff15 	stw	r2,-4(fp)
  while (alarm != (alt_alarm*) &alt_alarm_list)
  810b64:	e0ffff17 	ldw	r3,-4(fp)
  810b68:	d0a01004 	addi	r2,gp,-32704
  810b6c:	18bfcf1e 	bne	r3,r2,810aac <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
  810b70:	0001883a 	nop
}
  810b74:	0001883a 	nop
  810b78:	e037883a 	mov	sp,fp
  810b7c:	dfc00117 	ldw	ra,4(sp)
  810b80:	df000017 	ldw	fp,0(sp)
  810b84:	dec00204 	addi	sp,sp,8
  810b88:	f800283a 	ret

00810b8c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
  810b8c:	deffff04 	addi	sp,sp,-4
  810b90:	df000015 	stw	fp,0(sp)
  810b94:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
  810b98:	000170fa 	wrctl	ienable,zero
}
  810b9c:	0001883a 	nop
  810ba0:	e037883a 	mov	sp,fp
  810ba4:	df000017 	ldw	fp,0(sp)
  810ba8:	dec00104 	addi	sp,sp,4
  810bac:	f800283a 	ret

00810bb0 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
  810bb0:	defffb04 	addi	sp,sp,-20
  810bb4:	dfc00415 	stw	ra,16(sp)
  810bb8:	df000315 	stw	fp,12(sp)
  810bbc:	df000304 	addi	fp,sp,12
  810bc0:	e13ffd15 	stw	r4,-12(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
  810bc4:	d0a00417 	ldw	r2,-32752(gp)
  810bc8:	e0bfff15 	stw	r2,-4(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
  810bcc:	00003106 	br	810c94 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
  810bd0:	e0bfff17 	ldw	r2,-4(fp)
  810bd4:	10800217 	ldw	r2,8(r2)
  810bd8:	1009883a 	mov	r4,r2
  810bdc:	08007040 	call	800704 <strlen>
  810be0:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
  810be4:	e0bfff17 	ldw	r2,-4(fp)
  810be8:	10c00217 	ldw	r3,8(r2)
  810bec:	e0bffe17 	ldw	r2,-8(fp)
  810bf0:	10bfffc4 	addi	r2,r2,-1
  810bf4:	1885883a 	add	r2,r3,r2
  810bf8:	10800003 	ldbu	r2,0(r2)
  810bfc:	10803fcc 	andi	r2,r2,255
  810c00:	1080201c 	xori	r2,r2,128
  810c04:	10bfe004 	addi	r2,r2,-128
  810c08:	10800bd8 	cmpnei	r2,r2,47
  810c0c:	1000031e 	bne	r2,zero,810c1c <alt_find_file+0x6c>
    {
      len -= 1;
  810c10:	e0bffe17 	ldw	r2,-8(fp)
  810c14:	10bfffc4 	addi	r2,r2,-1
  810c18:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
  810c1c:	e0bffe17 	ldw	r2,-8(fp)
  810c20:	e0fffd17 	ldw	r3,-12(fp)
  810c24:	1885883a 	add	r2,r3,r2
  810c28:	10800003 	ldbu	r2,0(r2)
  810c2c:	10803fcc 	andi	r2,r2,255
  810c30:	1080201c 	xori	r2,r2,128
  810c34:	10bfe004 	addi	r2,r2,-128
  810c38:	10800be0 	cmpeqi	r2,r2,47
  810c3c:	1000081e 	bne	r2,zero,810c60 <alt_find_file+0xb0>
  810c40:	e0bffe17 	ldw	r2,-8(fp)
  810c44:	e0fffd17 	ldw	r3,-12(fp)
  810c48:	1885883a 	add	r2,r3,r2
  810c4c:	10800003 	ldbu	r2,0(r2)
  810c50:	10803fcc 	andi	r2,r2,255
  810c54:	1080201c 	xori	r2,r2,128
  810c58:	10bfe004 	addi	r2,r2,-128
  810c5c:	10000a1e 	bne	r2,zero,810c88 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
  810c60:	e0bfff17 	ldw	r2,-4(fp)
  810c64:	10800217 	ldw	r2,8(r2)
  810c68:	e0fffe17 	ldw	r3,-8(fp)
  810c6c:	180d883a 	mov	r6,r3
  810c70:	e17ffd17 	ldw	r5,-12(fp)
  810c74:	1009883a 	mov	r4,r2
  810c78:	0810db80 	call	810db8 <memcmp>
    if (((name[len] == '/') || (name[len] == '\0')) && 
  810c7c:	1000021e 	bne	r2,zero,810c88 <alt_find_file+0xd8>
    {
      /* match found */

      return next;
  810c80:	e0bfff17 	ldw	r2,-4(fp)
  810c84:	00000706 	br	810ca4 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
  810c88:	e0bfff17 	ldw	r2,-4(fp)
  810c8c:	10800017 	ldw	r2,0(r2)
  810c90:	e0bfff15 	stw	r2,-4(fp)
  while (next != (alt_dev*) &alt_fs_list)
  810c94:	e0ffff17 	ldw	r3,-4(fp)
  810c98:	d0a00404 	addi	r2,gp,-32752
  810c9c:	18bfcc1e 	bne	r3,r2,810bd0 <alt_find_file+0x20>
  }
  
  /* No match found */
  
  return NULL;     
  810ca0:	0005883a 	mov	r2,zero
}
  810ca4:	e037883a 	mov	sp,fp
  810ca8:	dfc00117 	ldw	ra,4(sp)
  810cac:	df000017 	ldw	fp,0(sp)
  810cb0:	dec00204 	addi	sp,sp,8
  810cb4:	f800283a 	ret

00810cb8 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
  810cb8:	defffc04 	addi	sp,sp,-16
  810cbc:	df000315 	stw	fp,12(sp)
  810cc0:	df000304 	addi	fp,sp,12
  810cc4:	e13ffd15 	stw	r4,-12(fp)
  alt_32 i;
  int rc = -EMFILE;
  810cc8:	00bffa04 	movi	r2,-24
  810ccc:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
  810cd0:	e03fff15 	stw	zero,-4(fp)
  810cd4:	00001d06 	br	810d4c <alt_get_fd+0x94>
  {
    if (!alt_fd_list[i].dev)
  810cd8:	e0ffff17 	ldw	r3,-4(fp)
  810cdc:	1805883a 	mov	r2,r3
  810ce0:	1085883a 	add	r2,r2,r2
  810ce4:	10c5883a 	add	r2,r2,r3
  810ce8:	100490ba 	slli	r2,r2,2
  810cec:	00c02074 	movhi	r3,129
  810cf0:	10c7883a 	add	r3,r2,r3
  810cf4:	18883817 	ldw	r2,8416(r3)
  810cf8:	1000111e 	bne	r2,zero,810d40 <alt_get_fd+0x88>
    {
      alt_fd_list[i].dev = dev;
  810cfc:	e0ffff17 	ldw	r3,-4(fp)
  810d00:	1805883a 	mov	r2,r3
  810d04:	1085883a 	add	r2,r2,r2
  810d08:	10c5883a 	add	r2,r2,r3
  810d0c:	100490ba 	slli	r2,r2,2
  810d10:	e13ffd17 	ldw	r4,-12(fp)
  810d14:	00c02074 	movhi	r3,129
  810d18:	10c7883a 	add	r3,r2,r3
  810d1c:	19083815 	stw	r4,8416(r3)
      if (i > alt_max_fd)
  810d20:	d0e00817 	ldw	r3,-32736(gp)
  810d24:	e0bfff17 	ldw	r2,-4(fp)
  810d28:	1880020e 	bge	r3,r2,810d34 <alt_get_fd+0x7c>
      {
        alt_max_fd = i;
  810d2c:	e0bfff17 	ldw	r2,-4(fp)
  810d30:	d0a00815 	stw	r2,-32736(gp)
      }
      rc = i;
  810d34:	e0bfff17 	ldw	r2,-4(fp)
  810d38:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
  810d3c:	00000706 	br	810d5c <alt_get_fd+0xa4>
  for (i = 0; i < ALT_MAX_FD; i++)
  810d40:	e0bfff17 	ldw	r2,-4(fp)
  810d44:	10800044 	addi	r2,r2,1
  810d48:	e0bfff15 	stw	r2,-4(fp)
  810d4c:	e0bfff17 	ldw	r2,-4(fp)
  810d50:	10800810 	cmplti	r2,r2,32
  810d54:	103fe01e 	bne	r2,zero,810cd8 <alt_get_fd+0x20>
    }
  }

 alt_get_fd_exit:
  810d58:	0001883a 	nop
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
  810d5c:	e0bffe17 	ldw	r2,-8(fp)
}
  810d60:	e037883a 	mov	sp,fp
  810d64:	df000017 	ldw	fp,0(sp)
  810d68:	dec00104 	addi	sp,sp,4
  810d6c:	f800283a 	ret

00810d70 <atexit>:
  810d70:	200b883a 	mov	r5,r4
  810d74:	000f883a 	mov	r7,zero
  810d78:	000d883a 	mov	r6,zero
  810d7c:	0009883a 	mov	r4,zero
  810d80:	0810e301 	jmpi	810e30 <__register_exitproc>

00810d84 <exit>:
  810d84:	defffe04 	addi	sp,sp,-8
  810d88:	000b883a 	mov	r5,zero
  810d8c:	dc000015 	stw	r16,0(sp)
  810d90:	dfc00115 	stw	ra,4(sp)
  810d94:	2021883a 	mov	r16,r4
  810d98:	0810ec00 	call	810ec0 <__call_exitprocs>
  810d9c:	00802074 	movhi	r2,129
  810da0:	110ce717 	ldw	r4,13212(r2)
  810da4:	20800f17 	ldw	r2,60(r4)
  810da8:	10000126 	beq	r2,zero,810db0 <exit+0x2c>
  810dac:	103ee83a 	callr	r2
  810db0:	8009883a 	mov	r4,r16
  810db4:	080db100 	call	80db10 <_exit>

00810db8 <memcmp>:
  810db8:	30800130 	cmpltui	r2,r6,4
  810dbc:	10000b1e 	bne	r2,zero,810dec <memcmp+0x34>
  810dc0:	2144b03a 	or	r2,r4,r5
  810dc4:	108000cc 	andi	r2,r2,3
  810dc8:	1000171e 	bne	r2,zero,810e28 <memcmp+0x70>
  810dcc:	20c00017 	ldw	r3,0(r4)
  810dd0:	28800017 	ldw	r2,0(r5)
  810dd4:	1880141e 	bne	r3,r2,810e28 <memcmp+0x70>
  810dd8:	31bfff04 	addi	r6,r6,-4
  810ddc:	30800128 	cmpgeui	r2,r6,4
  810de0:	21000104 	addi	r4,r4,4
  810de4:	29400104 	addi	r5,r5,4
  810de8:	103ff81e 	bne	r2,zero,810dcc <memcmp+0x14>
  810dec:	30bfffc4 	addi	r2,r6,-1
  810df0:	30000b26 	beq	r6,zero,810e20 <memcmp+0x68>
  810df4:	11800044 	addi	r6,r2,1
  810df8:	218d883a 	add	r6,r4,r6
  810dfc:	00000106 	br	810e04 <memcmp+0x4c>
  810e00:	21800726 	beq	r4,r6,810e20 <memcmp+0x68>
  810e04:	20800003 	ldbu	r2,0(r4)
  810e08:	28c00003 	ldbu	r3,0(r5)
  810e0c:	21000044 	addi	r4,r4,1
  810e10:	29400044 	addi	r5,r5,1
  810e14:	10fffa26 	beq	r2,r3,810e00 <memcmp+0x48>
  810e18:	10c5c83a 	sub	r2,r2,r3
  810e1c:	f800283a 	ret
  810e20:	0005883a 	mov	r2,zero
  810e24:	f800283a 	ret
  810e28:	30bfffc4 	addi	r2,r6,-1
  810e2c:	003ff106 	br	810df4 <memcmp+0x3c>

00810e30 <__register_exitproc>:
  810e30:	00802074 	movhi	r2,129
  810e34:	10cce717 	ldw	r3,13212(r2)
  810e38:	18805217 	ldw	r2,328(r3)
  810e3c:	10001726 	beq	r2,zero,810e9c <__register_exitproc+0x6c>
  810e40:	10c00117 	ldw	r3,4(r2)
  810e44:	1a000808 	cmpgei	r8,r3,32
  810e48:	40001b1e 	bne	r8,zero,810eb8 <__register_exitproc+0x88>
  810e4c:	20000b26 	beq	r4,zero,810e7c <__register_exitproc+0x4c>
  810e50:	181090ba 	slli	r8,r3,2
  810e54:	02400044 	movi	r9,1
  810e58:	48d2983a 	sll	r9,r9,r3
  810e5c:	1211883a 	add	r8,r2,r8
  810e60:	41802215 	stw	r6,136(r8)
  810e64:	11806217 	ldw	r6,392(r2)
  810e68:	21000098 	cmpnei	r4,r4,2
  810e6c:	324cb03a 	or	r6,r6,r9
  810e70:	11806215 	stw	r6,392(r2)
  810e74:	41c04215 	stw	r7,264(r8)
  810e78:	20000b26 	beq	r4,zero,810ea8 <__register_exitproc+0x78>
  810e7c:	19000084 	addi	r4,r3,2
  810e80:	200890ba 	slli	r4,r4,2
  810e84:	18c00044 	addi	r3,r3,1
  810e88:	10c00115 	stw	r3,4(r2)
  810e8c:	1105883a 	add	r2,r2,r4
  810e90:	11400015 	stw	r5,0(r2)
  810e94:	0005883a 	mov	r2,zero
  810e98:	f800283a 	ret
  810e9c:	18805304 	addi	r2,r3,332
  810ea0:	18805215 	stw	r2,328(r3)
  810ea4:	003fe606 	br	810e40 <__register_exitproc+0x10>
  810ea8:	11006317 	ldw	r4,396(r2)
  810eac:	2252b03a 	or	r9,r4,r9
  810eb0:	12406315 	stw	r9,396(r2)
  810eb4:	003ff106 	br	810e7c <__register_exitproc+0x4c>
  810eb8:	00bfffc4 	movi	r2,-1
  810ebc:	f800283a 	ret

00810ec0 <__call_exitprocs>:
  810ec0:	defff704 	addi	sp,sp,-36
  810ec4:	00802074 	movhi	r2,129
  810ec8:	dcc00315 	stw	r19,12(sp)
  810ecc:	14cce717 	ldw	r19,13212(r2)
  810ed0:	dc800215 	stw	r18,8(sp)
  810ed4:	dfc00815 	stw	ra,32(sp)
  810ed8:	9c805217 	ldw	r18,328(r19)
  810edc:	ddc00715 	stw	r23,28(sp)
  810ee0:	dd800615 	stw	r22,24(sp)
  810ee4:	dd400515 	stw	r21,20(sp)
  810ee8:	dd000415 	stw	r20,16(sp)
  810eec:	dc400115 	stw	r17,4(sp)
  810ef0:	dc000015 	stw	r16,0(sp)
  810ef4:	90001026 	beq	r18,zero,810f38 <__call_exitprocs+0x78>
  810ef8:	202b883a 	mov	r21,r4
  810efc:	282d883a 	mov	r22,r5
  810f00:	05000044 	movi	r20,1
  810f04:	94000117 	ldw	r16,4(r18)
  810f08:	847fffc4 	addi	r17,r16,-1
  810f0c:	88000a16 	blt	r17,zero,810f38 <__call_exitprocs+0x78>
  810f10:	84000044 	addi	r16,r16,1
  810f14:	802090ba 	slli	r16,r16,2
  810f18:	9421883a 	add	r16,r18,r16
  810f1c:	b0001126 	beq	r22,zero,810f64 <__call_exitprocs+0xa4>
  810f20:	80804017 	ldw	r2,256(r16)
  810f24:	15800f26 	beq	r2,r22,810f64 <__call_exitprocs+0xa4>
  810f28:	8c7fffc4 	addi	r17,r17,-1
  810f2c:	88bfffd8 	cmpnei	r2,r17,-1
  810f30:	843fff04 	addi	r16,r16,-4
  810f34:	103ff91e 	bne	r2,zero,810f1c <__call_exitprocs+0x5c>
  810f38:	dfc00817 	ldw	ra,32(sp)
  810f3c:	ddc00717 	ldw	r23,28(sp)
  810f40:	dd800617 	ldw	r22,24(sp)
  810f44:	dd400517 	ldw	r21,20(sp)
  810f48:	dd000417 	ldw	r20,16(sp)
  810f4c:	dcc00317 	ldw	r19,12(sp)
  810f50:	dc800217 	ldw	r18,8(sp)
  810f54:	dc400117 	ldw	r17,4(sp)
  810f58:	dc000017 	ldw	r16,0(sp)
  810f5c:	dec00904 	addi	sp,sp,36
  810f60:	f800283a 	ret
  810f64:	90800117 	ldw	r2,4(r18)
  810f68:	81800017 	ldw	r6,0(r16)
  810f6c:	10bfffc4 	addi	r2,r2,-1
  810f70:	14401726 	beq	r2,r17,810fd0 <__call_exitprocs+0x110>
  810f74:	80000015 	stw	zero,0(r16)
  810f78:	303feb26 	beq	r6,zero,810f28 <__call_exitprocs+0x68>
  810f7c:	a446983a 	sll	r3,r20,r17
  810f80:	90806217 	ldw	r2,392(r18)
  810f84:	95c00117 	ldw	r23,4(r18)
  810f88:	1884703a 	and	r2,r3,r2
  810f8c:	1000081e 	bne	r2,zero,810fb0 <__call_exitprocs+0xf0>
  810f90:	303ee83a 	callr	r6
  810f94:	90c00117 	ldw	r3,4(r18)
  810f98:	98805217 	ldw	r2,328(r19)
  810f9c:	1dc0011e 	bne	r3,r23,810fa4 <__call_exitprocs+0xe4>
  810fa0:	90bfe126 	beq	r18,r2,810f28 <__call_exitprocs+0x68>
  810fa4:	103fe426 	beq	r2,zero,810f38 <__call_exitprocs+0x78>
  810fa8:	1025883a 	mov	r18,r2
  810fac:	003fd506 	br	810f04 <__call_exitprocs+0x44>
  810fb0:	90806317 	ldw	r2,396(r18)
  810fb4:	81002017 	ldw	r4,128(r16)
  810fb8:	1886703a 	and	r3,r3,r2
  810fbc:	1800061e 	bne	r3,zero,810fd8 <__call_exitprocs+0x118>
  810fc0:	200b883a 	mov	r5,r4
  810fc4:	a809883a 	mov	r4,r21
  810fc8:	303ee83a 	callr	r6
  810fcc:	003ff106 	br	810f94 <__call_exitprocs+0xd4>
  810fd0:	94400115 	stw	r17,4(r18)
  810fd4:	003fe806 	br	810f78 <__call_exitprocs+0xb8>
  810fd8:	303ee83a 	callr	r6
  810fdc:	003fed06 	br	810f94 <__call_exitprocs+0xd4>
